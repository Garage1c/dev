
&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	КОлКонтрагентов = ПохожиеКонтрагенты.Количество();
	
	Элементы.ПохожиеКонтрагенты.Видимость 	= КОлКонтрагентов;
	Элементы.НадписьНичегоНет.Видимость = Не КОлКонтрагентов;
	Элементы.Выбрать.Видимость 			= Не Контрагент.Пустая();
	
КонецПроцедуры

&НаСервере
Функция стрПусто(Стр1, Стр2 = "", Стр3 = "")
	
	Стр = 	?(ПустаяСтрока(Стр1),"","%" + Стр1 + "%") +
			?(ПустаяСтрока(Стр2),"","%" + Стр2 + "%") +
			?(ПустаяСтрока(Стр3),"","%" + Стр3 + "%");
	
	Возврат СтрЗаменить(Стр,"%%","%");
	
КонецФункции
&НаСервере
Функция СострЗапрос(Текст, СуффУсловия, стрУсловие)
	
	Если ПустаяСтрока(стрУсловие) Тогда
		
		Возврат "";
		
	Иначе
		
		Возврат "
		|ОБЪЕДИНИТЬ
		|
		|" + Текст + "
		|" + СуффУсловия + """" + стрУсловие + """";
		
	КонецЕсли;
	
КонецФункции
&НаСервере
Процедура ПоискатьПодобных()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ Ссылка Контрагент, МАКСИМУМ(Наименование) Наименование, МИНИМУМ(Порядок) Порядок
	|ИЗ (
	|ВЫБРАТЬ 	Контрагент КАК Ссылка, Контрагент.Наименование КАК Наименование, 1 Порядок
	|ИЗ 		Справочник.ПользователиИнтернет
	|ГДЕ		Ссылка = &ПользовательИнтернет И
	|			Контрагент <> &ПустойКонтрагент
	|
	|" + СострЗапрос("ВЫБРАТЬ Контрагент, Контрагент.Наименование, 2 ИЗ Справочник.Контрагенты", "ГДЕ ИНН=",СокрЛП(ПользовательИнтернет.ИНН)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 3 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Фамилия, ПользовательИнтернет.Имя, ПользовательИнтернет.Отчество)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 3 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Имя, ПользовательИнтернет.Фамилия)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 4 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Фамилия, ПользовательИнтернет.Имя)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 5 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Фамилия)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 5 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Имя)) + "
	|" + СострЗапрос("ВЫБРАТЬ Ссылка, Наименование, 5 ИЗ Справочник.Контрагенты", "ГДЕ Наименование ПОДОБНО ",стрПусто(ПользовательИнтернет.Отчество)) + "
	|) Запрос
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|
	|УПОРЯДОЧИТЬ ПО 
	|	Порядок, Наименование
	|");
	
	Запрос.УстановитьПараметр("ПользовательИнтернет", 	ПользовательИнтернет);
	Запрос.УстановитьПараметр("ПустойКонтрагент", 			Справочники.Контрагенты.ПустаяСсылка());
	
	ПохожиеКонтрагенты.Загрузить(Запрос.Выполнить().Выгрузить());//.ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПользовательИнтернет = Параметры.ПользовательИнтернет;
	
	ПоискатьПодобных();
	ОперативнаяИнформация.ДобавитьОперативнуюИнформациюОКонтрагенте(ЭтаФорма);
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаСервере
Функция СверитьКонтрагентаИЗаписатьСвязь()
	
	Если ПользовательИнтернет.Контрагент <> Контрагент Тогда
		
		СпрОбъект = ПользовательИнтернет.ПолучитьОбъект();
		СпрОбъект.Контрагент = Контрагент;
		
		Попытка
			СпрОбъект.Записать();
		Исключение
			ОбщиеФункции.СообщитьТекст("Не удалось записать связь");
			Возврат Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ИСтина;
	
КонецФункции

&НаКлиенте
Процедура Выбрать(Команда)
	
	// Установим
	
	Если СверитьКонтрагентаИЗаписатьСвязь() Тогда
	
		// Закроем
		
		Закрыть(Контрагент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КопироватьКонтактнуюИнформацию(Пользователь, Контрагент)	
		
	НЗ_ПредставлениеКонтактнойИнформации  = РегистрыСведений.ПредставлениеКонтактнойИнформации.СоздатьНаборЗаписей();
	НЗ_ПредставлениеКонтактнойИнформации.Отбор.Объект.Установить(Контрагент);	
	
	Если НЕ ПустаяСтрока(Пользователь.Адрес) Тогда
	НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();	
	НоваяЗапись.Объект = Контрагент;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00010"); // Адрес юридический контрагента
	НоваяЗапись.Представление = Пользователь.Адрес; КонецЕсли;

	Если НЕ ПустаяСтрока(Пользователь.КонтактныйТелефон) Тогда
	НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();	
	НоваяЗапись.Объект = Контрагент;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00014"); // Контактный телефон
	НоваяЗапись.Представление = Пользователь.КонтактныйТелефон; КонецЕсли;
	
	Если НЕ ПустаяСтрока(Пользователь.Телефон) И Пользователь.Телефон <> Пользователь.КонтактныйТелефон Тогда
	НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();	
	НоваяЗапись.Объект = Контрагент;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00005"); // Телефон контрагента
	НоваяЗапись.Представление = Пользователь.Телефон; КонецЕсли;

	Если НЕ ПустаяСтрока(Пользователь.Факс) Тогда
	НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();
	НоваяЗапись.Объект = Контрагент;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00037"); // Факс контрагента
	НоваяЗапись.Представление = Пользователь.Факс; КонецЕсли;

 	Если НЕ ПустаяСтрока(Пользователь.ЭлектроннаяПочта) Тогда
	НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();	
	НоваяЗапись.Объект = Контрагент;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00033"); // ЭлектроннаяПочта
	НоваяЗапись.Представление = Пользователь.ЭлектроннаяПочта; КонецЕсли;

	Адреса = CRM.ПолучитьАдресаДоставкиИнтернет(Пользователь);
	Если Адреса.Количество() Тогда
		АдресДоставки = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00008"); // Физический адрес
		Индекс 	= ПланыВидовХарактеристик.СоставКонтактнойИнформации.Индекс;
		Регион 	= ПланыВидовХарактеристик.СоставКонтактнойИнформации.Регион;
		Город	= ПланыВидовХарактеристик.СоставКонтактнойИнформации.Город;
		НаселенныйПункт = ПланыВидовХарактеристик.СоставКонтактнойИнформации.НаселенныйПункт;
		Улица 	= ПланыВидовХарактеристик.СоставКонтактнойИнформации.Улица;
	КонецЕсли;
		
	Пока Адреса.Следующий() Цикл
		
		ЗначенияПолей = Новый Массив;
		
		ЗначенияПолей.Добавить(Новый Структура("Поле, Сокращение, Значение", Индекс, Индекс.Сокращение, Адреса.ПочтовыйИндекс));
		ЗначенияПолей.Добавить(Новый Структура("Поле, Сокращение, Значение", Регион, Регион.Сокращение, Адреса.Регион));
		ЗначенияПолей.Добавить(Новый Структура("Поле, Сокращение, Значение", Город, Город.Сокращение, 	Адреса.Город));
		ЗначенияПолей.Добавить(Новый Структура("Поле, Сокращение, Значение", НаселенныйПункт, НаселенныйПункт.Сокращение, Адреса.НаселенныйПункт));
		ЗначенияПолей.Добавить(Новый Структура("Поле, Сокращение, Значение", Улица, Улица.Сокращение, 	Адреса.Адрес));
				
		ПредставлениеАдресаДоставки = УправлениеКонтактнойИнформацией.ПолучитьСтроковоеПредставлениеАдресаБезСокращения(ЗначенияПолей);		
		
		Если НЕ ПустаяСтрока(ПредставлениеАдресаДоставки) Тогда
			
			ИД = Новый УникальныйИдентификатор();

			НЗ_КонтактнаяИнформация  = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НЗ_КонтактнаяИнформация.Отбор.Объект.Установить(Контрагент);
		    НЗ_КонтактнаяИнформация.Отбор.ID.Установить(ИД);
						
			Для Каждого Строка ИЗ ЗначенияПолей Цикл
				НоваяЗапись = НЗ_КонтактнаяИнформация.Добавить();
				НоваяЗапись.Объект 		= Контрагент;
				НоваяЗапись.Вид  		= АдресДоставки; 
				НоваяЗапись.Поле 		= Строка.Поле; 
				НоваяЗапись.ID			= ИД;
			   	НоваяЗапись.Значение 	= Строка.Значение;
			КонецЦикла;
			
			НЗ_КонтактнаяИнформация.Записать();
			
			НоваяЗапись = НЗ_ПредставлениеКонтактнойИнформации.Добавить();	
			НоваяЗапись.Объект 	= Контрагент;
			НоваяЗапись.Вид 	= АдресДоставки;
			НоваяЗапись.ID		= ИД;
			НоваяЗапись.Представление 	= ПредставлениеАдресаДоставки;
			НоваяЗапись.Комментарий 	= Адреса.Комментарий;
		КонецЕсли;
	КонецЦикла;
	
	НЗ_ПредставлениеКонтактнойИнформации.Записать();
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СоздатьНовогоПартнераКонтрагентаЗаписатьИВернуть()
	
	НачатьТранзакцию();
	
	
	НовКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
	НовКонтрагент.Наименование = ПользовательИнтернет.Наименование;
	НовКонтрагент.НаименованиеПолное 	= ПользовательИнтернет.Наименование;
	НовКонтрагент.ЮрФизЛицо    			= Перечисления.ЮрФизЛицо.ФизЛицо;
	НовКонтрагент.ИНН		 			= ПользовательИнтернет.ИНН;
	НовКонтрагент.КПП 					= ПользовательИнтернет.КПП;
	НовКонтрагент.ТипЦен 				= КэшируемыеФункции.ПолучитьТипЦенРозница();
	НовКонтрагент.Комментарий		 	= "создан автоматически из интернет пользователя";
	
	НовКонтрагент.Клиент = Истина;
	НовКонтрагент.ОткудаПришел = Справочники.ОткудаПришел.НайтиПоНаименованию("Сайт");
	НовКонтрагент.Категория = Справочники.КатегорииПартнеров.ФизическоеЛицо;
	НовКонтрагент.ОсновнойМенеджер = ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_ОсновнойМенеджер");
	
	
	НовКонтрагент.Записать();
	
	
	КопироватьКонтактнуюИнформацию(ПользовательИнтернет, НовКонтрагент.Ссылка);     //раньше создавали на партнера
	
	ЗафиксироватьТранзакцию();
	
	
	Контрагент = НовКонтрагент.Ссылка;
	
	Возврат ИСтина;
	
КонецФункции

&НаКлиенте
Процедура НовыйКонтрагент(Команда)
	
	Если СоздатьНовогоПартнераКонтрагентаЗаписатьИВернуть() Тогда
		
		ПоискатьПодобных();
		УправлениеВидимостьюДоступностью();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПохожиеКонтрагентыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПохожиеКонтрагенты.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Контрагент = ТекущиеДанные.Контрагент;
		ОбработатьОтображениеИнфОКонтрагенте();
	КонецЕсли;
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

#Область ОперативнаяИнформацияОКонтрагенте 

&НаСервере
Процедура ОбработатьОтображениеИнфОКонтрагенте() Экспорт
	ОперативнаяИнформация.ОбработатьОтображениеИнфОПартнере(ЭтаФорма, "ПохожиеКонтрагенты", "ПохожиеКонтрагенты", Контрагент);//?(Контрагент <> Неопределено, Контрагент, ПохожиеКонтрагенты.Получить(Элементы.ПохожиеКонтрагенты.ТекущаяСтрока).Значение ));
КонецПроцедуры
&НаКлиенте
Процедура ИнфТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ОперативнаяИнформацияКлиент.ИнфТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка,, Контрагент);
КонецПроцедуры
 &НаКлиенте
Процедура ПоказатьСкрытьИнформацию(Команда)
	Если НЕ Контрагент.Пустая() Тогда
		ОперативнаяИнформацияКлиент.ПоказатьСкрытьИнформацию(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


 