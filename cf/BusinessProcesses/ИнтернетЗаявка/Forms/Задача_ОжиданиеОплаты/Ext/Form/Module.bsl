
// ТИПОВЫЕ

&НаСервере
Процедура УстановитьЗаголовок()
	
	Заголовок = "Подтверждение оплаты " + Заказ.Номер + 
				" от " + Заказ.Дата + 
				" (ЗД " + Объект.Номер + 
				" БП " + Объект.БизнесПроцесс.Номер + 
				")";
	
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	// Реверснем
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);

КонецПроцедуры
&НаКлиенте
Процедура ДекорацияДобавитьКомментарийНажатие(Элемент)
	
	Элементы.ГруппаДобавитьКомментарий.Видимость 		= Ложь;
	Элементы.ГруппаРедактированиеКомментария.Видимость 	= Истина;

КонецПроцедуры
&НаСервере
Процедура ПрочитатьРеквизиты()
	
	// ФункцииБизнесПроцессов.ЗаполнитьДанныеЗадачи(Объект, ЭтаФорма);
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, 
		Объект.Ссылка.БизнесПроцесс, 
		Объект.Ссылка);
		
КонецПроцедуры
&НаСервере
Процедура ВидимостьДоступность()
	
	Элементы.ГруппаПредыдущийКомментарий.Видимость 	= Не ПустаяСтрока(ПредыдущийКомментарий);
	Элементы.ВыполнитьЗадачу.Доступность 	= Не ТолькоПросмотр И Не Склад.Пустая();
	Элементы.ОтменитьЗадачу.Доступность 	= Не ТолькоПросмотр И Не Склад.Пустая();
	
КонецПроцедуры

// КОМАНДЫ 

&НаСервере
Функция УстановитьСостояниеИВыполнитьЗадачу(ИмяСостояния, ПричинаОтказа = Неопределено)
	
	Если Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа[ИмяСостояния]) Тогда
	
		Возврат Записать(Новый Структура("ВыполнитьЗадачу",Истина));
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОтказПодтверждения(Команда)
	
	Перем ПричинаОтказа;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПричинаОтказаЗавершениеВыбора", ЭтаФорма);
	ПоказатьВводЗначения(ОповещениеОЗакрытии,ПричинаОтказа,"Причина отказа", Тип("СправочникСсылка.ПричиныОтказов"));
	                                            
	//Комм = "";
	//Если ВвестиСтроку(Комм, "Причина отказа",,Истина) Тогда
	//	
	//	Объект.Комментарий = Комм;
	//
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗафиксироватьПричинуОтказа(ПричинаОтказа)
	
	Возврат Заказы.УстановитьРеквизитЖурнала(Заказ, Новый Структура("ПричинаОтказа", ПричинаОтказа))
	
КонецФункции

&НаКлиенте
Процедура ПричинаОтказаЗавершениеВыбора(ПричинаОтказа, Параметры) Экспорт
	
	Если ПричинаОтказа <> Неопределено И ЗафиксироватьПричинуОтказа(ПричинаОтказа) Тогда
		
		Если УстановитьСостояниеИВыполнитьЗадачу("Отменен", ПричинаОтказа) Тогда
			
			Закрыть();
			
		КонецЕсли;КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подтвердить(Команда)
	
	Если УстановитьСостояниеИВыполнитьЗадачу("ВРаботе") Тогда
			
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры
&НаКлиенте
Процедура текСкладПриИзменении(Элемент)
	
	ВидимостьДоступность();
	
КонецПроцедуры


// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ); 
	
	ВидимостьДоступность();
	
	Элементы.ПользовательДетально.Видимость = Ложь;
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьРеквизиты();
	
	Склад = Объект.БизнесПроцесс.Склад;
	
	УстановитьЗаголовок();
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	ВидимостьДоступность();

КонецПроцедуры

// Пользователь интернет детально
&НаКлиенте
Процедура ПоказатьСкратьЮзера(Команда)
	
	Элементы.ПользовательДетально.Видимость = ?(Элементы.ПользовательДетально.Видимость, Ложь, Истина);
	
КонецПроцедуры
