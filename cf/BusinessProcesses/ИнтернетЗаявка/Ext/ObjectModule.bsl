 
// f ОБРАБОТКИ (ПИСЬМА)

Функция ПолучитьСсылкуНаСчет(Заказ)
	
	ТекстСсылкиНаСчет = Заказы.ПолучитьСсылкуHTMLНаСчетPDF(Заказ);
	Если ПустаяСтрока(ТекстСсылкиНаСчет) Тогда Возврат "" КонецЕсли;
	
	Возврат "<a href='" + ТекстСсылкиНаСчет + "'>Ссылка на печатную форму счета</a>";
	
КонецФункции
Функция ПолучитьСсылкуНаЛичныйКабинет(Заказ)
	
	ПутьИнтернетМагазин = Константы.ПутьИнтернетМагазин.Получить();
		
	Если ПустаяСтрока(ПутьИнтернетМагазин) Или ПустаяСтрока(Заказ.id) Тогда Возврат "" КонецЕсли;
		
	ИДЗаказа = Заказ.id;
		
	ТекстСсылкиНаЛичныйКабинет = "http://"+ ПутьИнтернетМагазин+"/dashboard/orders/" + ИДЗаказа;
	Если ПустаяСтрока(ТекстСсылкиНаЛичныйКабинет) Тогда Возврат "" КонецЕсли;
	
	Возврат "<a href='" + ТекстСсылкиНаЛичныйКабинет + "'> по ссылке, ведущей в личный кабинет</a>";
	
КонецФункции

Функция ПолучитьВложенияСчет(Заказ)
	
	ПутьНаДиске = Константы.КаталогДляВыгружаемыхСчетов.Получить();
	ПутьВИнете 	= Константы.ПутьHTMLКСчетамPDF.Получить();
	
	Если ПустаяСтрока(ПутьНаДиске) Или ПустаяСтрока(ПутьВИнете) Тогда Возврат "" КонецЕсли;
	
	// Проверим что такой заказ есть на диске
	
	НомерЗаказа = Заказ.Номер;
	Слэш = "/";
	//ПутьНаДиске + ?(Прав(ПутьНаДиске,1) = Слэш, "", Слэш) + НомерЗаказа + ".xls"
	Файл 		= Новый Файл(ПутьНаДиске + ?(Прав(ПутьНаДиске,1) = Слэш, "", Слэш) + НомерЗаказа + ".pdf");//ПолучитьПутьКСчету(ПутьНаДиске, НомерЗаказа));
	Если Не Файл.Существует() Тогда Возврат Неопределено КонецЕсли;
	ВложенияСчета = Новый ТаблицаЗначений();
	ВложенияСчета.Колонки.Добавить("Ключ");
	ВложенияСчета.Колонки.Добавить("Данные");
   	НовоеВложение = ВложенияСчета.Добавить();
	НовоеВложение.Ключ   = Файл.Имя;
	
	ДокументСчет = Новый ДвоичныеДанные(Файл.ПолноеИмя);
    РеквизитХранилищеЗначения = Новый ХранилищеЗначения(ДокументСчет);
	НовоеВложение.Данные = 	РеквизитХранилищеЗначения; //ДокументСчет;
		
	Возврат ВложенияСчета;
	
КонецФункции


Функция СформироватьПисьмо_Ст(Действие, ТелоПисьма)
	                                
	НомерЗаказа =  Заказ.Номер;
	
	НомерЗаказа   = СокрЛП(НомерЗаказа);
	Пока Лев(НомерЗаказа, 1)="0" Цикл   	
		НомерЗаказа = Сред(НомерЗаказа, 2);
	КонецЦикла;
	
	ТемаПисьма = Строка(Действие) +  " #" + НомерЗаказа;	
	
	Пользователь = Заказ.ПользовательИнтернет;
	
	ЗаголовокПисьма = "Здравствуйте, уважаемый(ая) " + Пользователь + "!<BR><BR>";
	
	ОбщиеФункции.ОповеститьПоПочте(Пользователь.ЭлектроннаяПочта, ТемаПисьма, 	ЗаголовокПисьма + 
																				ТелоПисьма + 
																				БизнесПроцессы.ИнтернетЗаявка.ПолучитьДеталиЗаказа(Заказ) + 
																				ПолучитьСсылкуНаСчет(Заказ) +
													 							КэшируемыеФункции.ПолучитьПодвалПисьма(), Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML);
	//ОбщиеФункции.ОповеститьПоПочте(Пользователь.ЭлектроннаяПочта, ТемаПисьма, Константы.ПутьИнтернетМагазин.Получить(), Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTMLСКартинками);
	
КонецФункции
Функция СформироватьПисьмо(Действие, ТелоПисьма, ОткрытиеЗаказа = Ложь, СсылкаНаСчет = Ложь, ДеталиЗаказа = Истина, Параметры = Неопределено, СохранитьВложение = Ложь) Экспорт
	
	//ОтправитьСсылкуНаЛК = Заказ.is_check;
	Если Заказ.СайтИсточник = Перечисления.Сайты.licota Тогда
		Возврат СформироватьПисьмоLicota(Действие, ТелоПисьма, ОткрытиеЗаказа, СсылкаНаСчет, ДеталиЗаказа, Параметры,СохранитьВложение);
	КонецЕсли;
	
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;
	
	НомерЗаказа =  Заказ.Номер;
	ДоставкаВключенаВСумму = Заказ.Доставка.Количество();
	
	НомерЗаказа   = СокрЛП(НомерЗаказа);
	Пока Лев(НомерЗаказа, 1)="0" Цикл   	
		НомерЗаказа = Сред(НомерЗаказа, 2);
	КонецЦикла;                                                 	
	
	ТемаПисьма = """ГаражТулс"". Состояние заказа № " + НомерЗаказа +" от " + Формат(Заказ.Дата,"ДЛФ=Д") ;
//Строка(Действие) +  " #" + НомерЗаказа;	
	
	Пользователь 	= Заказ.ПользовательИнтернет;
	ДопРасходы 		= Заказ.СуммаДоставки + заказ.СуммаНП;
	Если Параметры.Свойство("СтатусЗаказа") Тогда
		СостояниеЗаказа = Параметры.СтатусЗаказа;
	Иначе
		СостояниеЗаказа = Заказы.ПолучитьСостояниеЗаказаСтрокой(Заказ);
	КонецЕсли;
	
	Оператор        = Заказ.Оператор;
    ЭлПочта         = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(Оператор.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00052"));
	ДобТелефон      = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(Оператор.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00054"));
	
	ОсМен           = Заказ.Контрагент.ОсновнойМенеджер;
	МобТелефонМен   = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00020"));
	ДобТелефонМен   = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00054"));
	ЭлПочтаМен      = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00052"));

	ИнфДоставка     = Строка(Заказ.ВариантДоставкиНов);
	ВыводитьДоставку = Истина;
	ВыводитьМаксСрок = Заказ.МаксимальныйСрокДоставки > 0;
	
	Если Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.СамовывозСНашегоСклада Тогда
		ИнфДоставка = ИнфДоставка +" "+Заказ.Склад.Адрес;
		ВыводитьДоставку = Ложь;
	ИначеЕсли Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика или Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента Тогда
		ИнфДоставка = ИнфДоставка +" "+Строка(Заказ.Грузоперевозчик);
	КонецЕсли;
	
	ЗаголовокПисьма = "
	|<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"">
	|<tr>
	|	<td align=""center"" valign=""top"">
	|		<!-- HEADER STARTS -->
	|		<table width=""640"" cellspacing=""0"" cellpadding=""0"" border=""0"">"+
	?(ТекущаяДата()>Дата(2017,4,30),"","
	|			<tr>
    |               <td colspan=""3"" bgcolor=""#FFFF00"" align=""left"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;font-weight: bold;"">
	|				<br />Внимание!<br /><br />
	|				В связи с переездом нашего центрального склада, возможны небольшие задержки отгрузок заказов из Санкт-Петербурга (3-5 дней).<br />
	|				Ситуация нормализуется до конца апреля.<br /><br />
	|				Спасибо, что относитесь с пониманием и остаетесь с нами.<br /><br />
	|				</td>
	|			</tr>
	|			<tr>
	|				<td colspan=""3"" align=""left"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;""><br /><br /></td>
	|			</tr>")+"
	|			<tr>
	|				<td align=""center"" style=""width:138px;"" ><a href=""http://garagetools.ru/"" title=""garagetools.ru""><img src=""http://spbmain.dlinkddns.com/orders_pdf/images/mail_logo.png"" /></a></td>
	|				<td align=""center"" style=""width:295px;""></td>
	|				<td align=""right"" style=""width:207px;font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#000000;padding:0 0 0 10px;"">Статус:<br/>" + СостояниеЗаказа + "</td>
	|			</tr>                                                                
	|			<tr>
//	|				<td align=""left"" colspan=""3"" style=""width:640px""><img src=""http://spbmain.dlinkddns.com/orders_pdf/images/site2_verstka_0490_07.png"" width=""639"" height=""8"" /></td>
    |               <td colspan=""3"" bgcolor=""#008000"" align=""center"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#008000;"">.</td> 
	|			</tr>
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;padding:10px 0;"">Здравствуйте, " + Пользователь + "!</td>
	|			</tr>
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;padding:10px 0;"">" + ТелоПисьма + "</td>
	|			</tr>
	|" + ?(ДеталиЗаказа, "	
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:16px;color:#006644;padding:5px 0;border-bottom:1px solid #000000;"">
	|<ul>
	| <li>Заказчик: " + Заказ.Контрагент + "</li>
	|" + ?(ЗначениеЗаполнено(Заказ.ВидОплаты),  "<li>Способ оплаты: " + Заказ.ВидОплаты + "</li>", "") + "
	//| <li>Способ оплаты: " + Заказ.ВидОплаты + " </li>
	//| <li>Доставка: " + БизнесПроцессы.ИнтернетЗаявка.НаименованиеДоставки(Заказ) + "</li>
	|" + ?(ЗначениеЗаполнено(Заказ.ВариантДоставкиНов),  "<li>Способ получения: " + ИнфДоставка + "</li>", "") + "
	//| <li>Способ получения: " + ИнфДоставка + "</li>
	|" + ?(ВыводитьДоставку, "
	| <li>Стоимость доставки: " + ?(Заказ.Бесплатно и Заказ.СуммаДоставки = 0 ," бесплатно ",?(Заказ.СуммаДоставки = 0, " 0 (итоговую сумму заказа смотрите ниже под таблицей)", Заказ.СуммаДоставки)) + ?(ОткрытиеЗаказа ИЛИ Заказ.СуммаДоставки = 0, "", " р.(Стоимость доставки " + ?(ДоставкаВключенаВСумму, "включена в стоимость товара", "оплачивается отдельно при получении") + ")") + "</li> 
	|", "") + "
	
    |" + ?(ВыводитьМаксСрок, "
	| <li>Максимальный срок доставки: " + Заказ.МаксимальныйСрокДоставки +  "</li> 
	|", "") + "

	
	|" + ?(Заказ.СуммаНП,"<li>Сумма НП: " + Заказ.СуммаНП + " р.</li>","") + "
	|</ul>
	|	</td> 
	|			</tr>
	|", "") + "
	|		</table>
	|		<!-- HEADER END -->
	|";
	
	ПодвалПисьма = "
	|<!-- FOOTER STARTS -->
	|		<table width=""640"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:20px 0 0"">
	|			<tr>
	|				<td align=""center"" style=""width:360px;"">
	|				</td>
	|				<td align=""center"" style=""width:125px;padding:0 15px 20px;border-bottom:1px solid #777777;"">
	|					<a href=""http://garagetools.ru/categories/"" title=""Перейти в интернет магазин garagetools.ru""><img src=""http://spbmain.dlinkddns.com/orders_pdf/images/butt1.png"" width=""125"" height=""30"" style=""border:none;display:block;"" /></a>
	|				</td>
	//Нэти ИСмаилов ИТ 23.03.2017 Начало
	//Картинки по ссылке нет, чтобы ошибки не было все убираем
	//|				<td align=""center"" style=""width:125px;padding:0 0 20px 15px;border-bottom:1px solid #777777;"">
	//|					<a href=""http://garagetools.ru/dashboard/orders/" + Формат(Заказ.id,"ЧГ=") + """ title=""Перейти на заказ в личном кабинете""><img src=""http://spbmain.dlinkddns.com/orders_pdf/images/butt_2.png"" /></a>
	//|				</td>
	//Нэти ИСмаилов ИТ 23.03.2017 Конец
	|			</tr>
	|			<tr>
	|				<td align=""center"" >
	|				</td>
	|				<td align=""right"" colspan=""2"" style=""line-height:14px;font-family: Verdana,Geneva,sans-serif;font-size:10px;color:#777777;"">Мы всегда к Вашим услугам и ждем Ваших заказов!<br />
	|					С наилучшими пожеланиями,<br />
	|					Команда Гараж Тулс<br/>
	|<hr>
	|Ваш менеджер:  " + ОсМен.ФизЛицо + "<br>
	|"+?(МобТелефонМен = "","","Мобильный телефон: " + МобТелефонМен + "<br>")+" 
	|Бесплатный телефон:  8-800-707-8007 " +?(ДобТелефонМен = "","<br>","доб." + ДобТелефонМен + "<br>")+"
	|"+?(ЭлПочтаМен = "","","Эл.почта: " + ЭлПочтаМен + "<br>")+"
	|<hr>
	|"+?(ОсМен = Оператор,"",	"Менеджер отдела клиентского севиса:  " + Оператор.ФизЛицо + "<br> Бесплатный телефон:  8-800-707-8007 "+?(ДобТелефон = "","<br>"," доб." + ДобТелефон + "<br>")+ ?(ЭлПочта = "","<br>"," Эл.почта: " + ЭлПочта + "<br>")+" </td> ")+"
	|			</tr>
	|		</table>
	|		<!-- FOOTER END -->
	|	</td>
	|</tr>
	|</table>";



	ТекстПодТаблицей = "Обратите внимание! Оплата услуги наложенного платежа производится отдельно при получении <BR>
						|Подробнее о тарифах и сроках доставки Вы можете узнать на сайте транспортной компании.";
						
	АдресПочты = Заказ.АдресОтправкиПисьма;//Пользователь.ЭлектроннаяПочта;
	
	Если ПустаяСтрока(АдресПочты) Тогда
		АдресПочты = Пользователь.ЭлектроннаяПочта;
	ИначеЕсли ПустаяСтрока(АдресПочты) Тогда
		АдресПочты = Справочники.Контрагенты.ПолучитьЭлектроннуюПочтуПартнера(Заказ.Контрагент); 
		АдресПочты = ?( АдресПочты = "",Справочники.Контрагенты.ПолучитьЭлектроннуюПочтуПартнера(Заказ.Контрагент),АдресПочты);  //теперь почта из контрагента 
	КонецЕсли;							
	
	Если НЕ ПустаяСтрока(ОсМен)Тогда АдресПочтыКопия = ОсМен.Почта; КонецЕсли; 
	
	ОбщиеФункции.ОповеститьПоПочте(АдресПочты , ТемаПисьма, 	ЗаголовокПисьма + 
																	БизнесПроцессы.ИнтернетЗаявка.ПолучитьДеталиЗаказа(Заказ, ДопРасходы, ОткрытиеЗаказа) + 
																	?(СсылкаНаСчет, ПолучитьСсылкуНаСчет(Заказ), "") + 
																	?(заказ.СуммаНП, ТекстПодТаблицей, "") + 
													 				ПодвалПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML,,?(СохранитьВложение, ПолучитьВложенияСчет(Заказ), Неопределено),УчетнаяЗапись,АдресПочтыКопия);
	//ОбщиеФункции.ОповеститьПоПочте(Пользователь.ЭлектроннаяПочта, ТемаПисьма, Константы.ПутьИнтернетМагазин.Получить(), Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTMLСКартинками);
	
КонецФункции
Функция СформироватьПисьмоLicota(Действие, ТелоПисьма, ОткрытиеЗаказа = Ложь, СсылкаНаСчет = Ложь, ДеталиЗаказа = Истина, Параметры = Неопределено, СохранитьВложение = Ложь)
	
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочтыLicota;
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;
	
	НомерЗаказа =  Заказ.Номер;
	ДоставкаВключенаВСумму = Заказ.Доставка.Количество();
	
	НомерЗаказа   = СокрЛП(НомерЗаказа);
	Пока Лев(НомерЗаказа, 1)="0" Цикл   	
		НомерЗаказа = Сред(НомерЗаказа, 2);
	КонецЦикла;                                                 	
	
	ТемаПисьма =  """LICOTA"". Состояние заказа № " + НомерЗаказа +" от " + Формат(Заказ.Дата,"ДЛФ=Д") ;
//Строка(Действие) +  " #" + НомерЗаказа;	
	
	Пользователь 	= Заказ.ПользовательИнтернет;
	ДопРасходы 		= Заказ.СуммаДоставки + заказ.СуммаНП;
	
	Если Параметры.Свойство("СтатусЗаказа") Тогда
		СостояниеЗаказа = Параметры.СтатусЗаказа;
	Иначе
		СостояниеЗаказа = Заказы.ПолучитьСостояниеЗаказаСтрокой(Заказ);
	КонецЕсли;
	
	Оператор        = Заказ.Оператор;
    ЭлПочта         = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(Оператор.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00052"));
	ДобТелефон      = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(Оператор.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00054"));

	ОсМен           = Заказ.Контрагент.ОсновнойМенеджер;
	МобТелефонМен   = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00020"));
	ДобТелефонМен   = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00054"));
	ЭлПочтаМен      = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеКонтактнойИнформацииОбъекта(ОсМен.ФизЛицо,  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00052"));
	
	ИнфДоставка     = Строка(Заказ.ВариантДоставкиНов);
	ВыводитьДоставку = Истина;

	Если Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.СамовывозСНашегоСклада Тогда
		ИнфДоставка = ИнфДоставка +" "+Заказ.Склад.Адрес;
		ВыводитьДоставку = Ложь;
	ИначеЕсли Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика или Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента Тогда
		ИнфДоставка = ИнфДоставка +" "+Строка(Заказ.Грузоперевозчик);
	КонецЕсли;
	
	ЗаголовокПисьма = "
	|<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"">
	|<tr>
	|	<td align=""center"" valign=""top"">
	|		<!-- HEADER STARTS -->
	|		<table width=""640"" cellspacing=""0"" cellpadding=""0"" border=""0"">"+
	?(ТекущаяДата()>Дата(2017,4,30),"","
	|			<tr>
    |               <td colspan=""3"" bgcolor=""#FFFF00"" align=""left"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;font-weight: bold;"">
	|				<br />Внимание!<br /><br />
	|				В связи с переездом нашего центрального склада, возможны небольшие задержки отгрузок заказов из Санкт-Петербурга (3-5 дней).<br />
	|				Ситуация нормализуется до конца апреля.<br /><br />
	|				Спасибо, что относитесь с пониманием и остаетесь с нами.<br /><br />
	|				</td>
	|			</tr>
	|			<tr>
	|				<td colspan=""3"" align=""left"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;""><br /><br /></td>
	|			</tr>")+"
	|			<tr>
	|				<td align=""center"" style=""width:138px;"" ><a href=""http://licota.ru/"" title=""licota.ru"">licota.ru</a></td>
	|				<td align=""center"" style=""width:295px;""></td>
	|				<td align=""right"" style=""width:207px;font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#000000;padding:0 0 0 10px;"">Статус:<br/>" + СостояниеЗаказа + "</td>
	|			</tr>                                                                
	|			<tr>
	//|				<td align=""left"" colspan=""3"" style=""width:640px""></td>
	|               <td colspan=""3"" bgcolor=""#008000"" align=""center"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#008000;"">.</td> 
	|			</tr>
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;padding:10px 0;"">Здравствуйте, " + Пользователь + "!</td>
	|			</tr>
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;padding:10px 0;"">" + ТелоПисьма + "</td>
	|			</tr>
	|" + ?(ДеталиЗаказа, "	
	|			<tr>
	|				<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:16px;color:#006644;padding:5px 0;border-bottom:1px solid #000000;"">
	|<ul>
	| <li>Заказчик: " + Заказ.Контрагент + "</li>
	|<li>Способ оплаты: " + Заказ.ВидОплаты + " </li>
	//| <li>Доставка: " + БизнесПроцессы.ИнтернетЗаявка.НаименованиеДоставки(Заказ) + "</li>
	| <li>Способ получения: " + ИнфДоставка + "</li>
	|" + ?(ВыводитьДоставку, "
	| <li>Стоимость доставки: " + ?(Заказ.Бесплатно и Заказ.СуммаДоставки = 0 ," бесплатно ", ?(Заказ.СуммаДоставки = 0, " бесплатная (итоговую сумму заказа смотрите ниже под таблицей)", Заказ.СуммаДоставки)) + ?(ОткрытиеЗаказа ИЛИ Заказ.СуммаДоставки = 0, "", " р.(Стоимость доставки " + ?(ДоставкаВключенаВСумму, "включена в стоимость товара", "оплачивается отдельно при получении") + ")") + "</li>
	|", "") + "
	|" + ?(Заказ.СуммаНП,"<li>Сумма НП: " + Заказ.СуммаНП + " р.</li>","") + "
	|</ul>
	|	</td> 
	|			</tr>
	|", "") + " 
	|		</table>
	|		<!-- HEADER END -->
	|";
	
	ПодвалПисьма = "
	|<!-- FOOTER STARTS -->
	|		<table width=""640"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:20px 0 0"">
	|			<tr>
	|				<td align=""center"" style=""width:360px;"">
	|				</td>
	|				<td align=""center"" style=""width:125px;padding:0 15px 20px;border-bottom:1px solid #777777;"">
	|					<a href=""http://licota.ru/categories/"" title=""Перейти в интернет магазин licota.ru"">Перейти в интернет магазин licota.ru</a>
	|				</td>
	//|				<td align=""center"" style=""width:125px;padding:0 0 20px 15px;border-bottom:1px solid #777777;"">
	//|					<a href=""http://licota.ru/dashboard/orders/" + Формат(Заказ.id,"ЧГ=") + """ title=""Перейти на заказ в личном кабинете"">Открыть заказ в личном кабинете</a>
	//|				</td>
	|			</tr>
	|			<tr>
	|				<td align=""center"" >
	|				</td>
	|				<td align=""right"" colspan=""2"" style=""line-height:14px;font-family: Verdana,Geneva,sans-serif;font-size:10px;color:#777777;"">Мы всегда к Вашим услугам и ждем Ваших заказов!<br />
	|					С наилучшими пожеланиями,<br />
	|					Команда Гараж Тулс<br/>
	|<hr>
	|Ваш менеджер:  " + ОсМен.ФизЛицо + "<br>
	|"+?(МобТелефонМен = "","","Мобильный телефон: " + МобТелефонМен + "<br>")+" 
	|Бесплатный телефон:  8-800-707-8007 " +?(ДобТелефонМен = "","<br>","доб." + ДобТелефонМен + "<br>")+"
	|"+?(ЭлПочтаМен = "","","Эл.почта: " + ЭлПочтаМен + "<br>")+"
	|<hr>
	|"+?(ОсМен = Оператор,"",	"Менеджер отдела клиентского севиса:  " + Оператор.ФизЛицо + "<br> Бесплатный телефон:  8-800-707-8007 "+?(ДобТелефон = "","<br>"," доб." + ДобТелефон + "<br>")+ ?(ЭлПочта = "","<br>"," Эл.почта: " + ЭлПочта + "<br>")+" </td> ")+"
	|			</tr>
	|		</table>
	|		<!-- FOOTER END -->
	|	</td>
	|</tr>
	|</table>";


	
	ТекстПодТаблицей = "Обратите внимание! Оплата услуги наложенного платежа производится отдельно при получении <BR>
						|Подробнее о тарифах и сроках доставки Вы можете узнать на сайте транспортной компании.";
						
	АдресПочты = Заказ.АдресОтправкиПисьма;//Пользователь.ЭлектроннаяПочта;
	
	Если ПустаяСтрока(АдресПочты) Тогда
		АдресПочты = Пользователь.ЭлектроннаяПочта;
	ИначеЕсли ПустаяСтрока(АдресПочты) Тогда	
		АдресПочты = Справочники.Контрагенты.ПолучитьЭлектроннуюПочтуПартнера(Заказ.Контрагент); 
		АдресПочты = ?( АдресПочты = "",Справочники.Контрагенты.ПолучитьЭлектроннуюПочтуПартнера(Заказ.Контрагент),АдресПочты);  //теперь почта из контрагента на крайний случай поищем и в Контрагенте
	КонецЕсли;							
	
	Если НЕ ПустаяСтрока(ОсМен) Тогда АдресПочтыКопия = ОсМен.Почта; КонецЕсли; 
	
	ОбщиеФункции.ОповеститьПоПочте(АдресПочты , ТемаПисьма, 	ЗаголовокПисьма + 
																	БизнесПроцессы.ИнтернетЗаявка.ПолучитьДеталиЗаказа(Заказ, ДопРасходы, ОткрытиеЗаказа) + 
																	?(СсылкаНаСчет, ПолучитьСсылкуНаСчет(Заказ), "") +
																	?(заказ.СуммаНП, ТекстПодТаблицей, "") + 
													 				ПодвалПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML,,?(СохранитьВложение, ПолучитьВложенияСчет(Заказ), Неопределено),УчетнаяЗапись,АдресПочтыКопия);
	//ОбщиеФункции.ОповеститьПоПочте(Пользователь.ЭлектроннаяПочта, ТемаПисьма, Константы.ПутьИнтернетМагазин.Получить(), Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTMLСКартинками);
	
КонецФункции

Процедура ПисьмоПодтверждениеЗаказаНаложенный(ТочкаМаршрутаБизнесПроцесса)

	ТекстПисьма = "	Весь предложенный ниже товар зарезервирован.<BR>	
					|Сборка и отгрузка заказа будет произведена после получения Вашего согласия с условиями выполнения заказа.<BR>
 					|<b>Пожалуйста, сообщите в ответ на это письмо о Вашем решении. (нажмите ""Ответить"" на это письмо и напишите согласны или нет с условиями). Спасибо.</b><BR><BR>
					|";
					
					
	СформироватьПисьмо(ТочкаМаршрутаБизнесПроцесса, ТекстПисьма);	
	
КонецПроцедуры

Процедура ПисьмоСборкаЗаказаОбработка(ТочкаМаршрутаБизнесПроцесса)
	
	Если НЕ Заказ.ВидОплаты.kind_payment_code = "cash" Тогда   //поменяем условие, т.к. будем отправлять письмо принажатии кнопки "обработан"
	//	ТекстПисьма = "	Ваш заказ #" + СокрЛП(Заказ.Номер) + " готов к отгрузке.<BR>
	//	|Заказ можно забрать в магазине Гараж Тулс по адресу: " + СокрЛП(Заказ.Склад.Адрес) + ".<BR>
	//	|Для получения назовите номер заказа продавцу.<BR>";
	//	
	//	СформироватьПисьмо("Гараж Тулс. Готов заказ", ТекстПисьма, , , , Новый Структура("СтатусЗаказа", "В очереди на отгрузку"));
	//Иначе
		ТекстПисьма = "	Мы приступили к сборке Вашего заказа.<BR> 
		|" + ?(Заказ.МаксимальныйСрокДоставки > 0, "Максимальный срок доставки составит " + Строка(Заказ.МаксимальныйСрокДоставки) + " дней.<BR>", "") + " 
		|Детали Вашего заказа указаны ниже: <BR></P>";
		
		СформироватьПисьмо(ТочкаМаршрутаБизнесПроцесса, ТекстПисьма,,,,Новый Структура("СтатусЗаказа", "В сборке"));	
	КонецЕсли;
				
КонецПроцедуры


Процедура ПисьмоПодтверждениеЗаказаПредоплата(ТочкаМаршрутаБизнесПроцесса)  Экспорт
	
	WebMoney = Справочники.ВидОплатыИнтернетЗаказа.НайтиПоКоду("000000001");
	
	ТекстПисьма = "	Весь выбранный Вами товар есть в наличии и зарезервирован.<BR>                              
					|Теперь вы можете перейти к оплате заказа"+?(Заказ.is_check и Заказ.Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, " " + ПолучитьСсылкуНаЛичныйКабинет(Заказ)+".<BR>
					|Также возможна оплата по счету, он прикреплен в приложении.<BR>" , ". В приложении счет для оплаты.<BR>")+"
					|					
					|" + ?(Заказ.ВидОплаты = WebMoney, "
					|Для оплаты через систему WebMoney необходимо перечислить сумму, указанную в счете, на кошелек <b>" + Константы.КошелекWebMoney.Получить() + "</b>.
					|Необходимо учитывать размер комиссии за перевод денежных средств.<BR><BR>", "") + " 
                    |
					|После поступления оплаты на наш счет мы осуществим сборку и отгрузку заказа.<BR>
					|" + ?(Заказ.ВидОплаты = WebMoney, "
					|Просим вас сообщить нам об оплате.<BR>", "") + "<BR>
					|" + ?(ЗапроситьУдостоверение, "
					|Внимание! Для отправки заказа, выбранной Вами транспортной компанией, необходимо в отправлении указать полные ФИО, паспортные данные или номер водительского удостоверения грузополучателя. 
					|Пожалуйста, сообщите нам.<BR><BR>", "") + "
					|Детали Вашего заказа указаны ниже:";									

	СформироватьПисьмо(ТочкаМаршрутаБизнесПроцесса, ТекстПисьма,,,,,Истина);	
	
КонецПроцедуры


Функция ВернутьТекстАвтоматическогоПисьма()   Экспорт
	
	Если ТоварыЕстьВНаличии() Тогда
		СтрокаЕстьВНаличии = "Все заказанные вами позиции есть в наличии. ";
	Иначе
		СтрокаЕстьВНаличии = "";
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Заказ.ВидОплаты) и НЕ ЗначениеЗаполнено(Заказ.ВариантДоставкиНов) Тогда //Если не выбран вариант оплаты и доставки
		
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". " + СтрокаЕстьВНаличии + "Заказ будет готов к отгрузке в течении 1-3 дней.<BR><BR>
		|Вы не выбрали не один из предложенных вариантов доставки и оплаты, в течении дня наш специалист свяжется с вами.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
		
	ИначеЕсли Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.СамовывозСНашегоСклада и 
				Заказ.ВидОплаты.ТипОплаты = Перечисления.ТипыОплатыИнтернетЗаказа.ПриПолучении 	Тогда //Вариант доставки - самовывоз, вариант оплаты - при получении
				
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". " + СтрокаЕстьВНаличии + "Ваш заказ скомплектован и готов для отгрузки. Вы можете забрать его по указанному ниже адресу.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
		
	ИначеЕсли Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.СамовывозСНашегоСклада и 
				Заказ.ВидОплаты.ТипОплаты = Перечисления.ТипыОплатыИнтернетЗаказа.Предоплата 	Тогда //Вариант доставки - самовывоз, вариант оплаты - предоплата			
				
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". " + СтрокаЕстьВНаличии + "Заказ будет готов к отгрузке в течении 1-3 дней, после предварительной оплаты.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
		
	ИначеЕсли (Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика или
				Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента или
					Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами) и 
						Заказ.ВидОплаты.ТипОплаты = Перечисления.ТипыОплатыИнтернетЗаказа.Предоплата 	Тогда //Вариант доставки - ТК или по городу, вариант оплаты - предоплата			
				
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". " + СтрокаЕстьВНаличии + "Заказ будет готов к отгрузке в течении 1-3 дней, после предварительной оплаты.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
		
	ИначеЕсли (Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика или
				Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента или
					Заказ.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами) и 
						Заказ.ВидОплаты.ТипОплаты = Перечисления.ТипыОплатыИнтернетЗаказа.ПриПолучении 	Тогда //Вариант доставки - ТК или по городу, вариант оплаты - при получении			
				
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". " + СтрокаЕстьВНаличии + "Заказ будет готов к отгрузке в течении 1-3 дней, после вашего подтверждения.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
		                                                                                                       //В других случаях
	Иначе
		ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". В ближайшее время, мы его обработаем и вышлем Вам подтверждение.<BR><BR>
		// |После чего, можно будет перейти к оплате и доставке.<BR><BR>
		|Детали Вашего заказа указаны ниже:<BR>";
	КонецЕсли;
	
	Возврат ТекстПисьма;
КонецФункции	


Функция ТоварыЕстьВНаличии()
	
	ТаблицаТоваров = Заказ.Товары.Выгрузить(,"Номенклатура, Количество");
	ТаблицаТоваров.Свернуть("Номенклатура", "Количество");
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СписокСкладов = Новый Массив;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("СКЛ"));  //Новый склад
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("СК2"));  //Склад 2
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Количество КАК КоличествоВИнтернетЗаказе
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоНаСкладе,
	|	ТоварыНаСкладахОстатки.Номенклатура
	|ПОМЕСТИТЬ ВТ_ОстаткиНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура В (&ТаблицаТоваров)
	|				И Склад В (&СписокСкладов)) КАК ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТоварыВРезервеОстатки.КоличествоОстаток) КАК КоличествоВРезерве,
	|	ТоварыВРезервеОстатки.Номенклатура
	|ПОМЕСТИТЬ ВТ_ОстаткиВРезерве
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			Номенклатура В (&ТаблицаТоваров)
	|				И Размещение В (&СписокСкладов)) КАК ТоварыВРезервеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВРезервеОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.КоличествоВИнтернетЗаказе,
	|	ЕСТЬNULL(ВТ_ОстаткиВРезерве.КоличествоВРезерве, 0) КАК КоличествоВРезерве,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладах.КоличествоНаСкладе, 0) КАК КоличествоНаСкладе,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладах.КоличествоНаСкладе, 0) - ЕСТЬNULL(ВТ_ОстаткиВРезерве.КоличествоВРезерве, 0) КАК КоличествоДоступной
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладах КАК ВТ_ОстаткиНаСкладах
	|		ПО ВТ_Товары.Номенклатура = ВТ_ОстаткиНаСкладах.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиВРезерве КАК ВТ_ОстаткиВРезерве
	|		ПО ВТ_Товары.Номенклатура = ВТ_ОстаткиВРезерве.Номенклатура";
	
	Запрос.УстановитьПараметр("СписокСкладов" , СписокСкладов);
	Запрос.УстановитьПараметр("ТаблицаТоваров" , ТаблицаТоваров);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЕстьВНаличии = Истина;
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоДоступной < 0 Тогда
			ЕстьВНаличии = Ложь;	
			Прервать;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьВНаличии;
	
КонецФункции


Процедура ПисьмоОткрытиеЗаказа(ТочкаМаршрутаБизнесПроцесса)  Экспорт
	
	// Установим статус
	
	Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа.Открыт);
	
	// Пошлем письмо
	
	//ТекстПисьма = "	От Вас поступил заказ №" + Строка(Заказ.Номер) + ". В ближайшее время, мы его обработаем и вышлем Вам подтверждение.<BR><BR>
	//               // |После чего, можно будет перейти к оплате и доставке.<BR><BR>
	//				|Детали Вашего заказа указаны ниже:<BR>";
	
	ТекстПисьма = ВернутьТекстАвтоматическогоПисьма();
	
					
	СформироватьПисьмо(ТочкаМаршрутаБизнесПроцесса, ТекстПисьма, Истина);																			  
																			  
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ПриСозданииЗадач()

Функция ПредставлениеЗадачи(Задача)
	
	Заказ = Задача.БизнесПроцесс.Заказ;
    
	НомерЗаказа   = СокрЛП(Заказ.Номер);
	Пока Лев(НомерЗаказа, 1)="0" Цикл
		НомерЗаказа = Сред(НомерЗаказа, 2);
	КонецЦикла;

	Возврат Задача.Наименование + " № "  + НомерЗаказа + " (" + Формат(Заказ.Сумма, "Ч15.2,") + ") " + Заказ.ПользовательИнтернет;
	
КонецФункции                                    

Процедура ОбработатьЗаказПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Задача = ФормируемыеЗадачи[0];
	
	Если Задача.ЭтоНовый() Тогда
		
		Задача.Наименование = ПредставлениеЗадачи(Задача);
		 		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОжиданиеОплатыПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Задача = ФормируемыеЗадачи[0];
	
	Если Задача.ЭтоНовый() Тогда
		
		Задача.Наименование = ПредставлениеЗадачи(Задача);
		
	КонецЕсли;


КонецПроцедуры

Процедура ПодтверждениеЗаказаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Задача = ФормируемыеЗадачи[0];
	
	Если Задача.ЭтоНовый() Тогда
		
		Задача.Наименование = ПредставлениеЗадачи(Задача);
		
	КонецЕсли;

КонецПроцедуры

// СБОРКА

Процедура СборкаЗаказаПередСозданиемВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	
	НовПроцесс = БизнесПроцессы.СборкаЗаказа.СоздатьБизнесПроцесс();
	НовПроцесс.Дата 			= ТекущаяДата();
	//НовПроцесс.ДатаПервойСборки = БизнесПроцессы.СборкаЗаказа.ПолучитьДатуПервойСборкиЗаказа(Заказ);
	НовПроцесс.Заказ 			= Заказ;
	НовПроцесс.Склад 			= Заказ.Склад;
	НовПроцесс.ЯчеистаяСборка 	= Заказ.Склад.Ячеестый;
	
	ФормируемыеБизнесПроцессы.Добавить(НовПроцесс);
	
КонецПроцедуры


Процедура ЗакрытьИнтернетЗаказОбработка(ТочкаМаршрутаБизнесПроцесса)
	
	//Закрытие заказа всегда делаем корректировкой вне зависимости от типа "старый" или "новый", чтобы был виден оригинал и можно было его восстановить
	
	
	// Делаем корректировку на все что осталось недозаказано
	
	ДокПризрак = Документы.ИнтернетЗаказПокупателя.СоздатьДокумент();
	
	
	ТаблицаИзменений = КонвертацияТипов.ПолучитьТаблицуРазницуДокументаИРегистраОстатков(
							ДокПризрак.Товары.Выгрузить(), 
							"ИнтернетЗаказПокупателя",
							"Номенклатура, Упаковка, Цена, Размещение, ПроцентРучнойСкидки, ПроцентАвтоматическойСкидки, СтавкаНДС, Акция",
							"Количество, Сумма",
							Новый Структура("ИнтернетЗаказ", Заказ));
	
	
							
	//ТаблицаИзмененийРез = КонвертацияТипов.ПолучитьТаблицуРазницуДокументаИРегистраОстатков(
	//						ДокПризрак.РазмещениеТоваров.Выгрузить(), 
	//						"ТоварыВРезерве",
	//						"Номенклатура, Размещение",
	//						"Количество",
	//						Новый Структура("ДокументРезерва", Заказ));
	
	ТаблицаИзмененийРез = Заказы.ПодготовитьРезревыКСписанию(ДокПризрак.РазмещениеТоваров.Выгрузить(), Заказ);							
	
	Если ТаблицаИзменений.Количество() Или ТаблицаИзмененийРез.Количество() Тогда
		
		НачатьТранзакцию();
		
		
		// Шапка
		
		НовДок = Документы.КорректировкаИнтернетЗаказа.СоздатьДокумент();
		НовДок.Комментарий = "Заказ закрыт "+ТекущаяДата();
		НовДок.ЭтоЗакрытиеЗаказа=Истина;
		НовДок.Заказ 	= Заказ;
		НовДок.Дата 	= ТекущаяДата();
		
		// Таблица
		
		НовДок.Товары.Загрузить(ТаблицаИзменений);
		
		//таблица Размещение заполняется только для новых заказов
		Если Заказ.СпособРазмещенияБезЗаказа Тогда
			НовДок.РазмещениеТоваров.Загрузить(ТаблицаИзмененийРез);
		КонецЕсли;	
		
		
		// Проведение
		
		Если Не ПроведенияДокументов.ПровестиДокумент(НовДок) Тогда
			ОтменитьТранзакцию();
			ВызватьИсключение
			"Ошибка формирования закрывающей корректировки заказа!";
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

//УСЛОВИЯ

Процедура ВариантОплатыОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	//Индекс = Перечисления.СтатусыИнтерентЗаявки.Индекс(Статус);
	//Результат = ТочкаВыбораВарианта.Варианты[Метаданные.Перечисления.СтатусыИнтерентЗаявки.ЗначенияПеречисления[Индекс].Имя];
	
	Статус = Заказы.ПолучитьСостояниеЗаказа(Заказ);
	
	Если Статус = Перечисления.СостоянияЗаказа.Отменен Тогда
		
		Результат = ТочкаВыбораВарианта.Варианты.Аннулирован;
		
	ИначеЕсли Статус = Перечисления.СостоянияЗаказа.ОжиданиеПодтверждения Тогда
		
		Результат = ТочкаВыбораВарианта.Варианты.ОжиданиеПодтверждения;
		
	ИначеЕсли Статус = Перечисления.СостоянияЗаказа.ОжиданиеОплаты Тогда
		
		Результат = ТочкаВыбораВарианта.Варианты.ОжиданиеОплаты;
		
	Иначе
		
		Результат = ТочкаВыбораВарианта.Варианты.ВСборке;
		
	КонецЕсли;
	
КонецПроцедуры
Процедура ВариантыПриНевозможностиРазмещенияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	Если Заказ.ПометкаУдаления Тогда
		
		Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа.Отменен);
		Результат = ТочкаВыбораВарианта.Варианты[2];
		
	ИначеЕсли Заказ.Проведен Тогда
		
		Статус = Заказы.ПолучитьСостояниеЗаказа(Заказ);
		//Если Статус = Перечисления.СостоянияЗаказа.ВОчередиНаСклад ИЛИ Статус = Перечисления.СостоянияЗаказа.ОжиданиеПодтверждения ИЛИ Статус = Перечисления.СостоянияЗаказа.ОжиданиеОплаты Тогда
		//	Результат = ТочкаВыбораВарианта.Варианты[3];
		//Иначе
		Если Статус = Перечисления.СостоянияЗаказа.Отменен Тогда
			Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа.Отменен);
			Результат = ТочкаВыбораВарианта.Варианты[2];
		Иначе
			Результат = ТочкаВыбораВарианта.Варианты[1];
		КонецЕсли;
		
	Иначе
		
		Результат = ТочкаВыбораВарианта.Варианты[0];
		
	КонецЕсли;
	
КонецПроцедуры
Процедура УсловиеПодтверждениеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	//Если Статус = Перечисления.СтатусыИнтерентЗаявки.ВСборке Тогда
	//	Результат = Истина;
	//ИначеЕсли Статус = Перечисления.СтатусыИнтерентЗаявки.Аннулирован Тогда
	//	Результат = Ложь;
	//КонецЕсли;
	
	Состояние = Заказы.ПолучитьСостояниеЗаказа(Заказ);
	Результат = Состояние = Перечисления.СостоянияЗаказа.ВРаботе;

КонецПроцедуры
Процедура УсловиеОплаченоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	//Если Статус = Перечисления.СтатусыИнтерентЗаявки.ВСборке Тогда
	//	Результат = Истина;
	//ИначеЕсли Статус = Перечисления.СтатусыИнтерентЗаявки.Аннулирован Тогда
	//	Результат = Ложь;
	//КонецЕсли;
	
	Состояние = Заказы.ПолучитьСостояниеЗаказа(Заказ);
	Результат = Состояние = Перечисления.СостоянияЗаказа.ВРаботе;

КонецПроцедуры
Процедура УсловиеПроведенияПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = Заказ.Проведен;
	
	////silber { Пока нет времени выяснять
	//
	//	Результат = Истина;
	//
	//// } silber
	
КонецПроцедуры
Процедура ОтгруженПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	// Если нет на остатках заказа тогда отгружен
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА, ИнтернетЗаказ ИЗ РегистрНакопления.ИнтернетЗаказПокупателя.Остатки(,ИнтернетЗаказ = &Заказ)");
	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	Результат = Запрос.Выполнить().Пустой();
	
КонецПроцедуры

Процедура ОжиданиеОтветаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа.ОжиданиеОтвета);
КонецПроцедуры

Процедура Обработка1Обработка(ТочкаМаршрутаБизнесПроцесса)
	
	Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа.Отгружен);	
	
КонецПроцедуры

Процедура УсловиеБыстраяПродажаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ЭтоБыстраяПродажа;
КонецПроцедуры

Процедура ОбработкаВариантовДоставки(ТочкаМаршрутаБизнесПроцесса)
	
	ЗаказОбъект = Заказ.ПолучитьОбъект();
	
	Если Заказ.ВариантДоставки = "courier" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами;	
	ИначеЕсли Заказ.ВариантДоставки = "dellin_to_door" Тогда	
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента;
		мГрузоперевозчик = Справочники.Контрагенты.НайтиПоКоду("000000098"); //Деловые Линии
		Если НЕ мГрузоперевозчик.Пустая() Тогда
			ЗаказОбъект.Грузоперевозчик = мГрузоперевозчик;	
		КонецЕсли;	
	ИначеЕсли Заказ.ВариантДоставки = "dpd_to_door" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента;
		мГрузоперевозчик = Справочники.Контрагенты.НайтиПоКоду("000000853"); //DPD
		Если НЕ мГрузоперевозчик.Пустая() Тогда
			ЗаказОбъект.Грузоперевозчик = мГрузоперевозчик;	
		КонецЕсли;
	ИначеЕсли Заказ.ВариантДоставки = "ems_to_door" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоКлиента;
		мГрузоперевозчик = Справочники.Контрагенты.НайтиПоКоду("000011917"); //EMS
		Если НЕ мГрузоперевозчик.Пустая() Тогда
			ЗаказОбъект.Грузоперевозчик = мГрузоперевозчик;	
		КонецЕсли;
	ИначеЕсли Заказ.ВариантДоставки = "from_dellin_terminal" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика;
		мГрузоперевозчик = Справочники.Контрагенты.НайтиПоКоду("000000098"); //Деловые Линии
		Если НЕ мГрузоперевозчик.Пустая() Тогда
			ЗаказОбъект.Грузоперевозчик = мГрузоперевозчик;	
		КонецЕсли;
	ИначеЕсли Заказ.ВариантДоставки = "from_dpd_terminal" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика;
		мГрузоперевозчик = Справочники.Контрагенты.НайтиПоКоду("000000853"); //DPD
		Если НЕ мГрузоперевозчик.Пустая() Тогда
			ЗаказОбъект.Грузоперевозчик = мГрузоперевозчик;	
		КонецЕсли;
	ИначеЕсли Заказ.ВариантДоставки = "pickup" Тогда
		ЗаказОбъект.ВариантДоставкиНов = Перечисления.ВариантДоставки.СамовывозСНашегоСклада;	
	КонецЕсли;	
	
	Попытка
		ЗаказОбъект.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		стрОшибки = "Ошибка при записи интернет заказа
		|" + стрОшибки;
		Сообщить(стрОшибки);
	КонецПопытки;
	
КонецПроцедуры



