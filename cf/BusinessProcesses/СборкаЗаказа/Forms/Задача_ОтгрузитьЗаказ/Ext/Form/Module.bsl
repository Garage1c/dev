&НаКлиенте
Перем МассивКомментариев Экспорт;


&НаСервере
Функция УстановитьСостояниеИВыполнитьЗадачу(ИмяСостояния)
	
	Если Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа[ИмяСостояния]) Тогда
	
		Возврат Записать(Новый Структура("ВыполнитьЗадачу",Истина));
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции


// ТИПОВЫЕ

&НаКлиенте
Процедура ДекорацияДобавитьКомментарийНажатие(Элемент)
	
	Элементы.ГруппаДобавитьКомментарий.Видимость 		= Ложь;
	Элементы.ГруппаРедактированиеКомментария.Видимость 	= Истина;

КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	Элементы.ПоказатьСкрытьАдресацию.Пометка = Не Элементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);

КонецПроцедуры
&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, 
		Объект.Ссылка.БизнесПроцесс, 
		Объект.Ссылка);
	
КонецПроцедуры
&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	Элементы.Кнопка_ТоварОтправлен.Видимость		= Не ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Функция НайтиПоследнююРеализацию()
	
	Запрос = Новый Запрос(?(Объект.Склад.ПередачаТовараМВЗ ИЛИ НЕ Заказ.МВЗ.Пустая() ИЛИ Заказ.ПередачаТовара, 
	"ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка, Дата ИЗ Документ.ПередачаТовара ГДЕ Заказ = &Заказ УПОРЯДОЧИТЬ ПО Дата Убыв",
	"ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка, Дата ИЗ Документ.РеализацияТоваров ГДЕ Заказ = &Заказ УПОРЯДОЧИТЬ ПО Дата Убыв"));
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка; КонецЕсли;
	
КонецФункции

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Пакетная печать
	
	ПечатьНаКлиенте.ИницилизироватьПакетнуюПечать(Элементы, СтрокаУправленияПакетнойПечати, ПараметрыПакетнойПечати, ЭтаФорма, глПараметрыПакетнойПечати, 
				"ПриОтгрузкеТовара", 				// Место
				Новый Структура("Заказ", Заказ));   // Для запроса
	
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.БизнесПроцесс);
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ); // видимость адресации и комментария, доступность формы
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
	
	ПрочитатьРеквизиты();
	
	// Проверим разрешение отгрузки
	
	//Если ТипЗнч(Заказ) <> Тип("ДокументСсылка.ВнутреннийЗаказ") И Не CRM.КлиентуРазрешенаОтгрузка(Заказ.Контрагент, Заказ.Организация) Тогда
	Если ТипЗнч(Заказ) <> Тип("ДокументСсылка.ВнутреннийЗаказ") И Не CRM.ПартнеруРазрешенаОтгрузка(Заказ.Контрагент) Тогда
		Элементы.НадписьОтгрузкаЗапрещена.Видимость = Истина;
		Если Не РольДоступна("ПолныеПрава") Тогда
			ТолькоПросмотр = Истина; КонецЕсли; КонецЕсли;
	
	УправлениеВидимостьюДоступностью();

КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

// КОМАНДЫ

&НаКлиенте
Процедура ТоварОтправлен(Команда)
	
	                                          
	Если УстановитьСостояниеИВыполнитьЗадачу("Отгружен") Тогда
		послРеализация = НайтиПоследнююРеализацию();
		Если 	послРеализация <> Неопределено 
				//И
				//Не ПараметрыПакетнойПечати.СпособПечати = "НаПринтер" 
				Тогда // Откроем только если не было пакетной печати и печать была сразу на принтер
			ОткрытьФорму(Заказы.ПолучитьИмяФормы(послРеализация), Новый Структура("Ключ", послРеализация));
		КонецЕсли;
		
		// Пакетная печать
		
		//ПараметрыПакетнойПечати.Вставить("ДанныеДляПечати", Новый Структура("Заказ, Реализация", Заказ, послРеализация));
		//ПечатьНаКлиенте.ВыполнитьПакетнуюПечать(ПараметрыПакетнойПечати);
		
		// Закроем
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура СкорректироватьЗаказ(Команда)
	
	Если 	Вопрос("Не отгружать, а вернуть до задачи ""Скорректировать заказ""?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да И
			УстановитьСостояниеИВыполнитьЗадачу("ВОчередиНаСклад") Тогда
			
		Модифицированность = Ложь;
		Закрыть();
			
	КонецЕсли;
	
КонецПроцедуры

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

#Область Пакетная_печать

&НаКлиенте
Процедура СтрокаУправленияПакетнойПечатиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ПечатьНаКлиенте.ОбработатьНавигационнуюСсылку(ЭтаФорма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, СтрокаУправленияПакетнойПечати, ПараметрыПакетнойПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаПринтераНажатие(Элемент)
	
	ПечатьНаКлиенте.НажатиеНаКартинкуПринтераВПакете(Элемент, ЭтаФорма);
	
КонецПроцедуры

// Поток

&НаСервере
Функция ПакетПоУмолчаниюПолучен()
	
	СтруктураВозврата = ПолучитьИзВременногоХранилища(АдресПоискаПакетеПечати);
	Если СтруктураВозврата = Неопределено Тогда
		Возврат Ложь;
		
	Иначе
		
		Если СтруктураВозврата.Состояние = Поток.СостояниеОшибка() Тогда
			ВызватьИсключение СтруктураВозврата.стрОшибки; КонецЕсли;
		
		ПараметрыПакетнойПечати.Вставить("Пакет", СтруктураВозврата.Результат);
		Возврат Истина; КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ПолучитьПакетПоУмолчаниюПостоянно()
	
	Если ПакетПоУмолчаниюПолучен() Тогда
		ПечатьНаКлиенте.ОбновитьСтрокуСостоянияПакетнойПечати(СтрокаУправленияПакетнойПечати, ПараметрыПакетнойПечати);
		ОтключитьОбработчикОжидания("ПолучитьПакетПоУмолчаниюПостоянно"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПолучитьПакетПоУмолчанию()
	
	Если ПакетПоУмолчаниюПолучен() Тогда
		ПечатьНаКлиенте.ОбновитьСтрокуСостоянияПакетнойПечати(СтрокаУправленияПакетнойПечати, ПараметрыПакетнойПечати);
	Иначе
		ПодключитьОбработчикОжидания("ПолучитьПакетПоУмолчаниюПостоянно", 1) КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ЗапуститьПоискПакетаДляПечати() Экспорт
	
	АдресПоискаПакетеПечати = Поток.ЗапуститьПоискПакетаДляПечати(ПараметрыПакетнойПечати, глПараметрыПакетнойПечати, УникальныйИдентификатор);
	ПодключитьОбработчикОжидания("ПолучитьПакетПоУмолчанию", 0.1, Истина);
	
КонецПроцедуры


#КонецОбласти

#Область информация_о_товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

