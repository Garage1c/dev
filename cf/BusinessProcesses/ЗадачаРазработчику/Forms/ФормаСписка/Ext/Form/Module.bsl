
&НаКлиенте
Перем СписокИсполнителей, СписокКонтролеров;

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	#Если Не ВебКлиент Тогда
		
		Если ИмяСобытия = СобытияСистемы.Событие_ЗаписанБизнесПроцесс() Тогда
			
			Элементы.Список.Обновить();
			
		КонецЕсли;
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПриАктивизацииСтроки(Элемент)
	
	ОбновитьФильтрПроект();
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Зададим значения по умолчанию
	
	
	
	//Исполнитель = ПараметрыСеанса.ТекущийПользователь;
	//Статус 		= "Открыт";
	
	Список.Параметры.УстановитьЗначениеПараметра("ПустойПользователь", 			Справочники.Пользователи.ПустаяСсылка());
	Список.Параметры.УстановитьЗначениеПараметра("ЭтоПолныеПраваЧисло", 		Число(РольДоступна("ПолныеПрава")));
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", 		ПараметрыСеанса.ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("ПустаяВажность", 				Справочники.ВажностиЗадач.ПустаяСсылка());
	Список.Параметры.УстановитьЗначениеПараметра("ОбчнаяВажность", 				Справочники.ВажностиЗадач.Обычная);
	Список.Параметры.УстановитьЗначениеПараметра("ТочкаМаршрутаРешение", 		БизнесПроцессы.ЗадачаРазработчику.ТочкиМаршрута.РешениеЗадачи);
	Список.Параметры.УстановитьЗначениеПараметра("ТочкаМаршрутаПодтверждение", 	БизнесПроцессы.ЗадачаРазработчику.ТочкиМаршрута.ПроверкаЗадачи);
	
	// Обновим фильтры
	
	ОбновитьФильтрПроект();
	ОбновитьФильтрИсполнитель();
	ОбновитьФильтрКонтролер();
	ОбновитьФильтрСтатус();
	ОбновитьФильтрВажность();
	
КонецПроцедуры
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ОткрытьФорму("БизнесПроцесс.ЗадачаРазработчику.Форма.ФормаВыполненияЗадачи",
					новый Структура("Проект", Элементы.Проекты.ТекущаяСтрока));
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФинСтроку()
	
	Сумма = 0; 
	//ТекВидимость = Элементы.ИнфСтрока.Видимость;
	
	ВыдСтроки = Элементы.Список.ВыделенныеСтроки;
	Для Каждого Строка Из ВыдСтроки Цикл
		
		Сумма = Сумма + Строка.Стоимость;
		
	КонецЦикла;
	
	Если Сумма Тогда
		
		ИнфСтрока = "Выделено на сумму " + Сумма;
		//Если Не ТекВидимость Тогда
		//	Элементы.ИнфСтрока.Видимость = Истина;
		//КонецЕсли;
		
	Иначе
		
		ИнфСтрока = "";
		
		//Если ТекВидимость Тогда
		//	Элементы.ИнфСтрока.Видимость = Ложь;
		//КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОбновитьФинСтроку();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИсполнителей()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Исполнитель ИЗ БизнесПроцесс.ЗадачаРазработчику УПОРЯДОЧИТЬ ПО Исполнитель.Наименование");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Исполнитель");
	
КонецФункции
&НаСервере
Функция ПолучитьКонтролеров()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Контроллер ИЗ БизнесПроцесс.ЗадачаРазработчику УПОРЯДОЧИТЬ ПО Контроллер.Наименование");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Контроллер");
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СписокИсполнителей = Новый СписокЗначений;
	СписокКонтролеров = Новый СписокЗначений;
	
	СписокИсполнителей.ЗагрузитьЗначения(ПолучитьИсполнителей());
	СписокКонтролеров.ЗагрузитьЗначения(ПолучитьКонтролеров());
	
	//ПодключитьОбработчикОжидания("ОбновитьКлиент", 0.1, Истина);
	
КонецПроцедуры

// Параметры

&НаКлиенте
Процедура ОбновитьКлиент()
	
	//ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФильтрПроект()
	
	ТекСтрока 	= Элементы.Проекты.ТекущаяСтрока;
	ЕстьПроект 	= Не ТекСтрока = Неопределено;
	ТекПроект = ?(ЕстьПроект, ТекСтрока, Справочники.Проекты.ПустаяСсылка());
	
	Список.Параметры.УстановитьЗначениеПараметра("ВключенФильтр", 	ЕстьПроект);
	Список.Параметры.УстановитьЗначениеПараметра("Проект", 			ТекПроект);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьФильтрИсполнитель()
	
	Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", Исполнитель);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьФильтрКонтролер()
	
	Список.Параметры.УстановитьЗначениеПараметра("Контролер", Контролер);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьФильтрСтатус()
	
	Список.Параметры.УстановитьЗначениеПараметра("Статус", Статус);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьФильтрВажность()
	
	Список.Параметры.УстановитьЗначениеПараметра("Важность", Важность);
	
КонецПроцедуры


 // Элементы кнопки

&НаКлиенте
Процедура Исполнитель1ПриИзменении(Элемент)
	
	ОбновитьФильтрИсполнитель();
	
КонецПроцедуры
&НаКлиенте
Процедура КонтролерПриИзменении(Элемент)
	
	ОбновитьФильтрКонтролер();
	
КонецПроцедуры
&НаКлиенте
Процедура Исполнитель1Очистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьФильтрИсполнитель();
	
КонецПроцедуры
&НаКлиенте
Процедура КонтролерОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьФильтрКонтролер();
	
КонецПроцедуры
&НаКлиенте
Процедура ПоказыватьСоСтатусамиПриИзменении(Элемент)
	
	ОбновитьФильтрСтатус();
	
КонецПроцедуры
&НаКлиенте
Процедура ВажностьПриИзменении(Элемент)
	
	ОбновитьФильтрВажность();
	
КонецПроцедуры

&НаКлиенте
Процедура Исполнитель1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбИсполнитель = ВыбратьИзСписка(СписокИсполнителей, Элемент);
	Если ВыбИсполнитель <> Неопределено Тогда
		
		Исполнитель = ВыбИсполнитель.Значение;
		Исполнитель1ПриИзменении(Элемент);
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура КонтролерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбКонтролер = ВыбратьИзСписка(СписокКонтролеров, Элемент);
	Если ВыбКонтролер <> Неопределено Тогда
		
		Контролер = ВыбКонтролер.Значение;
		КонтролерПриИзменении(Элемент);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	
	// Запомним фильтры
	
	//ХранилищаНастроек.ХранилищеНастроекФорм.Сохранить(
	//		"БизнесПроцесс.ЗадачаРазработчику.ФормаСписка",
	//		Новый Структура("ФильтрИсполнитель, ФильтрСтатус, ФильтрКонтролер"));
	
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	// Вставить содержимое обработчика.
	
	Статус 			= Настройки["Статус"];
	Исполнитель 	= Настройки["Исполнитель"];
	Контролер 		= Настройки["Контролер"];
	Важность 		= Настройки["Важность"];
	
	// Обновим фильтры
	
	ОбновитьФильтрПроект();
	ОбновитьФильтрИсполнитель();
	ОбновитьФильтрКонтролер();
	ОбновитьФильтрСтатус();
	ОбновитьФильтрВажность();
	
КонецПроцедуры



