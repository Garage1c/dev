&НаКлиенте
Перем МассивКомментариев Экспорт;

// ТИПОВЫЕ

&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	// Реверснем
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, 
		Объект.Ссылка.БизнесПроцесс, 
		Объект.Ссылка);
		
	Заказчик 		= Объект.БизнесПроцесс.Заказчик;
	ЭтоВнутрЗаказ 	= БизнесПроцессы.ПеремещениеТоваров.ЭтоСборкаВнутреннегоЗаказа(Объект.БизнесПроцесс);
	
	// Удалим состояние левые
	
	// 25.04.17 вот внизу закоментарил и написал 1 строку всего , 1 строку Карл!
	таблТова = КонвертацияТипов.ПолучитьТаблицуИзНайденныхСтрокТаблицыЗначений(Товары.Выгрузить(), Новый Структура("Состояние", Перечисления.СостояниеСборкиЗаказа.ОжидаетПеремещения));
	
		//СостояниеОтправитьТовар 	= Перечисления.СостояниеСборкиЗаказа.ОжидаетПеремещения;
		//СостояниеСобранТовар 		= Перечисления.СостояниеСборкиЗаказа.Собрано;
		//таблТова = Товары.Выгрузить();
		//
		//Инд 		= -1;
		//КолСтрок 	= Товары.Количество();
		//
		//Для Ном = 1 По КолСтрок Цикл Инд = КолСтрок - Ном;
		//	
		//	Строка = таблТова[Инд];
		//	
		//	Если 	(НЕ ЭтоВнутрЗаказ И Строка.Состояние <> СостояниеОтправитьТовар) Или
		//			(ЭтоВнутрЗаказ И СостояниеСобранТовар <> СостояниеСобранТовар) Тогда
		//			
		//		таблТова.Удалить(Инд);
		//		
		//	КонецЕсли;
		//КонецЦикла;
	
	// Добавим макс количество
	таблТова.ЗагрузитьКолонку(таблТова.ВыгрузитьКолонку("Количество"), "МаксимальноеКоличество");
	
	Товары.Загрузить(таблТова);
	
	// Установим сборочный лист
	
	СборочныйЛист = ФункцииБизнесПроцессов.Перемещение_ЗадачаОтправить_ПолучитьСборочныйЛист(Объект);
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЕстьЗаказыНаРазборку(Заказ)
	
	Запрос = Новый Запрос("Выбрать * из РегистрНакопления.ЗаказыНаРазборку.Остатки(,Заказ = &Заказ)");
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Рез = Запрос.Выполнить();
	Возврат НЕ Рез.Пустой();
	
КонецФункции	

&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	ЗапущенаРазборка = ЕстьЗаказыНаРазборку(Объект.Заказ);
	
	Выполнена = Объект.Выполнена;
	
	//ПоказыватьЯчейки = СкладОтправитель.Ячеестый И Не Объект.БизнесПроцесс.ЗаказСобран;
	//ПоказыватьЯчейки = СкладОтправитель.Ячеестый;
	
	//Элементы.ТоварыЯчейка.Видимость 			= ПоказыватьЯчейки;
	//Элементы.КнопкаЗаполнитьЯчейки.Видимость 	= ПоказыватьЯчейки;
	Элементы.КнопкаОтправитьТовар.Видимость		= Не Выполнена и НЕ ЗапущенаРазборка;
	
		Элементы.ОтправитьВСборку.Видимость = 
							БыстроеПеремещение;// И 
		//					СкладПолучатель.Ячеестый И 
		//					//БизнесПроцессы.ПеремещениеТоваров.ПолучитьПроцессРодитель(Объект.БизнесПроцесс) = Неопределено И
		//					ТипЗнч(Заказчик) = Тип("БизнесПроцессСсылка.СборкаЗаказа") И СкладПолучатель = Заказчик.Склад;
						
	Элементы.ЯчейкаПолучатель.Видимость = БыстроеПеремещение И СкладПолучатель.Ячеестый;
	
	Элементы.КнопкаОтправитьТовар.Заголовок = ?(БыстроеПеремещение, 
			"Отправить и принять товар", "Отправить товар");
			
	//Элементы.ГруппаСборочныйЛист.Видимость = Объект.БизнесПроцесс.ЗаказСобран;
	
	
	
КонецПроцедуры


// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ЗаполнитьПараметрыСборочногоЕслиНеЗаполнено()
	// Заполняет параметры сборочного листа если они не заполнены.
	
	текВес = 0; текОбъем = 0; текПоз = 0;
	
	Для Каждого Строка Из Товары Цикл текПоз = текПоз + 1;
		
		Коэффициент = ?(НЕ Строка.Упаковка.Пустая(), Строка.Упаковка.Коэффициент * Строка.Количество, Строка.Количество);
			
		текВес = текВес + Строка.Номенклатура.Вес * Коэффициент;
		текОбъем = текОбъем + Строка.Номенклатура.Объем * Коэффициент; КонецЦикла;
	
	Если Не Вес Тогда 				Вес 				= текВес КонецЕсли;
	Если Не Объем Тогда 			Объем 				= текОбъем КонецЕсли;
	Если Не КоличествоПозиций Тогда КоличествоПозиций 	= текПоз КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// прикрепленные файлы
	ОбновитьВидимостьПрикрепленныхФайловНаСервере();
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);

	ПрочитатьРеквизиты();
	
	Если (ТипЗнч(Заказчик) = Тип("БизнесПроцессСсылка.СборкаЗаказа") И СкладПолучатель <> Заказчик.Склад) Тогда
		ОтправитьВСборку 					= Ложь;
		Элементы.ОтправитьВСборку.Видимость = Ложь; КонецЕсли;
	
	// Тупая вставка для Андреечас если отправляет склад 2 на новый склад тогда галку установим
	Если СкладОтправитель.Код = "СК2" И СкладПолучатель.Код = "СКЛ" Тогда
		ОтправитьВСборку = Истина; КонецЕсли;
	
	// Проверим разрешено или нет быстрое перемещение между складами
	
	Элементы.БыстроеПеремещение.Доступность = Справочники.Склады.РазрешеноБыстроеПеремещение(СкладОтправитель, СкладПолучатель);
	
	// Установим ячейку
	
	Если ЯчейкаПолучатель.Пустая() И СкладПолучатель.Ячеестый Тогда
		ЯчейкаПолучатель = СкладПолучатель.ЯчейкаПеремещенияПоУмолчанию;
	КонецЕсли;
	
	ОтправитьВСборку = НЕ (ТипЗнч(Заказчик.Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ") И СкладПолучатель = Заказчик.Заказ.Заказчик);
	
	КонвертацияТипов.ВыполнитьВыражениеВКаждойСтрокеТаблицы(Товары, "
		|Строка.Артикул = Строка.Номенклатура.Артикул;
	    |Строка.Сборщик = Неопределено;");
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	ДанныеЗаказа = ФункцииБизнесПроцессов.Перемещение_ЗадачаОтправить_ПолучитьДанныеЗаказНаСервере(Объект.БизнесПроцесс);
	
	//ДОЛОЙ все эти старые формы!
	
	// Если это по старому тогда откроем форму по старому
	//Если Не ДанныеЗаказа.СпособРазмещенияБезЗаказа И НЕ ДанныеЗаказа.ИмяДокумента = "ВнутреннийЗаказ" Тогда
	//	
	//	Отказ = Истина;
	//	ОткрытьФорму("БизнесПроцесс.ПеремещениеТоваров.Форма.Задача_ОтправитьТовар_СЗаказом",  Новый Структура("Ключ", Параметры.Ключ), ВладелецФормы, Окно,, ОписаниеОповещенияОЗакрытии);
	//	Возврат; 
	//КонецЕсли;
	
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.БизнесПроцесс);
			
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ);
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры


// КОМАНДЫ

&НаКлиенте
Процедура ОтправитьТовар(Команда)
	//ВНИМАНИЕ!
	//Есть пакетная обработка задач, которая выполняет проверки и, если возможно, завершает задачи автоматически
	//Находится в документе Наряд на загрузку, запускается при нажатии кнопки "Отправить" из формы
	//Если правим какие-то условия выполнения, которые не находятся в общем модуле, то необходимо поправить условия и там
	
	// Проверим что это не верхний БП который ждет товар от филиалов
	
	Если ФункцииБизнесПроцессов.Перемещение_ЗадачаОтправить_ЕстьПодчиненныеНезавершенныеПроцессы(Объект.БизнесПроцесс) Тогда
		ОткрытьФорму("БизнесПроцесс.ПеремещениеТоваров.Форма.СказатьЧтоНужноПодождать", Новый Структура("Процесс", Объект.БизнесПроцесс), ЭтаФорма); Закрыть(); Возврат; КонецЕсли;
	
	// Проверим ячейки
		
	Если 	БыстроеПеремещение И
			Элементы.ЯчейкаПолучатель.Видимость И 
			Товары.Итог("Количество") И 
			ЯчейкаПолучатель.Пустая() Тогда
		ОбщиеФункции.СообщитьТекст("Не заполнена ячейка получатель!", "ЯчейкаПолучатель"); Возврат; КонецЕсли;
		
	// Выполним задачу и закроем форму
	
	БылОтказ = Ложь; Если Записать(Новый Структура("ВыполнитьЗадачу",Истина)) Тогда
		Закрыть(); КонецЕсли

КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ВыполнитьЗадачу = ПараметрыЗаписи.Свойство("ВыполнитьЗадачу");
	
	Если 	ВыполнитьЗадачу = Истина И 
			Не ФункцииБизнесПроцессов.Перемещение_ЗадачаОтправить_СформироватьИПровестиОтправкуТовараИПроверитьБП(Объект,ЭтаФорма) Тогда
			
		Отказ = Истина;
		
	ИначеЕсли 	Не ВыполнитьЗадачу 
				//Не ФункцииФормДокументов.ЗапомнитьЯчейкиВЗадаче(Объект.Ссылка, Товары) 
				Тогда
			
		Отказ = Истина;
			
	КонецЕсли;
	
КонецПроцедуры



// ИНФОРМАЦИЯ О ТОВАРЕ

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма);
КонецПроцедуры

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

// ПЕЧАТЬ СБОРОЧНОГО ЛИСТА

&НаКлиенте
Процедура ПечатьСборочныйЛист(Команда) ПолучитьТабличныйДокумент().Показать() КонецПроцедуры
&НаКлиенте
Процедура ПечатьСборочногоЛистаСортАртикул(Команда) ПолучитьТабличныйДокумент("Артикул").Показать() КонецПроцедуры


&НаСервере
Функция ПолучитьТабличныйДокумент(Сортировка = "Ячейка")
	
	ТабДокумент 	= Новый ТабличныйДокумент;
	Макет 			= ПолучитьОбщийМакет("СборочныйЛист");
	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьКомментарий		= Макет.ПолучитьОбласть("Комментарий");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итого");
	
	// Шапка
	Если ТипЗнч(Объект.БизнесПроцесс.Заказчик.Заказ) <> Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		ОбластьШапка.Параметры.ПредставлениеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.БизнесПроцесс.Заказчик.Заказ.Контрагент, ТекущаяДата()), "ПолноеНаименование,ЮридическийАдрес",,Символы.ПС);
	Иначе
		ОбластьШапка.Параметры.ПредставлениеКонтрагента = Объект.БизнесПроцесс.Заказчик.Заказ;
	КонецЕсли;
	ОбластьШапка.Параметры.Номер 			= Объект.БизнесПроцесс.Заказчик.Заказ.Номер;
	ОбластьШапка.Параметры.Дата 			= Объект.Дата;
	ОбластьШапка.Параметры.СинонимДокумента = "Сборочный лист";
	ОбластьШапка.Параметры.Склад	= Объект.БизнесПроцесс.СкладОтправитель;
	
	//Попытка
	//	ОбластьЗаголовокТаблицы.Параметры.ТипЦен 	= Строка(Объект.БизнесПроцесс.Заказчик.Заказ.ТипЦен);
	//	ОбластьЗаголовокТаблицы.Параметры.Цена 		= "Цена, " + Строка(Объект.БизнесПроцесс.Заказчик.Заказ.Валюта);
	//Исключение
	//	ОбластьЗаголовокТаблицы.Параметры.ТипЦен 	= "";
	//	ОбластьЗаголовокТаблицы.Параметры.Цена 		= "Цена";
	//КонецПопытки;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Сформируем комментарий
	
	Комменты = БизнесПроцессы.ПеремещениеТоваров.ПолучитьМассивКомментариев(Объект.БизнесПроцесс);
	Для Каждого Коммент Из Комменты Цикл
		ОбластьКомментарий.Параметры.Заполнить(Коммент);
		Если Коммент.Исполнитель.Пустая() Тогда
			ОбластьКомментарий.Параметры.Исполнитель = "Последний комментарий:";
		Иначе
			ОбластьКомментарий.Параметры.Исполнитель = Строка(Коммент.Исполнитель) + " (" + Формат(Коммент.ДатаВыполнения,"ДЛФ=DDT") + "):";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьКомментарий);
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);

	
	// Отсортируем чтобы бегали быстрее
	
	ТаблВывода = Товары.Выгрузить();
	//ТаблВывода.Колонки.Добавить("СортировкаПоУмолчанию", Новый ОписаниеТипов("Строка"));
	//Для Каждого Строка ИЗ ТаблВывода Цикл Строка.СортировкаПоУмолчанию = Строка.Ячейка.Сортировка; КонецЦикла;
	//ТаблВывода.Сортировать("СортировкаПоУмолчанию, " + Сортировка);
	
	// Выводим в таблицу
	
	Ном = 0;
	//ИтогПроход 	= 0;
	//ИтогСекция 	= 0;
	//ИтогЯрус 	= 0;
	//ИтогПоддон 	= 0;
	ПустаяУпаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	Для каждого Строка Из ТаблВывода Цикл Ном = Ном + 1;
	
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.Номер 		= Ном;
		ОбластьСтрока.Параметры.Артикул 	= Строка.Номенклатура.Артикул;
		
		Если Строка.Упаковка  = ПустаяУпаковка Тогда
			ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
		Иначе
			ЕдиницаИзмерения = Строка.Упаковка;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = ЕдиницаИзмерения; 
		
		//Если Строка.Ячейка.Пустая() Тогда
		//	
		//	ОбластьСтрока.Параметры.Ячейка = Строка.Склад;
		//	
		//КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрока);
		
		// Подсчитаем итоги
		
		//ИтогПроход 	= ИтогПроход + ПодсчитатьИтогЯчейки(ОтрПроход, Строка.Проход);
		//ИтогСекция 	= ИтогСекция + ПодсчитатьИтогЯчейки(ОтрСекция, Строка.Проход + "." + Строка.Секция);
		//ИтогЯрус 	= ИтогЯрус + ПодсчитатьИтогЯчейки(ОтрЯрус, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус);
		//ИтогПоддон 	= ИтогПоддон + ПодсчитатьИтогЯчейки(ОтрПоддон, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус + "." + Строка.Поддон);
		
	КонецЦикла; 
	
	ОбластьИтого.Параметры.ДатаФормирования = Формат(ТекущаяДата(),"ДЛФ=DDT");
	//ОбластьИтого.Параметры.КолЯчеек		 	= Строка(ИтогПроход) + "." + Строка(ИтогСекция) + "." + Строка(ИтогЯрус) + "." + Строка(ИтогПоддон);
	//ОбластьИтого.Параметры.КолНоменклатура 	= ВсегоКол;
	ТабДокумент.Вывести(ОбластьИтого);
	
	// Настрим просмотры
	
	ТабДокумент.ТолькоПросмотр 	= Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	Возврат ТабДокумент;
	
КонецФункции

&НаКлиенте
Процедура БыстроеПеремещениеПриИзменении(Элемент)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломИзменения(Элемент, Отказ)
	
	Элементы.ТоварыКоличество.МаксимальноеЗначение = Элемент.ТекущиеДанные.МаксимальноеКоличество;
			
КонецПроцедуры


#Область Прикрепленные_файлы

&НаКлиенте
Процедура УдалитьПрикрепленныеФайлыНажатие(Элемент)
	
	ПрикрепленныеФайлыКлиент.УдалитьНажатие(Объект.Заказ, ЭтаФорма, Элемент);
	
КонецПроцедуры
&НаКлиенте
Процедура ПрикрепленныеФайлыНажатиеСкрепка(Элемент)
	
	ПрикрепленныеФайлыКлиент.НажатиеСкрепка(Объект.Заказ, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрикрепленныйФайл(Элемент)
	
	ПрикрепленныеФайлыКлиент.ОткрытьПрикрепленныйФайл(Элемент.Имя);
	
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьПрикрееленныеФайлы(Элемент)
	
	ПрикрепленныеФайлыКлиент.ПоказатьПрикрепленныеФайлы(Объект.Заказ, ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьПрикрепленныхФайловНаСервере()
	
	ПрикрепленныеФайлы.Иницилизировать(Объект.Заказ, ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьВидимостьПрикрепленныхФайлов() Экспорт
	
	ОбновитьВидимостьПрикрепленныхФайловНаСервере();
	
КонецПроцедуры


#КонецОбласти

