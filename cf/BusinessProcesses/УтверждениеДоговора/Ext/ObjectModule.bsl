// Условия
Процедура ОтсрочкаПлатежаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ОтсрочкаПлатежа;
КонецПроцедуры

Процедура ТиповаяФормаДоговораПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ТиповаяФормаДоговора;
КонецПроцедуры

Процедура ТекстДоговораСогласованПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ТекстДоговораСогласован;
КонецПроцедуры

Процедура СогласованоСКлиентомПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = СогласованоСКлиентом;
КонецПроцедуры

Процедура ПроверкаКлиентаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = КлиентПрошелПроверку;
КонецПроцедуры

Процедура СогласованоСИсполнительнымДиректоромПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = СогласованоСИсполнительнымДиректором;
КонецПроцедуры

Процедура ВернутьИнициаторуПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ВернутьИнициатору;
КонецПроцедуры

Процедура ВернутьНаШагНазадПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ВернутьНаШагНазад;
КонецПроцедуры



// Функции
Функция ЗаписьСтадииПодписанияДоговора(Задача)
	
	МенеджерЗаписи  = РегистрыСведений.СтадииПодписанияДоговоров.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Договор = Задача.БизнесПроцесс.Договор;
	МенеджерЗаписи.Задача = Задача;
	МенеджерЗаписи.Период = ТекущаяДата();
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи стадии подписания договора
								|" + стрОшибки);	
		Возврат Истина	
	КонецПопытки;
	Возврат Ложь;
	
КонецФункции

Функция ОповещениеОЗадачеПоПочте(Задача)
	
	ПослатьПочту = Ложь;
	Кому = "";
	ТекстПисьма = "Необходимо выполнить задачу: " + Задача + " по утверждению договора.";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиПользователей.Пользователь.Почта КАК Почта
	|ИЗ
	|	РегистрСведений.РолиПользователей КАК РолиПользователей
	|ГДЕ
	|	РолиПользователей.Роль = &Роль";
	
	Запрос.УстановитьПараметр("Роль", Задача.Роль);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Почта) Тогда
			ПослатьПочту = Истина;
			Кому = Кому + Выборка.Почта + ";";
		КонецЕсли;
	КонецЦикла;
	
	Если ПослатьПочту Тогда
		Отказ = Ложь;
		ОбщиеФункции.ОповеститьПоПочте(Кому, "[Утверждение договора]: " + Задача.БизнесПроцесс.Договор, ТекстПисьма, Отказ);
	КонецЕсли;
	
КонецФункции

Функция ОповещениеОЗадачеПоПочтеРольДоговорУтверждениеМенеджер(Задача, Кому)
	
	ТекстПисьма = "Необходимо выполнить задачу: " + Задача + " по утверждению договора.";
	Отказ = Ложь;
	ОбщиеФункции.ОповеститьПоПочте(Кому, "[Утверждение договора]: " + Задача.БизнесПроцесс.Договор, ТекстПисьма, Отказ);

КонецФункции


// При выполнении точки маршрута
Процедура СогласованиеТекстаДоговораПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ЛистСогласованияСКлиентомПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура СогласованиеСКлиентомПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура РегистрацияНомераДоговораСекретарьПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ПечатьДоговораПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ОтправкаСканированнойКопииДоговораПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ОтправкаОригиналаКлиентуИлиСОППриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура КонтрольВозвратаОригиналаПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	// Изменение статуса договора на действует
	ДоговорОбъект = Договор.ПолучитьОбъект();
	ДоговорОбъект.СтатусДоговора = Перечисления.СтатусДоговора.Действует;
	
	Попытка	
	ДоговорОбъект.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи стадии подписания договора
								|" + стрОшибки);
	КонецПопытки;							
								
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ПроверкаБлагонадежностиКлиентаПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура СогласованиеКоммерческихУсловийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура РегистрацияНомераДоговораСОППриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ИнформированиеКлиентаОбОтказеПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);

КонецПроцедуры

Процедура ЗапускМаршрутаСогласованияПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	ТекстДоговораСогласован 				= Ложь;
	СогласованоСКлиентом 					= Ложь;
	КлиентПрошелПроверку 					= Ложь;
	СогласованоСИсполнительнымДиректором 	= Ложь;
	ВернутьИнициатору 						= Ложь;
	ВернутьНаШагНазад 						= Ложь;
	
	Если Договор.ДнейОтсрочки = 0  Тогда
		ОтсрочкаПлатежа = Ложь;
	Иначе ОтсрочкаПлатежа = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Договор.ДокументВорд) Тогда
		ТиповаяФормаДоговора = Истина;
	Иначе ТиповаяФормаДоговора = Ложь;	
	КонецЕсли;
	
	Попытка
		Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи бизнес процесса
		|" + стрОшибки);	
		Отказ = Истина;	
	КонецПопытки;
	
	Отказ = ЗаписьСтадииПодписанияДоговора(Задача);
	
КонецПроцедуры



 // Перед созданием задач
Процедура ЗапускМаршрутаСогласованияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;	
КонецПроцедуры

Процедура СогласованиеТекстаДоговораОтсрочкаНеТиповаяПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверкаБлагонадежностиКлиентаОтсрочкаНеТиповаяПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ЛистСогласованияСКлиентомОтсрочкаНеТиповаяПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура СогласованиеКоммерческихУсловийОтсрочкаНеТиповаяПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура СогласованиеСКлиентомОтсрочкаНеТиповаяПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		Кому = Договор.Владелец.ОсновнойМенеджер.Почта;
		Если ЗначениеЗаполнено(Кому) Тогда
			ОповещениеОЗадачеПоПочтеРольДоговорУтверждениеМенеджер(Задача, Кому);	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнформированиеКлиентаОбОтказеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		Кому = Договор.Владелец.ОсновнойМенеджер.Почта;
		Если ЗначениеЗаполнено(Кому) Тогда
			ОповещениеОЗадачеПоПочтеРольДоговорУтверждениеМенеджер(Задача, Кому);	
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

Процедура СогласованиеТекстаДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ЛистСогласованияСКлиентомПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура СогласованиеСКлиентомПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		Кому = Договор.Владелец.ОсновнойМенеджер.Почта;
		Если ЗначениеЗаполнено(Кому) Тогда
			ОповещениеОЗадачеПоПочтеРольДоговорУтверждениеМенеджер(Задача, Кому);	
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

Процедура ПроверкаБлагонадежностиКлиентаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура СогласованиеКоммерческихУсловийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура РегистрацияНомераДоговораСекретарьПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ПечатьДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаСканированнойКопииДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаОригиналаКлиентуИлиСОППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		ОповещениеОЗадачеПоПочте(Задача);
	КонецЦикла;
КонецПроцедуры