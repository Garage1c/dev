
Функция ПолучитьЗаголовокБП(СсылкаПроцесс) Экспорт
	
	Возврат ?(СсылкаПроцесс.Пустая(),
	                    "Создание",
						НСтр("de='Kundenauftrag '; ru='Заказ '") + СсылкаПроцесс.Заказ.Номер + НСтр("de=' am '; ru=' от '") + СсылкаПроцесс.Заказ.Дата + " (BP №" + СсылкаПроцесс.Номер + ")");
	
КонецФункции

Функция ПолучитьТаблицуТоваров(СсылкаПроцесс, СсылкаЗадача = Неопределено, ПараметрыЗаказа = Неопределено) Экспорт
	
	Возврат Заказы.ПолучитьТаблицуТоваров(СсылкаПроцесс, СсылкаЗадача,, ПараметрыЗаказа);
	
КонецФункции

Процедура ЗаполнитьФормуПоБП(Форма, СсылкаПроцесс, СсылкаЗадача = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(СсылкаПроцесс) Тогда
	
		Запрос = Новый Запрос("
		
		// Условия
		|ВЫБРАТЬ 	
		|	Заказ.ДатаПоставки ДатаПоставки, Заказ.ДатаАктуальности ДатаАктуальности, Заказ.ДатаЗаказаКлиента ДатаЗаказаКлиента, Заказ.НомерЗаказаКлиента НомерЗаказаКлиента, Заказ.КонтактноеЛицо КонтактноеЛицо, Заказ.Автор Автор, Заказ.ТипЦен ТипЦен, Заказ, Заказ.Склад Склад, Заказ.Контрагент Контрагент, Заказ.СуммаВключаетНДС СуммаВключаетНДС, Заказ.Валюта Валюта, 
		|	Заказ.Организация Организация, Заказ.БанковскийСчетОрганизации БанковскийСчетОрганизации,
		|	Заказ.БанковскийСчетПартнера БанковскийСчетПартнера, Заказ.Грузоотправитель Грузоотправитель, Заказ.Грузополучатель Грузополучатель, 
		|	Заказ.УчитыватьНДС УчитыватьНДС, Заказ.ДисконтнаяКарта ДисконтнаяКарта, Заказ.БанковскийСчетГрузополучателя БанковскийСчетГрузополучателя, 
		|	Заказ.БанковскийСчетГрузоотправителя БанковскийСчетГрузоотправителя, Заказ.МВЗ МВЗ, Заказ.ОтветственноеЛицо ОтветственноеЛицо,
		|	Заказ.СрокПоставки КАК СрокПоставки, Заказ.СпособДоставки КАК СпособДоставки, Заказ.ВариантОплаты КАК ВариантОплаты, Заказ.ВариантДоставки КАК ВариантДоставки,
		|	Заказ.Касса Касса, Заказ.Продавец Продавец, Заказ.РозничнаяЗаявка РозничнаяЗаявка, Заказ.ЗакупитьНедостающее ЗакупитьНедостающее,
		|	Заказ.ПередачаТовара ПередачаТовара, Заказ.Плательщик Плательщик, Заказ.РасчетСкидкиОтЦены РасчетСкидкиОтЦены, Заказ.Оператор Оператор,
		|	Заказ.МенеджерЗаказа КАК МенеджерЗаказа, Заказ.ВариантДоставкиНов ВариантДоставкиНов, Заказ.ЗаЧейСчетДоставка ЗаЧейСчетДоставка,
		|   Заказ.ВремяДоставкиС ВремяДоставкиС, Заказ.ВремяДоставкиПо ВремяДоставкиПо, Заказ.АдресДоставкиНов АдресДоставкиНов, Заказ.ТелефонКонтактногоЛицаДоставки ТелефонКонтактногоЛицаДоставки, Заказ.ДатаДоставки ДатаДоставки, Заказ.Грузоперевозчик Грузоперевозчик, Заказ.ЧастичнаяОтгрузка ЧастичнаяОтгрузка
		|ПОМЕСТИТЬ
		|	Шапка
		|ИЗ
		|	БизнесПроцесс.ЗаявкаПокупателя КАК Процесс
		|ГДЕ
		|	Ссылка = &СсылкаБП
		|;
		
		// Шапка
		
		|ВЫБРАТЬ 	
		|	ДатаПоставки, ДатаАктуальности, ДатаЗаказаКлиента, НомерЗаказаКлиента, Автор, ТипЦен, Заказ, Склад, КонтактноеЛицо, Контрагент, СуммаВключаетНДС, Валюта, Организация, БанковскийСчетОрганизации, 
		|	МВЗ, БанковскийСчетПартнера, Грузоотправитель, Грузополучатель, УчитыватьНДС, ДисконтнаяКарта, БанковскийСчетГрузополучателя, БанковскийСчетГрузоотправителя, ОтветственноеЛицо, СрокПоставки, СпособДоставки, ВариантОплаты, ВариантДоставки,
		|	Касса, Продавец, РозничнаяЗаявка, ЗакупитьНедостающее, ПередачаТовара, Плательщик, РасчетСкидкиОтЦены, Оператор, МенеджерЗаказа, ВариантДоставкиНов, ЗаЧейСчетДоставка, ВремяДоставкиС, ВремяДоставкиПо, АдресДоставкиНов, ТелефонКонтактногоЛицаДоставки, ДатаДоставки, Грузоперевозчик, ЧастичнаяОтгрузка
		|ИЗ
		|	Шапка
		|");
		
		Запрос.УстановитьПараметр("СсылкаБП", СсылкаПроцесс);
		Результаты 			= Запрос.ВыполнитьПакет();
		Заказ 				= СсылкаПроцесс.Заказ;
		ПараметрыЗаказа 	= Заказы.ПолучитьПараметрыДляЗапроса(Заказ);
		
		// Заполним шапку
		
		ВыборкаШапки = Результаты[1].Выбрать();
		ВыборкаШапки.Следующий();
		
		ЗаполнитьЗначенияСвойств(Форма, ВыборкаШапки);	

		// Заполним таблицу
		Форма.Товары.Загрузить(ПолучитьТаблицуТоваров(СсылкаПроцесс, СсылкаЗадача, ПараметрыЗаказа)); 
		
		// Заполним резервы
		Если Заказ.СпособРазмещенияБезЗаказа Тогда
			Заказы.ЗаполнитьТаблицыРазмещений(Заказ, Форма.Товары, Форма.РазмещениеТоваров, ПараметрыЗаказа);
			
			//Форма.РазмещениеТоваров.Загрузить(Заказы.ПолучитьТаблицуРазмещения(Заказ));
		 	//Заказы.ПроставитьРазмещение(Форма.Товары, Форма.РазмещениеТоваров); 
			//Заказы.ПроставитьВТоварахРазмещение(Заказ, Форма.Товары); 
		КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМассивКомментариев(СсылкаПроцесс) Экспорт
	
	Массив = Новый Массив;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Комментарий, Заголовок, ДатаВыполнения, Исполнитель
	|ИЗ
	|(
		// коменты из задач БП и задач всех вложенных БП
	
	//|	ВЫБРАТЬ
	//|		Комментарий, Наименование Заголовок, ДатаВыполнения, Исполнитель
	//|	ИЗ
	//|		Задача.ЗадачаПользователю
	//|	ГДЕ
	//|		БизнесПроцесс = &Ссылка ИЛИ
	//|		БизнесПроцесс В (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ Заказ = &Заказ) ИЛИ
	//|		БизнесПроцесс В (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.ПеремещениеТоваров ГДЕ Заказчик В (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ Заказ = &Заказ))
	
	
	|	ВЫБРАТЬ
	|		Комментарий, Наименование Заголовок, ДатаВыполнения, Исполнитель
	|	ИЗ
	|		Задача.ЗадачаПользователю
	|	ГДЕ
	|		БизнесПроцесс = &Ссылка	
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Комментарий, Наименование Заголовок, ДатаВыполнения, Исполнитель
	|	ИЗ
	|		Задача.ЗадачаПользователю
	|	ГДЕ
	|		БизнесПроцесс в (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ Заказ = &Заказ)	
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Комментарий, Наименование Заголовок, ДатаВыполнения, Исполнитель
	|	ИЗ
	|		Задача.ЗадачаПользователю
	|	ГДЕ
	|		БизнесПроцесс в (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.ПеремещениеТоваров ГДЕ Заказчик В (ВЫБРАТЬ Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ Заказ = &Заказ))	
	
	
		// коменты из документа Заказ
	
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Комментарий, ""Заказ покупателя"", Дата, Ответственный
	|	ИЗ
	|		Документ.ЗаказПокупателя
	|	ГДЕ
	|		Ссылка = &Заказ
	|
	
		// коменты из данного БП
	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Комментарий, ""Заявка покупателя"", Дата, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	ИЗ
	|		БизнесПроцесс.ЗаявкаПокупателя
	|	ГДЕ
	|		Ссылка = &Ссылка
    |
	|) Запрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыполнения
	|");
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаПроцесс);
	Запрос.УстановитьПараметр("Заказ", 	СсылкаПроцесс.Заказ);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ПустаяСтрока(Выборка.Комментарий) Тогда
		
			Массив.Добавить(Новый Структура("Комментарий, Заголовок, ДатаВыполнения, Исполнитель",
									Выборка.Комментарий, Выборка.Заголовок, Выборка.ДатаВыполнения, Выборка.Исполнитель));
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

