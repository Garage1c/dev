&НаКлиенте
Перем МассивКомментариев Экспорт;


&НаСервере
Функция УстановитьСостояниеИВыполнитьЗадачу(ИмяСостояния)
	
	Если Заказы.УстановитьСостояниеЗаказа(Заказ, Перечисления.СостоянияЗаказа[ИмяСостояния]) Тогда
	
		Возврат Записать(Новый Структура("ВыполнитьЗадачу",Истина));
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции


// ТИПОВЫЕ

&НаКлиенте
Процедура ДекорацияДобавитьКомментарийНажатие(Элемент)
	
	Элементы.ГруппаДобавитьКомментарий.Видимость 		= Ложь;
	Элементы.ГруппаРедактированиеКомментария.Видимость 	= Истина;

КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);

КонецПроцедуры
&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, 
		Объект.Ссылка.БизнесПроцесс, 
		Объект.Ссылка);
	
КонецПроцедуры
&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	//Элементы.Кнопка_ТоварОтправлен.Видимость		= Не ТолькоПросмотр;
	
КонецПроцедуры

//&НаСервере
//Функция ЗаписатьЗакрывающуюОтменуСборки()
//	
//	Если Товары.Количество() Тогда
//		
//		// подготовим документ
//		
//		ОтменаСборки = Документы.ОтменаСборки.СоздатьДокумент();
//		ОтменаСборки.Дата 						= ТекущаяДата();
//		ОтменаСборки.Заказ		 				= Заказ;
//		ОтменаСборки.Склад			 			= Заказ.Склад;
//		ОтменаСборки.ЗакрытьОтмену 				= Истина;
//		ОтменаСборки.ДобавлятьОстаткиВЯчейки	= Истина;
//		
//		// загрузим таблицу разницу
//		
//		ТЗ = Товары.Выгрузить();
//		ТЗ.Колонки.СкладЯчейка.Имя = "Ячейка";
//		ОтменаСборки.Товары.Загрузить(ТЗ);
//		
//		// запишем документ
//		
//		Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(ОтменаСборки, РежимЗаписиДокумента.Проведение); КонецЕсли;
//	
//	Возврат Истина;
//	
//КонецФункции


&НаСервере
Функция СоздатьОтменыСборок()
	
	Успех = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "Выбрать Склад, СборочныйЛист, Номенклатура, КоличествоОстаток Собрано из РегистрНакопления.ТоварыСобранные.Остатки(, Заказ = &Заказ) Итоги По СборочныйЛист,Склад";
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		Выборка2 = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка2.Следующий() Цикл
			
			Сборка = Документы.ОтменаСборки.СоздатьДокумент();
			Сборка.Дата 	= ТекущаяДата();
			Сборка.Заказ 	= Заказ;
			Сборка.Склад 	= Выборка2.Склад;
			Сборка.СборочныйЛист = Выборка2.СборочныйЛист;
			
			ВыборкаНом = Выборка2.Выбрать();
			Пока ВыборкаНом.Следующий() Цикл
				Стр = Сборка.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(Стр,ВыборкаНом);
			КонецЦикла;
			
			Успех = Успех и ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Сборка, РежимЗаписиДокумента.Проведение);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат Успех;
	
КонецФункции

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.БизнесПроцесс);
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ); // видимость адресации и комментария, доступность формы
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
	
	ПрочитатьРеквизиты();
	
	УправлениеВидимостьюДоступностью();

КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если 	ПараметрыЗаписи.ВыполнитьЗадачу И
			//Не ЗаписатьЗакрывающуюОтменуСборки() Тогда
			Не СоздатьОтменыСборок() Тогда
		Отказ = Истина; 
	КонецЕсли;
	
КонецПроцедуры


// КОМАНДЫ

&НаКлиенте
Процедура ТоварВозвращен(Команда)
	
	Если Записать(Новый Структура("ВыполнитьЗадачу",Истина)) Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

// ИНФОРМАЦИЯ О ТОВАРЕ

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма);
КонецПроцедуры


// ПЕЧАТЬ СБОРОЧНОГО ЛИСТА

&НаСервере
Функция ПолучитьТабличныйДокумент(ВыводитьПомеченные = Ложь)
	
	ТабДокумент 	= Новый ТабличныйДокумент;
	Макет 			= ПолучитьОбщийМакет("СборочныйЛист");

	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Область("Наименование").Текст = "Вернуть на место";
	ОбластьКомментарий		= Макет.ПолучитьОбласть("Комментарий");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итого");
	
	// Шапка
	
	Если ТипЗнч(Объект.БизнесПроцесс.Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		
		ОбластьШапка.Параметры.ПредставлениеКонтрагента = Объект.БизнесПроцесс.Заказ.Заказчик;
		
	//ИначеЕсли ТипЗнч(Объект.БизнесПроцесс.Заказ) = Тип("ДокументСсылка.ИнтернетЗаказПокупателя") Тогда

	Иначе
		
		Представление = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.БизнесПроцесс.Заказ.Контрагент, ТекущаяДата()), "ПолноеНаименование,ЮридическийАдрес",,Символы.ПС);
		Если ПустаяСтрока(Представление) Тогда
			Представление = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.БизнесПроцесс.Заказ.Партнер, ТекущаяДата()), "ПолноеНаименование,ЮридическийАдрес",,Символы.ПС);
		КонецЕсли;
		ОбластьШапка.Параметры.ПредставлениеКонтрагента = Представление;
		
	КонецЕсли;
		
	ОбластьШапка.Параметры.Номер 			= Объект.БизнесПроцесс.Заказ.Номер;
	ОбластьШапка.Параметры.Дата 			= Объект.БизнесПроцесс.Заказ.Дата;
	ОбластьШапка.Параметры.СинонимДокумента = "Отмена сборки";
	
	// Установим штрих код
	
	мШтрихКоды = ШтрихКоды.ПолучитьШтрихКодыОбъекта(Заказ); Если мШтрихКоды.Количество() Тогда
		ШтрихКоды.УстановитьШтрихКодВМакете(ОбластьШапка, мШтрихКоды[мШтрихКоды.ВГраница()]);КонецЕсли;
	
	Попытка
		ОбластьЗаголовокТаблицы.Параметры.ТипЦен 	= Строка(Объект.БизнесПроцесс.Заказ.ТипЦен);
		ОбластьЗаголовокТаблицы.Параметры.Цена 		= "Цена, " + Строка(Объект.БизнесПроцесс.Заказ.Валюта);
	Исключение
		ОбластьЗаголовокТаблицы.Параметры.ТипЦен 	= "";
		ОбластьЗаголовокТаблицы.Параметры.Цена 		= "Цена";
	КонецПопытки;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Сформируем комментарий
	
	Комменты = БизнесПроцессы.СборкаЗаказа.ПолучитьМассивКомментариев(Объект.БизнесПроцесс.Сборка);
	Для Каждого Коммент Из Комменты Цикл
		ОбластьКомментарий.Параметры.Заполнить(Коммент);
		Если Коммент.Исполнитель.Пустая() Тогда
			ОбластьКомментарий.Параметры.Исполнитель = "Последний комментарий:";
		Иначе
			ОбластьКомментарий.Параметры.Исполнитель = Строка(Коммент.Исполнитель) + " (" + Формат(Коммент.ДатаВыполнения,"ДЛФ=DDT") + "):";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьКомментарий);
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
	
	
	// Отсортируем чтобы бегали быстрее
	
	ТаблВывода = Товары.Выгрузить();
	ТаблВывода.Сортировать("СкладЯчейка");
	
	Если ВыводитьПомеченные Тогда
		СтрокиВывода = ТаблВывода.НайтиСтроки(Новый Структура("Собрано", Истина));
	Иначе
		СтрокиВывода = ТаблВывода;
	КонецЕсли;
	// Выводим в таблицу
	
	Ном = 0;
	//ИтогПроход 	= 0;
	//ИтогСекция 	= 0;
	//ИтогЯрус 	= 0;
	//ИтогПоддон 	= 0;
	ПустаяУпаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	Для каждого Строка Из СтрокиВывода Цикл Ном = Ном + 1;
	
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.Номер 		= Ном;
		ОбластьСтрока.Параметры.Артикул 	= Строка.Номенклатура.Артикул;
		
		Если Строка.Упаковка  = ПустаяУпаковка Тогда
			ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
		Иначе
			ЕдиницаИзмерения = Строка.Упаковка;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Количество 			= Строка.Собрано;
		ОбластьСтрока.Параметры.ЕдиницаИзмерения 	= ЕдиницаИзмерения; 
		
		//Если Не ЗначениеЗаполнено(Строка.СкладЯчейка) Тогда
			
			ОбластьСтрока.Параметры.Ячейка = Строка.СкладЯчейка;
			
		//КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрока);
		
		// Подсчитаем итоги
		
		//ИтогПроход 	= ИтогПроход + ПодсчитатьИтогЯчейки(ОтрПроход, Строка.Проход);
		//ИтогСекция 	= ИтогСекция + ПодсчитатьИтогЯчейки(ОтрСекция, Строка.Проход + "." + Строка.Секция);
		//ИтогЯрус 	= ИтогЯрус + ПодсчитатьИтогЯчейки(ОтрЯрус, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус);
		//ИтогПоддон 	= ИтогПоддон + ПодсчитатьИтогЯчейки(ОтрПоддон, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус + "." + Строка.Поддон);
		
	КонецЦикла; 
	
	ОбластьИтого.Параметры.ДатаФормирования = Формат(ТекущаяДата(),"ДЛФ=DDT");
	//ОбластьИтого.Параметры.КолЯчеек		 	= Строка(ИтогПроход) + "." + Строка(ИтогСекция) + "." + Строка(ИтогЯрус) + "." + Строка(ИтогПоддон);
	//ОбластьИтого.Параметры.КолНоменклатура 	= ВсегоКол;
	ТабДокумент.Вывести(ОбластьИтого);
	
	// Настрим просмотры
	
	ТабДокумент.ТолькоПросмотр 	= Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	Возврат ТабДокумент;
	
КонецФункции
&НаКлиенте
Процедура ПечатьСборочногоЛиста(Команда)
	
	//Если ФункцииФормДокументов.ЗапомнитьЯчейкиВЗадаче(Объект.Ссылка, Товары) Тогда
		ПолучитьТабличныйДокумент().Показать();
	//КонецЕсли;
	
КонецПроцедуры
