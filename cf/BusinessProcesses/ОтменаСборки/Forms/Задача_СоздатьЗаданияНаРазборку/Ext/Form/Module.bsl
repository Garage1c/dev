&НаКлиенте
Перем МассивКомментариев Экспорт;



&НаСервере
Процедура ЗаполнитьТовары()
	//заполняем собранными товарами минус задания на разборку
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ",Заказ);
	Запрос.Текст = "
	|Выбрать Соб.Номенклатура, Соб.Склад, Соб.СборочныйЛист, Соб.КоличествоОстаток - isnull(Раз.КоличествоОстаток,0) Количество
	|из
	|РегистрНакопления.ТоварыСобранные.Остатки(,Заказ = &Заказ) Соб
	|Левое соединение
	|РегистрНакопления.ЗаказыНаРазборку.Остатки(,Заказ = &Заказ) Раз
	|
	|По Соб.Номенклатура = Раз.Номенклатура 
	|
	|ГДЕ 
	|Соб.КоличествоОстаток - isnull(Раз.КоличествоОстаток,0) > 0
	|";
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

	

// ТИПОВЫЕ

&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	//Элементы.Кнопка_ТоварОтправлен.Видимость		= Не ТолькоПросмотр;
	
КонецПроцедуры


// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заказ = Параметры.Заказ;
	Контрагент = ?(ТипЗнч(Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ"),Справочники.Контрагенты.ПустаяСсылка(),Заказ.Контрагент);
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
	
	ЗаполнитьТовары();
	
	УправлениеВидимостьюДоступностью();

КонецПроцедуры



&НаСервере
Функция СформироватьЗаказНаРазборку() 
	
	
	Если Товары.Количество() Тогда
		
		НачатьТранзакцию();
		
		//обойдем Товары иерархически и сфомируем БП
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТЗ",Товары.Выгрузить());
		Запрос.Текст = "
		|Выбрать ТЗ.Номенклатура, ТЗ.Склад, ТЗ.СборочныйЛист, ТЗ.Количество
		|Поместить ТабСпис
		|из
		|&ТЗ КАК ТЗ
		|;
		|Выбрать Номенклатура,Склад,СборочныйЛист,Количество
		|из
		|ТабСпис
		|Итоги по Склад
		|";
		
		Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			//формируем БП
			БП = БизнесПроцессы.ОтменаСборки.СоздатьБизнесПроцесс();
			ЗаполнитьЗначенияСвойств(БП,Выборка);
			БП.Заказ = Заказ;
			БП.Дата = ТекущаяДата();
			БП.Записать();
			БП.Старт();
			
			//формируем документ
			Док = Документы.ЗаказНаРазборку.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(Док,Выборка);
			Док.Заказ = Заказ;
			Док.Дата = ТекущаяДата();
			
			Выборка2 = Выборка.Выбрать();
			Пока Выборка2.Следующий() Цикл
				НовСтр = Док.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Выборка2);
			КонецЦикла;
			Док.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЦикла;	
		
		
		
		
		////получим список товаров
		////получим список сборочных листов
		////обойдем их и разберем по FIFO
		//
		//ТабСписания = Новый таблицаЗначений;
		//ТабСписания.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		//ТабСписания.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		//ТабСписания.Колонки.Добавить("СборочныйЛист", Новый ОписаниеТипов("ДокументСсылка.СборочныйЛист"));
		//ТабСписания.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
		//
		//Запрос = Новый Запрос("Выбрать СборочныйЛист,Заказ,Склад,Номенклатура,КоличествоОстаток из РегистрНакопления.ТоварыСобранные.Остатки(,Заказ = &Заказ)");
		//Запрос.УстановитьПараметр("Заказ",Заказ);
		//
		//Соб = Запрос.Выполнить().Выгрузить();
		//	
		//Для Каждого Стр Из Товары Цикл
		//	Отбор = Новый Структура("Склад,Номенклатура",Стр.Склад,Стр.Номенклатура);
		//	Строки = Соб.НайтиСтроки(Отбор);
		//	
		//	ОсталосьСписать = Стр.Количество;
		//	Для Каждого Стр2 из Строки Цикл
		//		Списываем = Мин(ОсталосьСписать,Стр2.КоличествоОстаток);
		//		
		//		Нов = ТабСписания.Добавить();
		//		ЗаполнитьЗначенияСвойств(Нов,Стр2);
		//		Нов.Количество = Списываем;
		//		
		//		ОсталосьСписать = ОсталосьСписать - Списываем;
		//	КонецЦикла;
		//	
		//	Если ОсталосьСписать>0 Тогда
		//		//это может быть если пользователь вручную увеличил количество.
		//		Сообщить("Недостаточно товара для разборки : "+Стр.Номенклатура+ " : "+Стр.Склад+ " : требуется "+Стр.Количество+" : возможно разобрать "+(Стр.Количество - ОсталосьСписать));
		//		
		//	КонецЕсли;
		//	
		//КонецЦикла;	
		//
		//
		////обойдем ТЗ иерархически и сфомируем БП
		//Запрос.УстановитьПараметр("ТЗ",ТабСписания);
		//Запрос.Текст = "
		//|Выбрать ТЗ.Номенклатура, ТЗ.Склад, ТЗ.СборочныйЛист, ТЗ.Количество
		//|Поместить ТабСпис
		//|из
		//|&ТЗ КАК ТЗ
		//|;
		//|Выбрать Номенклатура,Склад,СборочныйЛист,Количество
		//|из
		//|ТабСпис
		//|Итоги по Склад, СборочныйЛист
		//|";
		//
		//Выборка1=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//Пока Выборка1.Следующий() Цикл
		//	Выборка2 = Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//	Пока Выборка2.Следующий() Цикл
		//		
		//		//формируем БП
		//		БП = БизнесПроцессы.ОтменаСборки.СоздатьБизнесПроцесс();
		//		ЗаполнитьЗначенияСвойств(БП,Выборка2);
		//		БП.Заказ = Заказ;
		//		БП.Дата = ТекущаяДата();
		//		БП.Записать();
		//		БП.Старт();
		//		
		//		//формируем документ
		//		Док = Документы.СборкаЗаказа.СоздатьДокумент();
		//		ЗаполнитьЗначенияСвойств(Док,Выборка2);
		//		Док.Заказ = Заказ;
		//		Док.Дата = ТекущаяДата();
		//		Док.ТипЗаказаНаСборку = Перечисления.ТипыЗаказовНаСборку.ЗаказНаРазборку;
		//		
		//		Выборка3 = Выборка2.Выбрать();
		//		Пока Выборка3.Следующий() Цикл
		//			НовСтр = Док.Товары.Добавить();
		//			ЗаполнитьЗначенияСвойств(НовСтр,Выборка3);
		//			НовСтр.ВСборке = -Выборка3.Количество;
		//			
		//		КонецЦикла;
		//		Док.Записать(РежимЗаписиДокумента.Проведение);
		//			
		//	КонецЦикла;
		//КонецЦикла;	
		
		
		ЗафиксироватьТранзакцию();
		
		Возврат Истина;
		
	Иначе
		Сообщить("nothing to do");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	
	
КонецФУнкции


// КОМАНДЫ



&НаКлиенте
Процедура ВРазборку(Команда)
	
	Если СформироватьЗаказНаРазборку() Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

// ИНФОРМАЦИЯ О ТОВАРЕ

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма);
КонецПроцедуры




