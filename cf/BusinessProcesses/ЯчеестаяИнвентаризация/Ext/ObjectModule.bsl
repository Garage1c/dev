
Процедура УсловиеТоварПодсчитанПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ИнвентаризацияПринята;
	
КонецПроцедуры



Процедура ПодсчитатьТоварПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	// Создадим инвентаризацию и проведем документ
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	
	
КонецПроцедуры


Процедура ПровестиДокументыИнвентаризацийСторно()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ НЕОПРЕДЕЛЕНО ДокументРезерва, НЕОПРЕДЕЛЕНО Размещение, Ячейка, Номенклатура, СУММА(КоличествоУчет) Количество Из Документ.Инвентаризация.Товары ГДЕ Не Ссылка.ПометкаУдаления И Ссылка.Проведен И Ссылка.Процесс = &Ссылка СГРУППИРОВАТЬ ПО Ячейка, Номенклатура;
	|ВЫБРАТЬ ДокументРезерва, Размещение, Номенклатура, КоличествоОстаток Количество ИЗ РегистрНакопления.ТоварыВРезерве.Остатки(,ДокументРезерва.Процесс = &Ссылка)
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Пакет = Запрос.ВыполнитьПакет();
	
	Доки 	= Пакет[0].Выгрузить();
	Остатки = Пакет[1].Выгрузить();
	
	ТЗТовары = КонвертацияТипов.РазнестиТаблицуПоТаблицеОстатков(Доки, Остатки);
	
	Если ТЗТовары.Количество() Тогда
		
		НовДок = Документы.Инвентаризация.СоздатьДокумент();
		НовДок.Дата = ТекущаяДата();
		НовДок.Склад	= Склад;
		НовДок.Процесс 	= Ссылка;
		
		НовДок.Товары.Загрузить(ТЗТовары);
		НовДок.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтменаИнвентаризацииОбработка(ТочкаМаршрутаБизнесПроцесса)
	
	// Снимем резерв
	
	ПровестиДокументыИнвентаризацийСторно();
	
КонецПроцедуры

Функция ТоварВПоиске(Товар)
	
	Запрос = Новый Запрос("ВЫБРАТЬ КоличествоОстаток
	|ИЗ РегистрНакопления.ТоварыВЯчейках.Остатки(, Ячейка = &ВПоиске И Номенклатура = &Товар)
//	|ГДЕ Регистратор ССЫЛКА Документ.ПеремещениеТоваров И Регистратор.Процесс <> ЗНАЧЕНИЕ(БизнесПроцесс.ЯчеестаяИнвентаризация.ПустаяСсылка)	
	|");
	
	Запрос.УстановитьПараметр("ВПоиске", Справочники.Ячейки.НайтиПоНаименованию("в.по.ис.ке"));
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("НачалоИнвентаризации", Константы.НачалоИнвентаризации.Получить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоОстаток;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

Процедура ПриемИнвентаризацииОбработка(ТочкаМаршрутаБизнесПроцесса)
	
	// Снимем резерв
	
	ПровестиДокументыИнвентаризацийСторно();
	
	// Перместим товар
	
	СоздатьПеремещениеВникуда();
	
	//// Оприходуем товар
	//
	//
	//Оприходование = Документы.ОприходованиеТоваров.СоздатьДокумент();
	//Оприходование.Заполнить(Ссылка);
	//Оприходование.Дата = ТекущаяДата();
	//
	//Оприходование.Записать(РежимЗаписиДокумента.Проведение);
	//
	//// Спишем товар
	//
	//Списание = Документы.СписаниеТоваров.СоздатьДокумент();
	//Списание.Заполнить(Ссылка);
	//Списание.Дата = ТекущаяДата();
	//
	//Списание.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры


Процедура СоздатьПеремещениеВникуда()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Номенклатура 				Номенклатура,
	|	Ячейка 						Ячейка,
	|	СУММА(КоличествоУчет) 		КоличествоУчет,
	|	СУММА(КоличествоФакт)       КоличествоФакт
	|ПОМЕСТИТЬ
	|	ТаблицаТовара
	|ИЗ
	|	БизнесПроцесс.ЯчеестаяИнвентаризация.Товары ГДЕ	Ссылка = &Ссылка	
	|СГРУППИРОВАТЬ ПО Номенклатура, Ячейка
	|
	|;
	|ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.Ячейка,
	|	Таб.Ячейка				ЯчейкаОтправитель,
	|	ЯчОбщ.Количество		ОбщееКоличествоВЯчейках,
	|	Ост.КоличествоОстаток 	ОбщееКоличествоНаСкладе,
	|	ЕСТЬNULL(Рез.КоличествоОстаток, 0)					КоличествоРезервСклад,
	|	Таб.КоличествоУчет,			
	|	Таб.КоличествоФакт - Таб.КоличествоУчет 			КоличествоРасхождение,
	|	ВЫБОР КОГДА Ост.КоличествоОстаток = ЯчОбщ.Количество 
	|			ТОГДА ВЫБОР КОГДА Рез.КоличествоОстаток - Ост.КоличествоОстаток + Таб.КоличествоУчет > 0 ТОГДА Рез.КоличествоОстаток - Ост.КоличествоОстаток + Таб.КоличествоУчет ИНАЧЕ 0 КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ КоличествоКПеремещению,
	|	ВЫБОР КОГДА Ост.КоличествоОстаток = ЯчОбщ.Количество 
	|			ТОГДА ВЫБОР КОГДА Рез.КоличествоОстаток - Ост.КоличествоОстаток + Таб.КоличествоУчет > 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ НужноПереместить
	|ИЗ
	|	ТаблицаТовара Таб
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(
	|		ВЫБРАТЬ 
	|			Яч.Номенклатура, Яч.КоличествоОстаток + ЕСТЬNULL(Сбор.СобраноОстаток,0) Количество
	|		ИЗ 
	|			РегистрНакопления.ТоварыВЯчейках.Остатки(,Ячейка.Владелец = &Склад И Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ТаблицаТовара)) Яч
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.СборкаЗаказа.Остатки(,СкладЯчейка ССЫЛКА Справочник.Ячейки И СкладЯчейка.Владелец = &Склад И Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ТаблицаТовара)) Сбор
	|		ПО 
	|			Яч.Номенклатура = Сбор.Номенклатура
	|	) ЯчОбщ
	|ПО
	|	ЯчОбщ.Номенклатура = Таб.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(,Склад = &Склад И Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ТаблицаТовара)) Ост
	|ПО
	|	Таб.Номенклатура = Ост.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(,
	|								ВЫБОР КОГДА ДокументРезерва ССЫЛКА Документ.Инвентаризация И ДокументРезерва.Процесс = &Ссылка ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ И 
	|								Размещение = &Склад И 
	|								Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ТаблицаТовара)) Рез
	|ПО
	|	Таб.Номенклатура = Рез.Номенклатура
	|
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", 	Склад);
	
	ТЗТовары = Запрос.Выполнить().Выгрузить();
	  
	// Проверим ячейки которые не правильно определеили резерв
	
	Для Каждого Строка Из ТЗТовары Цикл
		
		Отбор = Новый Структура("Номенклатура", Строка.Номенклатура);
		СуммаПоЭтимЯчейкам = КонвертацияТипов.ПолучитьСуммуКолонкиПоУсловию(ТЗТовары, "КоличествоУчет", Отбор);
		Если СуммаПоЭтимЯчейкам <> Строка.КоличествоУчет Тогда // косяк может быть когда товара несколько
			
			НужноПереместить = Строка.КоличествоРезервСклад - (Строка.ОбщееКоличествоВЯчейках - СуммаПоЭтимЯчейкам) - КонвертацияТипов.ПолучитьСуммуКолонкиПоУсловию(ТЗТовары, "КоличествоКПеремещению", Отбор);
			
			Если НужноПереместить Тогда
			
				СтрокиТовара = ТЗТовары.НайтиСтроки(Отбор);
				Для Каждого СтрокаТовара Из СтрокиТовара Цикл
					
					Перемещаем = Мин(НужноПереместить, СтрокаТовара.КоличествоУчет - СтрокаТовара.КоличествоКПеремещению);
					Если Перемещаем Тогда
						
						СтрокаТовара.КоличествоКПеремещению = СтрокаТовара.КоличествоКПеремещению + Перемещаем;
						НужноПереместить = НужноПереместить - Перемещаем;
						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Ячейки = КонвертацияТипов.ПолучитьТаблицуИзНайденныхСтрокТаблицыЗначений(ТЗТовары, Новый Структура("НужноПереместить", Истина));
	ТЗТовары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));
	ТЗТовары.Колонки.Добавить("ОтправитьВПоиск", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрокаТовар Из ТЗТовары Цикл
		
		ВПоиск = 0;
		
		// Если нужно что-то списать, а оно требеует перемещения
		
		Если СтрокаТовар.НужноПереместить И СтрокаТовар.КоличествоРасхождение < 0 Тогда
			НадоСписать = - СтрокаТовар.КоличествоРасхождение;
			МогуСписать = СтрокаТовар.КоличествоУчет - СтрокаТовар.КоличествоКПеремещению;
			СтрокаТовар.КоличествоРасхождение = ?( НадоСписать > МогуСписать, - МогуСписать, - НадоСписать);
			СтрокаТовар.Количество = ?( НадоСписать > МогуСписать, НадоСписать - МогуСписать, 0);
			СтрокаТовар.ОтправитьВПоиск = СтрокаТовар.Количество > 0;
		КонецЕсли;
		
	КонецЦикла;
	
	// СОЗДАТЬ ДОКУМЕНТ ПЕРЕМЕЩЕНИЕ ДЛЯ ТОВАРОВ, КОТОРЫЕ НЕЛЬЗЯ СПИСАТЬ ИЗ-ЗА РЕЗЕРВА	
	
	ЯчейкаВПоиске = Справочники.Ячейки.НайтиПоНаименованию("в.по.ис.ке");
	Таб = КонвертацияТипов.ПолучитьТаблицуИзНайденныхСтрокТаблицыЗначений(ТЗТовары, Новый Структура("ОтправитьВПоиск", Истина));
	Таб.Колонки.Добавить("ЯчейкаПолучатель", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));	
	Таб.ЗаполнитьЗначения(ЯчейкаВПоиске, "ЯчейкаПолучатель");
	
	Перемещение = Документы.ПеремещениеТоваров.СоздатьДокумент();
	Перемещение.СкладОтправитель = Склад;
	Перемещение.СкладПолучатель = Склад;
	Перемещение.Процесс  = Ссылка;
	Перемещение.Дата = ТекущаяДата();
	Перемещение.Товары.Загрузить(Таб);
	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	
	// СОЗДАТЬ ПЕРЕМЕЩЕНИЕ ТОВАРОВ, КОТОРЫЕ НАЙДЕНЫ (ИХ ОПРИХОДОВАТЬ НЕ НАДО)
	
	Перемещение = Документы.ПеремещениеТоваров.СоздатьДокумент();
	Перемещение.СкладОтправитель = Склад;
	Перемещение.СкладПолучатель = Склад;
	Перемещение.Процесс  = Ссылка;
	Перемещение.Дата = ТекущаяДата();	
	
	// СОЗДАТЬ СПИСАНИЕ ТОВАРОВ, КОТОРЫЕ МОЖНО СПИСАТЬ
	
	Списание = Документы.СписаниеТоваров.СоздатьДокумент();
	Списание.Процесс = Ссылка;
	Списание.Склад 	= Склад;
	Списание.Дата = ТекущаяДата();
	
	// СОЗДАТЬ ОПРИХОДОВАНИЕ ТОВАРОВ (ЗА ИСКЛЮЧЕНИЕ ТОВАРОВ КОТОРЫЕ НАЙДЕНЫ ВПОИСКЕ)
	
	Оприходование = Документы.ОприходованиеТоваров.СоздатьДокумент();
	Оприходование.Процесс = Ссылка;
	Оприходование.Склад 	= Склад;
	Оприходование.Дата = ТекущаяДата();
	
	ТЧТоварыСписать = Списание.Товары;
	ТЧТоварыДобавить = Оприходование.Товары;
	ТЧПереместитьИзНикуда = Перемещение.Товары;
	
	// будем запоминать, какие потерешки учли, т.к. если записей товара несколько, но в разных ячейках, то количество учтенных потеряшек надо знать
	УчтеныНайденныеВПоиске = Новый Соответствие;
	
	Для Каждого СтрокаТовар ИЗ ТЗТовары Цикл
		Если СтрокаТовар.КоличествоРасхождение < 0 Тогда
			НовСтрока = ТЧТоварыСписать.Добавить();
			НовСтрока.Ячейка = СтрокаТовар.Ячейка;
			НовСтрока.Номенклатура = СтрокаТовар.Номенклатура;
			НовСтрока.Количество = - СтрокаТовар.КоличествоРасхождение;
		ИначеЕсли 
			СтрокаТовар.КоличествоРасхождение > 0 Тогда
			
		    // узнаем, может товар ищут, и оприходовать его не надо
			ВПоиске = ТоварВПоиске(СтрокаТовар.Номенклатура);
			
			ТекЗначение = УчтеныНайденныеВПоиске.Получить(СтрокаТовар.Номенклатура);	
			ВПоиске = ?(ТекЗначение = Неопределено, ВПоиске, ВПоиске - ТекЗначение);  
							
			// если товара нет в розыске, оприходуем его
			Если НЕ ВПоиске Тогда
				
				НовСтрока = ТЧТоварыДобавить.Добавить();
				НовСтрока.Ячейка = СтрокаТовар.Ячейка;
				НовСтрока.Номенклатура = СтрокаТовар.Номенклатура;
				НовСтрока.Количество = СтрокаТовар.КоличествоРасхождение;
				
			// если товар был потерян, переместим его из потеряшек в ячейку, где его нашли
			Иначе
				
				//СтрокиТовара = ТЗТовары.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТовар.Номенклатура));
				
				// если товар лежит в одной ячейке
				//Если СтрокиТовара.Количество() = 1 Тогда
					

					// если количество нашедшегося товара меньше или равно, чем количество в поиске, тогда оприходовать нечего, перемещаем его весь из потеряшек
					

					Если СтрокаТовар.КоличествоРасхождение <= ВПоиске Тогда
							
						НовСтрока = ТЧПереместитьИзНикуда.Добавить();
						НовСтрока.ЯчейкаПолучатель = СтрокаТовар.Ячейка;
						НовСтрока.ЯчейкаОтправитель = ЯчейкаВПоиске;
						НовСтрока.Номенклатура = СтрокаТовар.Номенклатура;
						НовСтрока.Количество = СтрокаТовар.КоличествоРасхождение;
						
						ТекЗначение = УчтеныНайденныеВПоиске.Получить(НовСтрока.Номенклатура);						
						УчтеныНайденныеВПоиске.Вставить(НовСтрока.Номенклатура, ?(ТекЗначение = Неопределено, 0, ТекЗначение) + НовСтрока.Количество);  
						
					// если все потеряшки нашли дом, переместим их) остальное оприходуем
						
					Иначе
						
						НовСтрока = ТЧПереместитьИзНикуда.Добавить();
						НовСтрока.ЯчейкаПолучатель = СтрокаТовар.Ячейка;
						НовСтрока.ЯчейкаОтправитель = ЯчейкаВПоиске;
						НовСтрока.Номенклатура = СтрокаТовар.Номенклатура;
						НовСтрока.Количество = ВПоиске;
						
						ТекЗначение = УчтеныНайденныеВПоиске.Получить(НовСтрока.Номенклатура);						
						УчтеныНайденныеВПоиске.Вставить(НовСтрока.Номенклатура, ?(ТекЗначение = Неопределено, 0, ТекЗначение) + НовСтрока.Количество);  						
						
						НовСтрока = ТЧТоварыДобавить.Добавить();
						НовСтрока.Ячейка = СтрокаТовар.Ячейка;
						НовСтрока.Номенклатура = СтрокаТовар.Номенклатура;
						НовСтрока.Количество = СтрокаТовар.КоличествоРасхождение - ВПоиске;
					КонецЕсли;
					
				//ИначеЕсли СтрокиТовара.Количество() > 1 Тогда
				//	
				//КонецЕсли;
					 			
			КонецЕсли	
			
		КонецЕсли;
		
	КонецЦикла;
	Если ТЧТоварыСписать.Количество() Тогда
		Списание.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	Если ТЧТоварыДобавить.Количество() Тогда
		Оприходование.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	Если ТЧПереместитьИзНикуда.Количество() Тогда 
		Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры
