
&НаСервере
Функция ЗапуститьНовыйБизнесПроцесс()
	
	Процесс 		= БизнесПроцессы.РемонтИнструмента.СоздатьБизнесПроцесс();
	Процесс.Дата 	= ТекущаяДата();
	
	ФункцииФормДокументов.ЗаполнитьЗначенияПоУмолчанию(Процесс, ФункцииФормДокументов.ПолучитьРеквизитыДокумента(Документы.ЗаказНаряд.ПустаяСсылка()));
	
	Процесс.ИнструментПринят = Истина;
	Процесс.ГарантияСогласована = Истина;
	
	Процесс.СкладПолучатель = Склад;	
	
	Если НЕ Процесс.Склад.РемонтИнструмента Тогда
		Процесс.Склад = Константы.СкладСервисПоУмолч.Получить();
	КонецЕсли;
	
	НачатьТранзакцию();
	
	// Запишем
	
	Попытка
		Процесс.Записать();
	Исключение
		
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка записи нового бизнес процесса
								|" + стрОшибки);
		ОтменитьТранзакцию();
		Возврат Неопределено;
		
	КонецПопытки;
	
	// Запустим
	
	Попытка
		Процесс.Старт();
	Исключение
		
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка запуска бизнес процесса
								|" + стрОшибки);
		ОтменитьТранзакцию();								
		Возврат Неопределено;
		
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	// Вернем задачу
	
	//ТипБизнесПроцесса = Метаданные.НайтиПоТипу(ТипЗнч(Процесс));
	//ПараметрыФормы = БизнесПроцессы[ТипБизнесПроцесса.Имя].ФормаВыполненияЗадачи(ЗадачаСсылка, Реквизиты.ТочкаМаршрута);
	//Возврат ПараметрыФормы;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Задача.ЗадачаПользователю ГДЕ БизнесПроцесс = &процесс");
	Запрос.УстановитьПараметр("процесс", Процесс.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		//ЗначениеВДанныеФормы(Выборка.Ссылка.Получитьобъект(), открытьЗадачу);
		//Возврат Истина;
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КнопкаПродолжить(Команда)
	
	Если Склад = Неопределено ИЛИ Склад.Пустая() Тогда
		ОбщиеФункции.СообщитьТекст("Значение не заполнено", "Склад", Склад);
		Возврат;
	КонецЕсли;
	
	// Запустим 
	
	ЗадачаСсылка = ЗапуститьНовыйБизнесПроцесс();
	
	Если ЗадачаСсылка <> Неопределено Тогда
		
		// Расспечатем
		
		Если ПечататьЗаявку Тогда
			ПечататьБланк(ЗадачаСсылка);
		КонецЕсли;
	
		// Откроем задачу процесса
		
		Если ОткрытьСледующююЗадачу Тогда
			ОткрытьФорму("БизнесПроцесс.РемонтИнструмента.Форма.Задача_ОформитьЗаявку", Новый Структура("Ключ", ЗадачаСсылка));
		КонецЕсли;
		
		// Закроем эту форму
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

// ПЕЧАТЬ

&НаСервере
Процедура ПечататьБланкНаСервере(ТабДок, ЗадачаСсылка)
	
	БизнесПроцессы.РемонтИнструмента.ПечатьБланкЗаявки(ТабДок, ЗадачаСсылка.БизнесПроцесс);
	
КонецПроцедуры
&НаКлиенте
Процедура ПечататьБланк(ЗадачаСсылка)
	
	ТабДок = Новый ТабличныйДокумент;
	ПечататьБланкНаСервере(ТабДок, ЗадачаСсылка);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.Показать();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОткрытьСледующююЗадачу = Истина;
	Склад = ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Склад");
КонецПроцедуры

&НаКлиенте
Процедура Декорация4Нажатие(Элемент)
	
	Склад = ОткрытьФорму("Справочник.Склады.ФормаВыбора",, ЭтаФорма,,,,Новый ОписаниеОповещения("ОбработкаОповещенияФормы",ЭтаФорма,));
	
КонецПроцедуры
/////
&НаКлиенте
Процедура СкладНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка =Ложь;
	Склад = ОткрытьФорму("Справочник.Склады.ФормаВыбора",,ЭтаФорма,,,,Новый ОписаниеОповещения("ОбработкаОповещенияФормы",ЭтаФорма,));
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещенияФормы(Результат, Параметры) Экспорт
	УправлениеВидимостьюДоступностью();	
КонецПроцедуры
//////
&НаКлиенте
Процедура УправлениеВидимостьюДоступностью()
	
	СкладНеВведен = Склад = Неопределено ИЛИ Склад.Пустая();
	
	Элементы.Декорация4.Видимость = СкладНеВведен;
    Элементы.Склад.Видимость = НЕ СкладНеВведен;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостьюДоступностью();
КонецПроцедуры
