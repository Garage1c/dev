&НаКлиенте
Перем МассивКомментариев Экспорт;

&НаКлиенте
Перем ОрганизацияПоДокументу, ПартнерПоДокументу, КонтрагентПоДокументу;

// ТИПОВЫЕ

&НаСервере
Процедура ВидимостьДоступность()
	
	
	 
	ЭтоОформлениеЗаявки = НЕ Объект.Стартован ИЛИ ФункцииБизнесПроцессов.СтоитНаТочкеМаршрута(
			Объект.Ссылка, БизнесПроцессы.РемонтИнструмента.ТочкиМаршрута.ОформитьЗаявку);
		
	//ТолькоПросмотр	= НЕ ЭтоОформлениеЗаявки;	
	
	// оформление
	
	Если ЭтоОформлениеЗаявки Тогда
		Заголовок = "Оформить заявку на ремонт";
	Иначе
		Заголовок = "Ремонт инструмента №" + ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Объект.Номер);
	КонецЕсли;
	
	// Командная панель
	
	Элементы.ОсновныеДействия.Видимость 	= ЭтоОформлениеЗаявки;
	Элементы.КППроцесса.Видимость 			= НЕ ЭтоОформлениеЗаявки;
	Элементы.ИнформацияОтказ.Видимость 		= НЕ Объект.ИнструментПринят;
	Элементы.ФормаОтменить.Видимость 		= ЭтоОформлениеЗаявки И Объект.Стартован;

	// Шапка
	Элементы.РеквизитыЗадачи.ТолькоПросмотр = НЕ ЭтоОформлениеЗаявки;
	
	// Тело
	
	Элементы.БаланкФото.Видимость 				= ЭтоОформлениеЗаявки;
	Элементы.ПоказателиДействий.Видимость 		= НЕ ЭтоОформлениеЗаявки;
	Элементы.КоманднаяПанельТовары.Доступность	= ЭтоОформлениеЗаявки;
	Элементы.ГруппаПараметрыЗаявки.Доступность	= ЭтоОформлениеЗаявки;
	
	КолонкиТоваров = Элементы.Товары.ПодчиненныеЭлементы;
	Для Каждого Поле Из КолонкиТоваров Цикл
		Если Поле.Вид = ВидПоляФормы.ПолеВвода Тогда
			Поле.КнопкаВыбора = ЭтоОформлениеЗаявки;
			Поле.РедактированиеТекста = ЭтоОформлениеЗаявки;
		Иначе
			Поле.ТолькоПросмотр = НЕ ЭтоОформлениеЗаявки;
		КонецЕСли;
	КонецЦикла;
	
	// Подвал
	
	Элементы.ГруппаЭтапы.Видимость 			= НЕ ЭтоОформлениеЗаявки;
	Элементы.ГруппаКомментарий.Видимость 	= ЭтоОформлениеЗаявки;
		
КонецПроцедуры
&НаСервере
Процедура ОбновитьИнформационныеНадписи()
	
	//Элементы.Контрагент.ТолькоПросмотр = Объект.Партнер.Пустая() ИЛИ ПолучитьКоличествоКонтрагентовПартнера() < 2;
	//Элементы.Расчет.Заголовок = ?(Объект.Организация.Пустая(), "", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("оплата за %1 расчет", Объект.Организация.Расчет));
	Элементы.ВариантОплаты.Доступность = Истина;
	
	расчетНадпись = "";
	варРасчета = Объект.Организация.Расчет;
	Если варРасчета = Перечисления.ВидыРасчета.Наличный Тогда
		ВариантОплаты = 0;
		Элементы.ВариантОплаты.Доступность = Ложь;
	ИначеЕсли
		варРасчета = Перечисления.ВидыРасчета.Безналичный Тогда
		ВариантОплаты = 1;
		Элементы.ВариантОплаты.Доступность = Ложь;
	Иначе
		ВариантОплаты = 0;
	КонецЕсли; 	
	
	ОбновитьНадписьВариантаРасчета();
  
КонецПроцедуры

Процедура ОбновитьНадписьВариантаРасчета()
              
	Элементы.Расчет.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("оплата за %1 расчет", ?(ВариантОплаты, "Безналичный", "Наличный"));
КонецПроцедуры

&НаКлиенте
Процедура ВариантОплатыПриИзменении(Элемент)
	ОбновитьНадписьВариантаРасчета();
КонецПроцедуры


Процедура ПолучитьИтоговуюНадпись()
	
	Текст = "
	|<HTML><HEAD>
	|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
	|<META name=GENERATOR content=""MSHTML 8.00.7600.16588"">
	|<style>* {margin: 0;padding: 0;}</style>
	|</HEAD>
	|<body bgcolor=""#FCFAEB"">
	|";
	
	Если Объект.ЗаказНаряд.Пустая() Тогда
		
		Текст = Текст + "нет заказ наряда";
	Иначе
		
		Если Объект.ЗаказНаряд.Проведен Тогда
			
			Запрос = Новый Запрос("
			|ВЫБРАТЬ Сумма, Скидка, Сумма(Работ) Работ, Сумма(Запчастей) Запчастей ИЗ (
			|ВЫБРАТЬ Ссылка.Сумма Сумма, Ссылка.Скидка Скидка, СУММА(Сумма) Работ,0 Запчастей ИЗ Документ.ЗаказНаряд.Работы ГДЕ Ссылка = &Заказ СГРУППИРОВАТЬ ПО Ссылка
			|ОБЪЕДИНИТЬ
			|ВЫБРАТЬ Ссылка.Сумма, 0, Ссылка.Скидка Скидка, СУММА(Сумма) ИЗ Документ.ЗаказНаряд.Запчасти ГДЕ Ссылка = &Заказ СГРУППИРОВАТЬ ПО Ссылка
			|) ЗАПРОС СГРУППИРОВАТЬ ПО Сумма, Скидка");
			
			Запрос.УстановитьПараметр("Заказ", Объект.ЗаказНаряд);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Текст = Текст + "Всего <B>" + Выборка.Сумма + "</B> <small>(работ <B>" + Выборка.Работ + "</B> запчастей <B>" + Выборка.Запчастей + "</B></small>)";
			КонецЕсли;
			
			Если	
				Объект.ОтветМенеджера = 1 Тогда
				Текст = Текст + ". Предоплата";
			ИначеЕсли
				Объект.ОтветМенеджера = 2 Тогда
				Текст = Текст + ". Отсрочка оплаты";
			КонецЕсли;
			
		Иначе
			
			Текст = Текст + "заказ не проведен";
			
		КонецЕсли;
	КонецЕсли;
	
	ИтогоHTML = Текст + "</BODY></HTML>"; 
	Элементы.Комментарии.Видимость = НЕ ПустаяСтрока(Комментарии);	
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ФункцииФормДокументов.ЗаполнитьЗначенияПоУмолчанию(Объект, ЭтаФорма.Элементы);
		
		Объект.СкладПолучатель = Объект.Склад;	
	
		Если НЕ Объект.Склад.РемонтИнструмента Тогда
			Объект.Склад = Константы.СкладСервисПоУмолч.Получить();
		КонецЕсли;
	Иначе
		ЗадачиПроцесса.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
		
		// Прочитаем комментарии
		
		Комментарии = ФункцииБизнесПроцессов.ПолучитьТекстКомментариевHTML(Объект.Ссылка);

		ПолучитьИтоговуюНадпись();
	
	КонецЕсли;
		
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
	
	ОбновитьИнформационныеНадписи();
	ВидимостьДоступность();

КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.Ссылка);
	
	СохранитьТекущиеЗначения();
		
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СобытияСистемы.ОповеститьОЗаписиБизнесПроцесса(Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	//Ном = 0; Отказаться = Ложь;
	//Для Каждого Строка Из Товары Цикл Ном = Ном + 1;
	//	
	//	Если Строка.Номенклатура.Пустая() Тогда
	//		ОбщиеФункции.СообщитьТекст("в строке №" + Ном + " не выбран инструмент", "Товары[" + (Ном - 1) + "].Номенклатура");
	//		Отказаться = Истина;
	//	КонецЕсли;
	//	
	//	Если Не Строка.Количество Тогда
	//		ОбщиеФункции.СообщитьТекст("в строке №" + Ном + " не выбрано количество инструмента", "Товары[" + (Ном - 1) + "].Количество");
	//		Отказаться = Истина;
	//	КонецЕсли;
	//	
	//	Если Строка.Неисправность.Пустая() Тогда
	//		ОбщиеФункции.СообщитьТекст("в строке №" + Ном + " не указана информация о неисправности", "Товары[" + (Ном - 1) + "].Неисправность");
	//		Отказаться = Истина;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//Если Отказаться Тогда Отказ = Истина; КонецЕсли;
	
КонецПроцедуры

// ДЕЙСТВИЯ


&НаСервере
Функция СохранитьЗаявку()
	
	Если НЕ Объект.ИнструментПринят Тогда
		Объект.ИнструментПринят = Истина;
	КонецЕсли;
	
	Если НЕ Записать(Новый Структура("Старт", НЕ Объект.Стартован)) Тогда
		Возврат Ложь;
	КонецЕсли;	

	Возврат Истина;	
	
КонецФункции

&НаКлиенте
Процедура ПередатьИнструмент(Команда)
	
	Если	СохранитьЗаявку() И 
			ВыполнитьЗадачуНаСервере() Тогда
			
		Закрыть();	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗадачуНаСервере() Экспорт
	
	СсылкаЗадачи = ФункцииБизнесПроцессов.ТекущаяЗадача(Объект.Ссылка);
		
	ЗадачаОбъект = СсылкаЗадачи.ПолучитьОбъект();
	ЗадачаОбъект.Комментарий = Объект.Комментарий;
	
	Попытка
		ЗадачаОбъект.ВыполнитьЗадачу();
	Исключение
		ОбщиеФункции.СообщитьТекст(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Модифицированность = Ложь;
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция ОтменитьЗаявку()
	
	Если Объект.ИнструментПринят Тогда
		
		Объект.ИнструментПринят = Ложь;
		
		Если НЕ Записать() Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции
&НаКлиенте
Процедура Отменить(Команда)
	
	Если Вопрос("Отменить заявку на ремонт?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Если 	ОтменитьЗаявку() И
			ВыполнитьЗадачуНаСервере() Тогда
			
		Модифицированность = Ложь;
		Закрыть();
				
	КонецЕсли;

КонецПроцедуры

 
 // ОСНОВНЫЕ РЕКВИЗИТЫ ШАПКИ

&НаСервере
Функция КонтрагентРаботаетСОрганизацией(НовыйКонтрагент = Неопределено)
	Возврат Справочники.Контрагенты.КонтрагентРаботаетСОрганизацией(?(НовыйКонтрагент = Неопределено, Объект.Контрагент, НовыйКонтрагент), Объект.Организация);
КонецФункции
&НаСервере
Функция ПолучитьКоличествоКонтрагентовПартнера()
	Возврат Справочники.Партнеры.ПолучитьКоличествоКонтрагентовПартнера(Объект.Партнер);
КонецФункции
 &НаСервере
Функция НайтиПодходящегоКонтрагента()
	
	Возврат Справочники.Партнеры.НайтиКонтрагентаРаботающегоСОрганизацией(Объект.Партнер, Объект.Организация);
	
КонецФункции

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
		
	Если НЕ Объект.Организация.Пустая() И НЕ ДиалогиСПользователем.ПроверитьНаСоответствиеОсновнойОрганизации(
				Объект.Контрагент, 
				Объект.Организация, 
				?(КонтрагентРаботаетСОрганизацией() = Неопределено, Неопределено, Истина)) Тогда
		
		Объект.Организация = ОрганизацияПоДокументу;
	
	КонецЕсли;
	
	ОбновитьИнформационныеНадписи();	
	СохранитьТекущиеЗначения();	

КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	Если Объект.Партнер.Пустая() Тогда
		
		Объект.Контрагент = Неопределено;
	Иначе
		
		НовыйКонтрагент = НайтиПодходящегоКонтрагента();

		Если НовыйКонтрагент = Неопределено Тогда
			
			Предупреждение("Партнер не работает с """ + Объект.Организация + """");
			Объект.Партнер = ПартнерПоДокументу;
			
		Иначе
	    	Объект.Контрагент = НовыйКонтрагент;
			ОбновитьИнформационныеНадписи();		
		КонецЕсли;
	КонецЕсли;

	СохранитьТекущиеЗначения();	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Если НЕ Объект.Контрагент.Пустая() И НЕ ДиалогиСПользователем.ПроверитьНаСоответствиеОсновнойОрганизации(
				Объект.Контрагент, 
				Объект.Организация, 
				?(КонтрагентРаботаетСОрганизацией() = Неопределено, Неопределено, Истина)) Тогда
			
		Объект.Контрагент = КонтрагентПоДокументу;
			
	КонецЕсли;
	
	ОбновитьИнформационныеНадписи();		
	
	СохранитьТекущиеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьТекущиеЗначения()
	
	ОрганизацияПоДокументу = Объект.Организация;
	ПартнерПоДокументу = Объект.Партнер;
	КонтрагентПоДокументу = Объект.Контрагент;
		
КонецПроцедуры

// ОБРАБОТКИ ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	текДанные = Элементы.Товары.ТекущиеДанные;
	Если Не текДанные.Количество Тогда
		
		текДанные.Количество = 1;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыНеисправностьОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ФункцииФормДокументов.ОкончанияВводаТекстаНеисправности(ЭтаФорма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

// ПЕЧАТЬ

&НаСервере
Процедура ПечататьБланкНаСервере(ТабДок)
	
	БизнесПроцессы.РемонтИнструмента.ПечатьБланкЗаявки(ТабДок, Объект.Ссылка, Новый Структура("Контрагент", Объект.Контрагент));
	
КонецПроцедуры
&НаКлиенте
Процедура ПечататьБланк(Команда)
	
	Если Модифицированность Тогда
				
		Попытка
			Записать();
		Исключение
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	ПечататьБланкНаСервере(ТабДок);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();
	
КонецПроцедуры

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
	Если ИмяСобытия = СобытияСистемы.Событие_ЗаписанаЗадача() Тогда
		
		БизнесПроцессЗадачи = Неопределено;
		Если Параметр.Свойство("БизнесПроцесс", БизнесПроцессЗадачи) Тогда
			
			Если БизнесПроцессЗадачи = Объект.Ссылка Тогда
				
				Прочитать();
				Комментарии = ФункцииБизнесПроцессов.ПолучитьТекстКомментариевHTML(Объект.Ссылка);
				ПолучитьИтоговуюНадпись();
				Элементы.ЗадачиПроцесса.Обновить();
				
			КонецЕсли;
		КонецЕсли;
				
	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.Расчет = Перечисления.ВидыРасчета[ВариантОплаты];
КонецПроцедуры






