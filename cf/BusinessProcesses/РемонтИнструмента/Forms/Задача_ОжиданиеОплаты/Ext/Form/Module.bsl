&НаКлиенте
Перем МассивКомментариев Экспорт;

// ТИПОВЫЕ

&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, Объект.БизнесПроцесс, Объект.Ссылка);
		
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	// Реверснем
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ВидимостьДоступность()
		             
	Элементы.ФормаОплачено.Доступность          = Не ТолькоПросмотр;
	Элементы.ГруппаУсловияОплаты.Доступность	= Не ТолькоПросмотр;	

	Элементы.ГруппаУсловияОплаты.Видимость		= НЕ Менеджер.Пустая();
	Элементы.ФормаОплачено.Видимость	        = Менеджер.Пустая();

КонецПроцедуры

Процедура УстановитьСтатусОплатыЗаказа()
	
	Процент = Заказы.ПолучитьПроцентОплатыЗаказа(Объект.Заказ);

	Если Не Процент Тогда
		Элементы.ИнформацияПоОплате.Заголовок = "не оплачен";
		Элементы.ИнформацияПоОплате.ЦветТекста = Новый Цвет(255,0,0);
	ИначеЕсли Процент = 100 Тогда
		Элементы.ИнформацияПоОплате.Заголовок = "оплачен";
		Элементы.ИнформацияПоОплате.ЦветТекста = Новый Цвет(0,157,0);
	ИначеЕсли Процент > 100 Тогда
		Элементы.ИнформацияПоОплате.Заголовок = "переплачен";
		Элементы.ИнформацияПоОплате.ЦветТекста = Новый Цвет(113,0,0);
	Иначе
		Элементы.ИнформацияПоОплате.Заголовок = "оплата " + Формат(Процент,"ЧГ=") + " %";
	КонецЕсли;
	
КонецПроцедуры

// ОБРАБОТЧИКИ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьРеквизиты();
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
	
	УстановитьСтатусОплатыЗаказа();
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ);
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.БизнесПроцесс);
	
	ВидимостьДоступность();
		
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	ВидимостьДоступность();
	
КонецПроцедуры
&НаКлиенте
Процедура ИнформацияПоОплатеНажатие(Элемент)
	ОткрытьФорму("Обработка.ДолгиПоОплате_Управление.Форма.Управление", Новый Структура("Организация, Партнер", Организация, Контрагент));
КонецПроцедуры

// ДЕЙСТВИЯ

&НаКлиенте
Процедура Предоплата(Команда)
	
	// Выполним задачу
	
	Если 	УстановитьОтметкуОбоплате(2) И
			ВыполнитьЗадачуНаСервере() Тогда
				
		Модифицированность = Ложь;
		ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, Новый Структура);
		Закрыть();
			
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура Отсрочка(Команда)
	
	// Выполним задачу
	
	Если 	УстановитьОтметкуОбоплате(1) И
			ВыполнитьЗадачуНаСервере() Тогда
			
		Модифицированность = Ложь;
		ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, Новый Структура);
		Закрыть();
			
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция УстановитьОтметкуОбоплате(ВариантДействия)
	
	// Сохраним реквизиты БП
	
	Процесс = Объект.БизнесПроцесс.ПолучитьОбъект();
	Процесс.ОтветМенеджера = ВариантДействия;

	Попытка
		Процесс.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи бизнес процесса
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат истина;
	
КонецФункции
&НаСервере
Функция ВыполнитьЗадачуНаСервере()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
		
	Попытка
		ЗадачаОбъект.ВыполнитьЗадачу();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при выполнении задачи
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
		
	Возврат Ложь;
	
КонецФункции

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры

// ПЕЧАТЬ

&НаСервере
Процедура ПечатьСчетНаСервере(ТабДок)
	
 	Документы.ЗаказНаряд.Печать_Счет(ТабДок, ЗаказНаряд);
	
КонецПроцедуры
&НаКлиенте
Процедура ПечатьСчета(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ПечатьСчетНаСервере(ТабДок);
    
	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();

КонецПроцедуры



