
&НаКлиенте
Перем НеЗакрыватьФорму;

&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанныеЗадачи(Объект, ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказНаСервере()
	
	//Если ЗаказНарядОбъект.Партнер.Пустая() Тогда
	//	
	//	Док = документы.ЗаказНаряд.СоздатьДокумент();
	//	Док.Партнер = Партнер;
	//	
	//КонецЕсли;
	//
	//ЗначениеВРеквизитФормы(Док, "ЗаказНарядОбъект");
	
КонецПроцедуры
&НаКлиенте
Процедура ДекорацияСоздатьЗаказНажатие(Элемент)
	
	Форма = ПолучитьФорму("Документ.ЗаказНаряд.ФормаОбъекта");
	
	// Заполним шапку
	
	Форма.Объект.Партнер 	= Контрагент;
	Форма.БизнесПроцесс 	= Объект.БизнесПроцесс;
	
	// Заполним таблицу
	
	ТоварыЗаказы = Форма.Объект.Товары;
	
	Для Каждого Строка Из Товары Цикл
		ЗаполнитьЗначенияСвойств(ТоварыЗаказы.Добавить(), Строка);
	КонецЦикла;
	
	Форма.Открыть();
	
КонецПроцедуры

// ТИПОВЫЕ

&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	// Реверснем
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ВидимостьДоступность()
	
	ЕстьЗаказ = Не ЗаказНаряд.Пустая();
	
	Элементы.ГруппаРедактироватьЗаказ.Видимость = ЕстьЗаказ;
	Элементы.ГруппаСоздатьЗаказ.Видимость 		= Не ЕстьЗаказ;
	 
	
	Элементы.группаПредыдущийКомментарий.Видимость = Не ПустаяСтрока(ПредыдущийКомментарий);
	
	Элементы.Выполнить.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьРеквизиты();
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ);
	
	ВидимостьДоступность();
		
КонецПроцедуры
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НеЗакрыватьФорму Тогда
		
		НеЗакрыватьФорму 	= ложь;
		Отказ 				= Истина;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПередВыполнением(Отказ)
	
	
КонецПроцедуры
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	ВидимостьДоступность();
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = СобытияСистемы.Событие_ЗаписанЗаказНаряд() Тогда
		
		ПрочитатьРеквизиты();
		ОбновитьОтображениеДанных();
		ВидимостьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры


// КОММЕНТАРИЙ

&НаКлиенте
Процедура ДекорацияДобавитьКомментарийНажатие(Элемент)
	
	Элементы.ГруппаДобавитьКомментарий.Видимость 		= Ложь;
	Элементы.ГруппаРедактированиеКомментария.Видимость 	= Истина;
	
КонецПроцедуры


&НаСервере
Функция ПровестиЗаказИВыполнитьЗадачуНаСервере()
	
	НачатьТранзакцию();
	
	// Проведем заказ на сервере
	
	стрОшибки = "";
	Если Не ПолныеПрава.ПровестиДокумент(ЗаказНаряд.ПолучитьОбъект(), РежимПроведенияДокумента.Неоперативный, стрОшибки) Тогда
		
		ОтменитьТранзакцию();		
		ОбщиеФункции.СообщитьТекст("Ошибка при проведении заказ наряда
			|" + стрОшибки);
			
			
	КонецЕсли;
	
	// Выполним задачу
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	//ЗадачаОбъект.ДополнительныеСвойства.Вставить("НеПроверятьПроведениеЗаказа", Истина);
	
	Попытка
		ЗадачаОбъект.ВыполнитьЗадачу();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОтменитьТранзакцию();
		ОбщиеФункции.СообщитьТекст("Ошибка при выполнении задачи
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	Возврат истина;
	
КонецФункции


// Сохраним реквизиты БП
Функция СохранитьРеквизитыПроцесса()	
	
	Процесс = Объект.БизнесПроцесс.ПолучитьОбъект();
    Изменился = Ложь;
	
	БезОплаты = НЕ Булево(ЗаказНаряд.Сумма);		

	Если Процесс.БезОплаты <> БезОплаты Тогда

		Процесс.БезОплаты = БезОплаты;
		Изменился = Истина;
		
	КонецЕсли;
	
	Если Изменился Тогда		
		
		Попытка
			Процесс.Записать();
		Исключение
			стрОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка при записи бизнес процесса
							|" + стрОшибки);
			Возврат Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура ИнструментОтремонтрован(Команда)
	
	// Выполним задачу
			
	Если СохранитьРеквизитыПроцесса() И ПровестиЗаказИВыполнитьЗадачуНаСервере() Тогда
			
		Модифицированность = Ложь;
		ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, Новый Структура);
		Закрыть();
				
	КонецЕсли;
	
КонецПроцедуры


НеЗакрыватьФорму = Ложь;
