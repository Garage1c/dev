// ТИПОВЫЕ
Процедура УправлениеВидимостью()
	ЕстьОтметки =Список.НайтиСтроки(Новый Структура("Отметка", Истина)).Количество(); 
	Элементы.НазначитьОтсрочку.Видимость = ЕстьОтметки;
	Элементы.НазначитьПредоплату.Видимость = ЕстьОтметки;
КонецПроцедуры


Функция ЗаполнитьДанныеТаблицы()

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Зад.Дата,
	|	Зад.Ссылка КАК Задача,
    |	Зад.БизнесПроцесс,
    |	Зад.Заказ КАК Заказ,
	|	Зад.БизнесПроцесс.Организация КАК Организация,
    |	Зад.БизнесПроцесс.Контрагент КАК Контрагент,
    |	Зад.Пользователь,
	|	Зад.Заказ.Сумма	Сумма,
	|	ВЫБОР КОГДА Зад.БизнесПроцесс.Контрагент.ТипЦен В (ВЫБРАТЬ Значение ИЗ Константа.ТипЦенРозница) ТОГДА ""Ждать оплату"" ИНАЧЕ ""Отсрочка"" КОНЕЦ Действие,
	|	ВЫБОР КОГДА Зад.БизнесПроцесс.Контрагент.ТипЦен В (ВЫБРАТЬ Значение ИЗ Константа.ТипЦенРозница) ТОГДА 0 ИНАЧЕ 1 КОНЕЦ Отсрочка
    |ИЗ
    |	Задача.ЗадачаПользователю КАК Зад
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОплатаЗаказов Опл
	|ПО Опл.Заказ = Зад.Заказ
    |ГДЕ
    |	Зад.Выполнена = ЛОЖЬ
    |	И Зад.ПометкаУдаления = ЛОЖЬ
	|	И Опл.ПроцентОплаты <> 100
    |	И Зад.Пользователь = &ТекущийПользователь
    |	И Зад.ТочкаМаршрута = ЗНАЧЕНИЕ(БизнесПроцесс.РемонтИнструмента.ТочкаМаршрута.ОжиданиеОплаты)");
	
	//Запрос.УстановитьПараметр("Область", 				ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("ТекущийПользователь", 	Пользователь);

	Список.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Возврат Список.Количество();
	
КонецФункции
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = Параметры.Пользователь;
	
	Если Пользователь.Пустая() Тогда
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если НЕ ЗаполнитьДанныеТаблицы() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	УправлениеВидимостью();
КонецПроцедуры

// ДЕЙСТВИЯ

Функция СохранитьОтветМенеджера()
	
	Процессы = Новый Массив;
	
	// Выполним задачи
	
	Для Каждого Строка Из Список Цикл
		
		Если 	Строка.Отсрочка <> 3 И УстановитьОтметкуОбоплате(Строка.БизнесПроцесс, Строка.Отсрочка) И
				ВыполнитьЗадачуНаСервере(Строка.Задача) Тогда
				
				Процессы.Добавить(Строка.БизнесПроцесс);
									
		КонецЕсли;
	КонецЦикла;
	
	Возврат Процессы;
	
КонецФункции
&НаСервере
Функция УстановитьОтметкуОбоплате(БизнесПроцесс, ВариантДействия)
	
	// Сохраним реквизиты БП
	
	Процесс = БизнесПроцесс.ПолучитьОбъект();
		
	//Если Не БизнесПроцесс.Оплачено Тогда
	//	Процесс.Оплачено = Истина;
	//КонецЕсли;
	
	Процесс.ОтветМенеджера = ВариантДействия + 1;
	
	Попытка
		Процесс.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи бизнес процесса
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
		
	Возврат истина;
	
КонецФункции
&НаСервере
Функция ВыполнитьЗадачуНаСервере(Задача)
	
	ЗадачаОбъект = Задача.ПолучитьОбъект();
		
	Попытка
		ЗадачаОбъект.ВыполнитьЗадачу();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при выполнении задачи
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
		
КонецФункции
 &НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Процессы = СохранитьОтветМенеджера();
	Для Каждого Строка ИЗ Процессы Цикл
		
		Оповестить(СобытияСистемы.Событие_ЗаписанаЗадача(), 
					новый Структура("БизнесПроцесс", Строка), 
				ЭтаФорма);
	КонецЦикла;
	
	Закрыть();

КонецПроцедуры
&НаКлиенте
Процедура СписокДействиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.Действие = "Не знаю" Тогда
		ТекущиеДанные.Отсрочка = 3;
		Возврат;
	КонецЕсли;
	
	ЖдатьОплату = ТекущиеДанные.Действие = "Ждать оплату";
	
	ТекущиеДанные.Отсрочка = НЕ ЖдатьОплату;

КонецПроцедуры
&НаКлиенте
Процедура СписокОтметкаПриИзменении(Элемент)
	УправлениеВидимостью();	
КонецПроцедуры

// КОМАНДНАЯ ПАНЕЛЬ
&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьДанныеТаблицы();
КонецПроцедуры
 
&НаКлиенте
Процедура НазначитьОтсрочку(Команда)
	Позиции = Список.НайтиСтроки(Новый Структура("Отметка", Истина));
	
	Для Каждого Строка ИЗ Позиции Цикл
		Строка.Отсрочка = 1;
		Строка.Действие = "Отсрочка";
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьПредоплату(Команда)
	Позиции = Список.НайтиСтроки(Новый Структура("Отметка", Истина));	
	Для Каждого Строка ИЗ Позиции Цикл
		Строка.Отсрочка = 0;
		Строка.Действие = "Ждать оплату";
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ИнформацияПоОплатеНажатие(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ДолгиПоОплате_Управление.Форма.Управление", Новый Структура("Организация, Контрагент", ТекущиеДанные.Организация, ТекущиеДанные.Контрагент));
КонецПроцедуры

&НаКлиенте
Процедура СвязныеДокументы(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
  
	ПараметрыФормы = Новый Структура("Документ", ТекущиеДанные.Заказ);
	
	ОткрытьФорму("ОбщаяФорма.СвязанныеДокументыПроцессы", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаСервере
Функция ЕстьЗащита()
	Возврат НЕ (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ПолныеПраваВОбласти") ИЛИ РольДоступна("УправлятьЗаказНарядом"))
КонецФункции
&НаКлиенте
Процедура ПечатьСчета(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	Печать(ТабДок, ТекущиеДанные.Заказ);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	Если НЕ ЕстьЗащита() Тогда
		ТабДок.Защита = Ложь;
		ТабДок.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	ТабДок.Показать();

КонецПроцедуры
&НаСервере
Процедура Печать(ТабДок, Ссылка)
			
	Документы.ЗаказНаряд.Печать_Счет(ТабДок, Ссылка);
				
КонецПроцедуры