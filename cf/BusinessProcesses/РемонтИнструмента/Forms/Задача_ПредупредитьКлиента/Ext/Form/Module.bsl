&НаКлиенте
Перем МассивКомментариев Экспорт;

// ТИПОВЫЕ

&НаКлиенте
Процедура ПоказатьСкрытьАдресацию(Команда)
	
	// Реверснем
	
	КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка = Не КоманднаяПанель.ПодчиненныеЭлементы.ПоказатьСкрытьАдресацию.Пометка;
	
	// Обновим видимость
	
	ФункцииФормЗадач.ВидимостьАдресации(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ВидимостьДоступность()
	
	Элементы.СкладПолучатель.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ФормаВыполнитьИЗакрыть.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры
&НаСервере
Процедура ПрочитатьРеквизиты()
	
	ФункцииБизнесПроцессов.ЗаполнитьДанные(ЭтаФорма, Объект.БизнесПроцесс, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьРеквизиты();
	// комментарии
	ФункцииБизнесПроцессов.ДобавитьРаботуСКомментариями(ЭтаФорма);
		
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФункцииФормЗадач.ПриОткрытии(Объект, ЭтаФорма, Отказ);
	// комментарии
	ФункцииБизнесПроцессовКлиент.ПолучитьМассивКомментариев(ЭтаФорма, Объект.БизнесПроцесс);
	
	ВидимостьДоступность();
		
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи);
	
	ВидимостьДоступность();
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ СохранитьИзменения() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// ДЕЙСТВИЯ
 
Функция СохранитьИзменения()
	
	Процесс = Объект.БизнесПроцесс.ПолучитьОбъект();
	Изменился = Ложь;
	
	Если СкладПолучатель <> Процесс.СкладПолучатель Тогда
		
		Процесс.СкладПолучатель = СкладПолучатель;
		Изменился = Истина;
		
	КонецЕсли;
	
	Если Изменился Тогда
		
		Попытка
			Процесс.Записать();
		Исключение
			стрОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка при записи реквизитов бизнес процесса
								|" + стрОшибки);
			Возврат Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// КОММЕНТАРИИ

&НаКлиенте
Процедура КомандаПоказатьКомментарий(Команда)
	ФункцииБизнесПроцессовКлиент.КомандаПоказатьКомментарий(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура КлиентОтказался(Команда)
	Если 	ПустаяСтрока(Объект.Комментарий) И
			Не ВвестиСтроку(Объект.Комментарий, "Причина отказа",,Истина) Тогда
			
		Возврат;
	КонецЕсли;
	
	// Отменим задачу
			
	Если 	ОтменитьЗадачуНаСервере() И ПометитьНаУдалениеЗаказИВыполнитьЗадачуНаСервере() Тогда
			
		Модифицированность = Ложь;
		ФункцииФормЗадач.ПослеЗаписи(Объект, ЭтаФорма, Новый Структура);
		Закрыть();
				
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ОтменитьЗадачуНаСервере()
	
	Процесс = Объект.БизнесПроцесс.ПолучитьОбъект();
	Процесс.ОтказКлиента = Истина;
	
	Попытка
		Процесс.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи бизнес процесса
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат истина;
	
КонецФункции



&НаСервере
Функция ПометитьНаУдалениеЗаказИВыполнитьЗадачуНаСервере()
	
	НачатьТранзакцию();
	 	 
	// Пометим заказ на удаление
	
	стрОшибки = "";
	
	
		ДокументОбъект = ЗаказНаряд.ПолучитьОбъект();
		
		Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ДокументОбъект.ПометкаУдаления  = Истина;
		ДокументОбъект.Отменен = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		Исключение
		ОтменитьТранзакцию();		
		ОбщиеФункции.СообщитьТекст("Ошибка при проведении заказ наряда
			|" + стрОшибки);
		Возврат Ложь;	
		КонецПопытки;	
		
	// Выполним задачу
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
		
	Попытка
		ЗадачаОбъект.ВыполнитьЗадачу();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОтменитьТранзакцию();
		ОбщиеФункции.СообщитьТекст("Ошибка при выполнении задачи
						|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции




