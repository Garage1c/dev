
&НаСервере
Процедура ОбновитьПараметрыВремени()
	
	ТекДата = ТекущаяДата();
	
	//Список.Параметры.УстановитьЗначениеПараметра("ЗаЧас", 			ТекДата - 3600);
	//Список.Параметры.УстановитьЗначениеПараметра("За3Часа", 		ТекДата - 3600 * 3);
	//Список.Параметры.УстановитьЗначениеПараметра("Сегодня", 		НачалоДня(ТекДата));
	//Список.Параметры.УстановитьЗначениеПараметра("Вчера", 			НачалоДня(НачалоДня(ТекДата) - 1));
	//Список.Параметры.УстановитьЗначениеПараметра("Неделя", 			НачалоНедели(ТекДата));
	//Список.Параметры.УстановитьЗначениеПараметра("ПрошлаяНеделя", 	НачалоНедели(НачалоНедели(ТекДата) - 1));
	//Список.Параметры.УстановитьЗначениеПараметра("ЭтотМесяц", 		НачалоМесяца(ТекДата));
	//Список.Параметры.УстановитьЗначениеПараметра("ВПрошломМесяце", 	НачалоМесяца(НачалоМесяца(ТекДата) - 1));
	//Список.Параметры.УстановитьЗначениеПараметра("ВЭтотГод", 		НачалоГода(ТекДата));
	
	//Список.Параметры.УстановитьЗначениеПараметра("ПустаяДата", 	'00010101');
	//Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекДата);
	//Список.Параметры.УстановитьЗначениеПараметра("НачалоИсчесления", '20120401');

	ТекстИнфо = "Сформировано в " + Формат(ТекДата,"ДЛФ=T");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ПустаяДата", '00010101');
	
	ОбновитьПараметрыВремени();
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Слежение.Записать("Открытие. Рабочие заказы", "ЖурналыДокументов.ЖурналЗаказов");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроцесс(ЗаказСсылка)
	
	Возврат Заказы.ПолучитьПроцесс(ЗаказСсылка);
	
КонецФункции
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	текДанные = Элементы.Список.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
	
		Процесс = ПолучитьПроцесс(текДанные.Ссылка);
		Если Процесс <> Неопределено Тогда
			
			СтандартнаяОбработка = Ложь;
			ОткрытьФорму("БизнесПроцесс." + текДанные.ИмяПроцесса + ".ФормаОбъекта", Новый Структура("Ключ", Процесс), ВладелецФормы);КонецЕсли; КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьПараметрыВремени();
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ВвестиПлатежноеПоручениеВходящее(Команда)
	
	текДок = Элементы.Список.ТекущаяСтрока;
	Если текДок <> Неопределено Тогда
		
		ОткрытьФорму("Документ.ПлатежноеПоручениеВходящее.ФормаОбъекта", Новый Структура("Основание", текДок));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПриходныйКассовыйОрдер(Команда)
	
	текДок = Элементы.Список.ТекущаяСтрока;
	Если текДок <> Неопределено Тогда
		
		ОткрытьФорму("Документ.ПриходныйКассовыйОрдер.ФормаОбъекта", Новый Структура("Основание", текДок));
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если 	ИмяСобытия = СобытияСистемы.Событие_ЗаписанаЗадача() ИЛИ
			ИмяСобытия = СобытияСистемы.Событие_ИзмениласьЗагрузкаАвтомобиля() Тогда
			
		//ОбновитьОтображениеДанных();  КонецЕсли;
		Элементы.Список.Обновить(); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМедленнуюФорму(Команда)
	
	ОткрытьФорму("ЖурналДокументов.ЖурналЗаказов.Форма.ФормаСписка");
	
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьСтатусыЗаказов(Команда)
	
	ОткрытьФорму("РегистрСведений.ЗаказыЖурнал.Форма.ФормаОбновленияСтатусов");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтруктураПодчиненности(Команда)
	
	ОткрытьФорму("ОбщаяФорма.СвязанныеДокументыПроцессы", Новый Структура("Документ", Элементы.Список.ТекущиеДанные.Ссылка));
	
КонецПроцедуры

#Область Автотранспорт

//&НаКлиенте
//Процедура КомандаДобавитьЗаказ(Команда)
//	
//	Перем ДокСсылка;
//	
//	СписокМашин = ЗагрузкаВАвтомобильЗаказов.ПолучитьСписокАвтомобилейДляЗагрузки();
//	ВыбрЭлемент = СписокМашин.ВыбратьЭлемент("Куда загружать?");
//	
//	Если ВыбрЭлемент <> Неопределено Тогда стрСообщения = "";
//		Если ЗагрузкаВАвтомобильЗаказов.ДобавитьЗаказы(ВыбрЭлемент.Значение, Элементы.Список.ВыделенныеСтроки, ДокСсылка, стрСообщения) Тогда
//			
//			СобытияСистемы.ОповеститьОИзмененииЗагрузкиАвтомобиля(ВыбрЭлемент.Значение);
//			ПоказатьОповещениеПользователя("Добавление заказов на погрузку", ПолучитьНавигационнуюСсылку(ДокСсылка), стрСообщения, БиблиотекаКартинок.ЗагрузкаЗаказа_Добавление) КонецЕсли;КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура КомандаУдалитьЗаказ(Команда)
//	
//	Перем ДокСсылка;
//	
//	СписокМашин = ЗагрузкаВАвтомобильЗаказов.ПолучитьСписокАвтомобилейДляЗагрузки();
//	ВыбрЭлемент = СписокМашин.ВыбратьЭлемент("Откуда убирать?");
//	
//	Если ВыбрЭлемент <> Неопределено Тогда стрСообщения = "";
//		Если ЗагрузкаВАвтомобильЗаказов.УдалитьЗаказы(ВыбрЭлемент.Значение, Элементы.Список.ВыделенныеСтроки, ДокСсылка, стрСообщения) Тогда
//			
//			СобытияСистемы.ОповеститьОИзмененииЗагрузкиАвтомобиля(ВыбрЭлемент.Значение);
//			ПоказатьОповещениеПользователя("Удаление заказов с погрузки", ПолучитьНавигационнуюСсылку(ДокСсылка), стрСообщения, БиблиотекаКартинок.ЗагрузкаЗаказа_Удаление) КонецЕсли;КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура КомандаОчиститьМашину(Команда)
//	
//	Перем ДокСсылка;
//	
//	СписокМашин = ЗагрузкаВАвтомобильЗаказов.ПолучитьСписокАвтомобилейДляЗагрузки();
//	ВыбрЭлемент = СписокМашин.ВыбратьЭлемент("Откуда убирать?");
//	
//	Если ВыбрЭлемент <> Неопределено Тогда стрСообщения = "";
//		Если ЗагрузкаВАвтомобильЗаказов.ОчиститьМашину(ВыбрЭлемент.Значение, Ложь, ДокСсылка) Тогда
//			
//			СобытияСистемы.ОповеститьОИзмененииЗагрузкиАвтомобиля(ВыбрЭлемент.Значение);
//			ПоказатьОповещениеПользователя("Очищены все заказы с машины", ПолучитьНавигационнуюСсылку(ДокСсылка), ВыбрЭлемент.Значение, БиблиотекаКартинок.ЗагрузкаЗаказа_Предупреждение) КонецЕсли;КонецЕсли;

//	
//КонецПроцедуры

//&НаКлиенте
//Процедура КомандаОтгрузитьМашину(Команда)
//	
//	Перем ДокСсылка;
//	
//	СписокМашин = ЗагрузкаВАвтомобильЗаказов.ПолучитьСписокАвтомобилейДляЗагрузки();
//	ВыбрЭлемент = СписокМашин.ВыбратьЭлемент("Кого отправляем?");
//	
//	Если ВыбрЭлемент <> Неопределено Тогда стрСообщения = "";
//		Если ЗагрузкаВАвтомобильЗаказов.ОчиститьМашину(ВыбрЭлемент.Значение, Истина, ДокСсылка) Тогда
//			
//			СобытияСистемы.ОповеститьОИзмененииЗагрузкиАвтомобиля(ВыбрЭлемент.Значение);
//			ПоказатьОповещениеПользователя("Заказы отправлены", ПолучитьНавигационнуюСсылку(ДокСсылка), ВыбрЭлемент.Значение, БиблиотекаКартинок.ЗагрузкаЗаказа_Отправка) КонецЕсли;КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура КомандаПоказатьМашину(Команда)
//	
//	СписокМашин = ЗагрузкаВАвтомобильЗаказов.ПолучитьСписокАвтомобилейДляЗагрузки();
//	ВыбрЭлемент = СписокМашин.ВыбратьЭлемент("В какой кузов заглянуть?");
//	
//	Если ВыбрЭлемент <> Неопределено Тогда
//		
//		ДокСсылка = ЗагрузкаВАвтомобильЗаказов.ПолучитьТекНарядНаЗагрузку(ВыбрЭлемент.Значение);
//		Если ДокСсылка = Неопределено Тогда
//			ПоказатьПредупреждение(,"Кузов пустой, внути нет заказ нарядов",,"Предупреждение");
//		Иначе
//			ОткрытьФорму("Документ.НарядНаЗагрузку.ФормаОбъекта", Новый Структура("Ключ", ДокСсылка));КонецЕсли;КонецЕсли;

//	
//КонецПроцедуры


#КонецОбласти