// СТАРОЕ НОВОЕ

&НаСервере
Функция ДобавитьПолеФормы(Имя, Группа = Неопределено, Заголовок = Неопределено, ОбработчикПриИзменении = "", ОбработчикНачалоВыбора = "", ЦветФона = Неопределено, ЦветФонаЗаголовка = Неопределено)
	                      // уникальное имя     тип      родитель       
	НовоеПоле = Элементы.Добавить("Поле" + Имя, Тип("ПолеФормы"), Группа);	
	НовоеПоле.ПутьКДанным = Имя;
	НовоеПоле.Заголовок = ?(ЗначениеЗаполнено(Заголовок), Заголовок, Имя);
	НовоеПоле.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	НовоеПоле.Вид = ВидПоляФормы.ПолеВвода;
	
	Если ЦветФонаЗаголовка <> Неопределено Тогда
		НовоеПоле.ЦветФонаЗаголовка = ЦветФонаЗаголовка;
	КонецЕсли;
	
	Если ЦветФона <> Неопределено Тогда
		НовоеПоле.ЦветФона = ЦветФона;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ОбработчикПриИзменении) Тогда
		НовоеПоле.УстановитьДействие("ПриИзменении", ОбработчикПриИзменении);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбработчикНачалоВыбора) Тогда
		НовоеПоле.УстановитьДействие("НачалоВыбора", ОбработчикНачалоВыбора);
	КонецЕсли;
	
	Возврат НовоеПоле;
	
КонецФункции
&НаСервере
Функция ПолучитьРезультатЗаполнения()
	
	НовоеПредставление = "";
	
	Для Каждого Строка Из ЗначенияПолей Цикл
		Реквизит = ЭтаФорма["Реквизит" + ЗначенияПолей.Индекс(Строка)];
        Если ЗначениеЗаполнено(Реквизит) Тогда
			
			Строка.Значение = Реквизит;
			НовоеПредставление	= НовоеПредставление + ", "  + Строка.Поле.Сокращение + Реквизит;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СокрЛП(Сред(НовоеПредставление, 2));
	
КонецФункции
&НаСервере
Процедура СформироватьЗаполнитьФорму();
		
			
		НовыеРеквизиты = Новый Массив;
			
		СоответствияИмен	 = Новый Соответствие;
		СоответствияЗначений = Новый Соответствие;
			
		Для Каждого Строка Из ЗначенияПолей Цикл
				
			Имя 		= "Реквизит" + ЗначенияПолей.Индекс(Строка);
			Заголовок 	= Строка.Поле.Наименование;
			Значение	= Строка.Значение;
			Тип         = Строка.Поле.ТипЗначения;
				
			НовыйРеквизит = Новый РеквизитФормы(Имя, Тип, , Заголовок, Истина);
			НовыеРеквизиты.Добавить(НовыйРеквизит);
				                                         
			СоответствияИмен.Вставить(Имя, Заголовок);  
			СоответствияЗначений.Вставить(Имя, Значение);   
				
		КонецЦикла;
			
		// добавляем новые реквизиты формы
		ИзменитьРеквизиты(НовыеРеквизиты);
			
		// заполняем значения реквизитов формы
		Для Каждого Элемент Из СоответствияЗначений Цикл
			ЭтаФорма[Элемент.Ключ] = Элемент.Значение; 	
		КонецЦикла;
			
		// добавлем новые элементы формы
		Для Каждого Элемент Из СоответствияИмен Цикл
			ДобавитьПолеФормы(Элемент.Ключ, , Элемент.Значение);
		КонецЦикла;
			
		ДобавитьПолеФормы("ПолноеПредставление", , "Представление");
		
КонецПроцедуры

// НОВОЕ РАБОТАЮЩЕЕ

&НаСервере
Функция	СформироватьПредставление()
	
	Если Группа = Справочники.ВидыКонтактнойИнформации.Телефон Тогда
		
		Возврат СформироватьПредставлениеТелефон();
	КонецЕсли;
	
	Возврат УправлениеКонтактнойИнформацией.ПолучитьСтроковоеПредставлениеАдреса(ЗначенияПолей);
	
КонецФункции

&НаСервере
Функция ЗначениеПоПолю(Поле)
	
	Строки = ЗначенияПолей.НайтиСтроки(Новый Структура("Поле", ПланыВидовХарактеристик.СоставКонтактнойИнформации[Поле]));
	
	Если Строки.Количество() Тогда
		ЗначениеПоля = Строка(Строки[0].Значение);
		Возврат ?(ПустаяСтрока(ЗначениеПоля), "", Строки[0].Сокращение +ЗначениеПоля);
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Функция	СформироватьПредставлениеТелефон();
	
	НовоеПредставление = "";
	
	КодСтраны	= ЗначениеПоПолю("КодСтраны");
	КодГорода 	= ЗначениеПоПолю("КодГорода");
	Добавочный	= ЗначениеПоПолю("Внутренний");
	
	НовоеПредставление = ?(ПустаяСтрока(КодСтраны), "", "+" + КодСтраны)+ ?(ПустаяСтрока(КодГорода), "", "(" + КодГорода + ")") + ЗначениеПоПолю("НомерТелефона") + ?(ПустаяСтрока(Добавочный), "", "," + Добавочный); 	
		
	Возврат СокрЛП(НовоеПредставление);
	
КонецФункции

&НаКлиенте
Процедура ЗначенияПолейЗначениеПриИзменении(Элемент)
		
	Представление = СформироватьПредставление();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторСтроки = Параметры.ИдентификаторСтроки;
	ПодготовитьКонтактныеДанные();  
	
	Если НЕ ЗначенияПолей.Количество() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Представление 	= ВладелецФормы.КонтактнаяИнформация.НайтиПоИдентификатору(ИдентификаторСтроки).Представление;
    Комментарий		= ВладелецФормы.КонтактнаяИнформация.НайтиПоИдентификатору(ИдентификаторСтроки).Комментарий;
		
КонецПроцедуры
&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Закрыть();
КонецПроцедуры
&НаКлиенте
Процедура Записать(Команда)
	СохранитьДанные();
КонецПроцедуры

&НаСервере
Процедура ПодготовитьКонтактныеДанные() Экспорт
	
	Объект	=  Параметры.Объект;
	Вид 	=  Параметры.Вид;
	Группа	=  Вид.Родитель;
	ID 		=  Параметры.ID;
	
	Запрос = Новый Запрос("	ВЫБРАТЬ
							|   &Объект             Объект,
							|   &ID                 ID,
							|   &Вид                Вид,
							|	Спр.Имя 			Поле,
							|	Спр.ПереводСтроки	ПереводСтроки,
							|	Спр.Вес				Вес,
							|	Спр.Имя.Сокращение 	Сокращение,
							|	ЕСТЬNULL(Рег.Значение, """") 		Значение
							|ИЗ 
							|	Справочник.ВидыКонтактнойИнформации.СоставПолей Спр
							|	ЛЕВОЕ СОЕДИНЕНИЕ
							|		(  ВЫБРАТЬ
							|				Поле,
							|				Значение
							|			ИЗ
							|				РегистрСведений.КонтактнаяИнформация
							|			ГДЕ
							|				Объект = &Объект И ID = &ID И Вид = &Вид 
							|		) Рег
							|	ПО
							|		Спр.Имя = Рег.Поле
							|ГДЕ
							|	Спр.Ссылка = &Вид");
							
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ID", 	ID);
	Запрос.УстановитьПараметр("Вид",	Вид);
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЗначенияПолей.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	//Для Каждого Строка Из ЗначенияПолей ЦИкл
	//	Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
	//		Строка.Значение = "";
	//	КонецЕсли;
	//КонецЦикла;
		
КонецПроцедуры
&НаСервере
Функция СохранитьЗначенияПолей()
	
	СоответствияЗначенийПолей = Новый Соответствие;
	Для Каждого Строка Из ЗначенияПолей Цикл
		СоответствияЗначенийПолей.Вставить(Строка.Поле, Строка.Значение);
	КонецЦикла;
	
	УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Новый Структура("Объект, ID, Вид, Представление, Комментарий",Объект, ID, Вид, Представление, Комментарий), СоответствияЗначенийПолей);
				
	Возврат Истина;
		
КонецФункции
&НаКлиенте
Процедура СохранитьДанные()
	
	ВладелецФормы.КонтактнаяИнформация.НайтиПоИдентификатору(ИдентификаторСтроки).Представление = Представление;
	ВладелецФормы.КонтактнаяИнформация.НайтиПоИдентификатору(ИдентификаторСтроки).Комментарий 	= Комментарий;

	СохранитьЗначенияПолей();

КонецПроцедуры


