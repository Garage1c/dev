
&НаСервере
Процедура ПрочитатьЗаказы()
							 
						 
	Запрос= Новый Запрос("ВЫБРАТЬ
	                     |
	                     |		Заказ ,
	                     |		ДокументОтгрузки ,
	                     |		СуммаОстаток
	                     |ПОМЕСТИТЬ НеоплаченнаяОтгрузка
	                     |	ИЗ
	                     |		РегистрНакопления.ДолгиПоОтгрузкам.Остатки(
	                     |				,
	                     |				Организация = &Организация
	                     |					И Контрагент = &Контрагент)  
	                     |	ГДЕ СуммаОстаток>0  
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Заказ,
	                     |	СУММА(СуммаОстаток) КАК СуммаОстаток
	                     |ПОМЕСТИТЬ НеотгруженныеЗак
	                     |ИЗ
	                     |	(ВЫБРАТЬ
	                     |		Заказ,
	                     |		-СуммаОстаток КАК СуммаОстаток
	                     |	ИЗ
	                     |		НеоплаченнаяОтгрузка 
	                     |	
	                     |	ОБЪЕДИНИТЬ ВСЕ
	                     |	
	                     |	ВЫБРАТЬ
	                     |		Заказ,
	                     |		СуммаОстаток
	                     |	ИЗ
	                     |		РегистрНакопления.ДолгиПоЗаказам.Остатки(
	                     |				,
	                     |				Организация = &Организация
	                     |					И Контрагент = &Контрагент)) КАК ВТ  
	                     |	
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	Заказ
	                     |
	                     |ИМЕЮЩИЕ
	                     |	СУММА(СуммаОстаток) > 0
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Заказ,
	                     |	Представление(Заказ) прЗаказ,
	                     |	СуммаОстаток СуммаЗаказа,
	                     |	ДокументОтгрузки,
	                     |	Представление(ДокументОтгрузки) прДокументОтгрузки,
	                     |	Ложь Оплатить,
	                     |	0 Сумма
	                     |ИЗ
	                     |	НеоплаченнаяОтгрузка  
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	Заказ ,
	                     |	Представление(Заказ) прЗаказ,
	                     |	СуммаОстаток ,
	                     |	НЕОПРЕДЕЛЕНО, 
	                     |	"""", 
	                     |	Ложь, 
	                     |	0 
	                     |ИЗ
	                     |	НеотгруженныеЗак  
	                     |
	                     |");
						 
						 
						 
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
	
	таблЗаказы.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//если документ проведен - добавим выбранные документы
	Если ТекущийДокумент.Проведен Тогда
	
		Запрос.УстановитьПараметр("Регистратор", 	ТекущийДокумент);
		Запрос.Текст="ВЫБРАТЬ
		             |	Заказ,
	                 |	Представление(Заказ) прЗаказ,
		             |	ДокументОтгрузки,
	                 |	Представление(ДокументОтгрузки) прДокументОтгрузки,
		             |	Сумма СуммаЗаказа,
		             |	Истина Оплатить,
		             |	Сумма
		             |ИЗ
		             |	Документ."+ТекущийДокумент.Метаданные().Имя+".РасшифровкаСуммы  
		             |ГДЕ
		             |	Ссылка = &Регистратор";
		
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НовСтр=ТаблЗаказы.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,выборка);
		КонецЦикла	
	КонецЕсли;	

	ТаблЗаказы.Сортировать("прЗаказ,прДокументОтгрузки");
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаказы_нов()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Заказ.Дата, ДокументОтгрузки.Дата) ДатаДокумента,
	|	Заказ,
	|	ДокументОтгрузки,
	|	СуммаКонечныйОстаток 	СуммаЗаказа,
	|	СуммаРасход				УжеОплачен
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(," + ?(ДатаПросмотра = '00010101',"","&Дата") + ",,,
	|			Организация = &Организация И 
	|			Заказ.Контрагент = &Контрагент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента
	|");
	
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
	
	таблЗаказы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация 	= Параметры.Организация;
	Контрагент 		= Параметры.Контрагент;
	ДатаПросмотра	= Параметры.ДатаПросмотра;
	Сумма			= Параметры.Сумма;
	ТекущийДокумент	= Параметры.ТекущийДокумент;
	
	ПрочитатьЗаказы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСуммы()
	
	СуммаАванса = Сумма;
	
	оплСтроки = таблЗаказы.НайтиСтроки(Новый Структура("Оплатить", Истина));
	
	Для Каждого Строка Из оплСтроки Цикл
		
		СуммаАванса = СуммаАванса - Строка.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

// ВЫБОР

&НаСервере
Функция ПолучитьТаблицуЗначенийСтрокой()
	
	НовТабл = таблЗаказы.Выгрузить();
	НовТабл.Очистить();
	
	СтрокиОплат = таблЗаказы.НайтиСтроки(Новый Структура("Оплатить", Истина));
	
	Для Каждого Строка Из СтрокиОплат Цикл
		ЗаполнитьЗначенияСвойств(НовТабл.Добавить(), Строка);
	КонецЦикла;
	
	//аванс
	Если СуммаАванса>0 тогда
		НовСтр=НовТабл.Добавить();
		НовСтр.Заказ=Неопределено;
		Новстр.ДокументОтгрузки=Неопределено;
		НовСтр.Сумма = СуммаАванса;
	КонецЕсли;
	
	Возврат ЗначениеВСтрокуВнутр(НовТабл);
	
КонецФункции
&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ПолучитьТаблицуЗначенийСтрокой());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура таблЗаказыОплатитьПриИзменении(Элемент)
	
	текДанные = Элементы.таблЗаказы.ТекущиеДанные;
	
	Если текДанные.Оплатить Тогда
		
		Оплатить 			= Мин(СуммаАванса, текДанные.СуммаЗаказа);
		текДанные.Сумма 	= Оплатить;
		СуммаАванса 		= СуммаАванса - Оплатить;
		
		Если Не Оплатить Тогда
			текДанные.Оплатить = Ложь;
		КонецЕсли;
		
	Иначе
		
		СуммаАванса = СуммаАванса + текДанные.Сумма;
		текДанные.Сумма = 0;
		
	КонецЕсли;
	
КонецПроцедуры
