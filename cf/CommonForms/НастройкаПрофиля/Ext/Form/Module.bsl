&НаКлиенте
Перем стЗначение, ОбновитьПредставление, ЗакрытьПринудительно;

#Область Загрузка_сохранение

&НаСервере
Процедура ДобавитьСохранениеРеквизита(ТекущийОбъект, текЭлементы, ВидЗаписи)
	
	Для Каждого Элемент Из текЭлементы Цикл
		
		Если ЗначениеЗаполнено(Элемент.Значение) И Элемент.Настройка.ВидЗаписи = ВидЗаписи Тогда
			ТекущийОбъект[Элемент.Настройка.Путь] = Элемент.Значение; КонецЕсли;
		
		ДобавитьСохранениеРеквизита(ТекущийОбъект, Элемент.ПолучитьЭлементы(), ВидЗаписи); КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ДобавитьСохранениеНастройки(Таблица, текЭлементы, ВидЗаписи = Неопределено)
	
	Для Каждого Элемент Из текЭлементы Цикл
		
		Если ЗначениеЗаполнено(Элемент.Значение) И (ВидЗаписи = Неопределено Или Элемент.Настройка.ВидЗаписи = ВидЗаписи) Тогда
			ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Элемент); КонецЕсли;
		
		ДобавитьСохранениеНастройки(Таблица, Элемент.ПолучитьЭлементы()); КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ДобавитьСохранениеВМоиНастройки(Набор, текЭлементы)
	
	Для Каждого Элемент Из текЭлементы Цикл
		
		Если ЗначениеЗаполнено(Элемент.Значение) И Элемент.Настройка.ВидЗаписи = Перечисления.ВидыЗаписейПрофиля.МоиНастройки Тогда
			
			Настройка 	= Элемент.Настройка.Путь;
			Строки 		= Набор.НайтиСтроки(Новый Структура("Пользователь, Настройка", Пользователь, Настройка));
			НовЗапись = ?(Строки.Количество(), Строки[0], Набор.Добавить());
			
			НовЗапись.Пользователь 	= Пользователь;
			НовЗапись.Значение 		= Элемент.Значение;
			НовЗапись.Настройка 	= Настройка; КонецЕсли;
		
		ДобавитьСохранениеВМоиНастройки(Набор, Элемент.ПолучитьЭлементы()); КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура СчитатьНастрокиПользователяИБ(СтруктураПользователяИБ, текЭлементы)
	
	
	Для Каждого Элемент Из текЭлементы Цикл
		Если ЗначениеЗаполнено(Элемент.Значение) И Элемент.Настройка.ВидЗаписи = Перечисления.ВидыЗаписейПрофиля.Конфигуратор Тогда
			
			Если Элемент.Настройка.Путь = "Роли" Тогда
				
				Массив = ?(СтруктураПользователяИБ.Свойство("Роли"), СтруктураПользователяИБ.Роли, Новый Массив);
				Массив.Добавить(Элемент.Значение);
				СтруктураПользователяИБ.Вставить("Роли", Массив);
				
			Иначе
				СтруктураПользователяИБ.Вставить(Элемент.Настройка.Путь, Элемент.Значение); КонецЕсли; КонецЕсли;
			
		СчитатьНастрокиПользователяИБ(СтруктураПользователяИБ, Элемент.ПолучитьЭлементы()); КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНаборыРегистровДляЗаписиПользователя(Наборы, текНастройки, НастройкаРегистров)
	
	// Ныряет в дерево и вытаскивает массив в котором наборы
	
	текЭлементы = текНастройки.ПолучитьЭлементы();
	
	Для Каждого Элемент Из текЭлементы Цикл
		
		Если Элемент.Настройка.ВидЗаписи = Перечисления.ВидыЗаписейПрофиля.РегСведенийПоПользователю Тогда
			
			Подчиненные = Элемент.ПолучитьЭлементы();
			Если Не Подчиненные.Количество() Тогда Продолжить КонецЕсли;
			
			ИмяРегистра = Элемент.Настройка.Путь;
			
			// Найдем тек настройку 
			
			Для Каждого ТекНастр Из НастройкаРегистров Цикл Если ТекНастр.ИмяРегистра = ИмяРегистра Тогда Прервать КонецЕсли; КонецЦикла;
			
			// Заполним набор
			
			новНабор = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
			новНабор.Отбор[ТекНастр.ИмяПользователь].Установить(Пользователь);
			
			Для Каждого Подчиненный Из Подчиненные Цикл
				
				НовЗапись = новНабор.Добавить();
				НовЗапись[ТекНастр.ИмяПользователь] = Пользователь;
				НовЗапись[ТекНастр.ИмяЗначение] 	= Подчиненный.Значение; КонецЦикла; 
			
			Наборы.Добавить(новНабор);КонецЕсли;
		
		// ищем далее
		
		ПолучитьНаборыРегистровДляЗаписиПользователя(Наборы, Элемент, НастройкаРегистров); КонецЦикла;
	
КонецФункции
&НаСервере
Функция СохранитьПользователя()
	
	НачатьТранзакцию();
	
	// Сохраним пользователя
	
	СпрОбъект = Пользователь.ПолучитьОбъект();
	ДобавитьСохранениеРеквизита(СпрОбъект, Настройки.ПолучитьЭлементы(), Перечисления.ВидыЗаписейПрофиля.Пользователь);
	
	Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(СпрОбъект ) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь; КонецЕсли;
		
	// Сохраним мои настройки
	
	Набор = РегистрыСведений.ЗначенияНастроекПользователя.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(Пользователь);
	Набор.Прочитать();
	ТЗНаб = Набор.Выгрузить();
	ДобавитьСохранениеВМоиНастройки(ТЗНаб, Настройки.ПолучитьЭлементы());
	
	Набор.Загрузить(ТЗНаб);
	Набор.Отбор.Пользователь.Установить(Пользователь);
	
	Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Набор) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь; КонецЕсли;
	
	// Сохраним регистры сведений
	
	Наборы = Новый Массив;
	ПолучитьНаборыРегистровДляЗаписиПользователя(Наборы, Настройки, НастройкиПользователя.ПолучитьПодключаемыеРегистрыНастроекПользователя());
	
	Для Каждого Набор Из Наборы Цикл 
		Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Набор) Тогда
			ОтменитьТранзакцию();
			Возврат Ложь; КонецЕсли; КонецЦикла;
	
	// Сохраним конфигуратор
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ПользовательИБ);
	Если ПользовательИБ <> Неопределено Тогда
		
		НастройкиИБ = Новый Структура;
		СчитатьНастрокиПользователяИБ(НастройкиИБ, Настройки.ПолучитьЭлементы());
		
		НастройкиИБ.Свойство("ПоказыватьВСпискеВыбора", ПользовательИБ.ПоказыватьВСпискеВыбора);
		Если НастройкиИБ.Свойство("Роли") Тогда
			ПользовательИБ.Роли.Очистить();
			Для Каждого ИмяРоли ИЗ НастройкиИБ.Роли Цикл ПользовательИБ.Роли.Добавить(Метаданные.Роли[ИмяРоли]) КонецЦикла; КонецЕсли;
			
		Если НастройкиИБ.Количество() И Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(ПользовательИБ) Тогда
			ОтменитьТранзакцию();
			Возврат Ложь; КонецЕсли; КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция СохранитьПрофиль()
	
	ПрофильОбъект = Профиль.ПолучитьОбъект();
	
	// Очистим настройки
	
	ПрофильОбъект.Настройки.Очистить();
	
	// Сохраним настройки
	
	ДобавитьСохранениеНастройки(ПрофильОбъект.Настройки, Настройки.ПолучитьЭлементы());
	
	// Запишем
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(ПрофильОбъект);
	
КонецФункции

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Пользователь.Пустая() Тогда
		Если Не СохранитьПрофиль() Тогда Возврат КонецЕсли;
	Иначе
		Если Не СохранитьПользователя() Тогда Возврат КонецЕсли; КонецЕсли;
		
	Модифицированность = Ложь;
	Оповестить("СохраненыНастройкиПрофиля", Новый Структура("Пользователь, Профиль", Пользователь, Профиль) ,ЭтаФорма);
	Если Открыта() Тогда 
		Закрыть() КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Профиль 		= Параметры.ПрофильИлиПользователь;
	Пользователь 	= Параметры.ПрофильИлиПользователь;
	
	Дерево = НастройкиПользователя.ПолучитьДеревоНастроекПрофиля(Параметры.ПрофильИлиПользователь);
	
	// Вытащим в форму
	
	КонвертацияТипов.ЗагрузитьДеревоВДанныеФормыДерево(Дерево, Настройки);
	
КонецПроцедуры

Функция ПолучитьПердставлениеКоллекции(Коллекция)
	
	стр = "";
	Для Каждого Элемент Из Коллекция Цикл стр = Стр + ?(стр = "","",", ") + Строка(Элемент.Значение) КонецЦикла;
	
	Возврат стр;
	
КонецФункции

#Область Управление_деревом

&НаСервере
Функция ПолучитьСписокРолейКонфигуратора()
	
	Список = Новый СписокЗначений;
	
	Для Каждого Роль Из Метаданные.Роли Цикл Список.Добавить(Роль.Имя, Роль.Синоним); КонецЦикла;
	Возврат Список;
	
КонецФункции

&НаКлиенте
Процедура НастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура НастройкиЗначениеПриИзменении(Элемент = Неопределено)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
	
		ТекДанные.Изменилось 	= Истина;
		Модифицированность 		= Истина;
		
		// если это таблица тогда при изменении добавим новую строку или удалим удалим текущюю
		
		Если ТекДанные.ЭтоТаблица И ЗначениеЗаполнено(ТекДанные.Представление) И стЗначение <> ТекДанные Тогда
			
			НовСтрока = ТекДанные.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекДанные);
			НовСтрока.Представление = "";
			
			//ТекДанные.Значение = ПолучитьПердставлениеКоллекции(ТекДанные.ПолучитьЭлементы()); 
			ТекДанные.Значение = Неопределено; 
			Элементы.Настройки.Развернуть(Элементы.Настройки.ТекущаяСтрока); КонецЕсли; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ВыбранаРоль(Элемент, ДопПараметры) Экспорт
	
	Если Элемент <> Неопределено Тогда
		
		Элементы.Настройки.ТекущиеДанные.Значение = Элемент.Значение;
		НастройкиЗначениеПриИзменении(); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоРольВКонфигураторе(Настройка)
	
	Возврат Настройка.ВидЗаписи = Перечисления.ВидыЗаписейПрофиля.Конфигуратор И Настройка.Путь = "Роли";
	
КонецФункции
&НаКлиенте
Процедура НастройкиПередНачаломИзменения(Элемент, Отказ)
	
	текДанные = Элементы.Настройки.ТекущиеДанные;
	
	Если текДанные.ЭтоГруппа Тогда Отказ = Истина
	Иначе	
		
		стЗначение = текДанные.Значение;
		
		Если ЭтоРольВКонфигураторе(текДанные.Настройка) Тогда
			Отказ = Истина;
			ПоказатьВыборизСписка(Новый ОписаниеОповещения("ВыбранаРоль", ЭтаФорма), ПолучитьСписокРолейКонфигуратора(), Элемент); КонецЕсли; КонецЕсли;
			//ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыбранаРоль", ЭтаФорма), ПолучитьСписокРолейКонфигуратора(), Элемент); КонецЕсли; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура НастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Настройки.ТекущийЭлемент = Элементы.НастройкиПредставление Тогда
		ПоказатьЗначение(,Элементы.Настройки.ТекущиеДанные.Настройка); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура НастройкиПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	//Если Не ТекДанные.ЭтоТаблица Или Не ПустаяСтрока(ТекДанные.Представление) Тогда
	
	Если ТекДанные.ЭтоТаблица И ПустаяСтрока(ТекДанные.Представление) Тогда
		ОбновитьПредставление = Истина;
	Иначе
		Отказ 					= Истина;
		ТекДанные.Значение 		= Неопределено;
		ТекДанные.Изменилось 	= Истина; 
		Модифицированность		= Истина; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		Если ОбновитьПредставление = Истина И ТекДанные.ЭтоТаблица Тогда
			
			хзЧеПисать = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьПредставление = Ложь;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПользовательЗакрываетНеСохранив(Ответ, ДопСвойства) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ЗакрытьПринудительно = Истина;
		Закрыть(); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И ЗакрытьПринудительно <> Истина Тогда
		
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПользовательЗакрываетНеСохранив", ЭтаФорма), "Настроки профиля были изменены. Закрыть без сохранения?", РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет,"У нас к вам серъёзный вопрос", КодВозвратаДиалога.Нет); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПланНастроек(Команда)
	
	ОткрытьФорму("ПланВидовХарактеристик.НастройкиПрофилей.ФормаСписка");
	
КонецПроцедуры
