
&НаКлиенте
Перем вСостояниеСобирается;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получим параметры
	
	ДокументСсылка 	= параметры.ДокументСсылка;
	Сборщик 		= параметры.Сборщик;
	
	// Определим откду будем брать товары
	
	ИмяТаблицыДокумента = Параметры.ИмяТаблицыДокумента;
	
	// Загрузим ТСД
	
	КонвертацияТипов.ДобавитьТаблицуКДругойТаблице(ТСД, Параметры.МассивНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьРасхождения(Таблица1, Таблица2, ИмяКоличествоРазницы, ДобавлятьТоварыКоторыеЕстьВТаблице2НоНетВТаблице1 = Истина)
	
	// Проставляем в таблице 1

	Для Каждого Строка Из Таблица1 Цикл
		
		Отбор = Новый Структура("Номенклатура, Упаковка", Строка.Номенклатура, Строка.Упаковка);
		
		// Занесем разницу
		
		Сумма1 = КонвертацияТипов.ПолучитьСуммуКолонкиПоУсловию(Таблица1, "Количество", Отбор);
		Сумма2 = КонвертацияТипов.ПолучитьСуммуКолонкиПоУсловию(Таблица2, "Количество", Отбор);
		
		Строка[ИмяКоличествоРазницы] = Сумма2 - Строка.Количество; КонецЦикла;
	
	// Добавим новые которых нет в Таблице 1
	
	Если ДобавлятьТоварыКоторыеЕстьВТаблице2НоНетВТаблице1 Тогда Для Каждого Строка Из Таблица2 Цикл
		
		Отбор = Новый Структура("Номенклатура, Упаковка", Строка.Номенклатура, Строка.Упаковка);
		
		Если Не Таблица1.НайтиСтроки(Отбор).Количество() Тогда
			
			НовСтрока = Таблица1.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Отбор);
			НовСтрока[ИмяКоличествоРазницы] = -Строка.Количество; КонецЕсли;КонецЦикла;КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПроставитьРасхожденияКоличества()
	
	ПроставитьРасхождения(ТСД, Товары, "РасхождениеСДокументом");
	ПроставитьРасхождения(Товары, ТСД, "РасхождениеСТСД", Ложь);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСостояниеСобирается()
	
	Возврат Перечисления.СостояниеСборкиЗаказа.Собирается;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Загрузим документ из владельца
	
	Для Каждого Строка Из ВладелецФормы[ИмяТаблицыДокумента] Цикл ЗаполнитьЗначенияСвойств(Товары.Добавить(),Строка);КонецЦикла;
	
	// Проставим количество
	
	ПроставитьРасхожденияКоличества();
	
	вСостояниеСобирается = ПолучитьСостояниеСобирается();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	текДанные = Элементы.Товары.ТекущиеДанные;
	
	текНоменклатура 	= текДанные.Номенклатура;
	текУпаковка 		= текДанные.Упаковка;
	
КонецПроцедуры

&НаКлиенте
Процедура ТСДПриАктивизацииСтроки(Элемент)
	
	текДанные = Элементы.ТСД.ТекущиеДанные;
	
	текНоменклатура 	= текДанные.Номенклатура;
	текУпаковка 		= текДанные.Упаковка;
	
КонецПроцедуры

&НаКлиенте
Процедура Собрано(Команда)
	
	// Сперва обнулим
	
	Для Каждого Строка Из ВладелецФормы[ИмяТаблицыДокумента] Цикл Если Строка.Состояние = вСостояниеСобирается Тогда Строка.СОбрано = Ложь;КонецЕсли;КонецЦикла;
			
	// Потом добавим в те которые в тсд
	
	Для Каждого Строка Из Товары Цикл
		
		СтрокиПоиска = ВладелецФормы[ИмяТаблицыДокумента].НайтиСтроки(Новый Структура("Номенклатура, Упаковка, Цена", Строка.Номенклатура, Строка.Упаковка, Строка.Цена));
		
		// Если строка одна тогда проставим ее
																
		Если СтрокиПоиска.Количество() = 1 Тогда СтрокаВДокументе = СтрокиПоиска[0]; КоличествоСобранного = Строка.Количество + Строка.РасхождениеСТСД; Если КоличествоСобранного Тогда
			
			// Разобъем строку в которой собрали не все
			
			Если Строка.РасхождениеСТСД < 0 Тогда
				
				// Заполним новую строку
				
				НовСтрока = ВладелецФормы[ИмяТаблицыДокумента].Вставить(ВладелецФормы[ИмяТаблицыДокумента].Индекс(СтрокаВДокументе));
				ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаВДокументе);
				НовСтрока.Количество = НовСтрока.Количество - КоличествоСобранного; КонецЕсли; КонецЕсли;
		
				// Уменьшим количество и скажем что сборано в строке документа
				
				СтрокаВДокументе.Сборщик	= Сборщик;
				СтрокаВДокументе.Собрано 	= Истина;
				СтрокаВДокументе.Количество = Мин(Строка.Количество, КоличествоСобранного);
			
		// Если строк больше то хз че делать
			
		ИначеЕсли СтрокиПоиска.Количество() > 1 Тогда ОбщиеФункции.СообщитьТекст("Не смог найти кто собрал " + Строка.Номенклатура);КонецЕсли; КонецЦикла;
		
	// Закрываем форму
		
	Закрыть();
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписокСборщиков()
	
	Возврат ДиалогиСПользователем.ПолучитьСписокСборщиков();
	
КонецФункции
&НаКлиенте
Процедура ВыбратьСборщика(Команда)
	
	Список 		= ПолучитьСписокСборщиков();
	ВЫбЭлемент 	= ВыбратьИзМеню(Список, Элементы.ВыбратьСборщика);
	
	Если ВЫбЭлемент <> Неопределено Тогда Сборщик = ВЫбЭлемент.Значение КонецЕсли;
		
КонецПроцедуры
