
&НаСервере
Функция ПолучитьТекстЗапроса()
	
	Если Вид=0 Тогда //по заказам
		
		Если НЕ ЭтоВозвратОплаты Тогда
			
			ТекстЗапроса="
			|Выбрать ТЧ.Заказ,ТЧ.Сумма Поместить ТЧ из &ТЧ как ТЧ;
			|
			|Выбрать """" НомерПП, Заказ, Сумма(СуммаОстаток),Сумма(Сумма),Максимум(Закрываем)  из (
			//остатки
			|Выбрать Заказ, СуммаОстаток, 0 Сумма, Ложь Закрываем из РегистрНакопления.ДолгиПоЗаказам.Остатки(,Контрагент=&Контрагент) ГДЕ СуммаОстаток>0 и НЕ Заказ=Неопределено
			|Объединить все
			//плюс движения этого дока
			|Выбрать Заказ, Сумма, 0 , Ложь  из РегистрНакопления.ДолгиПоЗаказам ГДЕ Регистратор=&Регистратор и НЕ Заказ=Неопределено
			|Объединить все
			//плюс выбранные заказы
			|Выбрать Заказ, 0, Сумма, Истина из ТЧ ГДЕ Не Заказ=Неопределено
			|) как ВТ
			|Сгруппировать по Заказ
			|Упорядочить по Заказ.Дата
			|"
			;
			
		Иначе //для возвратов оплат
			
			ТекстЗапроса="
			|Выбрать ТЧ.Заказ,ТЧ.Сумма Поместить ТЧ из &ТЧ как ТЧ
			|;
			//входящие номера платежек
			|Выбрать Ссылка.НомерВходящегоДокумента НомерПП, Заказ Поместить НомераПП из Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы ГДЕ Ссылка.Контрагент=&Контрагент и Ссылка.Проведен
			|;
			|
			|Выбрать НомерПП, ВТ.Заказ, Сумма(СуммаОстаток),Сумма(Сумма),Максимум(Закрываем)  из (
			//все платежи поступления ДС идут со знаком+ возвраты со знаком- . В итоге получаем суммы платежей за минусом возвращенных.
			|Выбрать Заказ,Сумма СуммаОстаток,0 Сумма, Ложь Закрываем из РегистрНакопления.ДолгиПоЗаказам ГДЕ Контрагент=&Контрагент и ВидДвижения=Значение(ВидДвиженияНакопления.расход)  и не Заказ=Неопределено
			|объединить все
			//плюс движения этого дока
			|Выбрать  Заказ, -Сумма, 0 , Ложь  из РегистрНакопления.ДолгиПоЗаказам ГДЕ Регистратор=&Регистратор и НЕ Заказ=Неопределено
			|Объединить все
			//плюс выбранные заказы
			|Выбрать  Заказ, 0, Сумма, Истина из ТЧ ГДЕ Не Заказ=Неопределено
			|) как ВТ
			|Левое соединение НомераПП
			|По ВТ.Заказ=НомераПП.Заказ
			|Сгруппировать по НомерПП,ВТ.Заказ
			|Упорядочить по ВТ.Заказ.Дата
			|"
			;
			
		КонецЕсли;
		
	Иначе//по отгрузкам
		
		Если НЕ ЭтоВозвратОплаты Тогда
			
			ТекстЗапроса="
			|Выбрать ТЧ.Заказ, ТЧ.ДокументОтгрузки, ТЧ.Сумма Поместить ТЧ из &ТЧ как ТЧ;
			|
			|Выбрать """" НомерПП, Заказ, ДокументОтгрузки, Сумма(СуммаОстаток),Сумма(Сумма),Максимум(Закрываем)  из (
			//остатки
			|Выбрать Заказ, ДокументОтгрузки, СуммаОстаток, 0 Сумма, Ложь Закрываем из РегистрНакопления.ДолгиПоОтгрузкам.Остатки(,Контрагент=&Контрагент) ГДЕ СуммаОстаток>0  и НЕ ДокументОтгрузки=Неопределено
			|Объединить все
			//плюс движения этого дока
			|Выбрать Заказ, ДокументОтгрузки, Сумма, 0 , Ложь  из РегистрНакопления.ДолгиПоОтгрузкам ГДЕ Регистратор=&Регистратор  и НЕ ДокументОтгрузки=Неопределено
			|Объединить все
			//плюс выбранные заказы
			|Выбрать Заказ, ДокументОтгрузки, 0, Сумма, Истина из ТЧ ГДЕ Не ДокументОтгрузки=Неопределено
			|) как ВТ
			|Сгруппировать по Заказ,ДокументОтгрузки
			|Упорядочить по Заказ.Дата
			|"
			;
			
		Иначе //для возвратов оплат
			
			ТекстЗапроса="
			|Выбрать ТЧ.Заказ, ТЧ.ДокументОтгрузки, ТЧ.Сумма Поместить ТЧ из &ТЧ как ТЧ
			|;
			//входящие номера платежек
			|Выбрать Ссылка.НомерВходящегоДокумента НомерПП, Заказ, ДокументОтгрузки Поместить НомераПП из Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы ГДЕ Ссылка.Контрагент=&Контрагент и Ссылка.Проведен
			|;
			|
			|Выбрать НомерПП, ВТ.Заказ, ВТ.ДокументОтгрузки, Сумма(СуммаОстаток),Сумма(Сумма),Максимум(Закрываем)  из (
			//все платежи поступления ДС идут со знаком+ возвраты со знаком- . В итоге получаем суммы платежей за минусом возвращенных.
			|Выбрать Заказ, ДокументОтгрузки, Сумма СуммаОстаток,0 Сумма, Ложь Закрываем из РегистрНакопления.ДолгиПоОтгрузкам ГДЕ Контрагент=&Контрагент и ВидДвижения=Значение(ВидДвиженияНакопления.расход)  и НЕ ДокументОтгрузки=Неопределено
			|объединить все
			//плюс движения этого дока
			|Выбрать  Заказ, ДокументОтгрузки, -Сумма, 0 , Ложь  из РегистрНакопления.ДолгиПоОтгрузкам ГДЕ Регистратор=&Регистратор  и НЕ ДокументОтгрузки=Неопределено
			|Объединить все
			//плюс выбранные заказы
			|Выбрать  Заказ, ДокументОтгрузки, 0, Сумма, Истина из ТЧ ГДЕ Не ДокументОтгрузки=Неопределено
			|) как ВТ
			|Левое соединение НомераПП
			|По ВТ.Заказ=НомераПП.Заказ
			|Сгруппировать по НомерПП,ВТ.Заказ, ВТ.ДокументОтгрузки
			|Упорядочить по ВТ.Заказ.Дата
			|"
			;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции



&НаСервере
Процедура ПрочитатьЗаказы()
						 
	Запрос= Новый Запрос;
	
	Запрос.Текст=ПолучитьТекстЗапроса();
	Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
	Запрос.УстановитьПараметр("Регистратор",ТекущийДокумент);
	Запрос.УстановитьПараметр("ТЧ",ТЧДок.Выгрузить());
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	//ДобавитьИнформациюПоСЧФ(ТЗ);
	
	таблЗаказы.Загрузить(ТЗ);
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Контрагент 		= Параметры.Контрагент;
	Сумма			= Параметры.Сумма;
	ТекущийДокумент	= Параметры.ТекущийДокумент;
	ТЗ = ПолучитьИзВременногоХранилища(Параметры.АдресРасшифровкиСуммы);
	ТЧДок.Загрузить(ТЗ);
	ЭтоВозвратОплаты = Параметры.ЭтоВозвратОплаты;
	
	ПрочитатьЗаказы();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСуммы()
	
	СуммаАванса=Сумма-таблЗаказы.Итог("Сумма");
	
КонецПроцедуры


&НаСервере
Функция ПолучитьТаблицуЗначенийСтрокой()
	
	НовТабл=ТаблЗаказы.Выгрузить().СкопироватьКолонки();
	
	Для Каждого Строка Из таблЗаказы Цикл
		Если Строка.Сумма>0 Тогда
			ЗаполнитьЗначенияСвойств(НовТабл.Добавить(), Строка);
		КонецЕсли;	
	КонецЦикла;
	
	//аванс
	Если СуммаАванса>0 тогда
		НовСтр=НовТабл.Добавить();
		НовСтр.Заказ=Неопределено;
		НовСтр.Сумма = СуммаАванса;
	КонецЕсли;
	
	Возврат ЗначениеВСтрокуВнутр(НовТабл);
	
КонецФункции


&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ПолучитьТаблицуЗначенийСтрокой());
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостью();
	ОбновитьСуммы();
	
КонецПроцедуры


&НаКлиенте
Процедура таблЗаказыОплатитьПриИзменении(Элемент)
	
	текДанные = Элементы.таблЗаказы.ТекущиеДанные;
	
	Если текДанные.Закрываем Тогда
		
		ЗакрываемаяСумма 	= Мин(СуммаАванса, текДанные.СуммаОстаток);
		текДанные.Сумма 	= ЗакрываемаяСумма;
		
		Если Не ЗакрываемаяСумма Тогда
			текДанные.Закрываем = Ложь;
		КонецЕсли;
		
	Иначе
		
		текДанные.Сумма = 0;
		
	КонецЕсли;
	
	ОбновитьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура таблЗаказыСуммаПриИзменении(Элемент)
	
	текДанные = Элементы.таблЗаказы.ТекущиеДанные;
	
	ОбновитьСуммы();
	
	Если СуммаАванса<0 Тогда
		текДанные.Сумма=текДанные.Сумма+СуммаАванса;
		ОбновитьСуммы();
	КонецЕсли;	
	
	Если текДанные.Сумма>0 Тогда
		текДанные.Закрываем=Истина;
	Иначе
		текДанные.Закрываем=Ложь;
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	УправлениеВидимостью();
	ПрочитатьЗаказы();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()
	Элементы.таблЗаказы.ПодчиненныеЭлементы.таблЗаказыНомерПП.Видимость=?(ЭтоВозвратОплаты,Истина,Ложь);
	Элементы.таблЗаказы.ПодчиненныеЭлементы.таблЗаказыДокументОтгрузки.Видимость=?(Вид=0,Ложь,Истина);
КонецПроцедуры	


//&НаСервере
//Процедура ДобавитьИнформациюПоСчф(ТЗ)
//	Запрос=Новый Запрос;
//	Запрос.УстановитьПараметр("ТЗ",ТЗ);
//	Запрос.Текст=
//	"Выбрать  ТЗ.Заказ Поместить Заказы из &ТЗ ТЗ
//	|;
//	|Выбрать Заказ, Номер из Документ.РеализацияТоваров ГДЕ Заказ в (Выбрать Заказы.Заказ из Заказы)
//	|Объединить все
//	|Выбрать Заказ, Номер из Документ.РеализацияПереданныхТоваров ГДЕ Заказ в (Выбрать Заказы.Заказ из Заказы)
//	|Итоги по Заказ
//	|";
//	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	
//	ТЗ.Колонки.Добавить("НомерСчф");
//	Пока Выборка.Следующий() Цикл
//		НомерСчф="";
//		ВыборкаРеализации=Выборка.Выбрать();
//		Пока ВыборкаРеализации.Следующий() Цикл
//			НомерСчф=НомерСчф + ВыборкаРеализации.Номер+"  ";
//		КонецЦикла;
//		
//		Если ЗначениеЗаполнено(НомерСчф) Тогда
//			Отбор=Новый Структура("Заказ",Выборка.Заказ);
//			Строки=ТЗ.НайтиСтроки(Отбор);
//			Для Каждого Заказ из Строки Цикл
//				Заказ.НомерСчф=НомерСчф;
//			КонецЦикла;	
//		КонецЕсли;
//	КонецЦикла;
//	
//КонецПроцедуры	

