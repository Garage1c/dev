
&НаСервере
Процедура ВывестиРезультат(Сообщение)
	
	Результат = Результат + ?(ПустаяСтрока(Результат),"","
	|----------------------------------------
	|") + Сообщение;
						
КонецПроцедуры

&НаСервере
Процедура get_categories_НаСервере()
	
	err 	= "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьКатегории(Новый Структура("guid_category", w1_Json.UnJSON(guids)), err);
	ИначеЕсли ЧейAPI = 1 Тогда	
		Возвр = API_dil.ПолучитьКатегории(Новый Структура("guid_category", guids), err);
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьКатегории(Новый Структура("guid_category", w1_Json.UnJSON(guids)), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
КонецПроцедуры
&НаКлиенте
Процедура get_categories(Команда)
	
	get_categories_НаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Результат = "";
	
КонецПроцедуры

&НаСервере
Процедура get_products_НаСервере()
	
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьТовары(
					Новый Структура("guid_category, ГуидыТоваров, НомерНачала, НомерОкончания",
									Addition, w1_Json.UnJSON(guids), begin_number, end_number), err);
	ИначеЕсли ЧейAPI = 1 Тогда	
		Возвр = API_dil.ПолучитьТовары(
				Новый Структура("guid_category, Артикул, НомерНачала, НомерОкончания",
									Addition, guids, begin_number, end_number), err);
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьТовары(
					Новый Структура("guid_category, ГуидыТоваров, НомерНачала, НомерОкончания",
									Addition, w1_Json.UnJSON(guids), begin_number, end_number), err);
	КонецЕсли;
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
	
КонецПроцедуры
&НаКлиенте
Процедура get_products(Команда)
	
	get_products_НаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРобота(Команда)
	
	ТекстЛога = "";
	
	ОбработкаРоботаНаСервере(ТекстЛога);
	
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(ТекстЛога);
	Текст.Показать("Лог работы робота");
	
	
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ОбработкаРоботаНаСервере(ТекстЛога)
	
	API2.ОтправлениеЗапросовСайту_API2(ТекстЛога);
	
КонецПроцедуры

&НаКлиенте
Процедура get_manufacturers(Команда)
	get_manufacturersНаСервере();
КонецПроцедуры
&НаСервере
Процедура get_manufacturersНаСервере()
	
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьПроизводителей(Новый Структура,err);
	ИначеЕсли ЧейAPI = 1 Тогда	
		Возвр = API_dil.ПолучитьПроизводителей(Новый Структура,err);
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьПроизводителей(Новый Структура,err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
	
КонецПроцедуры

&НаКлиенте
Процедура get_warehouses(Команда)
	get_warehousesНаСервере();
КонецПроцедуры
&НаСервере
Процедура get_warehousesНаСервере()
	Если ЧейAPI = 1 Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	КонецЕсли;
	
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьСклады(Новый Структура("guid", guids),err);
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьСклады(Новый Структура("guid", guids),err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБуфер(Команда)
	
	ОткрытьФорму("РегистрСведений.БуферКомандДляСайта_API2.ФормаСписка",,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура get_image(Команда)
	
	guid_image = "";
	Если ВвестиСтроку(guid_image, "guid картинки", 36) Тогда
		get_imageНаСервере(guid_image) КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура get_imageНаСервере(guid_image)
	
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьКартинку(Новый Структура("guid_image", guid_image),err);
	ИначеЕсли ЧейAPI = 1 Тогда
		Возвр = API_dil.ПолучитьКартинку(Новый Структура("guid_image", guid_image),err);
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьКартинку(Новый Структура("guid_image", guid_image),err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылку(стр, ИмяФормыСсылки)
	
	Попытка
		Гуид = Новый УникальныйИдентификатор(стр);
	Исключение
		ОбщиеФункции.СообщитьТекст("Не верно задан формат гуида");
		Возврат Неопределено; КонецПопытки;
	
	Ссылка = КонвертацияТипов.ПолучитьСсылкуПоГуиду(Гуид);
	Если Ссылка <> Неопределено Тогда ИмяФормыСсылки = Ссылка.Метаданные().ПолноеИмя(); КонецЕсли;
	
	Возврат Ссылка;
	
КонецФункции
&НаКлиенте
Процедура НайтиПоГуиду(Команда)
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("НайтиПоГуидуВвод", ЭтаФорма),,,36, Ложь);
	
КонецПроцедуры
&НаКлиенте
Процедура НайтиПоГуидуВвод(стр, ДопПараметры = Неопределено) Экспорт
	
	Если стр <> Неопределено И Не ПустаяСтрока(стр) Тогда
		
		ИмяФормыСсылки 	= Неопределено;
		Ссылка 			= ПолучитьСсылку(стр, ИмяФормыСсылки);
		
		Если Ссылка = Неопределено Тогда
			ОбщиеФункции.СообщитьТекст("Объект с таким гуидом не найден");
		Иначе
			ОткрытьФорму(ИмяФормыСсылки + ".ФормаОбъекта" , Новый Структура("Ключ", Ссылка)); КонецЕсли; КонецЕсли;
	
КонецПроцедуры


#Область Статьи

&НаКлиенте
Процедура get_article_categories(Команда)
	get_article_categoriesНаСервере();
КонецПроцедуры
&НаСервере
Процедура get_article_categoriesНаСервере()
	
	err 	= "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьКатегорииСтатьи(Новый Структура("guid_article_category", w1_Json.UnJSON(guids)), err);
	ИначеЕсли ЧейAPI = 1 Тогда
		Сообщить("Отсутствуе метод");
		Возврат;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьКатегорииСтатьи(Новый Структура("guid_article_category", w1_Json.UnJSON(guids)), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);

	
КонецПроцедуры

&НаСервере
Функция get_articleНаСервере()
	
	err 	= "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьСтатьи(Новый Структура("guid_article_category, guid_article", Addition, w1_Json.UnJSON(guids)), err);
	ИначеЕсли ЧейAPI = 1 Тогда
		Сообщить("Отсутствуе метод");
		Возврат Ложь;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьСтатьи(Новый Структура("guid_article_category, guid_article", Addition, w1_Json.UnJSON(guids)), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
	
КонецФункции
&НаКлиенте
Процедура get_article(Команда)
	
	get_articleНаСервере();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура get_discount_cardНаСервере()
	
	err 	= "";
	Возвр 	= API2.ПолучитьИнформационнуюКартуПоНомеру(Новый Структура("discount_card_number", w1_Json.UnJSON(guids, , "Строка")), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);

КонецПроцедуры
&НаКлиенте
Процедура get_discount_card(Команда)
	
	get_discount_cardНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура get_discount_percents(Команда)
	get_discount_percentsНаСервере();
КонецПроцедуры
&НаСервере
Процедура get_discount_percentsНаСервере()
	
	err 	= "";
	Возвр 	= API2.ПолучитьПорогиСкидок(Новый Структура("guids", w1_Json.UnJSON(guids)),err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
	
КонецПроцедуры

&НаКлиенте
Процедура create_user(Команда)
	create_userНаСервере();
КонецПроцедуры
&НаСервере
Процедура create_userНаСервере()
	
	err 	= "";
	Возвр 	= API2.СоздатьПользователя(json_стр, err);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);

	
КонецПроцедуры

&НаКлиенте
Процедура create_adress(Команда)
	create_adressНаСервере();
КонецПроцедуры
&НаСервере
Процедура create_adressНаСервере()
	
	err 	= "";
	Возвр 	= API2.СоздатьАдрес(json_стр, err);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
	
КонецПроцедуры

&НаКлиенте
Процедура create_file_extend(Команда)
	create_file_extendНаСервере();
КонецПроцедуры

&НаСервере
Процедура create_file_extendНаСервере()
	err 	= "";
	Возвр 	= API2.СоздатьФайл(json_стр, err);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
	
КонецПроцедуры

&НаКлиенте
Процедура get_properties(Команда)
	get_propertiesНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_propertiesНаСервере()
	err 	= "";
	Возвр 	= API2.ПолучитьСвойстваНоменклатуры(Новый Структура("guids", w1_Json.UnJSON(guids)), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_orders(Команда)
	get_ordersНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_ordersНаСервере()
	err 	= "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьЗаказы(Новый Структура("orders", w1_Json.UnJSON(guids)), err);
	ИначеЕсли ЧейAPI = 1 Тогда
		Сообщить("Отсутствуе метод");
		Возврат;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьЗаказы(Новый Структура("orders", w1_Json.UnJSON(guids)), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + "
						|err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура update_order(Команда)
	update_orderНаСервере();
КонецПроцедуры
&НаСервере
Процедура update_orderНаСервере()
	err 	= "";
	Возвр 	= API2.ОбновитьЗаказ(json_стр, err,,Истина);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
КонецПроцедуры

&НаСервере
Процедура update_userНаСервере()
	err 	= "";
	Возвр 	= API2.ОбновитьПользователя(json_стр, , err);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура update_user(Команда)
	update_userНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура create_order(Команда)
	create_orderНаСервере();
КонецПроцедуры

&НаСервере
Процедура create_orderНаСервере()
	//err 	= "";
	//Возвр 	= API2.ОбновитьЗаказ(json_стр, err);
	
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр 	= API2.ОбновитьЗаказ(json_стр, err);
	ИначеЕсли ЧейAPI = 1 Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ОбновитьЗаказ(json_стр, err);
	КонецЕсли;

	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
КонецПроцедуры

&НаСервере
Процедура get_usersНаСервере()
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьПользователей(Новый Структура("guids", guids), err);
	ИначеЕсли ЧейAPI = 1 Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьПользователей(Новый Структура("guids", guids), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры
&НаКлиенте
Процедура get_users(Команда)
	get_usersНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_severstal_limitsНаСервере()
	Если ЧейAPI Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	КонецЕсли;
	
	err = "";
	Возвр = API2.ПолучитьЛимитыСеверстали(Новый Структура("guids", guids), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_severstal_limits(Команда)
	get_severstal_limitsНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_delivery_addressНаСервере()
	Если ЧейAPI Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	КонецЕсли;
	
	err = "";
	Возвр = API2.ПолучитьАдресаДоставки(Новый Структура("guids", guids), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_delivery_address(Команда)
	get_delivery_addressНаСервере();
КонецПроцедуры

&НаСервере
Процедура update_delivery_addressНаСервере()
	err 	= "";
	Возвр 	= API2.ОбновитьАдрес(json_стр, , err);
	
	ВывестиРезультат("Результат: " + Возвр + "
						|err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура update_delivery_address(Команда)
	update_delivery_addressНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_actionsНаСервере()
	err = "";
	Если ЧейAPI = 0 Тогда
		Возвр = API2.ПолучитьАкции(Новый Структура("guids", guids), err);
	ИначеЕсли ЧейAPI = 1 Тогда
		Сообщить("Отсутствуе метод");
		Возврат;
	ИначеЕсли ЧейAPI = 2 Тогда
		Возвр = ApiLicota.ПолучитьАкции(Новый Структура("guids", guids), err);
	КонецЕсли;
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_actions(Команда)
	get_actionsНаСервере();
КонецПроцедуры

&НаСервере
Процедура create_requestНаСервере()
	err 	= "";
	Возвр 	= API2.СоздатьЗапросНаУточнениеОстатка(json_стр, err);
	
	ВывестиРезультат("Результат: " + Возвр + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура create_request(Команда)
	create_requestНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_documentsНаСервере()
	Если ЧейAPI Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	КонецЕсли;
	
	err = "";
	Возвр = API2.ПолучитьДокументы(Новый Структура("guids, changesFromDate", w1_Json.UnJSON(guids), Addition), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_documents(Команда)
	get_documentsНаСервере();
КонецПроцедуры

&НаСервере
Процедура get_images_externalНаСервере()
	Если ЧейAPI Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат;
	КонецЕсли;
	
	err = "";
	Возвр = API2.ПолучитьКартинки(Новый Структура("guids, changesFromDate", w1_Json.UnJSON(guids), Addition), err);
	
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);
КонецПроцедуры

&НаКлиенте
Процедура get_images_external(Команда)
	get_images_externalНаСервере();
КонецПроцедуры

&НаСервере
Процедура payment_orderнаСервере()
	
	Если ЧейAPI Тогда
		ВывестиРезультат("В api дилеров функция отсутствует");
		Возврат; КонецЕсли;

	стрОшибки = "";
	Возвр = w1_Json.JSON36(API2_Оплаты.ОплатаПоЗаказу(json_стр, стрОшибки));
	ВывестиРезультат("Результат: " + Возвр + Символы.ПС + "err: " + стрОшибки);
	
КонецПроцедуры
&НаКлиенте
Процедура payment_order(Команда)
	
	payment_orderнаСервере();
	
КонецПроцедуры

&НаСервере
Процедура get_type_pricesНаСервере()
	
		
	err = "";
//	Возвр = API2.ПолучитьАдресаДоставки(Новый Структура("guids", guids), err);
	Возвр = API2.ПолучитьТипыЦен(Новый Структура("guids", w1_Json.UnJSON(guids)), err);
	ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);


КонецПроцедуры

&НаКлиенте
Процедура get_type_prices(Команда)
	get_type_pricesНаСервере();
КонецПроцедуры

&НаСервере
Процедура delete_delivery_addressНаСервере()
	
	    err = "";

	    Возвр = API2.УдалитьАдрес(Новый Структура("guid", w1_Json.UnJSON(guids)), err);
		ВывестиРезультат("Результат: " + w1_Json.JSON(Возвр, Истина) + Символы.ПС + "err: " + err);

КонецПроцедуры

&НаКлиенте
Процедура delete_delivery_address(Команда)
	delete_delivery_addressНаСервере();
КонецПроцедуры



