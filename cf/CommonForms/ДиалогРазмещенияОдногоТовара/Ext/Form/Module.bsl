
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок 								= "Размещение " + Параметры.Номенклатура.Артикул + " " + Параметры.Номенклатура;
	КоличествоВДоке 						= Параметры.Количество;
	КоличествоМинимум 						= Параметры.КоличествоМинимум;
	Элементы.ДекорацияКоличество.Заголовок 	= КоличествоВДоке;
	Заказ									= Параметры.Заказ;
	
	Склад = Параметры.Склад;
	
	//Запрос = Новый Запрос("
	//|ВЫБРАТЬ Размещение, Доступно
	//|ИЗ
	//|(	ВЫБРАТЬ 	Ост.Склад Размещение, Ост.КоличествоОстаток - ЕСТЬNULL(Рез.КоличествоОстаток, 0) Доступно
	//|	ИЗ			РегистрНакопления.ТОварыНаСкладах.Остатки(,Номенклатура = &Номенклатура) Ост
	//|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ	РегистрНакопления.ТоварыВРезерве.Остатки(,Номенклатура = &Номенклатура) Рез
	//|	ПО					Склад 			= 	Размещение И
	//|						ДокументРезерва <> 	&Заказ) Ост
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ 	ЕСТЬNULL(Зак.ЗаказПоставщику, Разм.ЗаказПоставщику), 
	////ВЫБОР КОГДА ЕСТЬNULL(Зак.КоличествоОстаток ,0) > ЕСТЬNULL(Разм.КоличествоОстаток,0) ТОГДА ЕСТЬNULL(Зак.КоличествоОстаток,0) ИНАЧЕ ЕСТЬNULL(Разм.КоличествоОстаток,0) КОНЕЦ
	//|	ЕСТЬNULL(Зак.КоличествоОстаток ,0) - ЕСТЬNULL(Разм.КоличествоОстаток,0)  
	//|ИЗ 		РегистрНакопления.РазмещениеЗаказовВПути.Остатки(,Номенклатура = &Номенклатура) Разм
	//|
	//|ПОЛНОЕ СОЕДИНЕНИЕ	РегистрНакопления.ЗаказыПоставщикам.Остатки(,Номенклатура = &Номенклатура) Зак
	//|ПО					Зак.ЗаказПоставщику = Разм.ЗаказПоставщику
	//|");
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТоварыПоставщиковВПутиОстатки.ЗаказПоставщику,
	             |	ТоварыПоставщиковВПутиОстатки.КоличествоОстаток КАК КоличествоОстаток
	             |ПОМЕСТИТЬ ЗаказыПоставщиков
	             |ИЗ
	             |	РегистрНакопления.ТоварыПоставщиковВПути.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыПоставщиковВПутиОстатки
	             |
	             |ОБЪЕДИНИТЬ
	             |
	             |ВЫБРАТЬ
	             |	Зак.ЗаказПоставщику,
	             |	Зак.КоличествоОстаток
	             |ИЗ
	             |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, Номенклатура = &Номенклатура) КАК Зак
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТоварыНаСкладахОстатки.Склад КАК Размещение,
	             |	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ТоварыВРезервеОстатки.КоличествоОстаток, 0) КАК Доступно
	             |ИЗ
	             |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыНаСкладахОстатки
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезерве.Остатки(
	             |				,
	             |				Номенклатура = &Номенклатура
	             |					И НЕ ДокументРезерва = &Заказ) КАК ТоварыВРезервеОстатки
	             |		ПО ТоварыНаСкладахОстатки.Склад = ТоварыВРезервеОстатки.Размещение
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ЗаказыПоставщиков.ЗаказПоставщику,
	             |	ЗаказыПоставщиков.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовВПутиОстатки.КоличествоОстаток, 0)
	             |ИЗ
	             |	ЗаказыПоставщиков КАК ЗаказыПоставщиков
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказовВПути.Остатки(
	             |				,
	             |				Номенклатура = &Номенклатура
	             |					И НЕ Размещение = &Заказ) КАК РазмещениеЗаказовВПутиОстатки
	             |		ПО ЗаказыПоставщиков.ЗаказПоставщику = РазмещениеЗаказовВПутиОстатки.ЗаказПоставщику";
				 
				 
	Запрос.УстановитьПараметр("Заказ", 			Заказ);
	Запрос.УстановитьПараметр("Номенклатура", 	Параметры.Номенклатура);
	Склады.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Проставим проставленное
	
	текСкладУстановлен = Ложь; ТипЧисло = Тип("Число"); 
	//ТипСклад = Тип("СправочникСсылка.Склады"); ТипЗаказ = Тип("ДокументСсылка.ЗаказПоставщику");
	Для Каждого Строка Из Параметры.текРезервы Цикл
		
		Количество 		= Строка.Количество;
		КоличествоМин	= Строка.КоличествоМинимум;
		ТипЗн			= ТипЗнч(Строка.Размещение);
		
		Если ТипЗн = ТипЧисло Тогда
			
			ВОчереди = ВОчереди + Количество;
		
		//ИначеЕсли ТипЗн = ТипСклад Тогда
		Иначе
			
			Если Строка.Размещение = Склад Тогда текСкладУстановлен = Истина КонецЕсли;
			
			строкиСклада = Склады.НайтиСтроки(Новый Структура("Размещение", Строка.Размещение));
			Если строкиСклада.Количество() Тогда
				строкиСклада[0].Количество 			= Количество; 
				строкиСклада[0].КоличествоМинимум 	= КоличествоМин; КонецЕсли;
			
		//ИначеЕсли ТипЗн = ТипЗаказ Тогда
			
			
			
		КонецЕсли;
			
		КонецЦикла;
	
	ВОчередиСт = ВОчереди;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСкладов()
	
	Возврат КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(Склады.Выгрузить());
	
КонецФункции
&НаКлиенте
Процедура Ввод(Команда)
	
	// Сконвертируем для передачи
	МассивСкладов = ПолучитьмассивСкладов();
	
	// Добавим очередь
	Если ВОчереди Тогда МассивСкладов.Добавить(Новый Структура("Размещение, Количество", ?(НомерВОчереди, НомерВОчереди, 1), ВОчереди)); КонецЕсли;
		
	// Вернем
	Закрыть(МассивСкладов);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОбщееКоличество()
	
	КолВРезерве = 0;
	Для Каждого Строка Из Склады Цикл КолВРезерве = КолВРезерве + Строка.Количество КонецЦикла;
	
	Возврат КолВРезерве + ВОчереди;
	
КонецФункции
&НаКлиенте
Процедура СкладыПередНачаломИзменения(Элемент, Отказ)
	
	// Опредлим максимум
	
	Табл 		= Элемент;
	текСтрока 	= Склады.НайтиПоИдентификатору(Табл.ТекущаяСтрока);
	
	Максимум = КоличествоВДоке - ПолучитьОбщееКоличество() + текСтрока.Количество;
	Если Максимум < 0 Тогда Максимум = 0 КонецЕсли;
	Макс = Мин(Максимум, текСтрока.Доступно);
	
	// Определим минимум
	
	Элементы.СкладыКоличество.МинимальноеЗначение = текСтрока.КоличествоМинимум;
	
	// УСтановим максимум
	
	Элементы.СкладыКоличество.МаксимальноеЗначение = Макс(Макс, текСтрока.КоличествоМинимум);
	
КонецПроцедуры

&НаКлиенте
Процедура ВОчередиПриИзменении(Элемент)
	
	Если ПолучитьОбщееКоличество() > КоличествоВДоке Тогда
		ПоказатьОповещениеПользователя("Это перебор",,"Общее количество не должно превышать количество в документе", БиблиотекаКартинок.Удалить1);
		ВОчереди = ВОчередиСт;
	Иначе
		ВОчередиСт = ВОчереди; КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруСтроку(ТекСтрока)
	
	Возврат Новый Структура("Размещение, Количество, КоличествоМинимум", ТекСтрока.Размещение, ТекСтрока.Количество, ТекСтрока.КоличествоМинимум);
	
КонецФункции

&НаКлиенте
Процедура СкладыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя <> "СкладыКоличество" Тогда
		текСтрока = Элементы.Склады.ТекущиеДанные;
		
		МинимумВДругих = КоличествоМинимум - текСтрока.КоличествоМинимум;
		
		Если МинимумВДругих + текСтрока.Доступно >= КоличествоВДоке Тогда
			
			Массив = Новый Массив;
			
			// Добавим сколько зафиксировано в обязаловке
			
			Для Каждого Строка Из Склады Цикл 
				Если Строка.Размещение <> текСтрока.Размещение И Строка.КоличествоМинимум Тогда 
					Строка.Количество = Строка.КоличествоМинимум;
					Массив.Добавить(ПолучитьСтруктуруСтроку(Строка)); КонецЕсли; КонецЦикла;
			
			// Добавим текущую строку
			
			текСтрока.Количество = КоличествоВДоке - МинимумВДругих;
			Массив.Добавить(ПолучитьСтруктуруСтроку(ТекСтрока));
			Закрыть(Массив);
			
		Иначе
			ПоказатьОповещениеПользователя(текСтрока.Размещение,,"Доступного количества не хватит для резерва", БиблиотекаКартинок.Отмена); КонецЕсли; КонецЕсли;
	
КонецПроцедуры
