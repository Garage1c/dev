
&НаСервере
Функция ЗаполнитьТаблицуБнзФильтровИПолучитьПараметрыОткрытия()
	
	//	Заполняет таблицу заказов
	//	а потом
	// Возвращает структуру
	//	- Контрагенты 			- массив контрагентов заказов
	//	- КонтрагентыОтмеченные - массив контрагентов в отмеченных заказах
	
	Запрос = Новый Запрос("
	// 0
	|ВЫБРАТЬ 	Ссылка, Ссылка.Контрагент Контрагент, Ссылка.Склад Склад, Ссылка.Сумма Сумма, Дата, Номер
	|ПОМЕСТИТЬ 	СписокЗаказов
	|ИЗ 		ЖурналДокументов.ЖурналЗаказов
	|ГДЕ Ссылка В(&Заказы);
	
	// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ Контрагент ИЗ СписокЗаказов ГДЕ Ссылка В(&ОтмеченныеЗаказы);
	
	// 2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ Контрагент ИЗ СписокЗаказов;
	
	// 3
	|ВЫБРАТЬ 	Ссылка Заказ, Контрагент, Склад, Сумма, Дата, номер, Контрагент.ОсновнойМенеджер Менеджер,
	|			ВЫБОР КОГДА Ссылка В(&ОтмеченныеЗаказы) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ Пометка
	|ИЗ СписокЗаказов
	|УПОРЯДОЧИТЬ ПО Дата Убыв
	|");
	
	Запрос.УстановитьПараметр("Заказы", 			Параметры.Заказы);
	Запрос.УстановитьПараметр("ОтмеченныеЗаказы", 	КонвертацияТипов.ПолучитьОтмеченныеЗначенияСписка(Параметры.Заказы));
	
	Пакет = Запрос.ВыполнитьПакет();
	ТаблЗаказыБезФильтров.Загрузить(пакет[3].Выгрузить());
	
	Возврат Новый Структура("Контрагенты, КонтрагентыОтмеченные", 
					Пакет[2].Выгрузить().ВыгрузитьКолонку("Контрагент"),
					Пакет[1].Выгрузить().ВыгрузитьКолонку("Контрагент"));
	
КонецФункции

&НаСервере
Процедура СделатьГланымЗаказСоСборочником()
	
	//Для Каждого Заказ Из Параметры.Заказы Цикл
	//	Если Заказ.
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заказ 		= Параметры.Заказ; //СделатьГланымЗаказСоСборочником();
	Контрагент 	= Параметры.Контрагент;
	Настройка 	= ЗаполнитьТаблицуБнзФильтровИПолучитьПараметрыОткрытия();
	
	Элементы.Контрагент.СписокВыбора.ЗагрузитьЗначения(Настройка.Контрагенты);
	
	Если Настройка.КонтрагентыОтмеченные.Количество() > 1 Тогда  // если заказов с разными контрагентами несколько, тогда уберем фильтр по контрагенту
		Контрагент = Неопределено;
	ИначеЕсли Настройка.КонтрагентыОтмеченные.Количество() = 1 И Контрагент.Пустая() Тогда
		Контрагент = Настройка.КонтрагентыОтмеченные[0]; КонецЕсли;
	
	НаложитьФильтры();
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Строки = таблЗаказы.НайтиСтроки(новый Структура("Заказ", Заказ));
	Если Строки.Количество() Тогда
		Элементы.таблЗаказы.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор(); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранныеЗаказы()
	
	Массив = Новый Массив;
	Строки = таблЗаказы.НайтиСтроки(Новый Структура("Пометка", Истина));
	Для Каждого Строка Из Строки Цикл Массив.Добавить(Строка.Заказ) КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ВыбранныеЗаказы());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Значение = Истина)
	
	Для Каждого Строка Из таблЗаказы Цикл 
		Если Строка.Заказ <> Заказ Тогда 
			СтрокаБезФильтра(Строка).Пометка 	= Значение;
			Строка.Пометка 						= Значение; КонецЕсли; КонецЦикла;
			
	ОбновитьВыбрано();
	
КонецПроцедуры
&НаКлиенте
Процедура ВыбратьВсе(Команда)
	УстановитьПометку();
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	УстановитьПометку(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура таблЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,таблЗаказы.НайтиПоИдентификатору(ВыбраннаяСтрока).Заказ);
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаБезФильтра(СтрокаСФильтром)
	
	Возврат таблЗаказыБезФильтров.НайтиСтроки(Новый Структура("Заказ", СтрокаСФильтром.Заказ))[0];
	
КонецФункции
&НаКлиенте
Процедура таблЗаказыПометкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.таблЗаказы.ТекущиеДанные;
	Если ТекДанные.Заказ = Заказ Тогда ТекДанные.Пометка = Истина КонецЕсли;
	
	СтрокаБезФильтра(ТекДанные).Пометка = ТекДанные.Пометка;
	
	ОбновитьВыбрано();
	
КонецПроцедуры

Процедура ОбновитьВыбрано()
	
	Выбрано = таблЗаказы.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество();
	
КонецПроцедуры
Процедура НаложитьФильтры()
	
	таблЗаказы.Очистить();
	Для КАждого Строка Из таблЗаказыБезФильтров Цикл
		Если Контрагент.Пустая() Или Строка.Контрагент = Контрагент Тогда
			ЗаполнитьЗначенияСвойств(таблЗаказы.Добавить(), Строка);  КонецЕсли; КонецЦикла;
			
	ОбновитьВыбрано();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	НаложитьФильтры();
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеДокументы(Команда)
	
	Если Элементы.таблЗаказы.ТекущиеДанные <> Неопределено Тогда
		ОткрытьФорму("ОбщаяФорма.СвязанныеДокументыПроцессы", Новый Структура("Документ", Элементы.таблЗаказы.ТекущиеДанные.Заказ), ЭтаФорма, Новый УникальныйИдентификатор) КонецЕсли;
	
КонецПроцедуры

