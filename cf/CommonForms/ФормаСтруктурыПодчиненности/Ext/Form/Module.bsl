&НаСервере
Перем мКэшРеквизитовДокумента;
Перем мТекущаяСтрокаДерева;
Перем мУжеВСписке;

//////////////////////////////////////////////////////////////////////////////////////////////
// Процедуры построения дерева подчиненности документов.

&НаСервере
Функция ОсновнойДокументДоступен()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	1
	|	ИЗ Документ." + ДокументСсылка.Метаданные().Имя + " КАК Таб
	|ГДЕ
	|	Таб.Ссылка = &ТекущийДокумент
	|");
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСсылка);
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции

&НаСервере
Процедура ВывестиРодительскиеДокументы(ТекущийДокумент)

	МетаданныеДокумента = ТекущийДокумент.Метаданные();
	СписокРеквизитов    = Новый СписокЗначений;

	Для Каждого Реквизит ИЗ МетаданныеДокумента.Реквизиты Цикл

		Для Каждого ТекущийТип ИЗ Реквизит.Тип.Типы() Цикл

			МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);

			Если  МетаданныеРеквизита <> Неопределено
				И Метаданные.Документы.Содержит(МетаданныеРеквизита)
				И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда

				ЗначениеРеквизита = ТекущийДокумент[Реквизит.Имя];

				Если ЗначениеЗаполнено(ЗначениеРеквизита)
					 И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено
					 И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда

					СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));

				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		СтрРеквизитов = "";

		СодержимоеТЧ = ТекущийДокумент[ТЧ.Имя].Выгрузить();

		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл

			Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл

				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);

				Если МетаданныеРеквизита<>Неопределено
				   И Метаданные.Документы.Содержит(МетаданныеРеквизита)
				   И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда

					СтрРеквизитов = СтрРеквизитов + ?(СтрРеквизитов = "", "", ", ") + Реквизит.Имя;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;

		СодержимоеТЧ.Свернуть(СтрРеквизитов);
		Для Каждого КолонкаТЧ ИЗ СодержимоеТЧ.Колонки Цикл

			Для Каждого СтрокаТЧ ИЗ СодержимоеТЧ Цикл

				ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];

				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения <> Неопределено Тогда

					Если ЗначениеЗаполнено(ЗначениеРеквизита)
						И Метаданные.Документы.Содержит(МетаданныеЗначения)
						И мУжеВСписке[ЗначениеРеквизита] = Неопределено Тогда

						Если СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда

							СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));

						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	СписокРеквизитов.СортироватьПоПредставлению();
	мУжеВСписке.Вставить(ТекущийДокумент, Истина);

	Если СписокРеквизитов.Количество() = 1 Тогда

		ВывестиРодительскиеДокументы(СписокРеквизитов[0].Значение);

	ИначеЕсли СписокРеквизитов.Количество() > 1 Тогда

		ВывестиБезРодителей(СписокРеквизитов);

	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка,
	|	Проведен,
	|	ПометкаУдаления,
	|	#Сумма,
	|	#Валюта,
	|	Представление
	|ИЗ
	|	Документ." + МетаданныеДокумента.Имя + "
	|ГДЕ
	|	Ссылка = &Ссылка";

	ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеДокумента, "#Сумма", "Сумма");
	ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеДокумента, "#Валюта", "Валюта");

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ТекущийДокумент);
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		СтрокаДерева = ДобавитьСтрокуВДерево(мТекущаяСтрокаДерева, Выборка);

	КонецЕсли;

	мТекущаяСтрокаДерева = СтрокаДерева;

КонецПроцедуры

&НаСервере
Процедура ВывестиБезРодителей(СписокДокументов)

	Запрос = Новый Запрос;
	Для Каждого ЭлементСписка Из СписокДокументов Цикл

		Если мУжеВСписке[ЭлементСписка.Значение]<> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		МетаданныеДокумента = ЭлементСписка.Значение.Метаданные();

		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ссылка,
		|	Проведен,
		|	ПометкаУдаления,
		|	#Сумма,
		|	#Валюта,
		|	Представление
		|ИЗ
		|	Документ."+МетаданныеДокумента.Имя + "
		|ГДЕ
		|	Ссылка = &Ссылка
		|";

		ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеДокумента, "#Сумма", "Сумма");
		ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеДокумента, "#Валюта", "Валюта");

		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Ссылка", ЭлементСписка.Значение);
		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() Тогда

			СтрокаДерева = ДобавитьСтрокуВДерево(мТекущаяСтрокаДерева, Выборка);
			мУжеВСписке.Вставить(Выборка.Ссылка, Истина);

		КонецЕсли;
	КонецЦикла;

	мТекущаяСтрокаДерева = СтрокаДерева;

КонецПроцедуры

Процедура ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеДокумента, ЧтоЗаменять, ИмяРеквизита)

	Если МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЧтоЗаменять, ИмяРеквизита + " КАК " + ИмяРеквизита);

	Иначе

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЧтоЗаменять, " NULL КАК " + ИмяРеквизита);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьИдентификаторКартинки(СтрокаДерева)

	Если СтрокаДерева.Проведен Тогда
		Результат = 0
	ИначеЕсли СтрокаДерева.ПометкаУдаления Тогда
		Результат = 1;
	Иначе
		Результат = 2;
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаСервере
Процедура ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента)

	РеквизитыДокумента = мКэшРеквизитовДокумента[ИмяДокумента];
	Если РеквизитыДокумента = Неопределено Тогда

		РеквизитыДокумента = Новый Соответствие;
		РеквизитыДокумента.Вставить("Сумма",			  МетаданныеДокумента.Реквизиты.Найти("Сумма") <> Неопределено);
		РеквизитыДокумента.Вставить("Валюта",          МетаданныеДокумента.Реквизиты.Найти("Валюта") <> Неопределено);

		мКэшРеквизитовДокумента.Вставить(ИмяДокумента, РеквизитыДокумента);

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РазобратьПутьКОбъектуМетаданных(ПутьКДанным, МетаданныеОбъекта = Неопределено)
	
	Структура = Новый Структура;
	
	СоответствиеИмен = Новый Массив();
	СоответствиеИмен.Добавить("ТипОбъекта");
	СоответствиеИмен.Добавить("ВидОбъекта");
	СоответствиеИмен.Добавить("ПутьКДанным");
	СоответствиеИмен.Добавить("ИмяТаблЧасти");
	СоответствиеИмен.Добавить("ИмяРеквизита");
	
	Для индекс = 1 по 3 Цикл
		
		Точка = Найти(ПутьКДанным, ".");
		ТекущееЗначение = Лев(ПутьКДанным, Точка-1);
		Структура.Вставить(СоответствиеИмен[индекс-1], ТекущееЗначение);
		ПутьКДанным = Сред(ПутьКДанным, Точка+1);
		
	КонецЦикла;
	
	ПутьКДанным = СтрЗаменить(ПутьКДанным, "Реквизит.", "");
	
	Если Структура.ПутьКДанным = "ТабличнаяЧасть" Тогда
		
		Для индекс = 4 по 5  Цикл 
			
			Точка = Найти(ПутьКДанным, ".");
			Если Точка = 0 Тогда
				ТекущееЗначение = ПутьКДанным;
			Иначе
				ТекущееЗначение = Лев(ПутьКДанным, Точка-1);
			КонецЕсли;
			
			Структура.Вставить(СоответствиеИмен[индекс-1], ТекущееЗначение);
			ПутьКДанным = Сред(ПутьКДанным,  Точка+1);
			
		КонецЦикла;
		
	Иначе
		
		Структура.Вставить(СоответствиеИмен[3], "");
		Структура.Вставить(СоответствиеИмен[4], ПутьКДанным);
		
	КонецЕсли;
	
	Если МетаданныеОбъекта <> Неопределено Тогда
		Структура.Вставить("Метаданные", МетаданныеОбъекта);
	Иначе
		Если Структура.ТипОбъекта = "Документ" Тогда
			Структура.Вставить("Метаданные", Метаданные.Документы[Структура.ВидОбъекта]);
		Иначе
			Структура.Вставить("Метаданные", Метаданные.Справочники[Структура.ВидОбъекта]);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции // РазобратьПутьКОбъектуМетаданных()

&НаСервере
Функция ПолучитьСписокДокументовПоКритериюОтбора(ИмяКритерияОтбора, ЗначениеКритерияОтбора)

	ТипЗначениеКритерияОтбора = ТипЗнч(ЗначениеКритерияОтбора);
	ТекстЗапроса = "";

	Для Каждого ЭлементСостава ИЗ Метаданные.КритерииОтбора[ИмяКритерияОтбора].Состав Цикл

		Если ЭлементСостава = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если НЕ ЭлементСостава.Тип.СодержитТип(ТипЗначениеКритерияОтбора) Тогда
			Продолжить;
		КонецЕсли;

		ПутьКДанным = ЭлементСостава.ПолноеИмя();
		СтруктураПутьКДанным = РазобратьПутьКОбъектуМетаданных(ПутьКДанным);

		ЕСли НЕ ПравоДоступа("Чтение", СтруктураПутьКДанным.Метаданные) Тогда
			Продолжить;
		КонецЕсли;

		ИмяОбъекта = СтруктураПутьКДанным.ТипОбъекта + "." + СтруктураПутьКДанным.ВидОбъекта;

		ТекущаяСтрокаГДЕ = "ГДЕ " + СтруктураПутьКДанным.ВидОбъекта + "." +СтруктураПутьКДанным.ИмяРеквизита + " = &ЗначениеКритерияОтбора";

		ИмяТЧ        = Лев(СтруктураПутьКДанным.ИмяРеквизита, Найти(СтруктураПутьКДанным.ИмяРеквизита, ".")-1);
		ИмяРеквизита = Лев(СтруктураПутьКДанным.ИмяРеквизита, Найти(СтруктураПутьКДанным.ИмяРеквизита, ".")-1);

		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗРЕШЕННЫЕ ", "ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ") + "
		|" + СтруктураПутьКДанным.ВидОбъекта +".Ссылка ИЗ " + ИмяОбъекта + "." + СтруктураПутьКДанным.ИмяТаблЧасти + " КАК " + СтруктураПутьКДанным.ВидОбъекта + "
		|" + СтрЗаменить(ТекущаяСтрокаГДЕ, "..", ".") + "
		|";
		
	КонецЦикла;

	Результат = Неопределено;
	Если Не ПустаяСтрока(ТекстЗапроса) Тогда

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
		Результат = Запрос.Выполнить().Выгрузить();

	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаСервере
Процедура ВывестиПодчиненныеДокументы(СтрокаДерева)

	ТекущийДокумент = СтрокаДерева.Ссылка;
	Таблица         = ПолучитьСписокДокументовПоКритериюОтбора("СвязанныеДокументы", ТекущийДокумент);
	Если Таблица = Неопределено Тогда
		Возврат;
	КонецЕсли;

	КэшПоТипамДокументов = Новый Соответствие;

	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл

		МетаданныеДокумента = СтрокаТаблицы.Ссылка.Метаданные();
		Если Не ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
			Продолжить;
		КонецЕсли;

		ИмяДокумента     = МетаданныеДокумента.Имя;
		СинонимДокумента = МетаданныеДокумента.Синоним;

		ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента);

		СтруктураТипа = КэшПоТипамДокументов[ИмяДокумента];
		Если СтруктураТипа = Неопределено Тогда

			СтруктураТипа = Новый Структура("Синоним, МассивСсылок", СинонимДокумента, Новый Массив);
			КэшПоТипамДокументов.Вставить(ИмяДокумента, СтруктураТипа);

		КонецЕсли;

		СтруктураТипа.МассивСсылок.Добавить(СтрокаТаблицы.Ссылка);

	КонецЦикла;
	
	ЕСли КэшПоТипамДокументов.Количество() = 0 ТОгда
		Возврат;
	КонецЕсли;

	ТекстЗапросаНачало = "ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ (";
	ТекстЗапросаКонец = ") КАК ПодчиненныеДокументы УПОРЯДОЧИТЬ ПО ПодчиненныеДокументы.Дата";

	Запрос       = Новый Запрос;
	ТекстЗапроса = "";
	Для Каждого КлючИЗначение ИЗ КэшПоТипамДокументов Цикл

		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", " ВЫБРАТЬ ", " ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ") + "
		|	Дата,
		|	Ссылка,
		|	Проведен,
		|	ПометкаУдаления,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["Сумма"], "Сумма", "NULL") + " КАК Сумма,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["Валюта"],         "Валюта", "NULL") + "         КАК Валюта,
		|	Представление
		|ИЗ
		|	Документ." + КлючИЗначение.Ключ + "
		|ГДЕ
		|	Ссылка В (&" + КлючИЗначение.Ключ + ")";

		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение.МассивСсылок);

	КонецЦикла;

	Запрос.Текст = ТекстЗапросаНачало + ТекстЗапроса + ТекстЗапросаКонец;
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда

			НоваяСтрока = ДобавитьСтрокуВДерево(СтрокаДерева, Выборка);
			мУжеВСписке.Вставить(Выборка.Ссылка, Истина);

			ВывестиПодчиненныеДокументы(НоваяСтрока);

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуВДерево(СтрокаДерева, Выборка)

	НоваяСтрока = СтрокаДерева.Строки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка, "Ссылка, Представление, Сумма, Валюта, Проведен, ПометкаУдаления");
	НоваяСтрока.ИдентификаторКартинки = ПолучитьИдентификаторКартинки(НоваяСтрока);

	Возврат НоваяСтрока;

КонецФункции

&НаСервере
Процедура ВывестиДеревоДокументов()

	ДеревоДокументов = РеквизитФормыВЗначение("ДеревоСтруктурыПодчиненности");
	ДеревоДокументов.Строки.Очистить();

	мУжеВСписке             = Новый Соответствие;
	мКэшРеквизитовДокумента = Новый Соответствие;

	мТекущаяСтрокаДерева = ДеревоДокументов;

	ВывестиРодительскиеДокументы(ДокументСсылка);
	ВывестиПодчиненныеДокументы(мТекущаяСтрокаДерева);

	ЗначениеВРеквизитФормы(ДеревоДокументов, "ДеревоСтруктурыПодчиненности");

КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоСтруктурыПодчиненности()

	Если ОсновнойДокументДоступен() Тогда

		ВывестиДеревоДокументов();

	Иначе

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Нстр("ru = 'Документ, для которого сформирован отчет о структуре подчиненности, стал недоступен.'"));

	КонецЕсли;

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////
// Процедуры обработки таблицы документов

&НаКлиенте
Процедура РазвернутьТаблицуДокументов()

	ЭлементыДерева = ДеревоСтруктурыПодчиненности.ПолучитьЭлементы();
	Для Каждого Элемент Из ЭлементыДерева Цикл

		Элементы.ТаблицаДокументов.Развернуть(Элемент.ПолучитьИдентификатор(), Истина);

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВывестиСтруктуруПодчиненности()

	ЭлементыДерева = ДеревоСтруктурыПодчиненности.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();

	ОбновитьДеревоСтруктурыПодчиненности();

	РазвернутьТаблицуДокументов();

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ОбъектОтбора", ДокументСсылка);

	ИсходныйДокумент = ДокументСсылка;

	Если ЗначениеЗаполнено(ДокументСсылка) Тогда

		ОбновитьДеревоСтруктурыПодчиненности();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	РазвернутьТаблицуДокументов();

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////
// Обработчики команд формы

&НаКлиенте
Процедура Обновить(Команда)

	ВывестиСтруктуруПодчиненности();

КонецПроцедуры

&НаКлиенте
Процедура ВывестиДляТекущего(Команда)

	ДокументСсылка = Элементы.ТаблицаДокументов.ТекущиеДанные.Ссылка;

	ВывестиСтруктуруПодчиненности();

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы документов

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ДанныеСтроки(ВыбраннаяСтрока).Ссылка);

КонецПроцедуры
