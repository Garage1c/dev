
Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции

Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ	Номенклатура
	|ИЗ					Документ.Комплектация.Товары
	|ГДЕ				Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ	Номенклатура
	|ИЗ			Документ.Комплектация
	|ГДЕ		Ссылка = &ДокументСсылка
	|";
	
КонецФункции

//Процедура РасспредлитьСуммуПартийПоТипуЦенНаСервере(ВыбТипЦен = Неопределено) Экспорт
//	
//	тзТоваров = Товары.Выгрузить(,"Номенклатура, Количество");
//	КолТовара = тзТоваров.Итог("Количество");
//	ТаблКоэфф = МодульПартий.ПолучитьТаблицуВесаТоваровПоТипуЦен(тзТоваров.ВыгрузитьКолонку("Номенклатура"), Дата, ВыбТипЦен);
//	
//	Для каждого Строка Из Товары Цикл
//		
//		КоэффКоличества = Строка.Количество / КолТовара;
//		стрВеса 		= ТаблКоэфф.Найти(Строка.Номенклатура, "Номенклатура");
//		КоэффВеса		= ?(стрВеса = Неопределено, 0, стрВеса.Коэффициент);
//		
//		Строка.СуммаПартии = ?(КоэффКоличества * КоэффВеса, СуммаПартии * ((КоэффКоличества + КоэффВеса) / 2), 0); КонецЦикла;
//	
//	// Размажим копейки
//	
//	КонвертацияТипов.РаздатьКопейкиНуждающимся(Товары, "СуммаПартии", СуммаПартии);
//	
//КонецПроцедуры


// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись
	
	Движения.Записать();
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//// Контроль
	//
	////avdonin {{21.09.2010#
	////
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//Иначе
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//КонецЕсли;
	////}}avdonin
	//
	//Если Не Отказ Тогда
	//	КонтрольПроведения.ПроверитьТоварыВЯчейках(ЭтотОбъект, Склад, Отказ, Заголовок);
	//КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	////}}avdonin
	//
	//Если Не Отказ Тогда
	//	КонтрольПроведения.ПроверитьТоварыВЯчейках(ЭтотОбъект, Склад, Отказ, Заголовок);
	//КонецЕсли;
		
КонецПроцедуры

//Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
//	
//	// Разнесем партии товаров если это разукомплектация
//	
//	Если 	Операция = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация И
//			РежимЗаписи = РежимЗаписиДокумента.Проведение И
//			(ПартииТовараШапки.Итог("Количество") <> Количество Или ПартииТовараШапки.Итог("СуммаПартии") <> СуммаПартии) Тогда
//			
//		ПартииТовараШапки.Очистить();
//		
//		Запрос = Новый Запрос("
//		|ВЫБРАТЬ 	Партия, КоличествоОстаток Количество, СуммаОстаток Сумма
//		|ИЗ			РегистрНакопления.ПартииТоваров.Остатки(" + ?(ЗначениеЗаполнено(Дата), "&Дата", "") + ",Склад = &Склад И Номенклатура В(&Товары))
//		|УПОРЯДОЧИТЬ ПО Партия.Дата
//		|");
//		
//		Запрос.УстановитьПараметр("Дата",	Дата);
//		Запрос.УстановитьПараметр("Склад",	Склад);
//		Запрос.УстановитьПараметр("Товары",	Товары);
//		
//		НужноСписать = Количество;
//		
//		Выборка = Запрос.Выполнить().Выбрать();
//		Пока Выборка.Следующий() Цикл
//			
//			Списываем = Мин(НужноСписать, Выборка.Количество);
//			Если Списываем Тогда
//			
//				НовСтрока = ПартииТовараШапки.Добавить();
//				ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
//				НовСтрока.Количество 	= Списываем;
//				НовСтрока.СуммаПартии 	= ?(Списываем = Выборка.Количество, Выборка.Сумма, Списываем / Выборка.Количество * Выборка.Сумма);
//				
//				НужноСписать = НужноСписать - Списываем; КонецЕсли; КонецЦикла; КонецЕсли;
//	
//	// Заполним итоговую сумму
//	
//	текСумма = ПартииТовараШапки.Итог("СуммаПартии");
//	
//	Если СуммаПартии = 0 И текСумма <> 0 Тогда
//		СуммаПартии = текСумма; КонецЕсли;
//	
//КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Склад.Ячеестый Тогда
		
		ПроверяемыеРеквизиты.Добавить("Ячейка");
		ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
			
	КонецЕсли;
	
КонецПроцедуры


