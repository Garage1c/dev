Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
														
	|;
	|ВЫБРАТЬ
	|	Контрагент
	|ИЗ
	|	Документ.СогласованиеАссортимента
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	ДатаНачала Период,
	|	СогласованиеАссортиментаТовары.Номенклатура,
	|	СогласованиеАссортиментаПартнеры.Контрагент,
	|	ИСТИНА Использовать
	|ИЗ
	|	Документ.СогласованиеАссортимента.Товары КАК СогласованиеАссортиментаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.СогласованиеАссортимента.Контрагенты  СогласованиеАссортиментаПартнеры
	|	ПО ИСТИНА
	|ГДЕ
	| СогласованиеАссортиментаТовары.Ссылка = &Ссылка И СогласованиеАссортиментаПартнеры.Ссылка = &Ссылка И ДатаНачала <> ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДатаОкончания Период,
	|	СогласованиеАссортиментаТовары.Номенклатура,
	|	СогласованиеАссортиментаПартнеры.Контрагент,
	|	ЛОЖЬ Использовать
	|ИЗ
	|	Документ.СогласованиеАссортимента.Товары КАК СогласованиеАссортиментаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.СогласованиеАссортимента.Контрагенты  СогласованиеАссортиментаПартнеры
	|	ПО ИСТИНА
	|ГДЕ
	| СогласованиеАссортиментаТовары.Ссылка = &Ссылка И СогласованиеАссортиментаПартнеры.Ссылка = &Ссылка И ДатаОкончания <> ДАТАВРЕМЯ(1,1,1)");
	
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);	
	Запрос.УстановитьПараметр("Период",Ссылка.Дата);	
	Пакет = Запрос.ВыполнитьПакет();
		
	// Воткнем в структуру
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ТоварыДляПередачи", 			Пакет[2].Выгрузить());	
	
КонецПроцедуры

Функция ПисьмоОРезультатеОбработка(Ссылка, Товары, Контрагенты) Экспорт
	
	// ищем все открытые заявки (статус 1), или заявки ожидающие ответа (статус 2)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ Тов.Номенклатура КАК Номенклатура, Тов.ДатаНачала КАК ДатаНачала ПОМЕСТИТЬ Товары ИЗ &Номенклатура КАК Тов
	|;
	|ВЫБРАТЬ Пользователь, Номенклатура, Номенклатура.Артикул Артикул, Контрагент, ID, Период, Оповещение, Письмо 
	|ИЗ РегистрСведений.ЗапросНаСогласованиеТовара 
	|ГДЕ Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ Товары ГДЕ ДатаНачала <> ДАТАВРЕМЯ(1,1,1)) И Контрагент В (&Контрагенты) И (Статус = 1 ИЛИ Статус = 2) 
	|ИТОГИ ПО Пользователь");
	
	Запрос.УстановитьПараметр("Номенклатура", Товары.Выгрузить());
	Запрос.УстановитьПараметр("Контрагенты", Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент"));

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПолучатель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	URLИнтернетМагазин = Константы.ПутьИнтернетМагазин.Получить();
	
	Менеджер = РегистрыСведений.ЗапросНаСогласованиеТовара;
	
	НачатьТранзакцию();
			
	Пока ВыборкаПолучатель.Следующий() Цикл
		
		ТекстПисьмаТело = "<table>";
		
		Получатель = ВыборкаПолучатель.Пользователь;
		
		Если ТипЗнч(Получатель) = Тип("СправочникСсылка.ПользователиИнтернет") Тогда
			
			Кому = Получатель.ЭлектроннаяПочта;
			ТекстПисьмаЗаголовок = "Уважаемый(ая) " + Получатель + "!" + "<BR><BR> Мы получили ответ от Вашей коммерческой службы по запрашиваемыми позициям и спешим сообщить Вам, что следующие позиции были согласованы:<BR>";	
			
		КонецЕсли;		
	 
		ВыборкаТовары = ВыборкаПолучатель.Выбрать();               
		 
		Пока ВыборкаТовары.Следующий() Цикл
			Товар = ВыборкаТовары.Номенклатура;
			
			//////////////ЗАПИСЬ В РЕГИСТР//////////////
			Запись = Менеджер.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаТовары);
			Запись.ДокументСогласования = Ссылка;
			Запись.Статус = 3; 
			Попытка
				Запись.Записать();
			Исключение
				ЗаписьЖурналаРегистрации("Данные.Запись", УровеньЖурналаРегистрации.Ошибка, , , 
				ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
			/////////////////////////////////////////////				
				
			ТекстПисьмаТело = ТекстПисьмаТело + "<tr><td>" + Товар.Артикул + "</td><td><A style=""COLOR: rgb(0,0,204)"" href=" + URLИнтернетМагазин + НРег(Товар.alies) + ">"+ Товар +"</A></td></tr>";
		КонецЦикла;
		
	   	ТемаПисьма = "Заявка на согласование товара рассмотрена коммерческой службой"; 

		ТекстПисьма = ТекстПисьмаЗаголовок + ТекстПисьмаТело + "</table>" + КэшируемыеФункции.ПолучитьПодвалПисьма();

		Письмо = ОбщиеФункции.ОповеститьПоПочте(Кому, ТемаПисьма, ТекстПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML);
		
		Если Письмо = Неопределено Тогда
			ЗаписьЖурналаРегистрации("Данные.Запись", УровеньЖурналаРегистрации.Ошибка, , , 
				ОписаниеОшибки() + "
				|получатель = " + Получатель + "
				|товар = " + Товар);
			
			Возврат Ложь; 
		КонецЕсли;
	
		//ВыборкаТовары.Сбросить(); 
		//Пока ВыборкаТовары.Следующий() Цикл
		//	
		//	Товар = ВыборкаТовары.Номенклатура;
		//	
		//	ТекущийЗапрос = РегистрыСведений.ЗапросНаСогласованиеТовара.СоздатьНаборЗаписей();
		//	ТекущийЗапрос.Отбор.Пользователь.Установить(Получатель);
		//	ТекущийЗапрос.Отбор.Номенклатура.Установить(Товар);
		//	ТекущийЗапрос.Прочитать();
		//	//ЗаполнитьЗначенияСвойств(ТекущийЗапрос, ВыборкаТовары);
		//	Для Каждого Строка ИЗ ТекущийЗапрос Цикл
		//		Строка.ДокументСогласования = Ссылка;
		//		Строка.Статус = 3; КонецЦикла;

		//	Попытка
		//		ТекущийЗапрос.Записать();
		//	Исключение
		//		ЗаписьЖурналаРегистрации("Данные.Запись", УровеньЖурналаРегистрации.Ошибка, , , 
		//		ОписаниеОшибки() + "
		//		|получатель = " + Получатель + "
		//		|товар = " + Товар);
		//		Возврат Ложь;
		//	КонецПопытки;
		//
		//КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;

	Возврат Истина;
	
КонецФункции
