&НаКлиенте
Перем СтруктураКолонокТовары Экспорт;

&НаКлиенте
Процедура ОбщиеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция СкладЯчеестый()
	
	Возврат Объект.СкладОтправитель.Ячеестый;
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПроведенияДокументов.РазрешеноПерепроводитьДокумент(Объект.Ссылка) Тогда
		Сообщить("Данный заказ закрыт. Редактирование документа запрещено.");
		ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	// Рассчитаем динамические колонки
	
	ФункцииФормДокументов.РассчитатьДинамическиеКолонки(
					Объект.Товары,
					ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары));
					
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары);
	
	// Видимость ячеек
	
	Элементы.ТоварыЯчейка.Видимость = СкладЯчеестый();
	
КонецПроцедуры

// ОБРАБОТКИ ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент, КонкретнаяСтрока = Неопределено)

	ФункцииФормДокументов.НоменклатураПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары,
				КонкретнаяСтрока);

КонецПроцедуры
&НаКлиенте
Процедура КоличествоПриИзменении(Элемент, КонкретнаяСтрока = Неопределено)
	
	ФункцииФормДокументов.КоличествоПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары, 
				КонкретнаяСтрока);
	
КонецПроцедуры
&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	ФункцииФормДокументов.УпаковкаПриИзменении(
			Элементы.Товары, 
			СтруктураКолонокТовары);
КонецПроцедуры

// ПОДБОР

&НаСервере
Функция ПоместитьТоварыВХранилищеДляПодбора()
	
	стрОшибки = "";
	Адрес = ВременнаяТаблица.ПоместитьНоменклатуру(Объект.Товары.Выгрузить(,"Номенклатура, Количество"),,стрОшибки);
	
	Если Адрес = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(стрОшибки);
	КонецЕсли;
		
	Возврат Адрес;
	
КонецФункции
&НаКлиенте
Процедура ПодборВыполнить()
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилищеДляПодбора();
	
	Если АдресТоваровВХранилище <> Неопределено Тогда
	
		ФормаПодбора = ПолучитьФорму(
				"Справочник.Номенклатура.Форма.ФормаПодбора", 
				Новый Структура("АдресТоваровВХранилище, Склад", 
							АдресТоваровВХранилище, Объект.СкладОтправитель),
				Элементы.Товары);
				
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
				
		ФормаПодбора.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Номенклатура 	= ВыбранноеЗначение;
		Количество 		= 1;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Номенклатура 	= ВыбранноеЗначение.Номенклатура;
		Количество 		= ВыбранноеЗначение.Количество;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Строки = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
	
	Если Строки.Количество() Тогда
		
		Строка = Строки[0];
		
	Иначе
		
		Строка = Объект.Товары.Добавить();
		Строка.Номенклатура = Номенклатура;
		
	КонецЕсли;
	
	Строка.Количество = Строка.Количество + Количество;
	
	НоменклатураПриИзменении(Элемент, Строка);
	КоличествоПриИзменении(Элементы, Строка);
	
КонецПроцедуры


&НаКлиенте
Процедура СкладОтправительПриИзменении(Элемент)
	
	// Видимость ячеек
	
	Элементы.ТоварыЯчейка.Видимость = СкладЯчеестый();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДокументРезерваНаСервере2()
	
	Если Объект.Товары.Количество() Тогда
		Док = Объект.Товары[0].ДокументРезерва;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.ДокументРезерва = Док;
	КонецЦикла;
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьДокументРезерва(Команда)
	
	ЗаполнитьДокументРезерваНаСервере2();
	
КонецПроцедуры

#Область Партии

&НаСервере
Процедура ЗаполнитьПартииНаСервере(СтруктураКолонокТовары)
	
	МодульПартий.РазнестиПартииВТаблицеМетодомFIFO(Объект.Товары, Объект.СкладОтправитель, СтруктураКолонокТовары, ?(Объект.Проведен, Объект.Дата, Неопределено));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПартии(Команда)
	
	ЗаполнитьПартииНаСервере(СтруктураКолонокТовары);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИЗаполнитьПартии(Команда)
	
	КонвертацияТипов.ВыполнитьВыражениеВКаждойСтрокеТаблицы(Объект.Товары, "Строка.Партия = Неопределено");
	ЗаполнитьПартииНаСервере(СтруктураКолонокТовары);
	
КонецПроцедуры

#КонецОбласти

#Область Информация // о товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Товары", "Объект.Товары");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

#КонецОбласти

