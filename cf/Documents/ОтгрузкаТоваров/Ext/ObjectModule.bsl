Функция ПолучитьСкладСписания() Экспорт Возврат СкладОтправитель КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ОтгрузкаТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Процесс);
	ПолучитьТаблицуПоРезервам = 
			Не Ссылка.Процесс.Пустая() И
			ЗначениеЗаполнено(Заказ);

	Если ПолучитьТаблицуПоРезервам Тогда
	
		Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура
		|ИЗ
		|	Документ.ОтгрузкаТоваров.Товары
		|ГДЕ
		|	Ссылка = &ДокументСсылка И
		|	НЕ ДокументРезерва.Дата ЕСТЬ NULL";
		
	Иначе
		
		Возврат "ЛОЖЬ" КонецЕсли;
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	ДокументРезерва = ?(	Не Процесс.Заказчик.Пустая() И
							Не Процесс.Заказчик.Заказ.Пустая(),
								Процесс.Заказчик.Заказ,
								Неопределено);
	
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	////avdonin {{21.09.2010#
	////
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(
	//		ЭтотОбъект, 
	//		СкладОтправитель, 
	//		?(ДополнительныеСвойства.ПараметрыСистемы.КонтрольОстатков, Отказ, Ложь),
	//		Заголовок,
	//		ДокументРезерва);
	//Иначе
	//	
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//	
	//КонецЕсли;
	////}}avdonin
	//
	//Если Не Отказ Тогда
	//	КонтрольПроведения.ПроверитьТоварыВЯчейках(ЭтотОбъект, СкладОтправитель, Отказ, Заголовок);
	//КонецЕсли;
	
	Заказчик = ?(ТипЗнч(ДокументРезерва) = Тип("ДокументСсылка.ВнутреннийЗаказ"), ДокументРезерва.Заказчик, Неопределено); 
	Если Заказчик <> Неопределено И Заказчик = СкладПолучатель И ДокументРезерва.Склад = СкладОтправитель Тогда
		
		// в очередь на отправку
		 
		Запись = РегистрыСведений.ОтправкаЗаказов.СоздатьМенеджерЗаписи();
			
		Запись.Заказ 			= ДокументРезерва;
		Запись.Отправлен 		= Ложь;
			
		Попытка
			Запись.Записать();
		Исключение
				
			ОпОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка при записи состояния заказа
								|" + ОпОшибки);
			Отказ = Истина;
				
		КонецПопытки;
	КонецЕсли;
	
	// Обновим журнал заказа
	
	Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Процесс);
	Если 	ТипЗнч(Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ") И
			Не Заказы.ОбновитьРеквизитыЖурнала(Заказ) Тогда Отказ = Истина КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//Если Не (РольДоступна("ПолныеПрава") Или РольДоступна("ПолныеПраваВОбласти")) Тогда
	//	
	//	КонтрольПроведения.ПроверитьТоварыВПути(
	//			ЭтотОбъект, 
	//			СкладОтправитель, 
	//			СкладПолучатель,
	//			Процесс.Заказчик,
	//			?(ДополнительныеСвойства.ПараметрыСистемы.КонтрольОстатков, Отказ, Ложь),
	//			Заголовок);
	//	
	//	//avdonin {{22.09.2010#
	//	// выше правда делается оперативный контроль
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	//	//}}avdonin
	//	
	//КонецЕсли;
	
	ДокументРезерва = ?(	Не Процесс.Заказчик.Пустая() И
							Не Процесс.Заказчик.Заказ.Пустая(),
								Процесс.Заказчик.Заказ,
								Неопределено);

	// удалить из очереди отправку
	 
	Запись = РегистрыСведений.ОтправкаЗаказов.СоздатьМенеджерЗаписи();
	Запись.Заказ = ДокументРезерва;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		
		Попытка
			Запись.Удалить();
		Исключение
				
			ОпОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка при записи состояния заказа
								|" + ОпОшибки);
			Отказ = Истина;
				
		КонецПопытки;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Если СкладПолучатель.Ячеестый Тогда
	//	
	//	ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
	//		
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// Отправим оповестителю о том что заказ отгружен если заказчиком был внутренний заказ
	
	Если Не ОбменДанными.Загрузка И Не ПараметрыСеанса.КонтрольОстатковВСеансеОтключен И Проведен И 
			Не Процесс.Пустая() И ТипЗнч(Процесс.Заказчик) = Тип("БизнесПроцессСсылка.СборкаЗаказа") И
			ТипЗнч(Процесс.Заказчик.Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		
		События.ЗарегистрироватьСобытие("ОтгруженЗаказКлиенту",
			Новый Структура("Ссылка, Инициатор, Место, Название, КраткоеОписание, Параметры",
					Процесс.Заказчик.Заказ,
					Ссылка,
					Строка(СкладОтправитель),
					"Отгрузка заказа",
					"Отгружен внутренний заказ " + Процесс.Заказчик.Заказ.Номер + " (" + СкладОтправитель + " -> " + СкладПолучатель + ")"),
					ЭтотОбъект); КонецЕсли;
	
КонецПроцедуры
