// Стандартная функция форматирования прописи количества.
//
// Параметры:
//  Количество   - число, которое мы хотим форматировать.
//
// Возвращаемое значение:
//  Отформатированная должным образом строковое представление количества.
//
Функция КоличествоПрописью(Количество)

	ЦелаяЧасть   = Цел(Количество);
	ДробнаяЧасть = Окр(Количество - ЦелаяЧасть, 3);

	Если ДробнаяЧасть = Окр(ДробнаяЧасть,0) Тогда
		ПараметрыПрописи = ", , , , , , , , 0";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 1) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, десятая, десятых, десятых, м, 1";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 2) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, сотая, сотых, сотых, м, 2";
	Иначе
		ПараметрыПрописи = "целая, целых, целых, ж, тысячная, тысячных, тысячных, м, 3";
	КонецЕсли;

	Возврат ЧислоПрописью(Количество, ,ПараметрыПрописи);

КонецФункции // КоличествоПрописью()

Процедура Печать_М2(ТабличныйДокумент, Ссылка, Тип) Экспорт
	
		Запрос = Новый Запрос();
		
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доверенность.Ссылка                                            КАК Ссылка,
		|	Доверенность.Номер                                             КАК Номер,
		|	Доверенность.Дата                                              КАК ДатаДокумента,
		|	Доверенность.Организация                                       КАК Организация,
		//|	Доверенность.Организация.Префикс                               КАК Префикс,
		|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
		|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
		|	Доверенность.ФизЛицо                                           КАК ФизЛицо,
		|	Доверенность.ПоДокументу                                       КАК РеквизитыДокументаНаПолучение,
		|	Доверенность.ДатаОкончанияДействия                             КАК СрокДействия,
		|	Доверенность.Должность                                         КАК Должность,
		|	Доверенность.Ответственный                                     КАК Ответственный,
		|	Доверенность.БанковскийСчетОрганизации                                    КАК БанковскийСчет,
		|	Доверенность.Контрагент.НаименованиеПолное                     КАК ПоставщикПредставление,
		|	Доверенность.ДокументОснование                                 КАК ДокументОснование,
		|	Доверенность.ДокументОснование.Номер                           КАК НомерОснования,
		|	Доверенность.ДокументОснование.Дата                            КАК ДатаОснования,
		//|	Доверенность.ДокументОснование.Организация.Префикс             КАК ПрефиксОснования,
		|
		|	Доверенность.Товары.(
		|		НомерСтроки                           КАК Номер,
		//|		ПРЕДСТАВЛЕНИЕ(НоменклатураПоставщика) КАК НоменклатураПоставщика,
		|		НаименованиеТовара       КАК Номенклатура,
		//|		Характеристика.НаименованиеПолное     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА
		|				""""//ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
		|			ИНАЧЕ
		|				ПРЕДСТАВЛЕНИЕ(Упаковка)
		|		КОНЕЦ КАК ЕдиницаИзмеренияПредставление,
		|		Количество		      КАК КоличествоУпаковок
		|	),
		|
		//|	Доверенность.МатериальныеЦенности.(
		//|		НомерСтроки                     КАК Номер,
		//|		МатериальнаяЦенность            КАК МатериальнаяЦенность,
		//|		Количество                      КАК Количество,
		//|		ПРЕДСТАВЛЕНИЕ(ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
		//|	),
		|
		|	Доверенность.ФизЛицо.ДокументСерия       КАК ПаспортСерия,
		|	Доверенность.ФизЛицо.ДокументНомер       КАК ПаспортНомер,
		|	Доверенность.ФизЛицо.ДокументДатаВыдачи  КАК ПаспортДатаВыдачи,
		|	Доверенность.ФизЛицо.ДокументКемВыдан    КАК ПаспортВыдан,
		|	Доверенность.ФизЛицо.ДокументДатаВыдачи  КАК ДатаВыдачи
		|ИЗ
		|	Документ.Доверенность КАК Доверенность
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
		|	ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
		|	ПО ИСТИНА
		//|ЛЕВОЕ СОЕДИНЕНИЕ
		//|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
		//|ПО
		//|	Доверенность.ФизЛицо = ДокументыФизическихЛиц.ФизЛицо
		//|	И ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)
		|ГДЕ
		|	Доверенность.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	//ПервыйДокумент = Истина;
	    
	Макет = Документы.Доверенность.ПолучитьМакет("М2");
	
	//Если Тип = "ДоверенностьМ2" Тогда
	//	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";
	//ИначеЕсли Тип = "ДоверенностьМ2а" Тогда
	//	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2а";
	//КонецЕсли;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		//ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НомерДокументаНаПечать        = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ДанныеПечати.Номер);
		ФамилияИмяОтчествоДоверенного = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ФизЛицо);
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Организация,
			ДанныеПечати.ДатаДокумента,
			,
			ДанныеПечати.БанковскийСчет
		);
		
		ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, 
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны"
		);
		
		Если Тип = "ДоверенностьМ2" тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			
			ОбластьМакета.Параметры.НомерДокумента = НомерДокументаНаПечать;
			ОбластьМакета.Параметры.ФИОДоверенного = ?(ПустаяСтрока(ДанныеПечати.Должность), "", ДанныеПечати.Должность + " ") + ФамилияИмяОтчествоДоверенного;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НазваниеФормы = НСтр("ru='Типовая межотраслевая форма № М-2'");
			КодПоОКУД = "0315001";
			
		ИначеЕсли Тип = "ДоверенностьМ2а" Тогда
			
			НазваниеФормы = НСтр("ru='Типовая межотраслевая форма № М-2а'");
			КодПоОКУД = "0315002";
			
		КонецЕсли;
		
		// Заполнить реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента                = НомерДокументаНаПечать;
		ОбластьМакета.Параметры.НазваниеФормы                 = НазваниеФормы;
		ОбластьМакета.Параметры.ДатаДокумента                 = Формат(ДанныеПечати.ДатаДокумента,"ДФ = ""дд ММММ гггг """"г.""");
		ОбластьМакета.Параметры.СрокДействия                  = Формат(ДанныеПечати.СрокДействия,"ДФ = ""дд ММММ гггг """"г.""");
		ОбластьМакета.Параметры.ФамилияИмяОтчествоДоверенного = ДанныеПечати.ФизЛицо;
		ОбластьМакета.Параметры.ДолжностьДоверенного          = ДанныеПечати.Должность;
		ОбластьМакета.Параметры.ОрганизацияПредставление      = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.РеквизитыПотребителя          = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.РеквизитыПлательщика          = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.ОрганизацияКодПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
		
		ОбластьМакета.Параметры.РеквизитыСчета = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации,
			"НомерСчета,Банк,БИК,КоррСчет,"
		);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Заполнить таблицу
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		ВыборкаСтрокТовары = ДанныеПечати.Товары.Выбрать();
		//ВыборкаСтрокМатериальныеЦенности = ДанныеПечати.МатериальныеЦенности.Выбрать();
		КоличествоСтрок = 0;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			//Если ЗначениеЗаполнено(ВыборкаСтрокТовары.НоменклатураПоставщика) Тогда
			//	
			//	ОбластьМакета.Параметры.МатериальнаяЦенность = ВыборкаСтрокТовары.НоменклатураПоставщика;
			//	
			//Иначе
			//	
			//	ОбластьМакета.Параметры.МатериальнаяЦенность = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(
			//		ВыборкаСтрокТовары.Номенклатура);
			//	
			//КонецЕсли;
			//
			ОбластьМакета.Параметры.МатериальнаяЦенность = ВыборкаСтрокТовары.Номенклатура;
			
			ОбластьМакета.Параметры.КоличествоПрописью = ?(
				ВыборкаСтрокТовары.КоличествоУпаковок = 0,
				"",
				Строка(ВыборкаСтрокТовары.КоличествоУпаковок) + " (" + 
				КоличествоПрописью(ВыборкаСтрокТовары.КоличествоУпаковок) + ")"
			);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			КоличествоСтрок = КоличествоСтрок + 1;
			
		КонецЦикла;
		
		//Пока ВыборкаСтрокМатериальныеЦенности.Следующий() Цикл
		//	
		//	ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокМатериальныеЦенности);
		//	
		//	ОбластьМакета.Параметры.Номер = ВыборкаСтрокМатериальныеЦенности.Номер + КоличествоСтрок;
		//	
		//	ОбластьМакета.Параметры.КоличествоПрописью = ?(
		//		ВыборкаСтрокМатериальныеЦенности.Количество = 0,
		//		"",
		//		Строка(ВыборкаСтрокМатериальныеЦенности.Количество) + " (" + 
		//		КоличествоПрописью(ВыборкаСтрокМатериальныеЦенности.Количество) + ")"
		//	);
		//	
		//	ТабличныйДокумент.Вывести(ОбластьМакета);
		//	
		//КонецЦикла;
		
		// Заполнить реквизиты подвала
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Руководитель);
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ГлавныйБухгалтер);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	//Возврат ТабличныйДокумент;
	
	
КонецПроцедуры