Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.РасчетСебестоимости.Себестоимость
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
 
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Проведение
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	                                     
	// Запись
	Движения.Записать();

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Ссылка.Пустая() Тогда
		КомиссияЗаДоставку 	= Константы.КомиссияЗаДоставкуТовара.Получить();
		КомиссияЗаОплату	= Константы.КомиссияЗаОплатуТовара.Получить();
		ТипЦенЗакупочный	= ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенЗакупочный");
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвойс") Тогда	
		Запрос = Новый Запрос("
			|ВЫБРАТЬ 
			|	Валюта, ТипЦен ТипЦенЗакупочный, &Ссылка Инвойс 
			|ИЗ
			|	Документ.Инвойс
			|ГДЕ
			|	Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		ВыборкаШапки = Запрос.Выполнить().Выбрать();
		Если ВыборкаШапки.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
		КонецЕсли;
			
		Запрос = Новый Запрос(" ВЫБРАТЬ
								|	Тов.Номенклатура,
								|	Тов.Артикул,
								|	Тов.ЗаказПоставщику,
								|	Тов.НоменклатураДляТаможни,
								|	Тов.КодТНВЭД,
								|	Тов.Количество,
								|	Тов.Упаковка,
								|	Тов.ЦенаЗакупочная,
								|" +
								?(ДанныеЗаполнения.РасчетВеса = Перечисления.ВидыРасчетаВеса.ПоУпаковкам,"
								|	Тов.ВесНетто*Тов.КоличествоМест		ВесНетто,
								|	Тов.ВесБрутто*Тов.КоличествоМест 	ВесБрутто,", "
								|	Тов.ВесНетто*Тов.Количество 		ВесНетто,
								|	Тов.ВесБрутто*Тов.Количество 		ВесБрутто,") + 
								"
								|	ЕСТЬNULL(Рег.ЦенаПоРиску, 0)	                	ЦенаПоРиску,
								|	ЕСТЬNULL(Рег.Пошлина, 0)                      		Пошлина,
								|	ЕСТЬNULL(Рег.КоэффициентТаможенногоПлатежа, 0)		КоэффициентТаможенногоПлатежа
								//|	ЕСТЬNULL(Зак.Цена, 0)								ЦенаЗакупочная
								|ИЗ
								|	(	ВЫБРАТЬ
								|			ЗаказПоставщику,
								|			Упаковка,                               	
								|			МАКСИМУМ(Номенклатура)						Номенклатура,
								|			МАКСИМУМ(Номенклатура.Артикул)				Артикул,
								|			МАКСИМУМ(НоменклатураДляТаможни)			НоменклатураДляТаможни,
								|			МАКСИМУМ(НоменклатураДляТаможни.КодТНВЭД)	КодТНВЭД,
								|			МАКСИМУМ(Цена)                              ЦенаЗакупочная,
								|			СУММА(Количество)							Количество,
								|			СУММА(ВесНетто)                             ВесНетто,
								|           СУММА(ВесБрутто)                            ВесБрутто,
								|			СУММА(КоличествоМест)                       КоличествоМест			
								|		ИЗ
								|			Документ.Инвойс.ТоварыПакинг Док
								|			ЛЕВОЕ СОЕДИНЕНИЕ
								|				Справочник.НоменклатураДляТаможни Спр
								|			ПО
								|				Док.НоменклатураДляТаможни = Спр.Ссылка
								|		ГДЕ
								|			Док.Ссылка = &Ссылка
								|		СГРУППИРОВАТЬ ПО
								|			Док.ЗаказПоставщику, Док.Упаковка
								|	) Тов
								|	ЛЕВОЕ СОЕДИНЕНИЕ
								|		РегистрСведений.ТаможенныеЦены.СрезПоследних(&Дата) Рег
				                |	ПО
								|		Тов.НоменклатураДляТаможни = Рег.НоменклатураДляТаможни
								//|	ЛЕВОЕ СОЕДИНЕНИЕ
								//|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ТипЦен = &Закупочная) Зак      // закупочная цена в валюте установки цен
								//|	ПО	
								//|		Тов.Номенклатура = Зак.Номенклатура
								|");
		Запрос.УстановитьПараметр("Ссылка", 	ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", 		Дата);
		//Запрос.УстановитьПараметр("Закупочная", ТипЦенЗакупочный);

		РезультатЗапроса = Запрос.Выполнить(); 
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Товары.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;
 	КонецЕсли;

КонецПроцедуры
