// СЛУЖЕБНЫЕ
&НаКлиенте
Процедура ДополнительныеРеквизиты(Команда)
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура ИсходныеДанные(Команда)
	ОткрытьФорму("Документ.РасчетСебестоимости.Форма.Форма", , ЭтаФорма);
КонецПроцедуры
&НаСервере
Процедура СформироватьВалютныйЗаголовок(Элемент, ТипЦен, Заголовок = "") Экспорт
	
	Элементы[Элемент].Заголовок = ?(ПустаяСтрока(Заголовок), Строка(ТипЦен), Заголовок) + ", " + Строка(ТипЦен.Валюта);
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Если Объект.Себестоимость.Количество() Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСебестоимость;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТаможня;
	КонецЕсли;
		
	СформироватьВалютныйЗаголовок("ЦенаЗакупочная", Объект.ТипЦенЗакупочный);
    СформироватьВалютныйЗаголовок("СебестоимостьЦенаЗакупочная", Объект.ТипЦенЗакупочный);
	
	ТипЦенСебестоимость			= Константы.Себестоимость.Получить();
//	ВалютаУправленческогоУчета	= Константы.ВалютаУправленческогоУчета.Получить();	
	
	СформироватьВалютныйЗаголовок("СебестоимостьСебестоимость", ТипЦенСебестоимость);
	СформироватьВалютныйЗаголовок("МаркетинговаяСебестоимость", ТипЦенСебестоимость, "Маркетинговая себестоимость");
  
	ПерезаполнитьТаблицуТовары();
	ОснованиеПриИзмененииНаСервере();

КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос("	ВЫБРАТЬ
							|   Товары.НоменклатураДляТаможни,
							|	Товары.КодТНВЭД,
							|	Товары.ЦенаПоРиску,
							|	Товары.Пошлина,
							|	Товары.КоэффициентТаможенногоПлатежа
							|ПОМЕСТИТЬ
							|	ТоварыДокумента
							|ИЗ
							|	&ВыбТаблица КАК Товары
							|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	                                     
	Запрос.УстановитьПараметр("ВыбТаблица", Объект.Товары.Выгрузить());
	Запрос.Выполнить();
					   
	Запрос.Текст = "ВЫБРАТЬ
					|	Тов.НоменклатураДляТаможни		НоменклатураДляТаможни,
					|	МАКСИМУМ(Тов.КодТНВЭД)			МаксКодТНВЭД,
					|	МИНИМУМ(Тов.КодТНВЭД) 			МинКодТНВЭД,
					|	МАКСИМУМ(Тов.ЦенаПоРиску)		МаксЦенаПоРиску,
					|	МИНИМУМ(Тов.ЦенаПоРиску) 		МинЦенаПоРиску,
					|	МАКСИМУМ(Тов.Пошлина)			МаксПошлина,
					|	МИНИМУМ(Тов.Пошлина) 			МинПошлина,
					|	МАКСИМУМ(Тов.КоэффициентТаможенногоПлатежа)		МаксКТП,
					|	МИНИМУМ(Тов.КоэффициентТаможенногоПлатежа) 		МинКТП
					|	ПОМЕСТИТЬ Товары
					|ИЗ
					|	ТоварыДокумента Тов 
					|СГРУППИРОВАТЬ ПО Тов.НоменклатураДляТаможни
					|ИМЕЮЩИЕ
					|	Тов.НоменклатураДляТаможни <> ЗНАЧЕНИЕ(Справочник.НоменклатураДляТаможни.ПустаяСсылка)
					|;
					|ВЫБРАТЬ
					|	Тов.НоменклатураДляТаможни,
					|	Тов.МаксКодТНВЭД	КодТНВЭД,
					|	Спр.КодТНВЭД		ТоварКодТНВЭД
					|ИЗ
					|	Товары Тов
					|	ЛЕВОЕ СОЕДИНЕНИЕ
					|		Справочник.НоменклатураДляТаможни Спр
				    |	ПО
					|		Спр.Ссылка = Тов.НоменклатураДляТаможни
					|ГДЕ
					|	Спр.КодТНВЭД <> Тов.МаксКодТНВЭД
					|;
					|ВЫБРАТЬ
					|	НоменклатураДляТаможни,
					|	ВЫБОР КОГДА МаксКодТНВЭД <> МинКодТНВЭД 		ТОГДА ""Коды ТНВЭД"" 		ИНАЧЕ """" 	КОНЕЦ СообщениеКодТНВЭД,
					|	ВЫБОР КОГДА МаксЦенаПоРиску <> МинЦенаПоРиску 	ТОГДА ""Цены по риску"" 	ИНАЧЕ """" 	КОНЕЦ СообщениеЦенаПоРиску,
					|	ВЫБОР КОГДА МаксПошлина <> МинПошлина 			ТОГДА ""значения Пошлины""	ИНАЧЕ """" 	КОНЕЦ СообщениеПошлина,
					|	ВЫБОР КОГДА МаксКТП <> МинКТП 					ТОГДА ""Коэффициенты ТП"" 	ИНАЧЕ """" 	КОНЕЦ СообщениеКТП
					|ИЗ
					|	Товары
					|ГДЕ
					|	МаксКодТНВЭД <> МинКодТНВЭД ИЛИ МаксЦенаПоРиску <> МинЦенаПоРиску ИЛИ МаксПошлина <> МинПошлина ИЛИ МаксКТП <> МинКТП
					|" ;

	Рез = Запрос.ВыполнитьПакет();
	Если НЕ Рез[2].Пустой() Тогда
		Выборка = Рез[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщить("Для """ + Выборка.НоменклатураДляТаможни + """ назначены разные " + 
								Выборка.СообщениеКодТНВЭД +	?(ЗначениеЗаполнено(Выборка.СообщениеКодТНВЭД), ", ", "") + 
								Выборка.СообщениеЦенаПоРиску + ?(ЗначениеЗаполнено(Выборка.СообщениеЦенаПоРиску), ", ", "") + 
								Выборка.СообщениеПошлина + ?(ЗначениеЗаполнено(Выборка.СообщениеПошлина), ", ", "") +  
								Выборка.СообщениеКТП + ?(ЗначениеЗаполнено(Выборка.СообщениеКТП), ", ", "") + 
					" введите корректные данные.");
		КонецЦикла;
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если НЕ Рез[1].Пустой() Тогда 
		Выборка = Рез[1].Выбрать();
	  	Пока Выборка.Следующий() Цикл
		
			ТоварОбъект =  Выборка.НоменклатураДляТаможни.ПолучитьОбъект();
			ТоварОбъект.КодТНВЭД = Выборка.КодТНВЭД;
			
			Попытка
				ТоварОбъект.Записать();
			Исключение
				Сообщить("Ошибка сохранения кода ТНВЭД: " + ОписаниеОшибки());
				Отказ = Истина;
			КонецПопытки;
		
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПерезаполнитьТаблицуТовары();	
	Оповестить("РасчетСебестоимостиЗаписан", Объект.Проведен);
КонецПроцедуры
 
// ТАМОЖНЯ

&НаКлиенте
Процедура ПерейтиКИзменениюТаможенныхДанных(Команда)
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТаможня;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзExcel(Команда)
	
	ОткрытьФорму("Документ.РасчетСебестоимости.Форма.ЗагрузкаДанных", , ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьИзИнвойс(Команда)
	
	ОткрытьФорму("Документ.Инвойс.ФормаВыбора", , ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Объект.Инвойс = ВыбранноеЗначение;
	ОснованиеПриИзмененииНаСервере();
	ЗаполнитьТаблицуТовары(ВыбранноеЗначение);
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТаблицуТовары(Ссылка) Экспорт 
		Запрос = Новый Запрос(" ВЫБРАТЬ РАЗРЕШЕННЫЕ
								|	Тов.Номенклатура,
								|	Тов.Артикул,
								|	Тов.ЗаказПоставщику,
								|	Тов.НоменклатураДляТаможни,
								|	Тов.КодТНВЭД,
								|	Тов.Количество,
								|	Тов.Упаковка," + ?(ЗагружатьСЦеной, "
								|	Тов.ЦенаЗакупочная,", "
								|	ЕСТЬNULL(Зак.Цена, 0)	ЦенаЗакупочная,") + " 
								|" +
								?(Ссылка.РасчетВеса = Перечисления.ВидыРасчетаВеса.ПоУпаковкам,"
								|	Тов.ВесНетто*Тов.КоличествоМест		ВесНетто,
								|	Тов.ВесБрутто*Тов.КоличествоМест 	ВесБрутто,", "
								|	Тов.ВесНетто*Тов.Количество 		ВесНетто,
								|	Тов.ВесБрутто*Тов.Количество 		ВесБрутто,") + "
								|	ЕСТЬNULL(Рег.ЦенаПоРиску, 0)	                	ЦенаПоРиску,
								|	ЕСТЬNULL(Рег.Пошлина, 0)                      		Пошлина,
								|	ЕСТЬNULL(Рег.КоэффициентТаможенногоПлатежа, 0)		КоэффициентТаможенногоПлатежа
								|ИЗ" + ?(ГруппировкаНоменклатуры, "  
								|	(	ВЫБРАТЬ
								|			ЗаказПоставщику,
								|			Упаковка,                               	
								|			МАКСИМУМ(Номенклатура)						Номенклатура,
								|			МАКСИМУМ(Номенклатура.Артикул)				Артикул,
								|			МАКСИМУМ(НоменклатураДляТаможни)			НоменклатураДляТаможни,
								|			МАКСИМУМ(НоменклатураДляТаможни.КодТНВЭД)	КодТНВЭД,
								|			МАКСИМУМ(Цена)                              ЦенаЗакупочная,
								|			СУММА(Количество)							Количество,
								|			СУММА(ВесНетто)                             ВесНетто,
								|           СУММА(ВесБрутто)                            ВесБрутто,
								|			СУММА(КоличествоМест)                       КоличествоМест			
								|		ИЗ
								|			Документ.Инвойс.ТоварыПакинг
								|		ГДЕ
								|			Ссылка = &Ссылка
								|		СГРУППИРОВАТЬ ПО
								|			ЗаказПоставщику, Упаковка
								|	) Тов","
								|	(	ВЫБРАТЬ
								|			ЗаказПоставщику,
								|			Упаковка,                               	
								|			Номенклатура						Номенклатура,
								|			Номенклатура.Артикул				Артикул,
								|			НоменклатураДляТаможни				НоменклатураДляТаможни,
								|			НоменклатураДляТаможни.КодТНВЭД		КодТНВЭД,
								|			Цена                              	ЦенаЗакупочная,
								|			Количество							Количество,
								|			ВесНетто                            ВесНетто,
								|           ВесБрутто                           ВесБрутто,
								|			КоличествоМест                      КоличествоМест			
								|		ИЗ
								|			Документ.Инвойс.ТоварыПакинг
								|		ГДЕ
								|			Ссылка = &Ссылка
								|	) Тов") + "
								|	ЛЕВОЕ СОЕДИНЕНИЕ
								|		РегистрСведений.ТаможенныеЦены.СрезПоследних(&Дата) Рег
				                |	ПО
								|		Тов.НоменклатураДляТаможни = Рег.НоменклатураДляТаможни  
								|	ЛЕВОЕ СОЕДИНЕНИЕ
								|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ТипЦен = &Закупочная) Зак
				                |	ПО
								|		Тов.Номенклатура = Зак.Номенклатура  
								|");
		Запрос.УстановитьПараметр("Ссылка", 	Ссылка);
		Запрос.УстановитьПараметр("Дата", 		Объект.Дата);
		Запрос.УстановитьПараметр("Закупочная", Объект.ТипЦенЗакупочный);
		
		РезультатЗапроса = Запрос.Выполнить(); 
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;

   ПересчитатьТаблицуТовары();
	
КонецПроцедуры

 &НаСервере
Процедура ПерезаполнитьТаблицуТовары() Экспорт
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Артикул = Строка.Номенклатура.Артикул;
		Строка.КодТНВЭД = Строка.НоменклатураДляТаможни.КодТНВЭД;
		ПересчетСтроки(Строка.ПолучитьИдентификатор());
	КонецЦикла
	
КонецПроцедуры
 &НаСервере
Процедура ПересчитатьТаблицуТовары() Экспорт
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Артикул = СокрЛП(Строка.Артикул); 
		ПересчетСтроки(Строка.ПолучитьИдентификатор());
	КонецЦикла
	
КонецПроцедуры
&НаСервере
Процедура ПересчетСтроки(Идентификатор, ПересчитатьПлатеж = Ложь, ПересчитатьКоэффициент = Ложь) Экспорт
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Идентификатор);
	
	ТекущиеДанные.ТаможеннаяСтоимость = ТекущиеДанные.ВесНетто * ТекущиеДанные.ЦенаПоРиску;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ТаможеннаяСтоимость) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПересчитатьКоэффициент Тогда
		ТекущиеДанные.КоэффициентТаможенногоПлатежа = ТекущиеДанные.ТаможенныйПлатеж/ТекущиеДанные.ТаможеннаяСтоимость;
	КонецЕсли;
	Если ПересчитатьПлатеж Тогда
		ТекущиеДанные.ТаможенныйПлатеж = ТекущиеДанные.ТаможеннаяСтоимость * ТекущиеДанные.КоэффициентТаможенногоПлатежа;
	КонецЕсли;
	Если НЕ ПересчитатьПлатеж И НЕ ПересчитатьКоэффициент Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.КоэффициентТаможенногоПлатежа) Тогда
			ТекущиеДанные.ТаможенныйПлатеж = ТекущиеДанные.ТаможеннаяСтоимость * ТекущиеДанные.КоэффициентТаможенногоПлатежа;
		ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ТаможенныйПлатеж) Тогда
			ТекущиеДанные.КоэффициентТаможенногоПлатежа = ТекущиеДанные.ТаможенныйПлатеж/ТекущиеДанные.ТаможеннаяСтоимость;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПроцентТранспортныеРасходы) Тогда
		
		ТекущиеДанные.ТаможенныйПлатежСТранспортнымиРасходами = ТекущиеДанные.ТаможенныйПлатеж * (1 + ПроцентТранспортныеРасходы);
		ТекущиеДанные.СуммарныйПлатеж = ТекущиеДанные.ТаможенныйПлатежСТранспортнымиРасходами + ТекущиеДанные.ЦенаЗакупочная*ТекущиеДанные.Количество*Объект.КомиссияЗаОплату;
		Возврат;
	КонецЕсли;	
		
	ИтогБрутто = Объект.Товары.Итог("ВесБрутто");
	Если НЕ ЗначениеЗаполнено(ИтогБрутто) Тогда
		Возврат;
	КонецЕсли;
		
	ТекущиеДанные.ТаможенныйПлатежСТранспортнымиРасходами = ((Объект.ОбщийРасходТранспортировки*ТекущиеДанные.ВесБрутто/ИтогБрутто + ТекущиеДанные.ТаможенныйПлатеж)*(1 + Объект.КомиссияЗаДоставку));
	ТекущиеДанные.СуммарныйПлатеж = ТекущиеДанные.ТаможенныйПлатежСТранспортнымиРасходами + ТекущиеДанные.ЦенаЗакупочная*ТекущиеДанные.Количество*Объект.КомиссияЗаОплату;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПоРискуПриИзменении(Элемент)
	ПересчетСтроки(Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура ТоварыТаможенныйПлатежПриИзменении(Элемент)
	ПересчитатьКоэффициент = Истина;
	ПересчетСтроки(Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор(), , ПересчитатьКоэффициент);
КонецПроцедуры
&НаКлиенте
Процедура ТоварыКоэффициентТаможенногоПлатежаПриИзменении(Элемент)
	ПересчитатьПлатеж = Истина;
	ПересчетСтроки(Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор(), ПересчитатьПлатеж);
КонецПроцедуры

// СЕБЕСТОИМОСТЬ
&НаКлиенте
Процедура ПерейтиКРасчетуСебестоимости(Команда)
	
	ЗаполнитьТаблицуСебестоимость();
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСебестоимость;
 	
КонецПроцедуры

&НаСервере                               
Процедура ЗаполнитьТаблицуСебестоимость() экспорт
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Себестоимость.Очистить();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос("	ВЫБРАТЬ
							|	Товары.Номенклатура			Номенклатура,
							|   Товары.СуммарныйПлатеж		ТаможенныйПлатеж,
							|	Товары.ТаможеннаяСтоимость	ТаможеннаяСтоимость,
							|	Товары.Количество			Количество,
							|	Товары.ЦенаЗакупочная		ЦенаЗакупочная
							|ПОМЕСТИТЬ
							|	ТоварыДокумента
							|ИЗ
							|	&ВыбТаблица КАК Товары
							|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	                                     
	Запрос.УстановитьПараметр("ВыбТаблица", Объект.Товары.Выгрузить());
	Запрос.Выполнить();
	                   
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Таб.Номенклатура					Номенклатура,
					|	СУММА(Таб.ТаможенныйПлатеж)			ТаможенныйПлатеж,
					|	СУММА(Таб.ТаможеннаяСтоимость)		ТаможеннаяСтоимость,
					|	МАКСИМУМ(Таб.Количество)			Количество,
					|	МАКСИМУМ(Таб.ЦенаЗакупочная)        ЦенаЗакупочная
					|ПОМЕСТИТЬ Товары
					|ИЗ
					|	ТоварыДокумента Таб
					|СГРУППИРОВАТЬ ПО Таб.Номенклатура
					|;
					|	
					|ВЫБРАТЬ
					|	Таб.Номенклатура,
					|	Таб.Количество,
					|	Таб.ТаможенныйПлатеж,
					|	Таб.ТаможеннаяСтоимость,
					|	Таб.ЦенаЗакупочная,
					|	Таб.СебестоимостьУУ						МаркетинговаяСебестоимость,
					|	Таб.Себестоимость                       МаркетинговаяСебестоимостьУЕ,
					|	ВЫБОР КОГДА Таб.ЦенаЗакупочная = 0 Тогда
					|		0
					|	ИНАЧЕ
					|		Таб.Себестоимость/Таб.ЦенаЗакупочная	
					|	КОНЕЦ									Удорожание,
					|	ВЫБОР КОГДА ЦенаСеб.Цена ЕСТЬ NULL ТОГДА
					|		Таб.СебестоимостьУУ		
					|	ИНАЧЕ 
							// расчитываем усредненную себестоимость
					|		(Таб.Количество*Таб.СебестоимостьУУ + ЕСТЬNULL(Ост.КоличествоОстаток,0)*ЕСТЬNULL(ЦенаСеб.Цена,0))/(Таб.Количество + ЕСТЬNULL(Ост.КоличествоОстаток,0))
					|																				
					|	КОНЕЦ	Себестоимость
					|ИЗ
					|	(	ВЫБРАТЬ
					|			Тов.Номенклатура,
					|			Тов.Количество,
					|			Тов.ТаможенныйПлатеж,
					|			Тов.ТаможеннаяСтоимость,
					|			Тов.ЦенаЗакупочная,												
					|			// расчитываем новую себестоимость и переводим из валюты документа в валюту управленческого учета
					|			ВЫБОР КОГДА &ИспользоватьКурсОплаты  
					|				ТОГДА	Тов.ТаможенныйПлатеж*&КурсДокумента/Тов.Количество + Тов.ЦенаЗакупочная*&Курс					
					|				ИНАЧЕ   (Тов.ТаможенныйПлатеж/Тов.Количество + Тов.ЦенаЗакупочная)*(ЕСТЬNULL(Усл.Курс,1)/ЕСТЬNULL(Усл.Кратность,1))
                    |				КОНЕЦ	СебестоимостьУУ,
					|			Тов.ТаможенныйПлатеж/Тов.Количество + Тов.ЦенаЗакупочная 							Себестоимость
					|		ИЗ
					|			Товары Тов
					|			ЛЕВОЕ СОЕДИНЕНИЕ
					|				РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) Усл // курс валюты документа
					|			ПО ИСТИНА
					|	) Таб
					|	ЛЕВОЕ СОЕДИНЕНИЕ
					|		РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата) Ост
					|	ПО
					|		Таб.Номенклатура = Ост.Номенклатура
					|	ЛЕВОЕ СОЕДИНЕНИЕ
					|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ТипЦен = &Себестоимость) ЦенаСеб  // себестоимость в валюте УУ
					|	ПО
					|		Таб.Номенклатура = ЦенаСеб.Номенклатура					
					|";

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	Запрос.УстановитьПараметр("Себестоимость", ТипЦенСебестоимость);
	Запрос.УстановитьПараметр("ИспользоватьКурсОплаты", Объект.ИспользоватьКурсОплаты);
	Запрос.УстановитьПараметр("Курс", Объект.КурсОплаты);
	Запрос.УстановитьПараметр("КурсДокумента", Объект.КурсДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Объект.Себестоимость.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
					
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьЗакупочнуюЦену()
	
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	Док.НомерСтроки,
		                      |	Док.Номенклатура,
		                      |	Док.НоменклатураДляТаможни,
		                      |	Док.Количество,
		                      |	Док.Упаковка,
		                      |	Док.ВесНетто,
		                      |	Док.ВесБрутто,
		                      |	Док.ТаможенныйПлатеж,
		                      |	Док.КоэффициентТаможенногоПлатежа,
		                      |	Док.ЦенаПоРиску,
		                      |	Док.Пошлина,
		                      |	Док.СуммарныйПлатеж,
		                      |	Рег.Цена КАК ЦенаЗакупочная
		                      |ИЗ
		                      |	Документ.РасчетСебестоимости.Товары КАК Док
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ТипЦен = &Закупочная) КАК Рег
		                      |		ПО Док.Номенклатура = Рег.Номенклатура
		                      |ГДЕ
		                      |	Док.Ссылка = &Ссылка");
							
		Запрос.УстановитьПараметр("Ссылка", 	Объект.Ссылка);
		Запрос.УстановитьПараметр("Дата", 		Объект.Дата);
		Запрос.УстановитьПараметр("Закупочная", Объект.ТипЦенЗакупочный);
		
		РезультатЗапроса = Запрос.Выполнить(); 
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;

		ПерезаполнитьТаблицуТовары();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьЦену(Команда)
	
	ПерезаполнитьЗакупочнуюЦену();
				
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)

	ПересчитатьТаблицуТовары();
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	ОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОснованиеПриИзмененииНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ ВЫРАЗИТЬ (СуммаУпрОборот/СуммаОборот КАК ЧИСЛО(10, 4)) Курс ИЗ РегистрНакопления.ОплатыПоИнвойсу.Обороты(,,, Инвойс = &Инвойс);
	|ВЫБРАТЬ СуммаОстаток Долг ИЗ РегистрНакопления.ОплатыИмпорт.Остатки(, Инвойс = &Инвойс) ");
	Запрос.УстановитьПараметр("Инвойс", Объект.Инвойс);
	Рез = Запрос.ВыполнитьПакет();
	Выборка = Рез[0].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.КурсОплаты =Выборка.Курс;		
	КонецЕсли;
	Выборка = Рез[1].Выбрать();
	Если Выборка.Следующий() Тогда
		Долг = Выборка.Долг;		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КурсНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Инвойс", Объект.Инвойс),,Истина);
	ОткрытьФорму("Отчет.ОплатыИмпорт.Форма", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры



