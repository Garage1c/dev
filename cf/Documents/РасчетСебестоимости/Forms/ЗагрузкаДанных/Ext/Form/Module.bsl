
&НаКлиенте
Перем СписокСовпадений;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидимостьПолнойВыгрузки();			
	
КонецПроцедуры

&НаСервере
Функция НайтиНоменклатуру(Артикул, стрОшибки = "")
	
	Запрос = Новый Запрос("ВЫБРАТЬ Артикул, Ссылка ИЗ Справочник.Номенклатура ГДЕ Артикул = """ + Артикул + """");
	
	Попытка                      // мало ли что подусунули в артикул...
		Рез = Запрос.Выполнить();
	Исключение
		стрОшибки = ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки;
	
	Если НЕ Рез.Пустой() Тогда
		
		Выборка = Рез.Выбрать();
		Если Выборка.Следующий() Тогда
		
			Цена = РаботаСНоменклатурой.ПолучитьЦену(Выборка.Ссылка, Справочники.ТипыЦен.НайтиПоКоду("000000013"), Справочники.Валюты.НайтиПоКоду("30 "));
		
			Возврат Новый Структура("Артикул, Номенклатура, Цена", Выборка.Артикул, Выборка.Ссылка, Цена);
		КонецЕсли;
	КонецЕсли;
	
	стрОшибки = "Не найдено ни одного товара с артикулом " + Артикул;
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузкаТНВЭД(Эксель)
	
	Таблица = ВладелецФормы.Объект.Товары;
	стрОшибки = "";
	
	СписокСовпадений = Новый СписокЗначений;
		
	Лист = Эксель.Worksheets(1);
	КолВоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	КоличествоСовпадений = 0;
	
	Для Сч = 2 По КолВоСтрок Цикл // первая строка - заголовок
		
		СтрокаАртикул = СокрЛП(Лист.Cells(Сч, Артикул).Value);
		
		Если ПустаяСтрока(СтрокаАртикул) Тогда
			Сообщить("Строка #" + Строка(Сч) + ": Не указан артикул товара. Выгрузка данных по этой строке не произведена");
            Продолжить;
		КонецЕсли;
		Если ПолнаяВыгрузка Тогда
			Рез =  НайтиНоменклатуру(СтрокаАртикул, стрОшибки);
			Если Рез = Неопределено Тогда
				Сообщить("Не существует товара с артикулом " + СтрокаАртикул);
				Продолжить;
			КонецЕсли;
			
			Строка = Таблица.Добавить();
			Строка.Артикул = Рез.Артикул;
			Строка.Номенклатура = Рез.Номенклатура;
			Строка.ЦенаЗакупочная = Рез.Цена;
        Иначе
			Строки = Таблица.НайтиСтроки(Новый Структура("Артикул", СтрокаАртикул));
				
			Если НЕ Строки.Количество() Тогда
				Сообщить("Не найдено ни одного товара с артикулом " + СтрокаАртикул);
				Продолжить;
		    КонецЕсли;
			
			Строка = Неопределено;
			Для Каждого Стр Из Строки Цикл
				Ид = Стр.ПолучитьИдентификатор();
				Зн = СписокСовпадений.НайтиПоЗначению(Ид);
				Если Зн = Неопределено Тогда // эта строка не заполнялась
					Строка = Стр;
					СписокСовпадений.Добавить(Ид);
					Прервать;
				КонецЕсли;
			КонецЦикла;
				
		КонецЕсли;

		// попытка записи числовых данных: если в ячейке не число, пропускаем

		Если Строка = Неопределено Тогда
			Сообщить("Строка #" + Строка(Сч) + " в табличной части не найдена");
			Продолжить;
		КонецЕсли;
		
		Если ПолнаяВыгрузка Тогда
			Попытка  				
				Строка.Количество = Число(СокрЛП(Лист.Cells(Сч, Количество).Value)); 
			Исключение
				Строка.Количество = 0;
				Сообщить("Колонка ""Количество"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
			
			
			Попытка  				
				Строка.ВесНетто = Число(СокрЛП(Лист.Cells(Сч, ВесНетто).Value)); 
			Исключение
				Строка.ВесНетто = 0;
				Сообщить("Колонка ""Вес Нетто"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
			
			Попытка  				
				Строка.ВесБрутто = Число(СокрЛП(Лист.Cells(Сч, ВесБрутто).Value)); 
			Исключение
				Строка.ВесБрутто = 0;
				Сообщить("Колонка ""Вес Брутто"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
		КонецЕсли;
		
		Попытка  				
			Строка.ТаможенныйПлатеж = Число(СокрЛП(Лист.Cells(Сч, ТаможенныйПлатеж).Value)); 
		Исключение
			Строка.ТаможенныйПлатеж = 0;
			Сообщить("Колонка ""Таможенный платеж"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		Попытка  				
			Строка.ЦенаПоРиску 	= Число(СокрЛП(Лист.Cells(Сч, ЦенаПоРиску).Value));
		Исключение
			Строка.ЦенаПоРиску = 0;
			Сообщить("Колонка ""Цена по риску"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		Попытка  				
			Строка.Пошлина 	= Число(СокрЛП(Лист.Cells(Сч, Пошлина).Value));
		Исключение
			Строка.Пошлина = 0;
			Сообщить("Колонка ""Пошлина"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		ВладелецФормы.ПересчетСтроки(Строка.ПолучитьИдентификатор(), Ложь, Истина);

		СтрокаКодТНВЭД = СокрЛП(Лист.Cells(Сч, КодТНВЭД).Value);
				
		Если ПустаяСтрока(СтрокаКодТНВЭД) Тогда
			Продолжить;
		КонецЕсли;		
		
		Стр = "";
		ДопустимыеСимволы = "0123456789";
		
		Для ном = 1 По СтрДлина(СтрокаКодТНВЭД) Цикл
			
			Символ = Сред(СтрокаКодТНВЭД, ном, 1);
			Рез = Найти(ДопустимыеСимволы, Символ);
			
			Если Рез <> 0 Тогда
				Стр = Стр + Символ;
			КонецЕсли;
			
		КонецЦикла;		
		
		Строка.КодТНВЭД = Стр;
        //Строка.Маркер = Истина;	
		
		стрОшибки = "";
		Рез = НайтиТаможнюПоКодТНВЭД(Стр, стрОшибки);
		Если Рез =  Неопределено Тогда
			Сообщить(стрОшибки);
			Продолжить;
		КонецЕсли;
		
		Если ПолнаяВыгрузка Тогда
			Строка.НоменклатураДляТаможни = Рез;
		Иначе
			Если Строка.НоменклатураДляТаможни <> Рез Тогда
				Сообщить("Найдено несоответствие между таможенной позицией, назначенной для " + Строка.Артикул + " в PACING LIST и данными Excel")
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция НайтиТаможнюПоКодТНВЭД(Код, СтрОшибки)
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.НоменклатураДляТаможни ГДЕ КодТНВЭД = """ + Код + """");
	Рез = Запрос.Выполнить();
	Если Не Рез.Пустой() Тогда
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	СтрОшибки = "Таможенного наименования с кодом ТНВЭД " + Код + " не существует"; 
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыгрузку(Команда)
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		ОбщиеФункции.СообщитьТекст("Не выбран файл", "ИмяФайла", ЭтаФорма);
		Возврат;
	КонецЕсли;
		
	// Получим эксель
	стрОшибки = "";	         
	Эксель = COMФункцииДиалогов.ОткрытьФайлЭкселя(ИмяФайла, стрОшибки);
	
	Если Эксель = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(стрОшибки);
		Возврат;
	КонецЕсли;
	                      
	ВыгрузкаТНВЭД(Эксель);
	
	COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
	Сообщить("Данные загружены.");
	
//	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Эксель (*.xls)|*.xls*";
	
	Если ДВ.Выбрать() Тогда
		
		ИмяФайла = ДВ.ПолноеИмяФайла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВидимостьПолнойВыгрузки()
	
	Элементы.Количество.Видимость = ПолнаяВыгрузка;
	Элементы.ВесБрутто.Видимость = ПолнаяВыгрузка;
	Элементы.ВесНетто.Видимость = ПолнаяВыгрузка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолнаяВыгрузкаПриИзменении(Элемент)
	ВидимостьПолнойВыгрузки();	
КонецПроцедуры
 