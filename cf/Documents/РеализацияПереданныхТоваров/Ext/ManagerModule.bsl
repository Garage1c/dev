
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Перем ОперативныйЗаказ;
	
	// Проверим оператиынй заказ который не вычислить так как записи нет в базе
	
	Если ДополнительныеСвойства.Свойство("ОперативныйЗаказ", ОперативныйЗаказ) Тогда
		
		ТекстФильтраЗаказа = " = &Заказ";
		
	Иначе
		
		// ТекстФильтраЗаказа = "В(ВЫБРАТЬ Заказ ИЗ СписокЗаказов)";
		ТекстФильтраЗаказа = " = &Заказ"; 	// исправление коснулись кода при проведении реализации не подхватывались заказы
											// так как список получения заказов не верен
		ОперативныйЗаказ = Ссылка.Заказ;
		
	КонецЕсли;
	
	// Запросим
	
	Запрос = Новый Запрос(
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
														
	|;
	|ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// Выберем заказы
	
	//|ВЫБРАТЬ 	Заказ
	//|ПОМЕСТИТЬ	СписокЗаказов
	//|ИЗ 		БизнесПроцесс.СборкаЗаказа 
	//|ГДЕ 		РеализацияПереданныхТоваров = &Ссылка
	//|;
	
	// Взвиморасчеты
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Партнер		КАК Партнер,
	|	Контрагент	КАК Контрагент,
	|	Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,	
	|	Сумма		КАК Сумма,
	|   Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК СуммаУпр
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
	|	ПО 
	|		Док.Ссылка.Валюта = ВалЦен.Валюта
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
	|	ПО 
	|		ИСТИНА
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|;
	
	
	// Долги по отгрузкам
		
	|ВЫБРАТЬ                                
	|	&Период 			Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	&Организация		Организация,
	|	&Партнер			Партнер,
	|	&Контрагент			Контрагент,
	|	НЕОПРЕДЕЛЕНО		Заказ,
	|	&Ссылка				ДокументОтгрузки,
	|	Сумма				Сумма
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров
	|ГДЕ
	|   Ссылка = &Ссылка;
	
	
	
	//передача товаров
	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ВидДвиженияРасход 			КАК ВидДвижения,
	|	Товары.Номенклатура 		КАК Номенклатура,
	|	Товары.НоменклатураЗамена	КАК НоменклатураЗамена,
	|	Товары.Упаковка					Упаковка,
	|	Товары.ЦенаПередачи				Цена,
	|	Товары.ДокументПередачи 	КАК ДокументПередачи,
	|	Товары.Инициатор 			КАК Инициатор,
	|	Товары.Размещение			КАК Размещение,
	|	Товары.СтавкаНДС 			КАК СтавкаНДС,
	|	Товары.Ссылка.Контрагент 	КАК Контрагент,
	|	Товары.Ссылка.Партнер 		КАК Партнер,
	|	Товары.Количество 			КАК Количество,
	|	Товары.Сумма 				КАК Сумма
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|ГДЕ Ссылка = &Ссылка
	|;
	
	
	//долги по заказам
	
	|ВЫБРАТЬ                                
	|	&Период 			Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	&Организация		Организация,
	|	&Партнер			Партнер,
	|	&Контрагент			Контрагент,
	|	Неопределено		Заказ,
	|	Сумма				Сумма
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров
	|ГДЕ
	|   Ссылка = &Ссылка;
	
	// Товары собранные
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ссылка.Склад		Склад,
	|	Ссылка.Заказ		Заказ,
	|	СборочныйЛист,
	|	Номенклатура,
	|	Упаковка,
	|	СУММА(Количество) КАК Количество
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.СобранныеТовары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	СборочныйЛист,
	|	Упаковка;");
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Заказ", 				ОперативныйЗаказ);
	Запрос.УстановитьПараметр("Услуга", 			Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("Партнер", 			Ссылка.Партнер);
	Запрос.УстановитьПараметр("Дата", 				Ссылка.Дата);
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Отгрузка);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Клиент);
	
	Пакет = Запрос.ВыполнитьПакет();
		
	// Воткнем в структуру
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("Взаиморасчеты", 			Пакет[2].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",			Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("ПередачаТоваров", Пакет[4].Выгрузить());		
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов",Пакет[5].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоЗаказам",Пакет[5].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыСобранные",Пакет[6].Выгрузить());
	
КонецПроцедуры


Функция БизнесПроцесс(РеализацияСсылка) Экспорт
	
	// Возвращает ссылку на текущий БП
	
	Запрос = Новый Запрос("ВЫБРАТЬ Первые 1 Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ РеализацияПереданныхТоваров = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", РеализацияСсылка);
	
	Выполнение = Запрос.Выполнить();
	Если Выполнение.Пустой() Тогда
		
		Возврат БизнесПроцессы.СборкаЗаказа.ПустаяСсылка();
		
	Иначе
		
		Выборка = Выполнение.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
    	
КонецФункции   

Функция ЗаполнитьПлатежныеДокументы(Ссылка) Экспорт
	//не используется
	Возврат неопределено;
	
	
	//// найдем висящие оплаты по заказу, соответствующему данной отгрузке, и прикрепим
	//
	//Запрос = Новый Запрос("
	//|ВЫБРАТЬ 
	//|	ДокументОплаты, 
	//|	СуммаПриход 			СуммаОплаты,
	//|	ВЫБОР 
	//|		КОГДА &Сумма = СуммаПриход ТОГДА 0
	//|		КОГДА &Сумма - СуммаПриход > 0 ТОГДА &Сумма - СуммаПриход
	//|		КОГДА &Сумма - СуммаПриход < 0 ТОГДА СуммаПриход - &Сумма 
	//|	КОНЕЦ					Порядок
	//|ИЗ 
	//|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Период,,, Партнер = &Партнер И Организация = &Организация И Заказ = &Заказ И ДокументОплаты <> Неопределено)
	//|ГДЕ
	//|	СуммаКонечныйОстаток > 0
	//|УПОРЯДОЧИТЬ ПО Порядок");
	//
	//Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//Запрос.УстановитьПараметр("Партнер", Ссылка.Партнер);
	//Запрос.УстановитьПараметр("Заказ", Ссылка.Заказ);
	//Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	//Запрос.УстановитьПараметр("Сумма", Ссылка.Сумма);
	//
	//Оплаты = Новый ТаблицаЗначений;
	//Оплаты.Колонки.Добавить("ДокументОплаты");
	//Оплаты.Колонки.Добавить("Сумма");
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//СколькоРаспределить =  Ссылка.Сумма; 
	//
	//Пока Выборка.Следующий() Цикл
	//	НовСтрока = Оплаты.Добавить();
	//	НовСтрока.ДокументОплаты = Выборка.ДокументОплаты;
	//	
	//	Если Выборка.СуммаОплаты >= СколькоРаспределить Тогда
	//		НовСтрока.Сумма = СколькоРаспределить;
	//		Прервать;
	//	Иначе
	//		НовСтрока.Сумма = Выборка.СуммаОплаты;
	//		СколькоРаспределить = СколькоРаспределить - НовСтрока.Сумма;
	//	КонецЕсли;
	// КонецЦикла;
	// 
	// Возврат Оплаты;
	 
КонецФункции


// ПЕЧАТЬ

Процедура УдалитьЛишниеКопейкиВТабличнойЧасти(Ссылка, Товары) Экспорт
	// избавляемся от лишних копеек путем удаления(добавление) одной копейки в каждой позиции, начиная с первой.
	
	// (СуммаНДССуммы - СуммаНДС)/&Коэф	 = Разница/&Коэф - количество строк, в которые необходимо внести сиправления.
	// не допускается, что бы это значение было больше, чем итоговое количество строк в документе (в таких случаях возвращается 0)
	Если НЕ Товары.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КоличествоСтрок,
	|	(СуммаНДССуммы - СуммаНДС)/&Коэф КоличествоИсправлений, 
	|	ВЫБОР КОГДА (СуммаНДССуммы - СуммаНДС < 0 И (СуммаНДССуммы - СуммаНДС)/&Коэф > -КоличествоСтрок) ИЛИ 
	|				( СуммаНДССуммы - СуммаНДС > 0 И (СуммаНДССуммы - СуммаНДС)/&Коэф < КоличествоСтрок) 
	|	ТОГДА СуммаНДССуммы - СуммаНДС ИНАЧЕ 0 
	|	КОНЕЦ Разница
	|ИЗ
	|	(ВЫБРАТЬ
	|			СУММА(СуммаНДС) 		СуммаНДС,
	|		    КОЛИЧЕСТВО(НомерСтроки) КоличествоСтрок,
	|			ВЫБОР КОГДА МАКСИМУМ(СтавкаНДС) = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18) ТОГДА
	|				ВЫБОР КОГДА Ссылка.СуммаВключаетНДС ТОГДА
	|					ВЫРАЗИТЬ(СУММА(Сумма) * 18 / 118 КАК ЧИСЛО(15,2))
	|				ИНАЧЕ
	|					ВЫРАЗИТЬ(СУММА(Сумма) * 18 / 100 КАК ЧИСЛО(15,2))
	|				КОНЕЦ 
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ					СуммаНДССуммы	
	|	ИЗ
	|		Документ.РеализацияПереданныхТоваров.Товары
	|	ГДЕ
	|		Ссылка = &Ссылка
	|	СГРУППИРОВАТЬ ПО Ссылка ) Тов 
	|");	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Коэф", 0.01);
	
	Выборка = Запрос.Выполнить().Выбрать();
    Разница = 0;
	Если Выборка.Следующий() Тогда
		Разница = Выборка.Разница;
	КонецЕсли;
	
	Если Разница <> 0 Тогда
		// разница положительная - увеличиваем сумму НДС, разница отрицательная - уменьшаем
		Коэф = ?(Разница > 0, 0.01 , -0.01);
		
		Ид = -1;
		Пока Разница <> 0 Цикл Ид = Ид+1;
			Товары[Ид].СуммаНДС = Товары[Ид].СуммаНДС + Коэф;
			Разница = Разница - Коэф;
			Если ?(Разница < 0, -Разница, Разница) < ?(Коэф < 0, -Коэф, Коэф) Тогда
				Коэф = Разница;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;	
		
КонецПроцедуры

Процедура Печать_РеализацияПереданныхТоваров(ТабличныйДокумент, Ссылка) Экспорт
			
	Запрос = Новый Запрос(" 
							// ЗАПРОС ПО ШАПКЕ
							|
							|ВЫБРАТЬ
							|	РеализацияПереданныхТоваров.Номер               КАК Номер,
							|	РеализацияПереданныхТоваров.Дата                КАК Дата,
							|	РеализацияПереданныхТоваров.Партнер             КАК Партнер,
							|	РеализацияПереданныхТоваров.Контрагент          КАК Получатель,
							|	РеализацияПереданныхТоваров.Организация         КАК Организация,
							|	РеализацияПереданныхТоваров.Валюта              КАК Валюта,
							|	РеализацияПереданныхТоваров.СуммаВключаетНДС    КАК СуммаВключаетНДС,
							|	РеализацияПереданныхТоваров.УчитыватьНДС        КАК УчитыватьНДС,
							|	ВЫБОР КОГДА
							|		РеализацияПереданныхТоваров.Ответственный.Организация = РеализацияПереданныхТоваров.Организация
							|	ТОГДА
							|		РеализацияПереданныхТоваров.Ответственный						         
							|	ИНАЧЕ
							|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
							|	КОНЕЦ								  КАК ОтпускПроизвел
							|ИЗ
							|	Документ.РеализацияПереданныхТоваров КАК РеализацияПереданныхТоваров
							|                         
							|ГДЕ
							|	РеализацияПереданныхТоваров.Ссылка = &Ссылка
							|;
							|
							// ЗАПРОС ПО ТАБЛИЧНОЙ ЧАСТИ
							|
							|ВЫБРАТЬ
							|	РеализацияПереданныхТоваров.Номенклатура 						КАК Номенклатура,
							|	РеализацияПереданныхТоваров.Номенклатура.НаименованиеПолное   КАК ТоварНаименованиеПолное,					
							|	РеализацияПереданныхТоваров.Номенклатура.Код                  КАК Код,
							|	РеализацияПереданныхТоваров.Номенклатура.Артикул              КАК Артикул,
							|	РеализацияПереданныхТоваров.Номенклатура.НомерГТД				КАК НомерГТД,
							|	РеализацияПереданныхТоваров.Номенклатура.СтранаПроисхождения  КАК СтранаПроисхождения,
							|	ВЫБОР КОГДА РеализацияПереданныхТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
							|		1
							|	ИНАЧЕ
							|		РеализацияПереданныхТоваров.Упаковка.Коэффициент
							|	КОНЕЦ КАК Коэффициент,
							|
							|	РеализацияПереданныхТоваров.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаЦены,
							|
							|	РеализацияПереданныхТоваров.СтавкаНДС                   КАК СтавкаНДС,
							|	РеализацияПереданныхТоваров.Цена                        КАК Цена,
							|	РеализацияПереданныхТоваров.Количество			      КАК Количество,
							|	РеализацияПереданныхТоваров.Сумма                       КАК Сумма,
							|	РеализацияПереданныхТоваров.СуммаНДС                    КАК СуммаНДС,
							|	РеализацияПереданныхТоваров.НомерСтроки                 КАК НомерСтроки
							|ИЗ
							|	Документ.РеализацияПереданныхТоваров.Товары КАК РеализацияПереданныхТоваров
							|ГДЕ
							|	РеализацияПереданныхТоваров.Ссылка = &Ссылка 	
							|	И РеализацияПереданныхТоваров.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
							|	
							|УПОРЯДОЧИТЬ ПО
							|	НомерСтроки
							|");							
							
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоТоварам 		= МассивРезультатов[1].Выбрать();
	
	Если НЕ ДанныеПечати.Следующий() Тогда
		Возврат;
	КонецЕсли;	
	
	КолонкаКодов = "Артикул"; // заглушка //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		
	ЕстьНДС = ДанныеПечати.УчитыватьНДС;
			
	Макет = Документы.РеализацияПереданныхТоваров.ПолучитьМакет("РеализацияТоваров");				
	
	// ЗАГОЛОВОК
		
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Реализация товаров'"), Истина, Истина);
	ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ПОСТАВЩИК
		
	ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
	ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	//ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
	ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель, ДанныеПечати.Дата), "ПолноеНаименование");
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
	//ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Получатель;
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ШАПКА ТАБЛИЦЫ
		
	СуффиксОбластиСтроки = ?(ЕстьНДС, "СНДС", "");
	СуффиксОбластиКолонки = ?(ЕстьНДС, "СоСкидкойИлиСНДС", "");
		
	ОбластьКолонкаТовар = Макет.Область("ПерваяКолонкаТовара");
	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + ?(ВыводитьКоды, 0, Макет.Область("КолонкаКодов").ШиринаКолонки);
		
	ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	ТабличныйДокумент.Вывести(ОбластьНомера);
			
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
			
	ТабличныйДокумент.Присоединить(ОбластьТовар);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
		
	ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	Сумма          = 0;
	СуммаНДС       = 0;
	НомерСтроки    = 0;
		
	// СТРОКИ ТАБЛИЦЫ 
	
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	//Если ЕстьНДС Тогда
	//	Документы.РеализацияТоваров.УдалитьЛишниеКопейкиВТабличнойЧасти(Ссылка, ТаблицаТовары); 
	//КонецЕсли;

	Для Каждого ВыборкаПоТоварам Из ТаблицаТовары Цикл

		НомерСтроки = НомерСтроки + 1;
			
		ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
				
			ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
			ТабличныйДокумент.Присоединить(ОбластьКодов);
				
		КонецЕсли;
		
		ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
		ОбластьТовар.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименованиеПолное);
				
		ТабличныйДокумент.Присоединить(ОбластьТовар);

		ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
   		ОбластьДанных.Параметры.НомерГТДСтранаПроисхождения = ?(ЗначениеЗаполнено(ВыборкаПоТоварам.НомерГТД),
			СокрЛП(ВыборкаПоТоварам.НомерГТД.Код)+",", "") + Символы.ПС + ВыборкаПоТоварам.СтранаПроисхождения;			
		
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
		СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
			
	КонецЦикла;
		
	// ПОДВАЛ ТАБЛИЦЫ
		
	ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	ТабличныйДокумент.Вывести(ОбластьНомера);
		
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
		
	ТабличныйДокумент.Присоединить(ОбластьТовар);
		
	ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
		
	// ПОДВАЛ НДС ТАБЛИЦЫ
		
	Область = Макет.ПолучитьОбласть("ПодвалНДС");
		
	Область.Параметры.ВсегоНДС = СуммаНДС;
	Если ЕстьНДС Тогда
		Область.Параметры.НДС = ?(ДанныеПечати.СуммаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
	Иначе
		Область.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
	КонецЕсли;
	ТабличныйДокумент.Присоединить(Область);
		
	// СУММА ПРОПИСЬЮ
		
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(ДанныеПечати.СуммаВключаетНДС, 0, СуммаНДС);
		
	ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента% '");
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ТаблицаТовары.Количество());
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

	ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
	ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ПОДПИСИ
		
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
	Если ЗначениеЗаполнено(ДанныеПечати.ОтпускПроизвел) Тогда
		ОбластьМакета.Параметры.ОтпускПроизвел = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ОтпускПроизвел);
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры
Процедура Печать_РасходнаяНакладная(ТабличныйДокумент, Ссылка) Экспорт
	
	КолонкаКодов = "Артикул"; //заглушка //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос( 	"ВЫБРАТЬ
							|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
							|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
							|	Товары.Количество 							КАК Количество,
							|	Товары.Номенклатура.Код 					КАК Код,
							|	Товары.Номенклатура.Артикул 				КАК Артикул,
							|	Товары.Номенклатура.НаименованиеПолное 		КАК Номенклатура
							|ИЗ
							|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
							|ГДЕ
							|	Товары.Ссылка = &Ссылка
							|	И Товары.Номенклатура.ТипНоменклатуры = <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
							|
							|УПОРЯДОЧИТЬ ПО
							|	Товары.НомерСтроки");
														
							
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Макет =	Документы.РеализацияПереданныхТоваров.ПолучитьМакет("РасходнаяНакладная");
	
	Если НЕ ВыводитьКоды Тогда
		// Раздвинуть колонку "КолонкаТоваров" на ширину колонки "КолонкаКодов"
		Макет.Область("КолонкаТоваров").ШиринаКолонки = Макет.Область("КолонкаТоваров").ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура("Номер, Дата", Ссылка.Номер, Ссылка.Дата);
	
	ВыборкаПоТоварам = Запрос.Выполнить().Выбрать();
					
	// ЗАГОЛОВОК
			
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная'");
	ТабличныйДокумент.Вывести(Область);
			
	// ШАПКА
			
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.ПредставлениеРаспоряжения = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(РеквизитыДокумента, НСтр("ru='Реализация товаров'"), Истина, Истина);
	Область.Параметры.ПредставлениеСклада = Ссылка.Склад;
	ТабличныйДокумент.Вывести(Область);
		
	// ПОСТАВЩИК
			
	Область = Макет.ПолучитьОбласть("Поставщик");
	Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование");
	ТабличныйДокумент.Вывести(Область);
			
	// ПОКУПАТЕЛЬ
			
	Область = Макет.ПолучитьОбласть("Покупатель");
	Область.Параметры.ПредставлениеПартнера = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата), "ПолноеНаименование");
	ТабличныйДокумент.Вывести(Область);
			
	// ШАПКА ТАБЛИЦЫ
			
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ТабличныйДокумент.Вывести(Область);
	Если ВыводитьКоды Тогда
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		Область.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		ТабличныйДокумент.Присоединить(Область);
	КонецЕсли;
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкиКоличества");
	ТабличныйДокумент.Присоединить(Область);
			
	СчетСтрок = 1;
	Пока ВыборкаПоТоварам.Следующий() Цикл
				
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
		Область.Параметры.НомерСтроки = СчетСтрок;
		СчетСтрок = СчетСтрок + 1;
		ТабличныйДокумент.Вывести(Область);
		Если ВыводитьКоды Тогда
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			Область.Параметры.ЗначениеКода = ВыборкаПоТоварам[КолонкаКодов];
			ТабличныйДокумент.Присоединить(Область);
		КонецЕсли;
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
		Область.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.Номенклатура);
		ТабличныйДокумент.Присоединить(Область);
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкиКоличества");
		Область.Параметры.Заполнить(ВыборкаПоТоварам);
		ТабличныйДокумент.Присоединить(Область);
				
	КонецЦикла;
			
	// ПОДВАЛ ТАБЛИЦЫ
			
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	ТабличныйДокумент.Вывести(Область);
	Если ВыводитьКоды Тогда
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
		ТабличныйДокумент.Присоединить(Область);
	КонецЕсли;
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкиКоличества");
	ТабличныйДокумент.Присоединить(Область);
			
	// ПОДПИСИ
			
	Область = Макет.ПолучитьОбласть("Подписи");
	ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
	ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
	Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
	ТабличныйДокумент.Вывести(Область);	
	
КонецПроцедуры
Процедура Печать_Акт(ТабличныйДокумент, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка              КАК Ссылка,
	|	Док.Номер               КАК Номер,
	|	Док.Дата                КАК Дата,
	|	Док.Партнер             КАК Партнер,
	|	Док.Контрагент          КАК Контрагент,
	|	Док.Организация         КАК Организация,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК Должность,
	|	Док.Валюта              КАК Валюта,
	|	Док.СуммаВключаетНДС    КАК ЦенаВключаетНДС,
	|	Док.УчитыватьНДС 		КАК УчитыватьНДС,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ								  КАК ОтпускПроизвел
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	Товары.Номенклатура.Код                                           КАК Код,
	|	Товары.Номенклатура.Артикул                                       КАК Артикул,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	Товары.Номенклатура.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	Товары.СтавкаНДС                                                  КАК СтавкаНДС,
	|	Товары.Цена													      КАК Цена,
	|	Товары.Количество                                                 КАК Количество,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки							  КАК Сумма,
	|	Товары.СуммаНДС												   	  КАК СуммаНДС,
	|	Товары.СуммаРучнойСкидки                                          КАК СуммаСкидки,
	|	Товары.Сумма		                                              КАК СуммаБезСкидки,
	|	Товары.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ 	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|;
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	Товары.Сумма                									  КАК Сумма,
	|	Товары.СуммаНДС          										  КАК СуммаНДС
	|ИЗ
	|		Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|");

	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаТовары			= МассивРезультатов[2].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
	//	СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
	//	НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		//Если НайденСледующий Тогда
			Если ВыборкаПоДокументам.Следующий() Тогда
				ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
			//	ЕстьСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам);
			    ЕстьСкидки = Ложь; // требование бухгалтерии!
			//	ЕстьНДС = ДанныеПечати.УчитыватьНДС;
				ЕстьНДС = Ложь; // требование бухгалтерии!
				ВыборкаПоУслугам.Сбросить();
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
					ДанныеПечати.Ссылка
					);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка
				);
				Возврат;	
			КонецЕсли;
			
		//Иначе
		//	
		//	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		//		НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
		//		ДанныеПечати.Ссылка
		//		);
		//		
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//		Текст,
		//		ДанныеПечати.Ссылка
		//	);
		//	
		//	Продолжить;
		//КонецЕсли;
		
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент    = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = Документы.РеализацияПереданныхТоваров.ПолучитьМакет("Акт");
		
		// Выводим шапку акта
		
		ОбластьМакета	= Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка 	= ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт'"), Истина, Истина);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),  "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Услуги
		
		СуффиксОбласти = ?(ЕстьСкидки, "СоСкидкой", "") + ?(ЕстьНДС, "СНДС", "");
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка" + СуффиксОбласти);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;
		
		СтрокаНаименованиеТоваров = "";
		//ИтогоСумма  = Сумма;
		//ИтогоСуммаНДС = СуммаНДС;
		
		Пока ВыборкаТовары.Следующий() Цикл
			
			СтрокаНаименованиеТоваров = СтрокаНаименованиеТоваров + ?(ПустаяСтрока(СтрокаНаименованиеТоваров), "", ", ") +
				ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаТовары.ТоварНаименование);
				
			Сумма = Сумма + ВыборкаТовары.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаТовары.СуммаНДС;
			
		КонецЦикла;
		
		
		
		// Выводим строки таблицы Услуги
		
		Пока ВыборкаПоУслугам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			Сумма    = Сумма    + ВыборкаПоУслугам.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоУслугам);
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
			
			Если ЕстьСкидки Тогда
				
				ОбластьСтроки.Параметры.Скидка         = ВыборкаПоУслугам.СуммаСкидки;
				ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоУслугам.Сумма + ВыборкаПоУслугам.СуммаСкидки);
				
			КонецЕсли;
			
			Если НомерСтроки = 1 Тогда
				
				ОбластьСтроки.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоУслугам.УслугаНаименованиеПолное) +
				?(ВыборкаТовары.Количество(), " в т.ч.:" + Символы.ПС + СтрокаНаименованиеТоваров, ""); 				
				
				ОбластьСтроки.Параметры.Цена = ?(ДанныеПечати.ЦенаВключаетНДС, Сумма/ВыборкаПоУслугам.Количество, (Сумма+СуммаНДС)/ВыборкаПоУслугам.Количество);  
				ОбластьСтроки.Параметры.Сумма = Сумма;

			Иначе
				ОбластьСтроки.Параметры.Товар       = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоУслугам.УслугаНаименованиеПолное);
			КонецЕсли;
			
			СтавкаНДС = ВыборкаПоУслугам.СтавкаНДС;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		
		ОбластьМакета.Параметры.ВсегоНДС = СуммаНДС;
		Если ДанныеПечати.УчитыватьНДС Тогда
		
			ОбластьМакета.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, ДанныеПечати.ЦенаВключаетНДС);
			
		Иначе
			ОбластьМакета.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
	   	
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ИтоговаяСтрока = НСтр("ru = 'Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"г.""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		ОбластьМакета.Параметры.Руководитель = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Руководитель);
		ОбластьМакета.Параметры.Должность = ДанныеПечати.Должность;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
		
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
		
КонецПроцедуры
Процедура Печать_ТоварныйЧек(ТабДокумент, Ссылка) Экспорт
	
	
	Макет = Документы.РеализацияПереданныхТоваров.ПолучитьМакет("ТоварныйЧек");
		
	//ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	//|	Док.КассаККМ                  КАК КассаККМ,
	|	Док.Валюта                    КАК Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	//|	Док.КассаККМ.Представление    КАК Покупатель,
	//|	Док.Кассир.Представление      КАК ОтветственныйПредставление,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ						  КАК ОтветственныйПредставление,
	|	Док.Организация               КАК Организация,
	|	Док.Организация.Наименование  КАК Поставщик,
	|	Док.Сумма			          КАК СуммаДокумента,
	|	Док.Товары.(
	|		НомерСтроки                       КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                  КАК Код,
	|		Номенклатура.Артикул              КАК Артикул,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Док.Товары.Количество * Док.Товары.Цена - Док.Товары.Сумма КАК Скидка, // + ПроцентРучнойСкидки  ???
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Если Не ПервыйДокумент Тогда
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Выборка, НСтр("ru = 'Товарный чек'"), Истина, Истина);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//ДопКолонка = ""; //Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		//	ВыводитьКоды = Истина;
		//	Колонка = "Артикул";
		//ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		//Иначе
		//	ВыводитьКоды = Ложь;
		//КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидки Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("СуммаБезСкидки").ШиринаКолонки
			                                  + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		
		
		ТаблицаТовары = Выборка.Товары.Выгрузить();
		//Если ЕстьНДС Тогда
		//	Документы.РеализацияПереданныхТоваров.УдалитьЛишниеКопейкиВТабличнойЧасти(Выборка.Ссылка, ТаблицаТовары); 
		//КонецЕсли;
		
		Для Каждого ВыборкаСтрокТовары Из ТаблицаТовары Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка         = ВыборкаСтрокТовары.Скидка;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
				ТабДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				ТабДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаСНДС = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				СуммаСНДС = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
			ТабДокумент.Присоединить(ОбластьСуммы);
			
			ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокТовары.Скидка;
			ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
			
		КонецЦикла;
		
		Товары = ТаблицаТовары;
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		
		СуммаНДС = Товары.Итог("СуммаНДС");
		Сумма    = Товары.Итог("Сумма");
		
		Если ЕстьНДС Тогда
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		Если Не Выборка.ЦенаВключаетНДС Тогда
			СуммаДокумента = Сумма + СуммаНДС;
		Иначе
			СуммаДокумента = Сумма;
		КонецЕсли;
		
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести Сумму прописью.
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ТаблицаТовары.Количество()
		                                       + ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(Выборка.СуммаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Выборка.СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьМакета);
	
		// Вывести подписи.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Функция ПолучитьТаблицуКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслуг.Валюта КАК Валюта
		|ИЗ
		|	Документ.РеализацияПереданныхТоваров КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)
		|	И РеализацияТоваровУслуг.Валюта <> &ВалютаРегламентированногоУчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта,
		|	Дата
		|");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = ОбщиеФункции.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ПолучитьТаблицуКурсовВалют()

Функция ПолучитьДанныеДляТОРГ12(ТабличныйДокумент, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = "Артикул";
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|   ЕСТЬNULL(НоменклатураДокументов.ЕстьУслуги, Ложь)						   КАК ЕстьУслуги,
	|    ЕСТЬNULL(НоменклатураДокументов.ЕстьТовары, Ложь)						   КАК ЕстьТовары,
	|	Док.Ссылка                                                 КАК Ссылка,   
	|	Док.Номер                                                  КАК Номер,
	|	Док.Дата                                                   КАК Дата,
	|	Док.Партнер                                                КАК Партнер,
	|	Док.Контрагент                                             КАК Контрагент,
	|	Док.Организация                                            КАК Организация,
	|	Док.Заказ											  	   КАК Основание,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Кладовщик,
	|	ЕСТЬNULL(Рук.Должность, """")                                      									  КАК ДолжностьКладовщика,   
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Контрагент
	|	ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ	Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Организация
	|	ИНАЧЕ	Док.Грузоотправитель
	|	КОНЕЦ	Грузоотправитель,
	|
	|	Док.БанковскийСчетОрганизации                             КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера                            	  КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетГрузоотправителя                        КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетГрузополучателя                         КАК БанковскийСчетГрузополучателя,
	|	Док.Валюта         						                  КАК Валюта,
	|	Док.СуммаВключаетНДС                                      КАК ЦенаВключаетНДС,
	|	Неопределено                                              КАК Подразделение,
	|	""""								                      КАК АдресДоставки,
	|	""""                                     				  КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0)                                    КАК ДоверенностьДата,
	|	""""                                   					  КАК ДоверенностьВыдана,
	|	""""                                     				  КАК ДоверенностьЛицо,
	|	ВЫБОР КОГДА НЕ Док.Плательщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	ТОГДА Док.Плательщик		
	|	ИНАЧЕ Док.Контрагент
	//|	ИНАЧЕ 	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	//|	            ТОГДА	Док.Контрагент
	//|	            ИНАЧЕ 	Док.Грузополучатель
	//|			КОНЕЦ
	|	КОНЕЦ	                                               Плательщик
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО Док.Организация = Бух.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО Док.Организация = Рук.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250)         КАК ТоварНаименование,
	|	Товары.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК БазоваяЕдиницаКодПоОКЕИ, 														 
	|	""""												              КАК ВидУпаковки,
	|	МАКСИМУМ(Товары.НомерСтроки)                                      КАК НомерСтроки,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	СУММА(Товары.Количество)                                          КАК Количество,
	|	Товары.СтавкаНДС          										  КАК СтавкаНДС,
	|	СУММА(Товары.Сумма)           									  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)     										  КАК СуммаНДС,
	|   0                                                                 КАК КоличествоВОдномМесте,
	|	0                                								  КАК КоличествоМест,
	|	0							                                      КАК МассаБрутто,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Упаковка, Цена, СтавкаНДС
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");                                 
		
	
	Запрос.УстановитьПараметр("Дата", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", 		Ссылка);
	Запрос.УстановитьПараметр("Коэф", 			0.01);
//	Запрос.УстановитьПараметр("Организация", 	Ссылка.Организация);

	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// ТТН
 //
Функция ПолучитьДанныеДляТТН(МассивСсылок) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Артикул";
	КонецЕсли;
	
	Ссылка = МассивСсылок[0];
	
	Запрос = Новый Запрос();
	Запрос.Текст = " 
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка 			КАК Ссылка,
	|	Док.Номер 			КАК Номер,
	|	Док.Дата 			КАК Дата,
	|	Док.Организация 	КАК Организация,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ 			КАК Грузополучатель,
	|	Док.Контрагент 	КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Док.Организация
	|		ИНАЧЕ Док.Грузоотправитель
	|	КОНЕЦ 			КАК Грузоотправитель,
	|	"""" 			КАК Кладовщик,
	|	"""" 			КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	Док.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера	 КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	"""" 						КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) 		КАК ДоверенностьДата,
	|	"""" 						КАК ДоверенностьВыдана,
	|	"""" 						КАК ДоверенностьЛицо,
	|	Док.СуммаВключаетНДС 		КАК ЦенаВключаетНДС,
	|
	|	Док.Валюта                  КАК Валюта,				                                                 
	|
	|	НаименованияТоваров.Количество КАК КоличествоНаименований
	|ИЗ                                                            
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	//|		ПО РеализацияПереданныхТоваров.Склад = СкладыКонтактнаяОтправитель.Ссылка
	//|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество
	//|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|				РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура
	|			ИЗ
	|				Документ.РеализацияПереданныхТоваров.Товары КАК РеализацияТоваровУслугТовары
	|			ГДЕ
	|				РеализацияТоваровУслугТовары.Ссылка В (&МассивСсылок)
	|				И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК СписокТоваров
	|		
	//|		СГРУППИРОВАТЬ ПО СписокТоваров.Ссылка
	|			) КАК НаименованияТоваров
	//|		ПО Док.Ссылка = НаименованияТоваров.Ссылка
	|		ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
 	|	Товары.Цена			КАК Цена,
	|	0 КАК МассаБрутто,
	|	Товары.Количество * Товары.Номенклатура.Вес КАК МассаНетто,
	|	0 КАК КоличествоМест,
	|	Товары.Сумма 		КАК Сумма,
	|	Товары.СуммаНДС 	КАК СуммаНДС,
	|	Товары.НомерСтроки  КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Товары.Ссылка В (&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
		
	//ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов);
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции
Функция ПолучитьДанныеДляТранспортнаяНакладная(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияПереданныхТоваров.Ссылка КАК Ссылка,
	|	РеализацияПереданныхТоваров.Номер КАК Номер,
	|	РеализацияПереданныхТоваров.Дата КАК Дата,
	|	РеализацияПереданныхТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РеализацияПереданныхТоваров.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА РеализацияПереданныхТоваров.Контрагент
	|		ИНАЧЕ РеализацияПереданныхТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияПереданныхТоваров.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА РеализацияПереданныхТоваров.Организация
	|		ИНАЧЕ РеализацияПереданныхТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	РеализацияПереданныхТоваров.Контрагент КАК Контрагент,
	|	РеализацияПереданныхТоваров.Контрагент КАК ЗаказчикПеревозок,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК РеализацияПереданныхТоваров
	|ГДЕ
	|	РеализацияПереданныхТоваров.Ссылка = &МассивДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", Ссылка);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаРезульта
КонецФункции
// Функция формирует печатную форму Счета-фактуры.
//
Функция ПолучитьДанныеДляСчетФактура(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА ВТ_ТаблицаКорректировок
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка                                                КАК Ссылка,
	//|	ЕСТЬNULL(СчетФактура.Номер, Неопределено)                                    КАК Номер,
	//|	ЕСТЬNULL(СчетФактура.Дата, Неопределено)                                     КАК Дата,
	//|	ЕСТЬNULL(СчетФактура.СтрокаПлатежноРасчетныеДокументы, """")                 КАК СтрокаПоДокументу,
	|	Док.Партнер                                               КАК Партнер,
	|	Док.Контрагент                                            КАК Контрагент,
	|	Док.Организация                                           КАК Организация,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	"""" КАК АдресДоставки,
	|
	|	Док.Валюта КАК Валюта,
	|
	|	Истина КАК ЦенаВключаетНДС,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги
	|
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		Документ.СчетФактураВыданный КАК СчетФактура
	//|	ПО
	//|		Док.Ссылка = СчетФактура.ДокументОснование
	////|		И Док.Организация = СчетФактура.Организация
	//|		И Не СчетФактура.ПометкаУдаления
	|  
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	//|ВЫБРАТЬ
	//|	ТаблицаВидыЗапасов.Ссылка КАК Ссылка,
	//|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	//|	ТаблицаВидыЗапасов.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	//|	ТаблицаВидыЗапасов.Номенклатура.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	//|	ТаблицаВидыЗапасов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	//|	ТаблицаВидыЗапасов.Характеристика.НаименованиеПолное КАК Характеристика,
	//|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	//|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	//|	ТаблицаВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	//|	0 КАК Цена,
	//|	0 КАК КоличествоМест,
	//|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	//|
	//|	СУММА(
	//|		ВЫБОР КОГДА ТаблицаКорректировок.Сумма ЕСТЬ NULL ТОГДА
	//|			ТаблицаВидыЗапасов.СуммаСНДС
	//|		ИНАЧЕ
	//|			ВЫБОР КОГДА ТаблицаВидыЗапасов.Ссылка.ЦенаВключаетНДС ТОГДА
	//|				ТаблицаКорректировок.Сумма
	//|			ИНАЧЕ
	//|				ТаблицаКорректировок.Сумма + ЕСТЬNULL(ТаблицаКорректировок.СуммаНДС, 0)
	//|			КОНЕЦ
	//|		КОНЕЦ
	//|	) КАК Сумма,
	//|
	//|	СУММА(ЕСТЬNULL(ТаблицаКорректировок.СуммаНДС, ТаблицаВидыЗапасов.СуммаНДС)) КАК СуммаНДС,
	//|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	//|	Ложь КАК ЭтоВозвратнаяТара
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаВидыЗапасов
	//|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		ВТ_ТаблицаКорректировок КАК ТаблицаКорректировок
	//|	ПО
	//|		ТаблицаВидыЗапасов.Ссылка = ТаблицаКорректировок.ДокументСсылка
	//|		И ТаблицаВидыЗапасов.НомерСтроки = ТаблицаКорректировок.НомерСтроки
	//|		И ТаблицаКорректировок.ВидыЗапасов
	//|ГДЕ
	//|	ТаблицаВидыЗапасов.Ссылка В (&МассивДокументов)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТаблицаВидыЗапасов.Ссылка,
	//|	ТаблицаВидыЗапасов.Номенклатура,
	//|	ТаблицаВидыЗапасов.Характеристика,
	//|	ТаблицаВидыЗапасов.СтавкаНДС,
	//|	ТаблицаВидыЗапасов.НомерГТД
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 100) КАК ТоварНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	0 КАК Цена,
	|	0 КАК КоличествоМест,
	|	СУММА(Товары.Количество) КАК Количество,
	|
	|	СУММА(
	
	|			ВЫБОР КОГДА Товары.Ссылка.СуммаВключаетНДС ТОГДА
	|				Товары.Сумма
	|			ИНАЧЕ
	|				Товары.Сумма + Товары.СуммаНДС
	|			КОНЕЦ
	|	) КАК Сумма,
	|
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	Ложь КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	//И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.СтавкаНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()
Функция ПолучитьДанныеДляСчетФактура_ИзРеализации(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА ВТ_ТаблицаКорректировок
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка                                      КАК Ссылка,
	|	СчетФактура.Номер                             	КАК Номер,
	|	СчетФактура.Дата                              	КАК Дата,
	|	Док.Склад.НомерПодразделения                    КАК НомерПодразделения,
	|	Док.ПлатежныеДокументы.(	
	|		ДокументОплаты.Дата						Дата,
	|       ДокументОплаты.НомерВходящегоДокумента  Номер
	|		)											РасчетныеДокументы,
	|	Док.Партнер                                     КАК Партнер,
	|	Док.Контрагент                                  КАК Контрагент,
	|	Док.Организация                                 КАК Организация,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	"""" КАК АдресДоставки,
	|   Док.Валюта					  КАК Валюта,
	|	Док.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	Док.Валюта.Код				  КАК ВалютаКод,
	|
	|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|
	|	НоменклатураДокументов.ЕстьУслуги КАК ЕстьУслуги,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ДоговорыКонтрагентов.ИдентификаторГосударственногоКонтракта
	|
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СчетФактуры КАК СчетФактура
	|	ПО
	|		Док.Ссылка = СчетФактура.Основание
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ПО Док.Контрагент = ДоговорыКонтрагентов.Владелец
	|		И (ДоговорыКонтрагентов.ЗначениеПоУмолчанию)
	//|		И Док.Организация = СчетФактура.Организация
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250)	      КАК ТоварНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК ЕдиницаИзмеренияКод, 														 
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК ЕдиницаИзмерения,
	|	Товары.Номенклатура.НомерГТД 									  КАК НомерГТД,
	|	Товары.Номенклатура.СтранаПроисхождения 						  КАК СтранаПроисхождения,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	СУММА(Товары.Количество)                                          КАК Количество,
	|	0                                								  КАК КоличествоМест,
	|	Товары.СтавкаНДС          										  КАК СтавкаНДС,
	|	СУММА(Товары.Сумма)           									  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)     										  КАК СуммаНДС,
	|	МАКСИМУМ(Товары.НомерСтроки)                                      КАК НомерСтроки,
	|	ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ                                                             КАК ЭтоУслуга,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка //И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Упаковка, Цена, СтавкаНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);

	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()
// Функции для формирования УПД
Функция ПолучитьДанныеДляУПД(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Товары.Ссылка КАК Ссылка,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ ЛОЖЬ
	                      |		КОНЕЦ) КАК ЕстьУслуги,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ ЛОЖЬ
	                      |		КОНЕЦ) КАК ЕстьТовары
	                      |ПОМЕСТИТЬ НоменклатураДокументов
	                      |ИЗ
	                      |	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Товары.Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Док.Ссылка 		КАК Ссылка,
	                      |	Док.Номер 		КАК Номер,
	                      |	Док.Дата 		КАК Дата,
	                      |	Док.Склад.НомерПодразделения КАК НомерПодразделения,
	                      |	Док.ПлатежныеДокументы.(
	                      |		ДокументОплаты.Дата КАК Дата,
	                      |		ДокументОплаты.НомерВходящегоДокумента КАК Номер
	                      |	) 					КАК РасчетныеДокументы,
	                      |	Док.Партнер 		КАК Партнер,
	                      |	Док.Контрагент 		КАК Контрагент,
	                      |	Док.Организация 	КАК Организация,
	                      |	"""" 				КАК Кладовщик,
	                      |	"""" 				КАК ДолжностьКладовщика,
	                      |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	                      |	ЕСТЬNULL(Рук.Должность, """") КАК ДолжностьРуководителя,
	                      |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ГлавныйБухгалтер,
	                      |	ВЫБОР
	                      |		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	                      |			ТОГДА Док.Контрагент
	                      |		ИНАЧЕ Док.Грузополучатель
	                      |	КОНЕЦ КАК Грузополучатель,
	                      |	ВЫБОР
	                      |		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	                      |			ТОГДА Док.Организация
	                      |		ИНАЧЕ Док.Грузоотправитель
	                      |	КОНЕЦ КАК Грузоотправитель,
	                      |	"""" КАК АдресДоставки,
	                      |	Док.Валюта КАК Валюта,
	                      |	Док.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	                      |	Док.Валюта.Код КАК ВалютаКод,
	                      |	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	                      |	НоменклатураДокументов.ЕстьУслуги КАК ЕстьУслуги,
	                      |	ВЫБОР
	                      |		КОГДА НоменклатураДокументов.ЕстьУслуги
	                      |				И НЕ НоменклатураДокументов.ЕстьТовары
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ТолькоУслуги,
	                      |	Док.Заказ КАК Основание,
						  |	Док.Плательщик КАК Плательщик
	                      |ИЗ
	                      |	Документ.РеализацияПереданныхТоваров КАК Док
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	                      |				&Дата,
	                      |				Организация = &Организация
	                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) КАК Бух
	                      |		ПО (ИСТИНА)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	                      |				&Дата,
	                      |				Организация = &Организация
	                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК Рук
	                      |		ПО (ИСТИНА)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	                      |		ПО Док.Ссылка = НоменклатураДокументов.Ссылка
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетФактуры КАК СчетФактура
	                      |		ПО Док.Ссылка = СчетФактура.Основание
	                      |ГДЕ
	                      |	Док.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.Ссылка КАК Ссылка,
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250) КАК ТоварНаименование,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	                      |		ИНАЧЕ """"
	                      |	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ КАК ЕдиницаИзмерения,
	                      |	Товары.Номенклатура.НомерГТД КАК НомерГТД,
	                      |	Товары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	                      |	Товары.Цена КАК Цена,
	                      |	СУММА(Товары.Количество) КАК Количество,
	                      |	0 КАК КоличествоМест,
	                      |	Товары.СтавкаНДС КАК СтавкаНДС,
	                      |	СУММА(Товары.Сумма) КАК Сумма,
	                      |	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	                      |	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЭтоУслуга,
	                      |	ЛОЖЬ КАК ЭтоВозвратнаяТара
	                      |ИЗ
	                      |	Документ.РеализацияПереданныхТоваров.Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Товары.Ссылка,
	                      |	Товары.Номенклатура,
	                      |	Товары.Упаковка,
	                      |	Товары.Цена,
	                      |	Товары.СтавкаНДС,
	                      |	Товары.Номенклатура.НомерГТД,
	                      |	Товары.Номенклатура.СтранаПроисхождения,
	                      |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250),
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	                      |		ИНАЧЕ """"
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);

	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()

Функция ПечатьАктСписанияТМЦ(ТабДокумент, Ссылка)  Экспорт
	////
	СведенияОКонтрагенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата,,);
	
	Макет = ПолучитьМакет("АктНаСписаниеТМЦ");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ДатаСоставления = Ссылка.Дата;
	ОбластьШапка.Параметры.ЗаголовокДокумента = "Акт на списание ТМЦ за период с "+?(ЗначениеЗаполнено(Ссылка.НачалоПериода),Формат(Ссылка.НачалоПериода, "ДЛФ=ДД"),"--.--.---- г.")+" по "+?(ЗначениеЗаполнено(Ссылка.КонецПериода),Формат(Ссылка.КонецПериода,"ДЛФ=ДД"),"--.--.---- г.");
	ОбластьШапка.Параметры.Организация = СведенияОКонтрагенте.Представление;
	ОбластьШапка.Параметры.Подразделения = "";
	ТабДокумент.Вывести(ОбластьШапка);
	////
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокТовары.Номенклатура КАК Номенклатура1,
	               |	ДокТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	               |	СУММА(ДокТовары.Количество) КАК Количество,
	               |	СУММА(ДокТовары.Цена) КАК Цена,
	               |	СУММА(ДокТовары.Сумма) КАК Сумма,
	               |	СУММА(ДокТовары.СуммаНДС) КАК СуммаНДС,
	              // |	ДокТовары.Инициатор КАК НомерМВЗ,
	               |	ДокТовары.Инициатор.Код КАК НомерМВЗ,
				   |	ДокТовары.Инициатор.Наименование НаименованиеМВЗ,
	               |	ДокТовары.ДокументПередачи.Номер КАК Номер,
				   |	ДокТовары.Номенклатура КАК Номенклатура
	               //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]"" КАК Номенклатура
	               |ИЗ
	               |	Документ.РеализацияПереданныхТоваров.Товары КАК ДокТовары
	               |ГДЕ
	               |	ДокТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.Номенклатура,
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.ДокументПередачи,
				   |	ДокТовары.Номенклатура
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]""
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Цена),
	               |	СУММА(Сумма),
	               |	СУММА(СуммаНДС)
	               |ПО
	               |	НомерМВЗ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьИтогПоМвз = Макет.ПолучитьОбласть("ИтогПоМВЗ");
	НомерСтр = 0;
	СуммаОбщая = 0;
	Пока Выборка.Следующий() Цикл
		ещеОднаВыборка = Выборка.Выбрать();
		Пока ещеОднаВыборка.Следующий() Цикл НомерСтр = НомерСтр + 1;
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ещеОднаВыборка);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтр;
			ОбластьСтрокаТаблицы.Параметры.Акт = "[акт № " +  ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ещеОднаВыборка.Номер) + "]";
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		КонецЦикла;
		Если Ссылка.СуммаВключаетНДС Тогда
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма + Выборка.СуммаНДС;
			СуммаОбщая = СуммаОбщая + Выборка.Сумма + Выборка.СуммаНДС;
		Иначе
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма ;
			СуммаОбщая = СуммаОбщая + Выборка.Сумма;
		конецЕсли;
		ОбластьИтогПоМвз.Параметры.СтрокаИтого = "Итого по МВЗ "+ Выборка.НомерМВЗ;
		ОбластьИтогПоМвз.Параметры.ВсегоКоличествоПоМВЗ = Выборка.Количество;
		ТабДокумент.Вывести(ОбластьИтогПоМВЗ);
	КонецЦикла;
	ОбластьИтогСуммаБезНДС = Макет.ПолучитьОбласть("ИтогСуммаБезНДС");
	ОбластьИтогСуммаБезНДС.Параметры.ВсегоСуммаБезНДС = СуммаОбщая;
	ТабДокумент.Вывести(ОбластьИтогСуммаБезНДС);
	///
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(ОбластьПодвал);
КонецФункции

Функция ПечатьСчетНаОплатуПокупателю(ТабДокумент, Ссылка, Тип)	Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Ссылка.Дата<>Неопределено Тогда
		ДатаВыполнения = Ссылка.Дата
	Иначе
		ДатаВыполнения = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ДатаВыполнения", ДатаВыполнения);
    Запрос.УстановитьПараметр("СтавкаНДС", Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("БанковскийСчетПоУмолчанию", Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(Ссылка.Организация));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	Док.Номер КАК Номер,
		|	Док.Дата КАК Дата,
		|	Док.Организация КАК Организация,
		|	Док.Склад Склад,
		|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
		|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ГлавныйБухгалтер,
		|	Док.УчитыватьНДС КАК УчитыватьНДС,
		|	Док.Контрагент КАК Контрагент,
		|	ВЫБОР
		|		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
		|			ТОГДА Док.Организация
		|		ИНАЧЕ Док.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР
		|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
		|			ТОГДА Док.Контрагент
		|		ИНАЧЕ Док.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА Док.БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА &БанковскийСчетПоУмолчанию
		|		ИНАЧЕ Док.БанковскийСчетОрганизации
		|	КОНЕЦ КАК БанковскийСчет,
		|	Док.БанковскийСчетОрганизации.ТекстКорреспондента КАК БанковскийСчетТекстКорреспондента,
		|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
		|	Док.Валюта КАК Валюта,
		|	Док.Ответственный.Наименование КАК Менеджер,
		|	Док.Ответственный.Организация КАК ОрганизацияМенеджер,
		|	"""" КАК ДополнительнаяИнформация
		|ИЗ
		|	Документ.РеализацияПереданныхТоваров КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
		|				&Дата,
		|				Организация = &Организация
		|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) КАК Бух
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
		|				&Дата,
		|				Организация = &Организация
		|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК Рук
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таб.Номенклатура 			КАК Товар,
		|	Таб.Номенклатура.Код        КАК Код,
		|	Таб.Цена 					КАК Цена,
		|	Таб.Номенклатура.НаименованиеПолное  НаименованиеПолное,
		|	Таб.Сумма 					КАК Сумма,
		|	Таб.Номенклатура.Артикул 	КАК Артикул,
		|	ВЫБОР
		|		КОГДА Таб.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(Таб.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Таб.Упаковка)
		|	КОНЕЦ                                                 КАК ЕдиницаИзмерения,
		|	Таб.НомерСтроки 			КАК НомерСтроки,
		|	Таб.Количество 				КАК Количество,
		|	Таб.СтавкаНДС			    КАК СтавкаНДС,
		|	Таб.СуммаНДС    			КАК СуммаНДС,
		|	ДАТАВРЕМЯ(1,1,1,0,0,0)                                	КАК ДатаОтгрузки,		
		|	0           											СуммаСкидки,
		|	ЛОЖЬ	                    Отменено
		|ИЗ
		|	Документ.РеализацияПереданныхТоваров.Товары КАК Таб
		|ГДЕ
		|	Таб.Ссылка = &Ссылка";
		
		
	//Пакеты = Запрос.ВыполнитьПакет();
	//ДанныеПечати = Пакеты[0].Выбрать();
	//ДанныеПечати.Следующий();
	//ВыборкаТабЧасть = Пакеты[1].Выбрать();
	
	Документы.ЗаказПокупателя.ЗаполнитьТабличныйДокументСчетЗаказ(ТабДокумент, Запрос, , Тип,,1);
		
	//Макет = Документы.ЗаказПокупателя.ПолучитьМакет("СчетЗаказ");

	/////	
	//ОбластьШапкаТаблицы = 			  Макет.ПолучитьОбласть("ШапкаТаблицы");
	//ОбластьСтрокаТаблицы = 			  Макет.ПолучитьОбласть("СтрокаТаблицы");
	//ОбластьПодвалТаблицы = 			  Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьПодвалВсегоКОплате = 	  Макет.ПолучитьОбласть("ПодвалВсегоКОплате");
	//ОбластьПодвалТаблицыНДС = 		  Макет.ПолучитьОбласть("ПодвалТаблицыНДС");
	//ОбластьСуммаПрописью = 			  Макет.ПолучитьОбласть("СуммаПрописью");
	//ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	//ОбластьПодвалСчета = 			  Макет.ПолучитьОбласть("ПодвалСчета");
	//
	/////
	//ОбластьЗаголовокСчета = Макет.ПолучитьОбласть("ЗаголовокСчета");
	//СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
	//ОбластьЗаголовокСчета.Параметры.БанкПолучателяПредставление = СведенияОПоставщике.Банк;
	//ОбластьЗаголовокСчета.Параметры.ИНН = СведенияОПоставщике.ИНН;
	//ОбластьЗаголовокСчета.Параметры.КПП = СведенияОПоставщике.КПП;
	//ОбластьЗаголовокСчета.Параметры.БИКБанкаПолучателя = СведенияОПоставщике.БИК;
	//ОбластьЗаголовокСчета.Параметры.СчетБанкаПолучателяПредставление = СведенияОПоставщике.КоррСчет;
	//ОбластьЗаголовокСчета.Параметры.СчетПолучателяПредставление = СведенияОПоставщике.НомерСчета;
	//ОбластьЗаголовокСчета.Параметры.ПредставлениеПоставщикаДляПлатПоручения = ?(ЗначениеЗаполнено(СведенияОПоставщике.ОфициальноеНаименование), СведенияОПоставщике.ОфициальноеНаименование, СведенияОПоставщике.ПолноеНаименование);	
	//ТабДокумент.Вывести(ОбластьЗаголовокСчета);

	///// ЗАГОЛОВОК	
	//ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");	
	//ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Счет на оплату'"));
	//ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;	
	//ТабДокумент.Вывести(ОбластьМакета);
	//	
	///// ПОСТАВЩИК
	//ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");	
	//СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
	//ОбластьМакета.Параметры.ТекстПоставщик = "Поставщик:";
	//ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	//ТабДокумент.Вывести(ОбластьМакета);
	//
	///// ПОКУПАТЕЛЬ	
	//ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");	
	//СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	//ОбластьМакета.Параметры.ТекстПокупатель = "Покупатель:";
	//ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	//ТабДокумент.Вывести(ОбластьМакета);
	/////
	//ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	/////	
	//Пока ВыборкаТабЧасть.Следующий() Цикл
	//	ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаТабЧасть);
	//	ТабДокумент.Вывести(ОбластьСтрокаТаблицы);	
	//КонецЦикла;
	/////
	//ТаблицаТоваров = Ссылка.Товары.Выгрузить();
	//СуммаИтог = ТаблицаТоваров.Итог("Сумма");
	//СуммаНДС = ТаблицаТоваров.Итог("СуммаНДС");
	/////
	//ОбластьПодвалТаблицы.Параметры.Всего = ?(ДанныеПечати.ЦенаВключаетНДС, СуммаИтог, СуммаИтог - СуммаНДС); 
	//ТабДокумент.Вывести(ОбластьПодвалТаблицы);
	/////
	//ОбластьПодвалТаблицыНДС.Параметры.ВсегоНДС = СуммаНДС;
	//ТабДокумент.Вывести(ОбластьПодвалТаблицыНДС);
	/////
	//ОбластьПодвалВсегоКОплате.Параметры.ВсегоКОплате = СуммаИтог;
	//ТабДокумент.Вывести(ОбластьПодвалВсегоКОплате);
	//
	//ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "***";
	//ОбластьСуммаПрописью.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаИтог, ДанныеПечати.Валюта);
	//ТабДокумент.Вывести(ОбластьСуммаПрописью);
	/////
	//ТабДокумент.Вывести(ОбластьДополнительнаяИнформация);
	/////
	//ОбластьПодвалСчета.Параметры.ФИОРуководителя = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Руководитель);
	//ОбластьПодвалСчета.Параметры.ФИОБухгалтера   = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ГлавныйБухгалтер);
	//Если ДанныеПечати.ОрганизацияМенеджер = ДанныеПечати.Организация Тогда
	//	ОбластьМакета.Параметры.ФИОМенеджер = ?(ДанныеПечати.Менеджер = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор("9e97c9f1-7b4c-11e1-86be-0015175303fd")), "",ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер));	
	//КонецЕсли;
	//ТабДокумент.Вывести(ОбластьПодвалСчета);
	///
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
КонецФункции 

Процедура Печать_АктПриемаПередачиКСчетФактуре(ТабДок, Ссылка)	Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СчетФактуры.Номер КАК НомерСчетФактуры,
	                      |	НАЧАЛОПЕРИОДА(СчетФактуры.Дата, ДЕНЬ) КАК Дата
	                      |ИЗ
	                      |	РегистрСведений.СчетФактуры КАК СчетФактуры
	                      |ГДЕ
	                      |	СчетФактуры.Основание = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ПередачаТоваровОбороты.ДокументПередачи.Номер КАК НомерАкта,
						  | ПередачаТоваровОбороты.ДокументПередачи.Дата КАК ДатаАкта,
	                      |	ПередачаТоваровОбороты.СуммаРасход КАК СуммаДок
	                      |ИЗ
	                      |	РегистрНакопления.ПередачаТоваров.Обороты(, , Регистратор, ) КАК ПередачаТоваровОбороты
	                      |ГДЕ
	                      |	ПередачаТоваровОбороты.Регистратор = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Пакеты = Запрос.ВыполнитьПакет();
	Шапка = Пакеты[0].Выбрать();
	Строки = Пакеты[1].Выбрать();
	Макет = Документы.РеализацияПереданныхТоваров.ПолучитьМакет("АктПриемаПередачиКСчетФактуре");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	Если Шапка.Следующий() Тогда
		ОбластьШапка.Параметры.НомерСчетФактуры = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Шапка.НомерСчетФактуры, Истина, Шапка.Дата);
		ОбластьШапка.Параметры.Дата = Формат(Шапка.Дата, "ДЛФ = ДД");
		ТабДок.Вывести(ОбластьШапка);
	Иначе
		Сообщить("Счет - Фактура не введена! Введите счет - фактуру!");
		Возврат;
	КонецЕсли;;
	///
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Пока Строки.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(Строки);
		ОбластьСтрока.Параметры.НомерАкта = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Строки.НомерАкта);
		ОбластьСтрока.Параметры.ДатаАкта = Формат(Строки.ДатаАкта,"ДФ=dd.MM.yyyy");

		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
КонецПроцедуры

Функция ПечатьАктСписанияТМЦПоОЛ(ТабДокумент, Ссылка)  Экспорт
	////
	СведенияОКонтрагенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата,,);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	               |	Выбрать Первые 1 * Поместить КлассификацияПоУмолчанию из РегистрСведений.КлассификаторНоменклатурныхЗатратИПР где Номенклатура=Значение(Справочник.Номенклатура.ПустаяСсылка)
	               | 	;
	               |
				   |	ВЫБРАТЬ
	               |	ДокТовары.Номенклатура 					КАК Номенклатура,
	               |	ДокТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	               |	СУММА(ДокТовары.Количество) 	КАК Количество,
	               |	СУММА(ДокТовары.Цена) 			КАК Цена,
	               |	СУММА(ДокТовары.Сумма)			КАК Сумма,
	               |	СУММА(ДокТовары.СуммаНДС)		КАК СуммаНДС,
	              // |	ДокТовары.Инициатор КАК НомерМВЗ,
	               |	ДокТовары.Инициатор.Код 			НомерМВЗ,
				   |	ДокТовары.Инициатор.Наименование 	НаименованиеМВЗ,
				   |	ДокТовары.Инициатор.ВидРабот		ВидРабот,
				   |	ДокТовары.Инициатор.Цех				Цех,	
	               |	ДокТовары.ДокументПередачи.Номер	Номер,
				   |   	ДокТовары.ДокументПередачи.ОтветственноеЛицо 						ОтветственноеЛицо,
				   |	ДокТовары.ДокументПередачи.ОтветственноеЛицо.Руководитель 			Руководитель,
				  // |	ВЫБОР КОГДА  Номенклатура В ИЕРАРХИИ (&Химия) ТОГДА ""30100120 Химия Прочая"" ИНАЧЕ ""30100280 Производственный инструмент"" КОНЕЦ ВидЗатрат, 
   				  // |	ВЫБОР КОГДА  Номенклатура В ИЕРАРХИИ (&Химия) ТОГДА ""1533829"" ИНАЧЕ ""1502673"" КОНЕЦ НоменклатурныйНомер 
				   |	естьNull(Класс.ВидЗатрат, КлассУ.ВидЗатрат) ВидЗатрат, 
   				   |	естьNull(Класс.НоменклатурныйНомер, КлассУ.НоменклатурныйНомер) НоменклатурныйНомер 
				   |
	               //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]"" КАК Номенклатура
				   |ИЗ
	               |	Документ.РеализацияПереданныхТоваров.Товары КАК ДокТовары
				   |Левое соединение
				   |	РегистрСведений.КлассификаторНоменклатурныхЗатратИПР Класс
				   |по ДокТовары.Номенклатура.Родитель = класс.Номенклатура
				   |Левое соединение
				   |	КлассификацияПоУмолчанию КлассУ
				   |по Истина
				   |
	               |ГДЕ
	               |	ДокТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.Номенклатура,
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.ДокументПередачи,
				   |	ДокТовары.Номенклатура,
				   |	естьNull(Класс.ВидЗатрат, КлассУ.ВидЗатрат),
				   |	естьNull(Класс.НоменклатурныйНомер, КлассУ.НоменклатурныйНомер)
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]""
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Цена),
	               |	СУММА(Сумма),
	               |	СУММА(СуммаНДС),
				   |	МАКСИМУМ(Цех)
	               |ПО
	               |	Руководитель, НомерМВЗ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("Химия", Справочники.Номенклатура.НайтиПоНаименованию("Химия"));

	ВыборкаПОРук = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПОРук.Следующий() Цикл
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Макет = ПолучитьМакет("АктНаСписаниеТМЦпоОЛ");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Подразделение = ВыборкаПОРук.Цех;
		ОбластьШапка.Параметры.Руководитель = ВыборкаПОРук.Руководитель;
		ОбластьШапка.Параметры.ДолжностьРуководителя = ВыборкаПОРук.Руководитель.Должность;

		ОбластьШапка.Параметры.ДатаСоставления = Ссылка.Дата;
		ОбластьШапка.Параметры.ЗаголовокДокумента = "Акт на списание ТМЦ за период с "+?(ЗначениеЗаполнено(Ссылка.НачалоПериода),Формат(Ссылка.НачалоПериода, "ДЛФ=ДД"),"--.--.---- г.")+" по "+?(ЗначениеЗаполнено(Ссылка.КонецПериода),Формат(Ссылка.КонецПериода,"ДЛФ=ДД"),"--.--.---- г.");
		ОбластьШапка.Параметры.Организация = СведенияОКонтрагенте.Представление;

		ТабДокумент.Вывести(ОбластьШапка);
		////
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтогПоМвз = Макет.ПолучитьОбласть("ИтогПоМВЗ");
		
		
		НомерСтр = 0;
		СуммаОбщая = 0;
	
		ВыборкаПОМВЗ = ВыборкаПОРук.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПОМВЗ.Следующий() Цикл
		ещеОднаВыборка = ВыборкаПОМВЗ.Выбрать();
		Пока ещеОднаВыборка.Следующий() Цикл НомерСтр = НомерСтр + 1;
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ещеОднаВыборка);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтр;
			ОбластьСтрокаТаблицы.Параметры.Акт = "[акт № " +  ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ещеОднаВыборка.Номер) + "]";
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		КонецЦикла;
		Если Ссылка.СуммаВключаетНДС Тогда
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = ВыборкаПОМВЗ.Сумма + ВыборкаПОМВЗ.СуммаНДС;
			СуммаОбщая = СуммаОбщая + ВыборкаПОМВЗ.Сумма + ВыборкаПОМВЗ.СуммаНДС;
		Иначе
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = ВыборкаПОМВЗ.Сумма ;
			СуммаОбщая = СуммаОбщая + ВыборкаПОМВЗ.Сумма;
		конецЕсли;
		ОбластьИтогПоМвз.Параметры.СтрокаИтого = "Итого по МВЗ "+ ВыборкаПОМВЗ.НомерМВЗ;
		ОбластьИтогПоМвз.Параметры.ВсегоКоличествоПоМВЗ = ВыборкаПОМВЗ.Количество;
		ТабДокумент.Вывести(ОбластьИтогПоМВЗ);
	КонецЦикла;
	ОбластьИтогСуммаБезНДС = Макет.ПолучитьОбласть("ИтогСуммаБезНДС");
	ОбластьИтогСуммаБезНДС.Параметры.ВсегоСуммаБезНДС = СуммаОбщая;
	ТабДокумент.Вывести(ОбластьИтогСуммаБезНДС);
	///
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
КонецФункции

Функция ПечатьАктСписанияТМЦОлкон(ТабДокумент, Ссылка)  Экспорт
	////
	//СведенияОКонтрагенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата,,);
	
	Макет = ПолучитьМакет("АктНаСписаниеТМЦОлкон");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ЗаголовокДокумента = "Акт за период с "+?(ЗначениеЗаполнено(Ссылка.НачалоПериода),Формат(Ссылка.НачалоПериода, "ДЛФ=ДД"),"--.--.---- г.")+" по "+?(ЗначениеЗаполнено(Ссылка.КонецПериода),Формат(Ссылка.КонецПериода,"ДЛФ=ДД"),"--.--.---- г.");
	ОбластьШапка.Параметры.Организация = Ссылка.Организация.Наименование; //СведенияОКонтрагенте.Представление;
	Номер = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер,,Ссылка.Дата) + " от " + Формат(Ссылка.Дата, "ДЛФ=ДД");
	ОбластьШапка.Параметры.НомерСФ =  Номер;
	ОбластьШапка.Параметры.НомерТОРГ12 = Номер;

	ТабДокумент.Вывести(ОбластьШапка);
	////
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокТовары.Номенклатура КАК Номенклатура1,
	               |	ДокТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	               |	СУММА(ДокТовары.Количество) КАК Количество,
	               |	СУММА(ДокТовары.Цена) КАК Цена,
	               |	СУММА(ДокТовары.Сумма) КАК Сумма,
	               |	СУММА(ДокТовары.СуммаНДС) КАК СуммаНДС,
	               |	ДокТовары.Инициатор.ВидРабот КАК ВидРабот,
	               |	ДокТовары.Инициатор.Код КАК НомерМВЗ,
				   |	ДокТовары.Инициатор.Наименование НаименованиеМВЗ,
	               |	ДокТовары.ДокументПередачи.Номер КАК Номер,
				   |	ДокТовары.Номенклатура КАК Номенклатура,
				   |	""30100280"" ВидЗатрат
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]"" КАК Номенклатура
	               |ИЗ
	               |	Документ.РеализацияПереданныхТоваров.Товары КАК ДокТовары
	               |ГДЕ
	               |	ДокТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.Номенклатура,
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.ДокументПередачи,
				   |	ДокТовары.Номенклатура
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]""
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Цена),
	               |	СУММА(Сумма),
	               |	СУММА(СуммаНДС)
	               |ПО
	               |	НомерМВЗ
				   |";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	//ОбластьИтогПоМвз = Макет.ПолучитьОбласть("ИтогПоМВЗ");
	НомерСтр = 0;
	СуммаОбщая = 0;
	Пока Выборка.Следующий() Цикл
		ещеОднаВыборка = Выборка.Выбрать();
		Пока ещеОднаВыборка.Следующий() Цикл НомерСтр = НомерСтр + 1;
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ещеОднаВыборка);
			ОбластьСтрокаТаблицы.Параметры.Акт = "[акт № " +  ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ещеОднаВыборка.Номер) + "]";
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		КонецЦикла;
		Если Ссылка.СуммаВключаетНДС Тогда
			//ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма + Выборка.СуммаНДС;
			СуммаОбщая = СуммаОбщая + Выборка.Сумма + Выборка.СуммаНДС;
		Иначе
			//ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма ;
			СуммаОбщая = СуммаОбщая + Выборка.Сумма;
		конецЕсли;
		//ОбластьИтогПоМвз.Параметры.СтрокаИтого = "Итого по МВЗ "+ Выборка.НомерМВЗ;
		//ОбластьИтогПоМвз.Параметры.ВсегоКоличествоПоМВЗ = Выборка.Количество;
		//ТабДокумент.Вывести(ОбластьИтогПоМВЗ);
	КонецЦикла;
	ОбластьИтогСуммаБезНДС = Макет.ПолучитьОбласть("ИтогСуммаБезНДС");
	ОбластьИтогСуммаБезНДС.Параметры.ВсегоСуммаБезНДС = СуммаОбщая;
	ТабДокумент.Вывести(ОбластьИтогСуммаБезНДС);
	///
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(ОбластьПодвал);
КонецФункции

Функция ПечатьАктСписанияТМЦФосАгро(ТабДокумент, Ссылка)  Экспорт
	////
	//СведенияОКонтрагенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата,,);
	
	Макет = ПолучитьМакет("АктНаСписаниеТМЦФосАгро");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьШапка.Параметры.ЗаголовокДокумента = "Акт за период с "+?(ЗначениеЗаполнено(Ссылка.НачалоПериода),Формат(Ссылка.НачалоПериода, "ДЛФ=ДД"),"--.--.---- г.")+" по "+?(ЗначениеЗаполнено(Ссылка.КонецПериода),Формат(Ссылка.КонецПериода,"ДЛФ=ДД"),"--.--.---- г.");
//	ОбластьШапка.Параметры.Организация = Ссылка.Организация.Наименование; //СведенияОКонтрагенте.Представление;
	Номер = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер,,Ссылка.Дата) + " от " + Формат(Ссылка.Дата, "ДЛФ=ДД");
//	ОбластьШапка.Параметры.НомерСФ =  Номер;
//	ОбластьШапка.Параметры.НомерТОРГ12 = Номер;

	ТабДокумент.Вывести(ОбластьШапка);
	////
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокТовары.Номенклатура КАК Номенклатура1,
	               |	ДокТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	               |	СУММА(ДокТовары.Количество) КАК Количество,
	               |	СУММА(ДокТовары.Цена) КАК Цена,
	               |	СУММА(ДокТовары.Сумма) КАК Сумма,
	               |	СУММА(ДокТовары.СуммаНДС) КАК СуммаНДС,
	              // |	ДокТовары.Инициатор КАК НомерМВЗ,
	               |	ДокТовары.Инициатор.Код КАК НомерМВЗ,
				   |	ДокТовары.СтавкаНДС КАК СтавкаНДС,
				   |	СУММА(ДокТовары.Сумма+ДокТовары.СуммаНДС) КАК СуммаСНДС,
                   |	ДокТовары.Инициатор.Наименование НаименованиеМВЗ,
	               |	ДокТовары.ДокументПередачи.Номер КАК Номер,
				   |	ДокТовары.ДокументПередачи.Дата  КАК Дата,
				   |	ДокТовары.Номенклатура КАК Номенклатура,
				   |	""30100280"" ВидЗатрат
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]"" КАК Номенклатура
	               |ИЗ
	               |	Документ.РеализацияПереданныхТоваров.Товары КАК ДокТовары
	               |ГДЕ
	               |	ДокТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.Номенклатура,
	               |	ДокТовары.Инициатор,
	               |	ДокТовары.ДокументПередачи,
				   |	ДокТовары.СтавкаНДС,
				   |	ДокТовары.Номенклатура
				   //|	(ВЫРАЗИТЬ(ДокТовары.Номенклатура.Наименование КАК СТРОКА(300))) + ""[ акт "" + (ВЫРАЗИТЬ(ДокТовары.ДокументПередачи.Номер КАК СТРОКА(300))) + ""]""
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Цена),
	               |	СУММА(Сумма),
				   |	СУММА(СуммаСНДС),
	               |	СУММА(СуммаНДС)
	               |ПО
	               |	НомерМВЗ
				   |";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьИтогПоМвз = Макет.ПолучитьОбласть("ИтогПоМВЗ");
	НомерСтр = 0;
	СуммаОбщая = 0;
	СуммаОбщаяСНДС = 0;
	Пока Выборка.Следующий() Цикл
		ещеОднаВыборка = Выборка.Выбрать();
		Пока ещеОднаВыборка.Следующий() Цикл НомерСтр = НомерСтр + 1;
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ещеОднаВыборка);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтр;
			//ОбластьСтрокаТаблицы.Параметры.Акт = "[акт № " +  ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ещеОднаВыборка.Номер) + "]";
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		КонецЦикла;
		Если Ссылка.СуммаВключаетНДС Тогда
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма + Выборка.СуммаНДС;
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗСНДС   = Выборка.Сумма + Выборка.СуммаНДС;

			СуммаОбщая     = СуммаОбщая + Выборка.Сумма + Выборка.СуммаНДС;
			СуммаОбщаяСНДС = СуммаОбщаяСНДС + Выборка.Сумма + Выборка.СуммаНДС;

		Иначе
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗБезНДС = Выборка.Сумма ;
			ОбластьИтогПоМвз.Параметры.ВсегоСуммаПоМВЗСНДС   = Выборка.Сумма + Выборка.СуммаНДС ;
			СуммаОбщая     = СуммаОбщая + Выборка.Сумма;
			СуммаОбщаяСНДС = СуммаОбщаяСНДС + Выборка.Сумма + Выборка.СуммаНДС;
		конецЕсли;
		//ОбластьИтогПоМвз.Параметры.СтрокаИтого = "Итого по СП "+ Строка(Выборка.НаименованиеМВЗ);
		ОбластьИтогПоМвз.Параметры.ВсегоКоличествоПоМВЗ = Выборка.Количество;
		ТабДокумент.Вывести(ОбластьИтогПоМВЗ);
	КонецЦикла;
	ОбластьИтогСуммаБезНДС = Макет.ПолучитьОбласть("ИтогСуммаБезНДС");
	ОбластьИтогСуммаБезНДС.Параметры.ВсегоСуммаБезНДС = СуммаОбщая;
	ОбластьИтогСуммаБезНДС.Параметры.ВсегоСуммаСНДС   = СуммаОбщаяСНДС;

	ТабДокумент.Вывести(ОбластьИтогСуммаБезНДС);
	///
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	//ОбластьПодвал.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОбщаяСНДС, );
    //ОбластьВсего.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаДокумента, Выборка.Валюта);

	ТабДокумент.Вывести(ОбластьПодвал);
КонецФункции

