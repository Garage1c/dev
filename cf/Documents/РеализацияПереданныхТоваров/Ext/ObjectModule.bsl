Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваровВЯчейках() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	Ячейка <> &ПустаяЯчейка
	|";
	
КонецФункции

Функция ПолучитьТекстЗапросаПолученияСпискаЗаказов() Экспорт
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Заказ
	|ИЗ
	|	Документ.РеализацияПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	                                     
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПередачаТовара(ЭтотОбъект, Отказ, Заголовок);
	
	
	// в очередь на отправку
	 
	//Запись = РегистрыСведений.ОтправкаЗаказов.СоздатьМенеджерЗаписи();
		
	//Запись.Заказ 			= Заказ;
	//Запись.Отправлен 		= Ложь;
	
	//Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Запись) Тогда Отказ = Истина КонецЕсли;
		
	// Обновим журнал заказа
	
	//Если Не Заказы.ОбновитьРеквизитыЖурнала(Заказ) Тогда Отказ = Истина КонецЕсли;
		
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Контроль
	
	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Сумма = Товары.Итог("Сумма") + ?(СуммаВключаетНДС,0,Товары.Итог("СуммаНДС"));
	СуммаАванса = ПлатежныеДокументы.Итог("Сумма");
	                 
	// Установим подразделение
	
	Если Подразделение.Пустая() Тогда
		
		Если 	Не Партнер.ОсновнойМенеджер.Пустая() И
				Не Партнер.ОсновнойМенеджер.Подразделение.Пустая() Тогда
				
			Подразделение = Партнер.ОсновнойМенеджер.Подразделение;
			
		ИначеЕсли Не Склад.Подразделение.Пустая() Тогда
			
			Подразделение = Склад.Подразделение; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанных = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанных = Тип("ДокументСсылка.ПередачаТовара") Тогда
		///Передача товара (Череповец)
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПередачаТовара.Контрагент,
		                      |	ПередачаТовара.Организация,
		                      |	ПередачаТовара.Партнер,
		                      |	ПередачаТовара.Склад,
		                      |	ПередачаТовара.ТипЦен,
							  |	ПередачаТовара.БанковскийСчетОрганизации,
		                      |	ПередачаТовара.БанковскийСчетПартнера,
		                      |	ПередачаТовара.Товары.(
		                      |		Номенклатура,
		                      |		Количество,
		                      |		Цена,
		                      |		Сумма,
		                      |		Упаковка,
		                      |		КоличествоВУпаковке,
		                      |		СтавкаНДС,
		                      |		СуммаНДС,
		                      |		Размещение
		                      |	)
		                      |ИЗ
		                      |	Документ.ПередачаТовара КАК ПередачаТовара
		                      |ГДЕ
		                      |	ПередачаТовара.Ссылка = &Док");
		Запрос.УстановитьПараметр("Док", ДанныеЗаполнения);
		ВыборкаШапки = Запрос.Выполнить().Выбрать();
		Если ВыборкаШапки.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
			Товары.Загрузить(ВыборкаШапки.Товары.Выгрузить());
		КонецЕсли;			
		///////////////////////////////////
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		                                           
	ПроверяемыеРеквизиты.Добавить("Партнер");
		
КонецПроцедуры


// ОПЛАТА

Процедура ЗаполнитьДокументыОплаты(СсылкаРеализации = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	
	// Оплата конкретного заказа
	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистратор ДокументОплаты,
	|	СУММА(СуммаРасход) Сумма
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Дата,РЕГИСТРАТОР,,
	|					Организация 		= &Организация И 
	|					Партнер 			= &Партнер И 
	//|					Контрагент 			= &Контрагент И
	|					Заказ 				= &Заказ И
	|					(ДокументОтгрузки	= &Ссылка ИЛИ ДокументОтгрузки = НЕОПРЕДЕЛЕНО))
	|
	|ГДЕ
	|	СуммаРасход > 0 И
	|	НЕ Регистратор ССЫЛКА Документ.РеализацияПереданныхТоваров И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ИнтернетЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказНаряд
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистратор
	|;
	
	// Оплата авансом
	
	|ВЫБРАТЬ
	|	Регистратор ДокументОплаты,
	|	СУММА(СуммаРасход) Сумма
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Дата,РЕГИСТРАТОР,,
	|					Организация 		= &Организация И 
	|					Партнер 			= &Партнер И 
	//|					Контрагент 			= &Контрагент И
	|					Заказ 				= НЕОПРЕДЕЛЕНО )
	|
	|ГДЕ
	|	СуммаРасход > 0 И
	|	НЕ Регистратор ССЫЛКА Документ.РеализацияПереданныхТоваров И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ИнтернетЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказНаряд
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистратор
	|");
	
	Запрос.УстановитьПараметр("Ссылка",		Ссылка);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Партнер", 	Партнер);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Дата", 		Дата);
	Запрос.УстановитьПараметр("Заказ", 		Заказ);
	УстановитьПривилегированныйРежим(Истина);
	Пакет = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	Нужно = Сумма;
	
	ПлатежныеДокументы.Очистить();
	ДобавитьВОплаты(Пакет[0].Выбрать(), Нужно);
	
	Оплачено = Сумма - Нужно;
	Если Нужно Тогда
		ДобавитьВОплаты(Пакет[1].Выбрать(), Нужно)	
	КонецЕсли;
	
	СуммаАванса = Сумма - Оплачено - Нужно;
		
КонецПроцедуры
Процедура ДобавитьВОплаты(Выборка, Нужно)
	
	Пока Выборка.Следующий() Цикл
		
		Берем = Мин(Нужно, Выборка.Сумма);
		Если Берем Тогда
			ЗаполнитьЗначенияСвойств(ПлатежныеДокументы.Добавить(), Выборка);
		КонецЕсли;
		
		Нужно = Нужно - берем;
		
	КонецЦикла;
	
КонецПроцедуры
Процедура ЗаполнитьДокументыОплаты_Ст(СсылкаРеализации = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	
	// Аванс
	
	|ВЫБРАТЬ Партнер,СУММА(-СуммаОстаток) Сумма ИЗ РегистрНакопления.ДолгиПоОтгрузкам.Остатки(
	|" + ?(Проведен, "&Дата", "") + "
	|					,	Организация 	= &Организация И 
	|						Партнер 		= &Партнер)
	//|						Контрагент 		= &Контрагент)
	|СГРУППИРОВАТЬ ПО
	|	Партнер
	|ИМЕЮЩИЕ СУММА(-СуммаОстаток) > 0
	|;
	
	// Закрывающий заказ
	
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО	ДокументОплаты,
	|	Заказ,
	|	Заказ.Валюта	Валюта,
	|	СуммаОстаток 	Сумма
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.Остатки(&Дата, 
	|									Организация = &Организация И 
	|									Партнер 	= &Партнер И 
	//|									Контрагент 	= &Контрагент И
	|									ДокументОтгрузки = НЕОПРЕДЕЛЕНО И
	|									Заказ			= &Заказ)
	|ГДЕ
	|	СуммаОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Регистратор,
	|	Заказ,
	|	Регистратор.Валюта,
	|	СуммаРасход
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Дата,РЕГИСТРАТОР,,
	|					Организация 		= &Организация И 
	|					Партнер 			= &Партнер И 
	//|					Контрагент 			= &Контрагент И
	|					ДокументОтгрузки 	= НЕОПРЕДЕЛЕНО)
	|
	|ГДЕ
	|	СуммаРасход > 0 И
	|	НЕ Регистратор ССЫЛКА Документ.РеализацияПереданныхТоваров И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ИнтернетЗаказПокупателя И
	|	НЕ Регистратор ССЫЛКА Документ.ЗаказНаряд
	|");
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Партнер", 	Партнер);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Дата", 		Дата);
	Запрос.УстановитьПараметр("Заказ", 		Заказ);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка 	= Пакет[0].Выбрать();
	СуммаАванса = ?(Выборка.Следующий(),
								Мин(Выборка.Сумма, Сумма),
								0);
								
	//РасшифровкаПлатежа.Загрузить(Пакет[1].Выгрузить());
								
КонецПроцедуры
