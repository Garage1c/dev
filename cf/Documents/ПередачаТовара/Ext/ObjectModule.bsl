Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	Ссылка.Заказ <> Неопределено И
	|	Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|";
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	Если Не Отказ Тогда
		ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	// Запись
	
	Движения.Записать();
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьПередачаТовара(ЭтотОбъект, Отказ, Заголовок);
	//
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//Иначе
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//КонецЕсли;
	
	// ЛИМИТЫ
	
	Если Заказ = Неопределено ИЛИ Заказ.Пустая() Тогда  // если это самостоятельная передача ( не под заказ)
		
		КонтрольПроведения.ПроверитьЛимиты(ЭтотОбъект, ОтветственноеЛицо, Отказ, Заголовок);

	КонецЕсли;	

КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	//Движения.Записать();
	
	// Контроль
	
	//КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	////}}avdonin
	
	Движения.ПередачаТоваров.Очистить();
	Движения.Записать();
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьПередачаТовара(ЭтотОбъект, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаНДС	= Товары.Итог("СуммаНДС");
	Сумма 		= Товары.Итог("Сумма") + ?(СуммаВключаетНДС, 0, СуммаНДС);
	
	
	//Сумма = Товары.Итог("Сумма");
	//
	//Если Ссылка.Пустая() Тогда
	//	СтатьяДДС = ?(ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат, 
	//		Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("000000014"), 
	//		Константы.СтатьяУчетаДенежныхСредствПоЧекамККМ.Получить()); КонецЕсли;
	//	
	//// Установим подразделение
	//
	//Если Подразделение.Пустая() Тогда
	//	
	//	Если 	Не Партнер.ОсновнойМенеджер.Пустая() И
	//			Не Партнер.ОсновнойМенеджер.Подразделение.Пустая() Тогда
	//			
	//		Подразделение = Партнер.ОсновнойМенеджер.Подразделение;
	//		
	//	ИначеЕсли Не Склад.Подразделение.Пустая() Тогда
	//		
	//		Подразделение = Склад.Подразделение; КонецЕсли; КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.ЗаявкаПокупателя") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.ИнтернетЗаявка") Тогда
		
		// пока будем проверять, может уже есть реализация для этого З-Н
		
		Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Документ.ПередачаТовара ГДЕ Заказ = &Заказ");
		Запрос.УстановитьПараметр("Заказ", ДанныеЗаполнения.Заказ);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЭтотОбъект.Комментарий = "Отказаться от записи. Для """ + Строка(ДанныеЗаполнения) + """ уже создана """ + Строка(Выборка.Ссылка) + """";
            Возврат;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения.Заказ, "Организация, Партнер, Контрагент, Склад, ТипЦен, Валюта, СуммаВключаетНДС, МВЗ, ОтветственноеЛицо");
		ЭтотОбъект.Заказ = ДанныеЗаполнения.Заказ;
		Запрос = Новый Запрос("
		|ВЫБРАТЬ 
		|   Номенклатура,
		|	Цена,
		|	Упаковка,
		|	Размещение,
		|	СтавкаНДС,
		|	КоличествоПриход	Количество,
		|	СуммаПриход 		Сумма, " +
			Заказы.ПолучитьСуммуНДСВЗапросе() + " СуммаНДС
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей.Обороты(,,,ЗаказПокупателя = &Заказ)
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ 
		|   Номенклатура,
		|	Цена,
		|	Упаковка,
		|	Размещение,
		|	СтавкаНДС,
		|	КоличествоПриход	Количество,
		|	СуммаПриход 		Сумма, " +
			Заказы.ПолучитьСуммуНДСВЗапросе(,,"ИнтернетЗаказ") + " СуммаНДС
		|ИЗ
		|	РегистрНакопления.ИнтернетЗаказПокупателя.Обороты(,,,ИнтернетЗаказ = &Заказ)

		|");
		
		Запрос.УстановитьПараметр("Заказ", ДанныеЗаполнения.Заказ);
		Выборка= Запрос.Выполнить();
		Если НЕ Выборка.Пустой() Тогда
			
			Товары.Загрузить(Выборка.Выгрузить());
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	стрОшибки = "";
	Если 	Не ПараметрыСеанса.КонтрольОстатковВСеансеОтключен И
			НЕ ЗначениеЗаполнено(Заказ) И 
			Склад.ПередачаТовараМВЗ И НЕ Заказы.ТоварыРазрешеныКПередаче(Ссылка, "ПередачаТовара", стрОшибки) Тогда
			
		Отказ = Истина;
		ОбщиеФункции.СообщитьТекст(стрОшибки); КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// [ticket 434] запрещено проводить без заполненного МВЗ
	
	Если Не ОбменДанными.Загрузка И Не ПараметрыСеанса.КонтрольОстатковВСеансеОтключен Тогда
		ПроверяемыеРеквизиты.Добавить("МВЗ") КонецЕсли;
	
КонецПроцедуры


