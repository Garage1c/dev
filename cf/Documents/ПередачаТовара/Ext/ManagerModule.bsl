
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Перем ОперативныйЗаказ;
	
	
	Если НЕ ПроведенияДокументов.РазрешеноПерепроводитьДокумент(Ссылка) Тогда
		Возврат;
	КонецЕсли;	
	
	
	// Проверим оператиынй заказ который не вычислить так как записи нет в базе
	
	Если ДополнительныеСвойства.Свойство("ОперативныйЗаказ", ОперативныйЗаказ) Тогда
		
		ТекстФильтраЗаказа = " = &Заказ";
		
	Иначе
		
		// ТекстФильтраЗаказа = "В(ВЫБРАТЬ Заказ ИЗ СписокЗаказов)";
		ТекстФильтраЗаказа = " = &Заказ"; 	// исправление коснулись кода при проведении реализации не подхватывались заказы
											// так как список получения заказов не верен
		ОперативныйЗаказ = Ссылка.Заказ;
		
	КонецЕсли;
	
	
	Запрос = Новый Запрос(
		 
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	|ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|  	Документ.ПередачаТовара
	|ГДЕ
	|   Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|   Док.Ссылка,
	|	Док.МВЗ КАК Инициатор,
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад ИНАЧЕ Склад КОНЕЦ Склад,
	|	Док.Контрагент КАК Контрагент,
	|	Док.Партнер КАК Партнер,
	|	Док.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Док.УчитыватьНДС КАК УчитыватьНДС
	|ПОМЕСТИТЬ ШапкаДок
	|ИЗ
	|	Документ.ПередачаТовара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	
	// ПЕРЕДАЧА ТОВАРА
	
	|ВЫБРАТЬ
	|   &Период КАК Период,
	|	&ВидДвиженияПриход		КАК ВидДвижения,
	|   ШапкаДок.Инициатор 		КАК Инициатор,
	|	ШапкаДок.Партнер 		КАК Партнер,
	|	ШапкаДок.Контрагент 	КАК Контрагент,
	|	Товары.СтавкаНДС 		КАК СтавкаНДС,
	|	ШапкаДок.Склад	 		КАК Размещение,
	|	ВЫБОР КОГДА Товары.НоменклатураУчет <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Товары.НоменклатураУчет ИНАЧЕ Товары.Номенклатура КОНЕЦ	Номенклатура,
	|	ВЫБОР КОГДА Товары.НоменклатураУчет <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Товары.Номенклатура ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КОНЕЦ	НоменклатураЗамена,
	|	Товары.Упаковка			Упаковка,
	|	Товары.Цена				Цена,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Ссылка КАК ДокументПередачи
	|ИЗ
	|	Документ.ПередачаТовара.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШапкаДок КАК ШапкаДок
	|	ПО Товары.Ссылка = ШапкаДок.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|;
	
	// ТОВАРЫ НА СКЛАДАХ	
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ссылка.Склад		КАК Склад,       // Размещение
	|	Номенклатура,
	|	Цена,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ПередачаТовара.Товары 	
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	//|	Размещение,
	|	Упаковка,
	|	Цена
	|;
	
	// Товары в резерве
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ссылка.Заказ		КАК ДокументРезерва,
	|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
	|	Номенклатура		КАК Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество
    |ИЗ
	|	Документ.ПередачаТовара.Товары
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Заказ <> Неопределено И
	|	Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Размещение,
	|	Номенклатура,
	|	Упаковка
	|;
	
	// Заказ покупателя
	
	|ВЫБРАТЬ
	|	&Период						Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Номенклатура     		Номенклатура,
	|	Цена		    		Цена,
	|	Упаковка         		Упаковка,
	|	Количество 				Количество,
	|	Сумма 					Сумма,
	|	СтавкаНДС,
	|	Ссылка.Заказ			ЗаказПокупателя" + ?(Ссылка.Заказ <> Неопределено И Ссылка.Заказ.СпособРазмещенияБезЗаказа, "", ", Ссылка.Склад			Размещение") + "
	|ИЗ	
	|	Документ.ПередачаТовара.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя
    |;

	// Интернет заказ
	
	|ВЫБРАТЬ
	|	&Период						Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Док.Номенклатура    Номенклатура,
	|	Док.Цена		    Цена,
	|	Док.Упаковка        Упаковка,
	|	Док.Количество 		Количество,
	|	Док.Сумма 			Сумма,
	|	Док.СтавкаНДС       СтавкаНДС,
	|	Док.Ссылка.Заказ	ИнтернетЗаказ" + ?(Ссылка.Заказ <> Неопределено И Ссылка.Заказ.СпособРазмещенияБезЗаказа, "", ", Док.Ссылка.Склад		Размещение") + "
	|ИЗ	
	|	Документ.ПередачаТовара.Товары  Док
	|	
	|ГДЕ
	|	Док.Ссылка = &Ссылка И
	|	Док.Ссылка.Заказ ССЫЛКА Документ.ИнтернетЗаказПокупателя
	|;
	
	// Продажи
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	Ссылка.Склад			Склад,
	//|	Ссылка.Подразделение	Подразделение,
	|	Ссылка.Заказ			Заказ,
	|	&Менеджер				Менеджер,
	|	Ссылка					ДокументПродажи,
	|	Ссылка.Партнер			Партнер,
	|	Ссылка.Контрагент		Контрагент,
	|	Номенклатура,
	|	Упаковка,
	|	СУММА(Количество) 		Количество,
	|	СУММА(СуммаПартии) 		Себестоимость,
	|	ВЫБОР 
	|		КОГДА Ссылка.СуммаВключаетНДС 
	|		ТОГДА СУММА(Сумма)		
	|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС)  
	|	КОНЕЦ 	Сумма
	|ИЗ
	|	Документ.ПередачаТовара.Товары  Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,	
	|	Упаковка
	|;
	// Сборка
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	СкладЯчейка			КАК СкладЯчейка,
	|	Сборщик,
	|	Заказ,
	|	Номенклатура,
	|	Упаковка,
	|	СобраноОстаток	КАК Количество
	|ИЗ
	|	РегистрНакопления.СборкаЗаказа.Остатки(&Период, Заказ " + ТекстФильтраЗаказа + ")
	|;
	
	// Сборка из документа
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	СкладЯчейкаСборки	КАК СкладЯчейка,
	|	Сборщик,
	|	Ссылка.Заказ		Заказ,
	|	Номенклатура,
	|	Упаковка,
	|	СУММА(Количество) КАК Собрано
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И СкладЯчейкаСборки <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	СкладЯчейкаСборки,
	|	Сборщик,
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка
	|;
	// СБОРЩИК ТОВАРА
	
	|ВЫБРАТЬ
	|	&Период						КАК Период,
	|	Сборщик						КАК Сборщик,
	|	Ссылка.Заказ				КАК Заказ,
	|	Номенклатура				КАК Номенклатура,
	|	Упаковка					КАК Упаковка,
	|	Ссылка.Склад				КАК Склад,	
	|	КОЛИЧЕСТВО(Номенклатура)	КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Ссылка.ЭтоБыстраяПродажа
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Сборщик,
	|	Номенклатура,
	|	Упаковка
	|;
	
	// Продажи по МВЗ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	ВЫБОР КОГДА Ссылка.Заказ В (&МассивПустыхСсылок) ТОГДА Ссылка ИНАЧЕ Ссылка.Заказ КОНЕЦ Заказ,
	|	Ссылка.Склад			Склад,
	|	Ссылка.МВЗ				МВЗ,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	СУММА(Количество) 		Количество,
	|	СУММА(Сумма)            Сумма
	//|	ВЫБОР 
	//|		КОГДА Ссылка.СуммаВключаетНДС 
	//|		ТОГДА СУММА(Сумма)		
	//|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС)  
	//|	КОНЕЦ 					Сумма
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.МВЗ <> &ПустойМВЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,	
	|	Упаковка,
	|	Цена
	|;
	
	// ЛИМИТЫ
	
	|ВЫБРАТЬ
	|   &Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Ссылка.ОтветственноеЛицо	Инициатор,
	|	СУММА(Сумма) 				Сумма
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|ГДЕ
	|   Ссылка = &Ссылка И Ссылка.ОтветственноеЛицо <> &ПустойИнициатор И Ссылка.Заказ = НЕОПРЕДЕЛЕНО
	|СГРУППИРОВАТЬ ПО Ссылка
	|;
	
	// Движение товара
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
	|	Ссылка.Заказ		КАК Заказ,
	|	Номенклатура,
	|	Упаковка, 
	|	-СУММА(Количество) Количество
	|ИЗ
	|	Документ.ПередачаТовара.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Заказ <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Размещение,	
	|	Упаковка;
	
	// ПАРТИИ ТОВАРОВ
	|ВЫБРАТЬ неопределено ГДЕ Истина=Ложь;
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияРасход	КАК ВидДвижения,
	//|	Ссылка.Склад Склад, Партия, Номенклатура,
	//|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	//|		СУММА(Количество)
	//|	ИНАЧЕ
	//|		СУММА(Количество * Упаковка.Коэффициент)
	//|	КОНЕЦ				КАК Количество,
	//|	СУММА(СуммаПартии) 	КАК Сумма
	//|ИЗ
	//|	Документ.ПередачаТовара.Товары
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И СуммаПартии <> 0
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка, Партия, Номенклатура, Упаковка
	
	// Товары собранные
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ссылка.Склад		Склад,
	|	Ссылка.Заказ		Заказ,
	|	СборочныйЛист,
	|	Номенклатура,
	|	Упаковка,
	|	СУММА(Количество) КАК Количество
	|ИЗ
	|	Документ.ПередачаТовара.СобранныеТовары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	СборочныйЛист,
	|	Упаковка;
	|");
	
	МассивПустыхСсылок = Новый Массив;
	МассивПустыхСсылок.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустыхСсылок.Добавить(Документы.ИнтернетЗаказПокупателя.ПустаяСсылка());
	МассивПустыхСсылок.Добавить(Неопределено);
	МассивПустыхСсылок.Добавить(Документы.ЗаказНаряд.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойИнициатор", 	Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("Услуга", 			Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("Заказ", 				ОперативныйЗаказ);
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);
	Запрос.УстановитьПараметр("ПустойМВЗ",			Справочники.МВЗ.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойИнициатор",	Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));


	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ПередачаТоваров",  Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 	Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыВРезерве", 			Пакет[5].Выгрузить());
	ДополнительныеСвойства.Вставить("ЗаказыПокупателей", 		Пакет[6].Выгрузить());
	ДополнительныеСвойства.Вставить("ИнтернетЗаказПокупателя", 	Пакет[7].Выгрузить());
	ДополнительныеСвойства.Вставить("Продажи", 					Пакет[8].Выгрузить());
	ДополнительныеСвойства.Вставить("СборкаЗаказа", 			Пакет[10].Выгрузить());
	ДополнительныеСвойства.Вставить("СборщикЗаказа",			Пакет[11].Выгрузить());
	ДополнительныеСвойства.Вставить("ПродажиПоМВЗ",				Пакет[12].Выгрузить());
	Если НЕ Ссылка.НеСписыватьЛимит Тогда
		ДополнительныеСвойства.Вставить("Лимиты",					Пакет[13].Выгрузить());
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ДвижениеТовара",			Пакет[14].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПартииТоваров",			Пакет[15].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыСобранные",			Пакет[16].Выгрузить());
	
	Если Не ДополнительныеСвойства.СборкаЗаказа.Количество() Тогда // сборка по новому мегазапросу
		
		ТаблицаСборки = Пакет[9].Выгрузить();
		Если ТаблицаСборки.Количество() Тогда
				
			ТаблицаРазмазаннойСборки = КонтрольПроведения.РазмазатьТаблицуВТаблицеПоМинимальнымРесурсам(
					ТаблицаСборки,
					ДополнительныеСвойства.ТоварыНаСкладах,
					"Номенклатура",
					"Количество");
						
			ТаблицаРазмазаннойСборки.Колонки.Количество.Имя = "Собрано";
			ДополнительныеСвойства.СборкаЗаказа = ТаблицаРазмазаннойСборки; КонецЕсли; КонецЕсли;

КонецПроцедуры


Процедура Печать_АктПриемПередачаТМЦ(ТабДокумент, Ссылка) Экспорт
		
	
	Макет = Документы.ПередачаТовара.ПолучитьМакет("АктПриемПередачаТМЦ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|   Док.Организация               КАК Организация,
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	|	Док.Валюта						Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	Док.МВЗ							МВЗ,
	|	Док.ОтветственноеЛицо			Инициатор,
	|	ВЫБОР КОГДА Док.Грузополучатель  В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Контрагент
	|	ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ	Покупатель,
	|	Заказ,
	|	Заказ.Номер НомерЗаказа,
	|	Заказ.Дата  ДатаЗаказа,
	|	Док.Товары.(
	//|		НомерСтроки                       КАК НомерСтроки,
	|		ВЫБОР КОГДА НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Номенклатура ИНАЧЕ НоменклатураУчет КОНЕЦ КАК Номенклатура,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ПередачаТовара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата", Выборка.Номер, Выборка.Дата), "Акт приема - передачи ТМЦ");//+ ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер)+" от "+Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПоставщикПокупатель");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	//	ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		//////
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		КонецЕсли;
		
		ОбластьМакета.Параметры.МВЗ = Выборка.МВЗ;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Основание");
			ОбластьМакета.Параметры.НомерЗаказа = Выборка.НомерЗаказа;
			ОбластьМакета.Параметры.ДатаЗаказа 	= Выборка.ДатаЗаказа;
			
			ТабДокумент.Вывести(ОбластьМакета);
		Иначе
			 ОбластьТекст = Макет.ПолучитьОбласть("Текст");
			 ТабДокумент.Вывести(ОбластьТекст);

		КонецЕсли;
			

		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыводитьКоды = Истина;
		Колонка = "Артикул";


		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
				
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма   = 0;
		Номер 	= 0;
		//ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Товары = Выборка.Товары.Выгрузить();
		Товары.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения", "Количество, Сумма, СуммаНДС");
		//Пока ВыборкаСтрокТовары.Следующий() Цикл 
		Для Каждого ВыборкаСтрокТовары ИЗ Товары Цикл Номер = Номер + 1;
			
			//ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьНомера.Параметры.НомерСтроки = Номер;
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Номенклатура.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			//Если ЕстьНДС Тогда 
				//СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;			
				//Если Не Выборка.ЦенаВключаетНДС Тогда
				//	Сумма 		= ВыборкаСтрокТовары.Сумма;
				//	СуммаИтого 	= ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС; //с ндс
				//	СуммаБезНДС = ВыборкаСтрокТовары.Сумма;
				//Иначе
				//	Сумма 		= ВыборкаСтрокТовары.Сумма;
				//	СуммаИтого 	= ВыборкаСтрокТовары.Сумма; //с ндс
				//	СуммаБезНДС = ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
				//КонецЕсли;
			ОбластьСуммы.Параметры.Сумма = ВыборкаСтрокТовары.Сумма;
			ТабДокумент.Присоединить(ОбластьСуммы);
			Сумма = Сумма + ВыборкаСтрокТовары.Сумма;
				///
				//ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
				//ТабДокумент.Присоединить(ОбластьСуммыНДС);
			//Иначе
			//	СуммаБезНДС = 0;
			//	СуммаНДС = 0;
			//	Сумма = ВыборкаСтрокТовары.Сумма;
			//	СуммаИтого = ВыборкаСтрокТовары.Сумма; 
			//КонецЕсли;
			////////
			//ОбластьСуммы.Параметры.Сумма = Сумма;
			//ТабДокумент.Присоединить(ОбластьСуммы);				
		КонецЦикла;
		
		КоличествоИтог = Товары.Итог("Количество");
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСуммы	= Макет.ПолучитьОбласть("Итого|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.КоличествоИтог = КоличествоИтог; 
		ОбластьДанных.Параметры.БезНДС = ?(Выборка.ЦенаВключаетНДС, "", "без НДС");
		ТабДокумент.Присоединить(ОбластьДанных);
		///////////
		//Сумма    = Товары.Итог("Сумма");
		//Если ЕстьНДС Тогда
			СуммаНДС = Товары.Итог("СуммаНДС");	
		//	Если Не Выборка.ЦенаВключаетНДС Тогда
		//		СуммаДокумента = Сумма + СуммаНДС;
		//		СуммаБезНДС = Сумма;
		//	Иначе
		//		СуммаДокумента = Сумма;
		//		СуммаБезНДС = Сумма - СуммаНДС;
		//	КонецЕсли;
			ОбластьСуммы.Параметры.Сумма = Сумма;
			ТабДокумент.Присоединить(ОбластьСуммы);
			СуммаДокумента = Сумма + ?(Выборка.ЦенаВключаетНДС, 0, СуммаНДС);
			//ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			//ТабДокумент.Присоединить(ОбластьСуммыНДС);
			
			//ОбластьВсего.Параметры.НДСПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаНДС, Выборка.Валюта);

		//Иначе
		//	СуммаНДС = 0;
		//	СуммаБезНдс = 0;
		//	СуммаДокумента = Сумма;
		//КонецЕсли;	
		
		ОбластьВсего   = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.КоличествоТовара = Товары.Количество();
		ОбластьВсего.Параметры.СуммаНДС = СуммаНДС;
		ОбластьВсего.Параметры.СуммаИтого = СуммаДокумента;
		ОбластьВсего.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьВсего);
		//ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		//ТабДокумент.Присоединить(ОбластьСуммы);
		
		//ОбластьИнициатор = Макет.ПолучитьОбласть("Инициатор");
		//ТабДокумент.вывести(ОбластьИнициатор);

		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРазделитель");
 		ТабДокумент.Вывести(областьМакета);

		Если ЗначениеЗаполнено(Выборка.Инициатор) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Инициатор");
			ОбластьМакета.Параметры.Инициатор = Выборка.Инициатор;
 			ТабДокумент.Вывести(областьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		//ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОбластьМакета.Параметры.ДатаОтгрузки = Выборка.Дата;
		//ОбластьМакета.Параметры.Менеджер = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Ссылка.Ответственный.ФизЛицо);
		ОбластьМакета.Параметры.Менеджер = Выборка.Ссылка.Склад.Отдел.Руководитель;

		//ПечатьНаСервере.ДобитьНемецкимиСтрокамиЧтобыКолонтитулОказалсяВнизу(ТабДокумент, ОБластьПустаяСтрока, , ОбластьМакета);		
		 ТабДокумент.Вывести(областьМакета);
			
	КонецЦикла;
	
	ПечатьНаСервере.ЗаписатьИсториюПечати(Ссылка.Заказ,Перечисления.ТипыПечатаемыхДокументов.АктПриемаПередачи,Ссылка);
КонецПроцедуры
Процедура Печать_АктПриемПередачаТМЦ_ММК(ТабДокумент, Ссылка) Экспорт
		
	
	Макет = Документы.ПередачаТовара.ПолучитьМакет("АктПриемПередачаТМЦ_ММК");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Организация КАК Организация,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК Дата,
	|	Док.Ссылка КАК Ссылка,
	|	Док.Валюта КАК Валюта,
	|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	Док.МВЗ КАК МВЗ,
	|	Док.ОтветственноеЛицо КАК Инициатор,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ КАК Покупатель,
	|	Док.Заказ,
	|	Док.Заказ.Номер КАК НомерЗаказа,
	|	Док.Заказ.Дата КАК ДатаЗаказа,
	|	Док.Товары.(
	|		ВЫБОР
	|			КОГДА Док.Товары.НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА Док.Товары.Номенклатура
	|			ИНАЧЕ Док.Товары.НоменклатураУчет
	|		КОНЕЦ КАК Номенклатура,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА Док.Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Товары.Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Товары.Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ПередачаТовара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка";
	//Запрос.УстановитьПараметр("ИнформационнаяСистема",Ссылка.Партнер.);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата", Выборка.Номер, Выборка.Дата), "Акт приема - передачи ТМЦ");//+ ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер)+" от "+Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПоставщикПокупатель");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	//	ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		//////
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		КонецЕсли;
		
		ОбластьМакета.Параметры.МВЗ = Выборка.МВЗ;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Основание");
			ОбластьМакета.Параметры.НомерЗаказа = Выборка.НомерЗаказа;
			ОбластьМакета.Параметры.ДатаЗаказа 	= Выборка.ДатаЗаказа;
			
			ТабДокумент.Вывести(ОбластьМакета);
		Иначе
			 ОбластьТекст = Макет.ПолучитьОбласть("Текст");
			 ТабДокумент.Вывести(ОбластьТекст);

		КонецЕсли;
			

		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыводитьКоды = Истина;
		Колонка = "Артикул";
		
		ИнфСист = Ссылка.Контрагент.ИнформационнаяСистемаПартнера;
		ВыводитьСНБ = Ложь;
		КолонкаСНБ  = "СНБ";
		
		Если НЕ ИнфСист = Справочники.СторонниеБазы.ПустаяСсылка() Тогда
               ВыводитьСНБ = Истина;
        КОнецЕсли;


		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьСНБ      = Макет.ПолучитьОбласть("ШапкаТаблицы|СНБ");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		Если ВыводитьСНБ Тогда
        ОбластьСНБ.Параметры.ИмяКолонкиСНБ = КолонкаСНБ;
		ТабДокумент.Присоединить(ОбластьСНБ);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьДанных);
				
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьСНБ      = Макет.ПолучитьОбласть("Строка|СНБ");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма   = 0;
		Номер 	= 0;
		//ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
				
		Товары = Выборка.Товары.Выгрузить();
		Товары.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения", "Количество, Сумма, СуммаНДС");
		
	Если ВыводитьСНБ Тогда
	
    МенВрТаб = Новый МенеджерВременныхТаблиц;
	ЗапросСНБ = Новый Запрос;
    ЗапросСНБ.МенеджерВременныхТаблиц = МенВрТаб;
    ЗапросСНБ.Текст = "ВЫБРАТЬ
                      |	Товары.Номенклатура,
                      |	Товары.Цена,
                      |	Товары.ЕдиницаИзмерения,
                      |	Товары.Количество,
                      |	Товары.Сумма,
                      |	Товары.СуммаНДС
                      |ПОМЕСТИТЬ Товары
                      |ИЗ
                      |	&ТзТовары КАК Товары
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	Товары.Номенклатура,
                      |	Товары.Цена,
                      |	Товары.ЕдиницаИзмерения,
                      |	Товары.Количество,
                      |	Товары.Сумма,
                      |	Товары.СуммаНДС,
                      |	ВложенныйЗапрос.КодНоменклатуры КАК СНБ
                      |ИЗ
                      |	Товары КАК Товары
                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                      |			СоответствиеТоваровПартнеров.Номенклатура КАК Номенклатура,
                      |			СоответствиеТоваровПартнеров.КодНоменклатуры КАК КодНоменклатуры
                      |		ИЗ
                      |			РегистрСведений.СоответствиеТоваровПартнеров КАК СоответствиеТоваровПартнеров
                      |		ГДЕ
                      |			СоответствиеТоваровПартнеров.ИнформационнаяСистема = &ИнформационнаяСистема) КАК ВложенныйЗапрос
                      |		ПО Товары.Номенклатура = ВложенныйЗапрос.Номенклатура";
					  
    ЗапросСНБ.УстановитьПараметр("ИнформационнаяСистема", Ссылка.Контрагент.ИнформационнаяСистемаПартнера);                          
	ЗапросСНБ.УстановитьПараметр("ТзТовары", Товары);
    Товары = ЗапросСНБ.Выполнить().Выгрузить();
    КонецЕсли;     		
				//Пока ВыборкаСтрокТовары.Следующий() Цикл 
		Для Каждого ВыборкаСтрокТовары ИЗ Товары Цикл Номер = Номер + 1;
			
			//ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьНомера.Параметры.НомерСтроки = Номер;
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Номенклатура.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			Если ВыводитьСНБ Тогда
			ОбластьСНБ.Параметры.СНБ      = ВыборкаСтрокТовары.СНБ;
			ТабДокумент.Присоединить(ОбластьСНБ);
			КонецЕсли;
			

			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			//Если ЕстьНДС Тогда 
				//СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;			
				//Если Не Выборка.ЦенаВключаетНДС Тогда
				//	Сумма 		= ВыборкаСтрокТовары.Сумма;
				//	СуммаИтого 	= ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС; //с ндс
				//	СуммаБезНДС = ВыборкаСтрокТовары.Сумма;
				//Иначе
				//	Сумма 		= ВыборкаСтрокТовары.Сумма;
				//	СуммаИтого 	= ВыборкаСтрокТовары.Сумма; //с ндс
				//	СуммаБезНДС = ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
				//КонецЕсли;
				///
				//ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
				//ТабДокумент.Присоединить(ОбластьСуммыНДС);
			//Иначе
			//	СуммаБезНДС = 0;
			//	СуммаНДС = 0;
			//	Сумма = ВыборкаСтрокТовары.Сумма;
			//	СуммаИтого = ВыборкаСтрокТовары.Сумма; 
			//КонецЕсли;
			////////
			//ОбластьСуммы.Параметры.Сумма = Сумма;
			//ТабДокумент.Присоединить(ОбластьСуммы);				
		КонецЦикла;
		
		КоличествоИтог = Товары.Итог("Количество");
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьСНБ      = Макет.ПолучитьОбласть("Итого|СНБ");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		Если ВыводитьСНБ Тогда
			ТабДокумент.Присоединить(ОбластьСНБ);
		КонецЕсли;

		ОбластьДанных.Параметры.КоличествоИтог = КоличествоИтог; 
		//ОбластьДанных.Параметры.БезНДС = ?(Выборка.ЦенаВключаетНДС, "", "без НДС");
		ТабДокумент.Присоединить(ОбластьДанных);
	
		
		ОбластьВсего   = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.КоличествоТовара = Товары.Количество();
		ТабДокумент.Вывести(ОбластьВсего);
		//ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		//ТабДокумент.Присоединить(ОбластьСуммы);
		
		//ОбластьИнициатор = Макет.ПолучитьОбласть("Инициатор");
		//ТабДокумент.вывести(ОбластьИнициатор);

		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРазделитель");
 		ТабДокумент.Вывести(областьМакета);

		Если ЗначениеЗаполнено(Выборка.Инициатор) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Инициатор");
			ОбластьМакета.Параметры.Инициатор = Выборка.Инициатор;
 			ТабДокумент.Вывести(областьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		//ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОбластьМакета.Параметры.ДатаОтгрузки = Выборка.Дата;
		//ОбластьМакета.Параметры.Менеджер = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Ссылка.Ответственный.ФизЛицо);
		ОбластьМакета.Параметры.Менеджер = Выборка.Ссылка.Склад.Отдел.Руководитель;

		//ПечатьНаСервере.ДобитьНемецкимиСтрокамиЧтобыКолонтитулОказалсяВнизу(ТабДокумент, ОБластьПустаяСтрока, , ОбластьМакета);		
		 ТабДокумент.Вывести(областьМакета);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура Печать_АктПриемПередачаТМЦФосАгро(ТабДокумент, Ссылка) Экспорт
		
	
	Макет = Документы.ПередачаТовара.ПолучитьМакет("АктПриемПередачаТМЦФосАгро");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Организация КАК Организация,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК Дата,
	|	Док.Ссылка КАК Ссылка,
	|	Док.Валюта КАК Валюта,
	|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	Док.МВЗ КАК МВЗ,
	|	Док.ОтветственноеЛицо КАК Инициатор,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ КАК Покупатель,
	|	Док.Заказ,
	|	Док.Заказ.Номер КАК НомерЗаказа,
	|	Док.Заказ.Дата КАК ДатаЗаказа,
	|	Док.Товары.(
	|		ВЫБОР
	|			КОГДА Док.Товары.НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА Док.Товары.Номенклатура
	|			ИНАЧЕ Док.Товары.НоменклатураУчет
	|		КОНЕЦ КАК Номенклатура,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА Док.Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Товары.Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Товары.Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	),
	|	Док.Контрагент
	|ИЗ
	|	Документ.ПередачаТовара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной.
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	Если Выборка.Контрагент = Справочники.Контрагенты.НайтиПоКоду("000033770") Тогда
		ОбластьМакета.Параметры.НомерДоговора = "ГИ-35/16 от 22 апреля 2016г.";	
		ИначеЕсли   Выборка.Контрагент = Справочники.Контрагенты.НайтиПоКоду("000039975") Тогда
		ОбластьМакета.Параметры.НомерДоговора = "930-92 от 18 апреля 2016г.";	
	КонецЕсли;
	
	    Если ЗначениеЗаполнено(Выборка.Заказ) Тогда
			ОбластьМакета.Параметры.НомерЗаказа = Выборка.НомерЗаказа +" от "+ Формат(Выборка.ДатаЗаказа,"ДЛФ=ДД");
			//ОбластьМакета.Параметры.ДатаЗаказа 	= Выборка.ДатаЗаказа;
		КонецЕсли;
	
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата", Выборка.Номер, Выборка.Дата), "Акт приема - передачи ТМЦ");//+ ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер)+" от "+Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПоставщикПокупатель");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата),"ПолноеНаименование");// "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		ОбластьМакета.Параметры.Инициатор = Выборка.Инициатор;

		ОбластьМакета.Параметры.Дата = Формат(Выборка.Дата,"ДЛФ=ДД");
		
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование");//"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		КонецЕсли;
		
		ОбластьМакета.Параметры.МВЗ = Выборка.МВЗ;
		ТабДокумент.Вывести(ОбластьМакета);
		
				

		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыводитьКоды = Истина;
		Колонка = "Артикул";


		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
				
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма   = 0;
		Номер 	= 0;
		//ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Товары = Выборка.Товары.Выгрузить();
		Товары.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения", "Количество, Сумма, СуммаНДС");
		//Пока ВыборкаСтрокТовары.Следующий() Цикл 
		Для Каждого ВыборкаСтрокТовары ИЗ Товары Цикл Номер = Номер + 1;
			
			//ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьНомера.Параметры.НомерСтроки = Номер;
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Номенклатура.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			ОбластьСуммы.Параметры.Сумма = ВыборкаСтрокТовары.Сумма;
			ТабДокумент.Присоединить(ОбластьСуммы);
			Сумма = Сумма + ВыборкаСтрокТовары.Сумма;
				///
								
		КонецЦикла;
		
		КоличествоИтог = Товары.Итог("Количество");
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСуммы	= Макет.ПолучитьОбласть("Итого|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.КоличествоИтог = КоличествоИтог; 
		ОбластьДанных.Параметры.БезНДС = ?(Выборка.ЦенаВключаетНДС, "", "без НДС");
		ТабДокумент.Присоединить(ОбластьДанных);
		///////////
					СуммаНДС = Товары.Итог("СуммаНДС");	
					ОбластьСуммы.Параметры.Сумма = Сумма;
			ТабДокумент.Присоединить(ОбластьСуммы);
			СуммаДокумента = Сумма + ?(Выборка.ЦенаВключаетНДС, 0, СуммаНДС);
			
		
		ОбластьВсего   = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.КоличествоТовара = Товары.Количество();
		ОбластьВсего.Параметры.СуммаНДС = СуммаНДС;
		ОбластьВсего.Параметры.СуммаИтого = СуммаДокумента;
		ОбластьВсего.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьВсего);
		

		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРазделитель");
 		ТабДокумент.Вывести(областьМакета);

				
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		//ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		//ОбластьМакета.Параметры.ДатаОтгрузки = Выборка.Дата;
		//ОбластьМакета.Параметры.Менеджер = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Ссылка.Ответственный.ФизЛицо);
		ОбластьМакета.Параметры.Менеджер = Выборка.Ссылка.Склад.Отдел.Руководитель;

		//ПечатьНаСервере.ДобитьНемецкимиСтрокамиЧтобыКолонтитулОказалсяВнизу(ТабДокумент, ОБластьПустаяСтрока, , ОбластьМакета);		
		 ТабДокумент.Вывести(областьМакета);
			
	КонецЦикла;
	
КонецПроцедуры

// Процедура формирует печатную форму М-11
//
Процедура Печать_М11(ТабДокумент, Ссылка)  Экспорт

	//ТабДокумент = Новый ТабличныйДокумент;
	//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	//ТабДокумент.ИмяПараметровПечати = "ПараметрыПечати_ТребованиеНакладная_М11";

	Макет = Документы.ПередачаТовара.ПолучитьМакет("M11"); 
	
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|   Док.Организация               КАК Организация,
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	|	Док.Валюта						Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	Док.МВЗ							МВЗ,
	|	Док.ОтветственноеЛицо			Инициатор,
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Контрагент
	|	ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ	Покупатель,
	|	Заказ,
	|	Заказ.Номер НомерЗаказа,
	|	Заказ.Дата  ДатаЗаказа,
	|	Док.Товары.(
	//|		НомерСтроки                       КАК НомерСтроки,
	|		ВЫБОР КОГДА НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Номенклатура ИНАЧЕ НоменклатураУчет КОНЕЦ КАК Номенклатура,
	|		ВЫБОР КОГДА НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Номенклатура.Артикул ИНАЧЕ НоменклатураУчет.Артикул КОНЕЦ КАК Артикул,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ПередачаТовара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;

		
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заголовок                = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата", Выборка.Номер, Выборка.Дата), "ТРЕБОВАНИЕ-НАКЛАДНАЯ ");//"ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(Номер);
	ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата),"ПолноеНаименование");
	Область.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	Область.Параметры.ДатаСоставления          = Формат(Выборка.Дата, "ДФ=dd.MM.yy");
	ТабДокумент.Вывести(Область);
	                                         
	Область = Макет.ПолучитьОбласть("Строка");
	
	Товары = Выборка.Товары.Выгрузить();
	Товары.Свернуть("Номенклатура,Артикул,Цена, ЕдиницаИзмерения", "Количество, Сумма, СуммаНДС");

	Для Каждого ВыборкаСтрокТовары Из Товары Цикл
		        Если ЕстьНДС Тогда 
				СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;			
				Если Не Выборка.ЦенаВключаетНДС Тогда
					Сумма 		= ВыборкаСтрокТовары.Сумма;
					//СуммаИтого 	= ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма;
				Иначе
					Сумма 		= ВыборкаСтрокТовары.Сумма;
					//СуммаИтого 	= ВыборкаСтрокТовары.Сумма; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
				КонецЕсли;
				КонецЕсли;


		Область.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Вывести(Область);

	КонецЦикла;

	Область = Макет.ПолучитьОбласть("Подвал");

	ТабДокумент.Вывести(Область);

	КонецЦикла;

КонецПроцедуры // ПечатьМ11()


Функция ПолучитьДанныеДляТТН(МассивСсылок) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Артикул";
	КонецЕсли;
	
	Ссылка = МассивСсылок[0];
	
	Запрос = Новый Запрос();
	Запрос.Текст = " 
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка			КАК Ссылка,
	|	Док.Номер 			КАК Номер,
	|	Док.Дата 			КАК Дата,
	|	Док.Организация 	КАК Организация,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ 				КАК Грузополучатель,
	|	Док.Организация 	КАК Грузоотправитель,
	|	Док.Контрагент 		КАК Контрагент,
	|	"""" 				КАК Кладовщик,
	|	"""" 				КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	Док.БанковскийСчетОрганизации 	КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера	 	КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетОрганизации 	КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетПартнера 		КАК БанковскийСчетГрузополучателя,
	|	"""" 						КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) 		КАК ДоверенностьДата,
	|	"""" 						КАК ДоверенностьВыдана,
	|	"""" 						КАК ДоверенностьЛицо,
	|	Док.СуммаВключаетНДС 		КАК ЦенаВключаетНДС,
	|
	|	Док.Валюта                  КАК Валюта,				                                                 
	|
	|	ЕСТЬNULL(НаименованияТоваров.Количество,0) КАК КоличествоНаименований
	|ИЗ                                                            
	|	Документ.ПередачаТовара КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	//|		ПО РеализацияТоваров.Склад = СкладыКонтактнаяОтправитель.Ссылка
	//|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество
	//|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Передача.Ссылка КАК Ссылка,
	|				Передача.Номенклатура КАК Номенклатура
	|			ИЗ
	|				Документ.ПередачаТовара.Товары КАК Передача
	|			ГДЕ
	|				Передача.Ссылка В (&МассивСсылок)
	|				И Передача.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК СписокТоваров
	|		
	//|		СГРУППИРОВАТЬ ПО СписокТоваров.Ссылка
	|			) КАК НаименованияТоваров
	//|		ПО Док.Ссылка = НаименованияТоваров.Ссылка
	|		ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА Товары.НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Товары.Номенклатура ИНАЧЕ Товары.НоменклатураУчет КОНЕЦ КАК Номенклатура,
	|	ВЫБОР КОГДА Товары.НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Товары.Номенклатура."+КолонкаКодов+" ИНАЧЕ Товары.НоменклатураУчет."+КолонкаКодов+" КОНЕЦ КАК ТоварКод,
	|	ВЫБОР КОГДА Товары.НоменклатураУчет = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА Товары.Номенклатура.НаименованиеПолное ИНАЧЕ Товары.НоменклатураУчет.НаименованиеПолное КОНЕЦ КАК ТоварНаименование,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
 	|	Товары.Цена			КАК Цена,
	|	0 КАК МассаБрутто,
	|	Товары.Количество * Товары.Номенклатура.Вес КАК МассаНетто,
	|	0 КАК КоличествоМест,
	|	Товары.Сумма 		КАК Сумма,
	|	Товары.СуммаНДС 	КАК СуммаНДС,
	|	Товары.НомерСтроки  КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ПередачаТовара.Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Товары.Ссылка В (&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
		
	//ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов);
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


Функция ПолучитьДанныеДляТранспортнаяНакладная(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Передача.Ссылка КАК Ссылка,
	|	Передача.Номер КАК Номер,
	|	Передача.Дата КАК Дата,
	|	Передача.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Передача.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Передача.Контрагент
	|		ИНАЧЕ Передача.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	Передача.Организация КАК Грузоотправитель,
	|	Передача.Контрагент КАК Контрагент,
	|	Передача.Контрагент КАК ЗаказчикПеревозок,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ПередачаТовара КАК Передача
	|ГДЕ
	|	Передача.Ссылка = &МассивДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", Ссылка);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаРезульта
КонецФункции
