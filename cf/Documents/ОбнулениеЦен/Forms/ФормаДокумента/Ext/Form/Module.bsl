&НаКлиенте
Перем СтруктураКолонокТовары Экспорт;



#Область Преопределенные_действия

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьТипыЦен();
	
	// информация о товаре
	
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Функция ПолучитьСоответствияИменКолонок()//настя
	
	Возврат Новый Соответствие;
	
КонецФункции
&НаСервере
Функция ПолучитьСоответствияТиповЦен()//настя
	
	Возврат Новый Соответствие;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗапомнитьТипыЦен(ТекущийОбъект.ТипыЦен);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ДополнительныеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);

КонецПроцедуры

#Область Подбор

&НаСервере
Функция ПоместитьТоварыВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(
					Объект.Товары.Выгрузить(), 
					УникальныйИдентификатор);
КонецФункции
&НаКлиенте
Процедура ПодборВыполнить()
	
	ИмяТабличнойЧасти = "Товары";
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	ПараметрыПодбора = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
	
	ПараметрыПодбора.Вставить("СтруктураКолонокТовары", СтруктураКолонокТовары);
	//ПараметрыПодбора.Вставить("ВидЗапроса", 			"СписокНоменклатуры");
	//ПараметрыПодбора.Вставить("ВидыЗапросов", 		"СписокНоменклатуры");
	//ПараметрыПодбора.Вставить("Склад", 					Объект.Склад);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыПодбора, Элементы.Товары);
	
КонецПроцедуры
&НаСервере
Процедура ПолучитьТоварыИзХранилища(АдресТоваровВХранилище)
	
	Объект.Товары.Загрузить(ПолучитьИзВременногоХранилища(АдресТоваровВХранилище));
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение <> Неопределено Тогда		
		
		ПолучитьТоварыИзХранилища(ВыбранноеЗначение);		// получаем
		УдалитьИзВременногоХранилища(ВыбранноеЗначение); 	// заметаем следы
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Информация // о товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Товары", "Объект.Товары");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

#КонецОбласти

#Область Корзина

#Если Не ВебКлиент Тогда
&НаСервере
Процедура ДобавитьИзКорзиныНаСервере(ИмяКомпа, СтруктураКолонокТовары, КолСтрок)
	
	МодульКорзины.ПолучитьТоварИзКорзины(Элементы.Товары, Объект.Товары, СтруктураКолонокТовары, ИмяКомпа, КолСтрок);
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ВставитьИзКорзины(Команда)
	
	КолСтрок = 0;
	ДобавитьИзКорзиныНаСервере(ИмяКомпьютера(), СтруктураКолонокТовары, КолСтрок);
	
	Если КолСтрок Тогда
		
		МодульКорзины.ОповеститьОВставкеТовараВДокумент(КолСтрок, Объект.Товары.Количество());
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
		
	КонецЕсли;
	

КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаСервере
Функция ПоложитьВКорзинуНаСервере(ВыделенныеИндексы, ИмяКомпа, КолВКорзине)
	
	Возврат МодульКорзины.ПоложитьТоварВКорзину(Объект.Товары, ВыделенныеИндексы, ИмяКомпа, КолВКорзине);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
	
	ВыделенныеИндексы 	= МодульКорзины.ПолучитьВыделенныеСтрокиТоваров(Элементы.Товары, Объект.Товары);
	КолВКорзине 		= 0;
	КолТовара			= ВыделенныеИндексы.Количество();
	
	
	Если КолТовара Тогда
		
		Если ПоложитьВКорзинуНаСервере(ВыделенныеИндексы, ИмяКомпьютера(), КолВКорзине) Тогда
			МодульКорзины.ОповеститьОПомещенииТовара(КолТовара, КолВКорзине);
		КонецЕсли;
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
				
	КонецЕсли;

КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура РедактироватьТоварВКорзине(Команда)
	
	ОткрытьФорму("РегистрСведений.Корзина.Форма.Форма");
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаСервере
Функция ОчиститьНаСервере(ИмяКомпа)
	
	Возврат МодульКорзины.ОчиститьКорзину(ИмяКомпа);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Если ОчиститьНаСервере(ИмяКомпьютера()) Тогда
		
		МодульКорзины.ОповеститьЧтоКорзинаОчищена();
		
	КонецЕсли;

КонецПроцедуры
#КонецЕсли

#КонецОбласти

#Область ТипыЦен

&НаСервере
Процедура ЗапомнитьТипыЦен(текТипыЦен)
	
	текТипыЦен.Очистить();
	Для Каждого Элемент Из ТипыЦен Цикл текТипыЦен.Добавить().ТипЦен = Элемент.Значение КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ПрочитатьТипыЦен()
	
	ТипыЦен.Очистить();
	ТипыЦен.ЗагрузитьЗначения(Объект.ТипыЦен.Выгрузить().ВыгрузитьКолонку("ТипЦен"));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокТиповЦен()
	
	Список = Новый СписокЗначений;
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.ТипыЦен ГДЕ НЕ ПометкаУдаления УПОРЯДОЧИТЬ ПО Наименование");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл Список.Добавить(Выборка.Ссылка,,ТипыЦен.НайтиПоЗначению(Выборка.Ссылка) <> Неопределено) КонецЦикла;
	
	Возврат Список;
	
КонецФункции
&НаКлиенте
Процедура ТипыЦенНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПолучитьСписокТиповЦен().ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ВыборТиповЦен", ЭтаФорма), "Типы цен");
	
КонецПроцедуры
&НаКлиенте
Процедура ВыборТиповЦен(Список, Параметры) Экспорт
	
	Если Список <> Неопределено Тогда
		
		Модифицированность = Истина;
		ТипыЦен.Очистить();
	
		Для Каждого Элемент Из Список Цикл Если Элемент.Пометка Тогда ТипыЦен.Добавить(Элемент.Значение) КонецЕсли; КонецЦикла; КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВводДатыОбнуления(Дата, Параметры) Экспорт
	
	Если Дата <> Неопределено Тогда
		Для КАждого Строка Из Объект.Товары Цикл Строка.ДатаОбнуления = Дата КонецЦикла; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьДатуОбнуления(Команда)
	
	ПоказатьВводДаты(Новый ОписаниеОповещения("ВводДатыОбнуления", ЭтаФорма),,"Дата обнуления", ЧастиДаты.Дата);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьExcel(Команда)
	ОткрытьФорму("Документ.ОбнулениеЦен.Форма.ЗагрузкаExcel",,ЭтаФорма);
КонецПроцедуры

