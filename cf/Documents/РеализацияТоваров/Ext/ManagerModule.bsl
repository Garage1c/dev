
Процедура ИницилизироватьДополнительныеДанныеДокумента_silber_вернись(Ссылка, ДополнительныеСвойства) Экспорт
	
	Перем ОперативныйЗаказ;
	
	// Проверим оператиынй заказ который не вычислить так как записи нет в базе
	
	Если Не ДополнительныеСвойства.Свойство("ОперативныйЗаказ", ОперативныйЗаказ) Тогда
		ОперативныйЗаказ = Ссылка.Заказ; КонецЕсли;
	
	ТекстЗапроса = "
	|//>>> ПараметрыСистемы " + КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + ";
	
	|//>>> Шапка
	
	|ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|	Документ.РеализацияТоваров
	|ГДЕ
	|	Ссылка = &Ссылка;
	
	|ВЫБРАТЬ 	Заказ
	|ПОМЕСТИТЬ	СписокЗаказов
	|ИЗ 		БизнесПроцесс.СборкаЗаказа 
	|ГДЕ 		РеализацияТоваров = &Ссылка;
	
	
	|//>>> ТоварыНаСкладах
    
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ссылка.Склад		КАК Склад,
	|	Номенклатура,
	|	Цена,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка,
	|	Цена;
	
	|//>>> ТоварыВРезерве
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Заказ				КАК ДокументРезерва,
	|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
	|	Номенклатура		КАК Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество * Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество
    |ИЗ
	|	Документ.РеализацияТоваров.Товары	Реализация
	|ГДЕ
	|	Ссылка = &Ссылка И Заказ <> Неопределено И
	|	ЕСТЬNULL(ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ, &ПустойСклад) <> &ПустойСклад И
	|	Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Заказ,
	|	Размещение,
	|	Номенклатура,
	|	Упаковка;
	
	|//>>> Взаиморасчеты
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Контрагент	КАК Контрагент,
	|	Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,	
	|	Сумма		КАК Сумма,
	|   Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК СуммаУпр
	|ИЗ
	|	Документ.РеализацияТоваров Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
	|	ПО 
	|		Док.Ссылка.Валюта = ВалЦен.Валюта
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
	|	ПО 
	|		ИСТИНА
	|
	|ГДЕ
	|	Ссылка = &Ссылка;
	
	|//>>> ЗаказыПокупателей
	
	|ВЫБРАТЬ
	|	&Период						Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Реализация.Номенклатура     Номенклатура,
	|	Реализация.Цена		    	Цена,
	|	Реализация.Акция		    Акция,
	|	Реализация.Упаковка         Упаковка,
	|	Реализация.Количество 		Количество,
	|	Реализация.Сумма 			Сумма,
	|	Реализация.Заказ			ЗаказПокупателя,
	|	ПроцентРучнойСкидки,
	|	ПроцентАвтоматическойСкидки,
	|	СтавкаНДС,
	|	Выбор Когда Заказ.СпособРазмещенияБезЗаказа Тогда НЕОПРЕДЕЛЕНО Иначе Размещение Конец Размещение
	|ИЗ	
	|	Документ.РеализацияТоваров.Товары Реализация
	|
	|ГДЕ
	|	Реализация.Ссылка = &Ссылка И
	|	Реализация.Заказ ССЫЛКА Документ.ЗаказПокупателя;
	
	|//>>> ИнтернетЗаказПокупателя
	
	|ВЫБРАТЬ
	|	&Период						Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Реализация.Номенклатура     Номенклатура,
	|	Реализация.Цена		    	Цена,
	|	Реализация.Акция		    Акция,
	|	Реализация.Упаковка         Упаковка,
	|	Реализация.Количество 		Количество,
	|	Реализация.Сумма 			Сумма,
	|	Реализация.СтавкаНДС        СтавкаНДС,
	|	Реализация.Заказ			ИнтернетЗаказ,
	|	Выбор Когда Заказ.СпособРазмещенияБезЗаказа Тогда НЕОПРЕДЕЛЕНО Иначе Размещение Конец Размещение,
	|	Реализация.ПроцентРучнойСкидки,
	|	Реализация.ПроцентАвтоматическойСкидки
	|ИЗ	
	|	Документ.РеализацияТоваров.Товары Реализация
	|	
	|ГДЕ
	|	Реализация.Ссылка = &Ссылка И
	|	Реализация.Заказ ССЫЛКА Документ.ИнтернетЗаказПокупателя;
	
	|//>>> Продажи
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	Ссылка.Склад		КАК Склад,
	|	Ссылка.Подразделение	Подразделение,
	|	Ссылка.Смена			Смена,
	|	&Менеджер	 			Менеджер,
	|	Ссылка					ДокументПродажи,
	|	Заказ					Заказ,
	|	Номенклатура,
	|	Упаковка,
	|	Акция,
	|	СУММА(Количество) 	Количество,
	|	СУММА(СуммаПартии) 	Себестоимость,
	|	ВЫБОР 
	|		КОГДА Ссылка.СуммаВключаетНДС 
	|		ТОГДА СУММА(Сумма)		
	|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС)  КОНЕЦ	Сумма
	|ИЗ
	|	Документ.РеализацияТоваров.Товары Док
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Заказ,
	|	Номенклатура,	
	|	Упаковка,
	|	Акция;  
	
	|//>>> СборкаЗаказа
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	СкладЯчейка			КАК СкладЯчейка,
	|	Сборщик,
	|	Заказ,
	|	Номенклатура,
	|	Упаковка,
	|	СобраноОстаток	КАК Количество
	|ИЗ
	|	РегистрНакопления.СборкаЗаказа.Остатки(&Дата1, Заказ  = &Заказ);
	
	|//>>> СборкаЗаказа
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	СкладЯчейкаСборки	КАК СкладЯчейка,
	|	Сборщик,
	|	Ссылка.Заказ		Заказ,
	|	Номенклатура,
	|	Упаковка,
	|	СУММА(Количество) КАК Собрано
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И СкладЯчейкаСборки <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	СкладЯчейкаСборки,
	|	Сборщик,
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка;
	
	|//>>> ТоварыВЯчейках
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияРасход	КАК ВидДвижения,
	|	Ячейка,
	|	Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество * Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Ячейка <> &ПустаяЯчейка И
	|	Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ячейка,
	|	Номенклатура,
	|	Упаковка;
	
	|//>>> ПродажиПоДисконтнымКартам
	
	|ВЫБРАТЬ
	|	&Период									 Период,
	|	Ссылка.ДисконтнаяКарта 					 ИнформационнаяКарта,
	|	Ссылка.ДисконтнаяКарта.ВладелецКарты  	 ВладелецКарты,
	|	ВЫБОР 
	|		КОГДА Ссылка.СуммаВключаетНДС 
	|		ТОГДА СУММА(Сумма)		
	|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС) КОНЕЦ Сумма
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.ДисконтнаяКарта <> &ПустаяДисконтнаяКарта
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка;
	
	|//>>> ДолгиПоОтгрузкам
	
	|ВЫБРАТЬ                                
	|	&Период 			Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	&Организация		Организация,
	|	&Контрагент			Контрагент,
	|	&Заказ				Заказ,
	|	&Ссылка				ДокументОтгрузки,
	|	Сумма				Сумма
	|ИЗ
	|	Документ.РеализацияТоваров
	|ГДЕ
	|   Ссылка = &Ссылка;
	
	|//>>> СборщикЗаказа
	
	|ВЫБРАТЬ
	|	&Период						КАК Период,
	|	Сборщик						КАК Сборщик,
	|	Ссылка.Заказ				КАК Заказ,
	|	Номенклатура				КАК Номенклатура,
	|	Упаковка					КАК Упаковка,
	|	Ссылка.Склад				КАК Склад,
	|   Ячейка						КАК Ячейка,		
	|	КОЛИЧЕСТВО(Номенклатура)	КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Ссылка.ЭтоБыстраяПродажа
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Сборщик,
	|	Номенклатура,
	|	Упаковка,
	|	Ячейка;
	
	|//>>> ДвижениеТовара
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
	|	Заказ				КАК Заказ,
	|	Номенклатура,
	|	Упаковка, 
	|	-СУММА(Количество) Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Заказ,
	|	Номенклатура,
	|	Размещение,	
	|	Упаковка;
	
	|//>>> ОтгруженныеЗаказы
	
	|ВЫБРАТЬ
	|	&Период	Период,
	|	Ссылка.Заказ Заказ,
	|	Ссылка	ДокументОтгрузки,
	|	СУММА(Номенклатура.Вес * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ВесПодготовлено,
	|	СУММА(Номенклатура.Объем * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ОбъемПодготовлено
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|ГДЕ
	|	Ссылка = &Ссылка И НЕ Ссылка.Заказ.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка;
	
	|//>>> РозничныеПродажи
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	Ссылка.Смена  		Смена,
	|	ВЫБОР 	КОГДА ДокументОплаты ССЫЛКА Документ.ПриходныйКассовыйОрдер ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипОплаты.Наличные) 
	|			КОГДА ДокументОплаты ССЫЛКА Документ.ОплатаБанковскойКартой ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипОплаты.БанковскаяКарта)
	|			ИНАЧЕ Неопределено
	|	КОНЕЦ ТипОплаты,
	|	Сумма
	|	ПОМЕСТИТЬ ОплатаЗаказа
	|ИЗ
	|	Документ.РеализацияТоваров.ПлатежныеДокументы
	|
	|ГДЕ
	|	Ссылка = &Ссылка И ВЫРАЗИТЬ(Ссылка.Заказ КАК Документ.ЗаказПокупателя).РозничнаяЗаявка;
	
	|ВЫБРАТЬ Период, Смена, ТипОплаты, СУММА(Сумма) ИЗ ОплатаЗаказа СГРУППИРОВАТЬ ПО Период, Смена, ТипОплаты;
	
	|//>>> ПродажиВРозницу
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	Ссылка 					Чек, 
	|	Ссылка.Склад,
	|	Ссылка.Подразделение 	Подразделение,
	|	Ссылка.Заказ.Продавец 	Продавец,
	|	Номенклатура,
	|	Упаковка,
	|	Акция,
	|	СУММА(Количество)  		Количество,
	|	ВЫБОР 
	|		КОГДА Ссылка.СуммаВключаетНДС 
	|		ТОГДА СУММА(Сумма)		
	|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС) КОНЕЦ Сумма
	|ИЗ
	|	Документ.РеализацияТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И ВЫРАЗИТЬ(Ссылка.Заказ КАК Документ.ЗаказПокупателя).РозничнаяЗаявка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,	
	|	Номенклатура,
	|	Упаковка,
	|	Акция;";	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ПустойЗаказ", 		Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата1", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("Заказ", 				ОперативныйЗаказ);
	Запрос.УстановитьПараметр("Услуга", 			Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("ПустаяЯчейка", 		Справочники.Ячейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДисконтнаяКарта", 	Справочники.ИнформационныеКарты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Сумма", 				Ссылка.Сумма);
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Дата", 				Ссылка.Дата);
	
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Отгрузка);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Клиент);
	
	ПроведенияДокументов.УстановитьДопПараметрыДляПроведения(Запрос, ТекстЗапроса, ДополнительныеСвойства);
				
КонецПроцедуры
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Перем ОперативныйЗаказ;
	
	
	Если НЕ ПроведенияДокументов.РазрешеноПерепроводитьДокумент(Ссылка) Тогда
		Возврат;
	КонецЕсли;	
	
	
	// Проверим оператиынй заказ который не вычислить так как записи нет в базе
	
	Если ДополнительныеСвойства.Свойство("ОперативныйЗаказ", ОперативныйЗаказ) Тогда
		
		ТекстФильтраЗаказа = " = &Заказ";
		
	Иначе
		// ТекстФильтраЗаказа = "В(ВЫБРАТЬ Заказ ИЗ СписокЗаказов)";
		ТекстФильтраЗаказа = " = &Заказ"; 	// исправление коснулись кода при проведении реализации не подхватывались заказы
											// так как список получения заказов не верен
		ОперативныйЗаказ = Ссылка.Заказ;
		
	КонецЕсли;
	

	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	

	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() +Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	"ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|	Документ.РеализацияТоваров
	|ГДЕ
	|	Ссылка = &Ссылка"; 
	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	"ВЫБРАТЬ 	Заказ
	|ПОМЕСТИТЬ	СписокЗаказов
	|ИЗ 		БизнесПроцесс.СборкаЗаказа 
	|ГДЕ 		РеализацияТоваров = &Ссылка";
	
	
	
	Нтаб=Новый Структура;
	ТекНомер=2;	
		
	Если ИменаРегистров.Найти("ТоварыНаСкладах")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыНаСкладах",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+

		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|	Выбор 
		|	Когда Ссылка.Заказ Ссылка Документ.ЗаказНаряд 
		|		Тогда ссылка.Склад
		|	Когда Ссылка.Заказ.СпособРазмещенияБезЗаказа 
		|		Тогда Ссылка.Склад 
		|	Иначе Размещение Конец		КАК Склад,
		|	Номенклатура,
		|	Цена,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		Количество
		|	ИНАЧЕ
		|		Количество*Упаковка.Коэффициент
		|	КОНЕЦ				КАК Количество,
	    |	Сумма		КАК Сумма
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	Номенклатура.ТипНоменклатуры <> &Услуга
		|
		|	"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ТоварыВРезерве")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВРезерве",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|	Заказ				КАК ДокументРезерва,
		|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
		|	Номенклатура		КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество * Упаковка.Коэффициент)
		|	КОНЕЦ				КАК Количество
	    |ИЗ
		|	Документ.РеализацияТоваров.Товары	Реализация
		|ГДЕ
		|	Ссылка = &Ссылка И Заказ <> Неопределено И
		|	ЕСТЬNULL(ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ, &ПустойСклад) <> &ПустойСклад И
		|	Номенклатура.ТипНоменклатуры <> &Услуга
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Заказ,
		|	Размещение,
		|	Номенклатура,
		|	Упаковка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("Взаиморасчеты")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Взаиморасчеты",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход	КАК ВидДвижения,
		|	Контрагент	КАК Контрагент,
		|	Организация	КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,	
		|	Сумма		КАК Сумма,
		|   Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК СуммаУпр
		|ИЗ
		|	Документ.РеализацияТоваров Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
		|	ПО 
		|		Док.Ссылка.Валюта = ВалЦен.Валюта
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
		|	ПО 
		|		ИСТИНА
		|
		|ГДЕ
		|	Ссылка = &Ссылка"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ЗаказыПокупателей")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ЗаказыПокупателей",ТекНомер);
		
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период						Период,
		|	&ВидДвиженияРасход			ВидДвижения,
		|	Реализация.Номенклатура     Номенклатура,
		|	Реализация.Цена		    	Цена,
		|	Реализация.Акция		    Акция,
		|	Реализация.Упаковка         Упаковка,
		|	Реализация.Количество 		Количество,
		|	Реализация.Сумма 			Сумма,
		|	Реализация.Заказ			ЗаказПокупателя,
		|	ПроцентРучнойСкидки,
		|	ПроцентАвтоматическойСкидки,
		|	СтавкаНДС,
		|	Выбор Когда Заказ.СпособРазмещенияБезЗаказа Тогда НЕОПРЕДЕЛЕНО Иначе Размещение Конец Размещение
		|ИЗ	
		|	Документ.РеализацияТоваров.Товары Реализация
		|
		|ГДЕ
		|	Реализация.Ссылка = &Ссылка И
		|	Реализация.Заказ ССЫЛКА Документ.ЗаказПокупателя"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ИнтернетЗаказПокупателя")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ИнтернетЗаказПокупателя",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период						Период,
		|	&ВидДвиженияРасход			ВидДвижения,
		|	Реализация.Номенклатура     Номенклатура,
		|	Реализация.Цена		    	Цена,
		|	Реализация.Акция		    Акция,
		|	Реализация.Упаковка         Упаковка,
		|	Реализация.Количество 		Количество,
		|	Реализация.Сумма 			Сумма,
		|	Реализация.СтавкаНДС        СтавкаНДС,
		|	Реализация.Заказ			ИнтернетЗаказ,
		|	Выбор Когда Заказ.СпособРазмещенияБезЗаказа Тогда НЕОПРЕДЕЛЕНО Иначе Размещение Конец Размещение,
		|	Реализация.ПроцентРучнойСкидки,
		|	Реализация.ПроцентАвтоматическойСкидки
		|ИЗ	
		|	Документ.РеализацияТоваров.Товары Реализация
		|	
		|ГДЕ
		|	Реализация.Ссылка = &Ссылка И
		|	Реализация.Заказ ССЫЛКА Документ.ИнтернетЗаказПокупателя"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("Продажи")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Продажи",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	Ссылка.Склад		КАК Склад,
		|	Ссылка.Подразделение	Подразделение,
		|	Ссылка.Смена			Смена,
		|	&Менеджер	 			Менеджер,
		|	Ссылка					ДокументПродажи,
		|	Ссылка.Контрагент		Контрагент,
		|	Заказ					Заказ,
		|	Номенклатура,
		|	Упаковка,
		|	Акция,
		|	СУММА(Количество) 	Количество,
		|	СУММА(СуммаПартии) 	Себестоимость,
		|	ВЫБОР 
		|		КОГДА Ссылка.СуммаВключаетНДС 
		|		ТОГДА СУММА(Сумма)		
		|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС)  КОНЕЦ	Сумма
		|ИЗ
		|	Документ.РеализацияТоваров.Товары Док
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Заказ,
		|	Номенклатура,	
		|	Упаковка,
		|	Акция"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ТоварыСобранные")<>Неопределено ИЛИ ПоВсем Тогда
		
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыСобранные",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|	Ссылка.Склад		Склад,
		|	Ссылка.Заказ		Заказ,
		|	СборочныйЛист,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество) КАК Количество
		|ИЗ
		|	Документ.РеализацияТоваров.СобранныеТовары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Номенклатура,
		|	СборочныйЛист,
		|	Упаковка"
		
	КонецЕсли;
	
	//Если ИменаРегистров.Найти("СборкаЗаказа")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+2;
	//	Нтаб.Вставить("СборкаЗаказа",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	
	//	//получим остатки по регистру с учетом движений самого документа
	//	"ВЫБРАТЬ
	//	|	&Период				КАК Период,
	//	|	&ВидДвиженияРасход	КАК ВидДвижения,
	//	|	""Маркер запроса"",
	//	|	СкладЯчейка			КАК СкладЯчейка,
	//	|	Сборщик,
	//	|	Заказ,
	//	|	Номенклатура,
	//	|	Упаковка,
	//	|	СобраноОстаток  	КАК Количество
	//	|ИЗ
	//	|	РегистрНакопления.СборкаЗаказа.Остатки(, Заказ " + ТекстФильтраЗаказа + ") Ост
	//	|
	//	| объединить все
	//	| 
	//	|ВЫБРАТЬ
	//	|	&Период				КАК Период,
	//	|	&ВидДвиженияРасход	КАК ВидДвижения,
	//	|	""Маркер запроса"",
	//	|	СкладЯчейка			КАК СкладЯчейка,
	//	|	Сборщик,
	//	|	Заказ,
	//	|	Номенклатура,
	//	|	Упаковка,
	//	|	Собрано 	КАК Количество
	//	|ИЗ
	//	|	РегистрНакопления.СборкаЗаказа ГДЕ Регистратор=&Ссылка";
	//	
	//	
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	
	//	"ВЫБРАТЬ
	//	|	&Период				КАК Период,
	//	|	&ВидДвиженияРасход	КАК ВидДвижения,
	//	|	СкладЯчейкаСборки	КАК СкладЯчейка,
	//	|	Сборщик,
	//	|	Ссылка.Заказ		Заказ,
	//	|	Номенклатура,
	//	|	Упаковка,
	//	|	СУММА(Количество) КАК Собрано
	//	|ИЗ
	//	|	Документ.РеализацияТоваров.Товары
	//	|
	//	|ГДЕ
	//	|	Ссылка = &Ссылка И СкладЯчейкаСборки <> НЕОПРЕДЕЛЕНО
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	СкладЯчейкаСборки,
	//	|	Сборщик,
	//	|	Ссылка,
	//	|	Номенклатура,
	//	|	Упаковка"
	//	
	//КонецЕсли;	
	
	Если ИменаРегистров.Найти("ТоварыВЯчейках")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВЯчейках",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|	Ячейка,
		|	Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество * Упаковка.Коэффициент)
		|	КОНЕЦ				КАК Количество
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	Ячейка <> &ПустаяЯчейка И
		|	Номенклатура.ТипНоменклатуры <> &Услуга
		|
		|СГРУППИРОВАТЬ ПО
		|	Ячейка,
		|	Номенклатура,
		|	Упаковка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ПродажиПоДисконтнымКартам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ПродажиПоДисконтнымКартам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период									 Период,
		|	Ссылка.ДисконтнаяКарта 					 ИнформационнаяКарта,
		|	Ссылка.ДисконтнаяКарта.ВладелецКарты  	 ВладелецКарты,
		|	ВЫБОР 
		|		КОГДА Ссылка.СуммаВключаетНДС 
		|		ТОГДА СУММА(Сумма)		
		|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС) КОНЕЦ Сумма
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И Ссылка.ДисконтнаяКарта <> &ПустаяДисконтнаяКарта
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ДолгиПоОтгрузкам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДолгиПоОтгрузкам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ                                
		|	&Период 			Период,
		|	&ВидДвиженияПриход	ВидДвижения,
		|	&Организация		Организация,
		|	&Контрагент			Контрагент,
		|	&Заказ				Заказ,
		|	&Ссылка				ДокументОтгрузки,
		|	Сумма				Сумма
		|ИЗ
		|	Документ.РеализацияТоваров
		|ГДЕ
		|   Ссылка = &Ссылка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("СборщикЗаказа")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("СборщикЗаказа",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	Сборщик						КАК Сборщик,
		|	Ссылка.Заказ				КАК Заказ,
		|	Номенклатура				КАК Номенклатура,
		|	Упаковка					КАК Упаковка,
		|	Ссылка.Склад				КАК Склад,
		|   Ячейка						КАК Ячейка,		
		|	КОЛИЧЕСТВО(Номенклатура)	КАК Количество
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	Ссылка.ЭтоБыстраяПродажа
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Сборщик,
		|	Номенклатура,
		|	Упаковка,
		|	Ячейка"
	КонецЕсли;	
		
	Если ИменаРегистров.Найти("ДвижениеТовара")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДвижениеТовара",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	ВЫБОР КОГДА Ссылка.СниматьРезервИзШапки ТОГДА Ссылка.Склад ИНАЧЕ Размещение КОНЕЦ КАК Размещение,
		|	Заказ				КАК Заказ,
		|	Номенклатура,
		|	Упаковка, 
		|	-СУММА(Количество) Количество
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Заказ,
		|	Номенклатура,
		|	Размещение,	
		|	Упаковка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ОтгруженныеЗаказы")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ОтгруженныеЗаказы",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период	Период,
		|	Ссылка.Заказ Заказ,
		|	Ссылка	ДокументОтгрузки,
		|	СУММА(Номенклатура.Вес * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ВесПодготовлено,
		|	СУММА(Номенклатура.Объем * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ОбъемПодготовлено
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка И НЕ Ссылка.Заказ.Номер ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка"
	КонецЕсли;	
	
	//Если ИменаРегистров.Найти("ДолгиКонтрагентов")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("ДолгиКонтрагентов",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	"ВЫБРАТЬ 
	//	|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//	|	ЕСТЬNULL(СуммаУпрОстаток, 0) + Док.Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК Сумма
	//	|ИЗ
	//	|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//	|
	//	|ПРАВОЕ СОЕДИНЕНИЕ
	//	|	(ВЫБРАТЬ Дата, Организация, Контрагент, Ссылка, Сумма ИЗ Документ.РеализацияТоваров ГДЕ Ссылка = &Ссылка) Док
	//	|ПО ИСТИНА
	//	|
	//	|ЛЕВОЕ СОЕДИНЕНИЕ 
	//	|	РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
	//	|	ПО	Ссылка.Валюта = ВалЦен.Валюта
	//	|ЛЕВОЕ СОЕДИНЕНИЕ 
	//	|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
	//	|	ПО	ИСТИНА"
	//КонецЕсли;	
	
	Если ИменаРегистров.Найти("РозничныеПродажи")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+2;
		Нтаб.Вставить("РозничныеПродажи",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
			"ВЫБРАТЬ
			|	&Период				Период,
			|	Ссылка.Смена  		Смена,
			|	ВЫБОР 	КОГДА ДокументОплаты ССЫЛКА Документ.ПриходныйКассовыйОрдер ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипОплаты.Наличные) 
			|			КОГДА ДокументОплаты ССЫЛКА Документ.ОплатаБанковскойКартой ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипОплаты.БанковскаяКарта)
			|			ИНАЧЕ Неопределено
			|	КОНЕЦ ТипОплаты,
			|	Сумма
			|	ПОМЕСТИТЬ ОплатаЗаказа
			|ИЗ
			|	Документ.РеализацияТоваров.ПлатежныеДокументы
			|
			|ГДЕ
			|	Ссылка = &Ссылка И ВЫРАЗИТЬ(Ссылка.Заказ КАК Документ.ЗаказПокупателя).РозничнаяЗаявка";
			
			ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	
			"	ВЫБРАТЬ Период, Смена, ТипОплаты, СУММА(Сумма) ИЗ ОплатаЗаказа СГРУППИРОВАТЬ ПО Период, Смена, ТипОплаты"
			
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ПродажиВРозницу")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ПродажиВРозницу",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				Период,
		|	Ссылка 				Чек, 
		|	Ссылка.Склад,
		|	Ссылка.Подразделение 		Подразделение,
		|	Ссылка.Заказ.Продавец 		Продавец,
		|	Номенклатура,
		|	Упаковка,
		|	Акция,
		|	СУММА(Количество)  Количество,
		|	ВЫБОР 
		|		КОГДА Ссылка.СуммаВключаетНДС 
		|		ТОГДА СУММА(Сумма)		
		|		ИНАЧЕ СУММА(Сумма) + СУММА(СуммаНДС) КОНЕЦ Сумма
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И ВЫРАЗИТЬ(Ссылка.Заказ КАК Документ.ЗаказПокупателя).РозничнаяЗаявка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,	
		|	Номенклатура,
		|	Упаковка,
		|	Акция"
	КонецЕсли;	
	
	//Если ИменаРегистров.Найти("ПартииТоваров")<>Неопределено ИЛИ ПоВсем Тогда 
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("ПартииТоваров",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	"ВЫБРАТЬ неопределено ГДЕ Истина=Ложь"
	//КонецЕсли;	
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ПустойЗаказ", 		Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСборочныйЛист", Документы.СборочныйЛист.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата1", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("Заказ", 				ОперативныйЗаказ);
	Запрос.УстановитьПараметр("Услуга", 			Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("ПустаяЯчейка", 		Справочники.Ячейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДисконтнаяКарта", 	Справочники.ИнформационныеКарты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Сумма", 				Ссылка.Сумма);
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Дата", 				Ссылка.Дата);
	
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Отгрузка);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Клиент);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	//ТаблицаВзаиморасчеты = Пакет[5].Выгрузить();
	//Если ТипЗнч(Ссылка.Заказ) = Тип("ДокументСсылка.ЗаказНаряд") И НЕ Ссылка.Заказ.Пустая() Тогда
	//	ТаблицаВзаиморасчеты.Очистить();		
	//КонецЕсли;
	
	// Воткнем в структуру
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[2].Выгрузить()));
	
	
	
	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
	
	Если Ссылка.БезДвиженийПоТоварам Тогда
		ДополнительныеСвойства.Удалить("ТоварыНаСкладах");
	КонецЕсли;	
	
	Если ДополнительныеСвойства.Свойство("СборкаЗаказа") Тогда
		Если Не ДополнительныеСвойства.СборкаЗаказа.Количество() Тогда // сборка по новому мегазапросу
			
			Ном=Нтаб.СборкаЗаказа;
			
			ТаблицаСборки = Пакет[Ном-1].Выгрузить();
			
			Если ТаблицаСборки.Количество() Тогда
				
				ТаблицаРазмазаннойСборки = КонтрольПроведения.РазмазатьТаблицуВТаблицеПоМинимальнымРесурсам(
				ТаблицаСборки,
				ДополнительныеСвойства.ТоварыНаСкладах,
				"Номенклатура",
				"Количество");
				
				ТаблицаРазмазаннойСборки.Колонки.Количество.Имя = "Собрано";
				ДополнительныеСвойства.СборкаЗаказа = ТаблицаРазмазаннойСборки; 
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
		
	//Если НЕ Ссылка.БезДвиженийПоТоварам Тогда
	//	ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 			Пакет[3].Выгрузить());  КонецЕсли;

	//ДополнительныеСвойства.Вставить("ТоварыВРезерве", 			Пакет[4].Выгрузить());
	//ДополнительныеСвойства.Вставить("Взаиморасчеты", 			ТаблицаВзаиморасчеты);
	//ДополнительныеСвойства.Вставить("ЗаказыПокупателей", 		Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("ИнтернетЗаказПокупателя", 	Пакет[7].Выгрузить());
	//ДополнительныеСвойства.Вставить("Продажи", 					Пакет[8].Выгрузить());
	//ДополнительныеСвойства.Вставить("СборкаЗаказа", 			Пакет[10].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыВЯчейках",			Пакет[11].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПродажиПоДисконтнымКартам",Пакет[12].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",			Пакет[13].Выгрузить());
	//ДополнительныеСвойства.Вставить("СборщикЗаказа",			Пакет[14].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДвижениеТовара",			Пакет[15].Выгрузить());
	//ДополнительныеСвойства.Вставить("ОтгруженныеЗаказы",		Пакет[16].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов",		Пакет[17].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПартииТоваров",			Пакет[18].Выгрузить());
	//ДополнительныеСвойства.Вставить("РозничныеПродажи",			Пакет[20].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПродажиВРозницу",			Пакет[21].Выгрузить());
	
	//Если Не ДополнительныеСвойства.СборкаЗаказа.Количество() Тогда // сборка по новому мегазапросу
	//	
	//	ТаблицаСборки = Пакет[9].Выгрузить();
	//	Если ТаблицаСборки.Количество() Тогда
	//			
	//		ТаблицаРазмазаннойСборки = КонтрольПроведения.РазмазатьТаблицуВТаблицеПоМинимальнымРесурсам(
	//				ТаблицаСборки,
	//				ДополнительныеСвойства.ТоварыНаСкладах,
	//				"Номенклатура",
	//				"Количество");
	//					
	//		ТаблицаРазмазаннойСборки.Колонки.Количество.Имя = "Собрано";
	//		ДополнительныеСвойства.СборкаЗаказа = ТаблицаРазмазаннойСборки; КонецЕсли; КонецЕсли;
		
КонецПроцедуры


Функция БизнесПроцесс(РеализацияСсылка) Экспорт
	
	// Возвращает ссылку на текущий БП
	
	Запрос = Новый Запрос("ВЫБРАТЬ Первые 1 Ссылка ИЗ БизнесПроцесс.СборкаЗаказа ГДЕ РеализацияТоваров = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", РеализацияСсылка);
	
	Выполнение = Запрос.Выполнить();
	Если Выполнение.Пустой() Тогда
		
		Возврат БизнесПроцессы.СборкаЗаказа.ПустаяСсылка();
		
	Иначе
		
		Выборка = Выполнение.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
    	
КонецФункции   



// ПЕЧАТЬ

Процедура УдалитьЛишниеКопейкиВТабличнойЧасти(Ссылка, Товары) Экспорт
	// избавляемся от лишних копеек путем удаления(добавление) одной копейки в каждой позиции, начиная с первой.
	
	// (СуммаНДССуммы - СуммаНДС)/&Коэф	 = Разница/&Коэф - количество строк, в которые необходимо внести сиправления.
	// не допускается, что бы это значение было больше, чем итоговое количество строк в документе (в таких случаях возвращается 0)
	Если НЕ Товары.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КоличествоСтрок,
	|	(СуммаНДССуммы - СуммаНДС)/&Коэф КоличествоИсправлений, 
	|	ВЫБОР КОГДА (СуммаНДССуммы - СуммаНДС < 0 И (СуммаНДССуммы - СуммаНДС)/&Коэф > -КоличествоСтрок) ИЛИ 
	|				( СуммаНДССуммы - СуммаНДС > 0 И (СуммаНДССуммы - СуммаНДС)/&Коэф < КоличествоСтрок) 
	|	ТОГДА СуммаНДССуммы - СуммаНДС ИНАЧЕ 0 
	|	КОНЕЦ Разница
	|ИЗ
	|	(ВЫБРАТЬ
	|			СУММА(СуммаНДС) 		СуммаНДС,
	|		    КОЛИЧЕСТВО(НомерСтроки) КоличествоСтрок,
	|			ВЫБОР КОГДА МАКСИМУМ(СтавкаНДС) = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18) ТОГДА
	|				ВЫБОР КОГДА Ссылка.СуммаВключаетНДС ТОГДА
	|					ВЫРАЗИТЬ(СУММА(Сумма) * 18 / 118 КАК ЧИСЛО(15,2))
	|				ИНАЧЕ
	|					ВЫРАЗИТЬ(СУММА(Сумма) * 18 / 100 КАК ЧИСЛО(15,2))
	|				КОНЕЦ 
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ					СуммаНДССуммы	
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары
	|	ГДЕ
	|		Ссылка = &Ссылка
	|	СГРУППИРОВАТЬ ПО Ссылка ) Тов 
	|");	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Коэф", 0.01);
	
	Выборка = Запрос.Выполнить().Выбрать();
    Разница = 0;
	Если Выборка.Следующий() Тогда
		Разница = Выборка.Разница;
	КонецЕсли;
	
	Если Разница <> 0 Тогда
		// разница положительная - увеличиваем сумму НДС, разница отрицательная - уменьшаем
		Коэф = ?(Разница > 0, 0.01 , -0.01);
		
		Ид = -1;
		Пока Разница <> 0 Цикл Ид = Ид+1;
			Товары[Ид].СуммаНДС = Товары[Ид].СуммаНДС + Коэф;
			Разница = Разница - Коэф;
			Если ?(Разница < 0, -Разница, Разница) < ?(Коэф < 0, -Коэф, Коэф) Тогда
				Коэф = Разница;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;	
		
КонецПроцедуры

Процедура Печать_РеализацияТоваров(ТабличныйДокумент, Ссылка) Экспорт
			
	Запрос = Новый Запрос(" 
							// ЗАПРОС ПО ШАПКЕ
							|
							|ВЫБРАТЬ
							|	РеализацияТоваров.Номер               КАК Номер,
							|	РеализацияТоваров.Дата                КАК Дата,
							|	РеализацияТоваров.Контрагент          КАК Партнер,
							|	РеализацияТоваров.Контрагент          КАК Получатель,
							|	РеализацияТоваров.Организация         КАК Организация,
							|	РеализацияТоваров.Валюта              КАК Валюта,
							|	РеализацияТоваров.СуммаВключаетНДС    КАК СуммаВключаетНДС,
							|	РеализацияТоваров.УчитыватьНДС        КАК УчитыватьНДС,
							|	ВЫБОР КОГДА
							|		РеализацияТоваров.Ответственный.Организация = РеализацияТоваров.Организация
							|	ТОГДА
							|		РеализацияТоваров.Ответственный						         
							|	ИНАЧЕ
							|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
							|	КОНЕЦ								  КАК ОтпускПроизвел
							|ИЗ
							|	Документ.РеализацияТоваров КАК РеализацияТоваров
							|                         
							|ГДЕ
							|	РеализацияТоваров.Ссылка = &Ссылка
							|;
							|
							// ЗАПРОС ПО ТАБЛИЧНОЙ ЧАСТИ
							|
							|ВЫБРАТЬ
							|	РеализацияТоваров.Номенклатура 						КАК Номенклатура,
							|	РеализацияТоваров.Номенклатура.НаименованиеПолное   КАК ТоварНаименованиеПолное,					
							|	РеализацияТоваров.Номенклатура.Код                  КАК Код,
							|	РеализацияТоваров.Номенклатура.Артикул              КАК Артикул,
							|	РеализацияТоваров.Номенклатура.НомерГТД				КАК НомерГТД,
							|	РеализацияТоваров.Номенклатура.СтранаПроисхождения  КАК СтранаПроисхождения,
							|	ВЫБОР КОГДА РеализацияТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
							|		1
							|	ИНАЧЕ
							|		РеализацияТоваров.Упаковка.Коэффициент
							|	КОНЕЦ КАК Коэффициент,
							|
							|	РеализацияТоваров.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаЦены,
							|
							|	РеализацияТоваров.СтавкаНДС                   КАК СтавкаНДС,
							|	РеализацияТоваров.Цена                        КАК Цена,
							|	РеализацияТоваров.Количество			      КАК Количество,
							|	РеализацияТоваров.Сумма                       КАК Сумма,
							|	РеализацияТоваров.СуммаНДС                    КАК СуммаНДС,
							|	РеализацияТоваров.НомерСтроки                 КАК НомерСтроки
							|ИЗ
							|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваров
							|ГДЕ
							|	РеализацияТоваров.Ссылка = &Ссылка 	
							|	И РеализацияТоваров.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
							|	
							|УПОРЯДОЧИТЬ ПО
							|	НомерСтроки
							|");							
							
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоТоварам 		= МассивРезультатов[1].Выбрать();
	
	Если НЕ ДанныеПечати.Следующий() Тогда
		Возврат;
	КонецЕсли;	
	
	КолонкаКодов = "Артикул"; // заглушка //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		
	ЕстьНДС = ДанныеПечати.УчитыватьНДС;
			
	Макет = Документы.РеализацияТоваров.ПолучитьМакет("РеализацияТоваров");				
	
	// ЗАГОЛОВОК
		
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Реализация товаров'"), Истина, Истина);
	ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ПОСТАВЩИК
		
	ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
	ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	//ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
	ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель, ДанныеПечати.Дата), "ПолноеНаименование");
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
	//ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Получатель;
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ШАПКА ТАБЛИЦЫ
		
	СуффиксОбластиСтроки = ?(ЕстьНДС, "СНДС", "");
	СуффиксОбластиКолонки = ?(ЕстьНДС, "СоСкидкойИлиСНДС", "");
		
	ОбластьКолонкаТовар = Макет.Область("ПерваяКолонкаТовара");
	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + ?(ВыводитьКоды, 0, Макет.Область("КолонкаКодов").ШиринаКолонки);
		
	ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	ТабличныйДокумент.Вывести(ОбластьНомера);
			
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
			
	ТабличныйДокумент.Присоединить(ОбластьТовар);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
		
	ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	Сумма          = 0;
	СуммаНДС       = 0;
	НомерСтроки    = 0;
		
	// СТРОКИ ТАБЛИЦЫ 
	
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	//Если ЕстьНДС Тогда
	//	Документы.РеализацияТоваров.УдалитьЛишниеКопейкиВТабличнойЧасти(Ссылка, ТаблицаТовары); 
	//КонецЕсли;

	Для Каждого ВыборкаПоТоварам Из ТаблицаТовары Цикл

		НомерСтроки = НомерСтроки + 1;
			
		ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
				
			ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
			ТабличныйДокумент.Присоединить(ОбластьКодов);
				
		КонецЕсли;
		
		ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
		ОбластьТовар.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименованиеПолное);
				
		ТабличныйДокумент.Присоединить(ОбластьТовар);

		ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
   		ОбластьДанных.Параметры.НомерГТДСтранаПроисхождения = ?(ЗначениеЗаполнено(ВыборкаПоТоварам.НомерГТД),
			СокрЛП(ВыборкаПоТоварам.НомерГТД.Код)+",", "") + Символы.ПС + ВыборкаПоТоварам.СтранаПроисхождения;			
		
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
		СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
			
	КонецЦикла;
		
	// ПОДВАЛ ТАБЛИЦЫ
		
	ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
	ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
	ТабличныйДокумент.Вывести(ОбластьНомера);
		
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
		
	ТабличныйДокумент.Присоединить(ОбластьТовар);
		
	ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
		
	// ПОДВАЛ НДС ТАБЛИЦЫ
		
	Область = Макет.ПолучитьОбласть("ПодвалНДС");
		
	Область.Параметры.ВсегоНДС = СуммаНДС;
	Если ЕстьНДС Тогда
		Область.Параметры.НДС = ?(ДанныеПечати.СуммаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
	Иначе
		Область.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
	КонецЕсли;
	ТабличныйДокумент.Присоединить(Область);
		
	// СУММА ПРОПИСЬЮ
		
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(ДанныеПечати.СуммаВключаетНДС, 0, СуммаНДС);
		
	ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента% '");
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ТаблицаТовары.Количество());
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

	ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
	ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ПОДПИСИ
		
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
	Если ЗначениеЗаполнено(ДанныеПечати.ОтпускПроизвел) Тогда
		ОбластьМакета.Параметры.ОтпускПроизвел = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ОтпускПроизвел);
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры
Процедура Печать_РасходнаяНакладная(ТабличныйДокумент, Ссылка) Экспорт
	
	КолонкаКодов = "Артикул"; //заглушка //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос( 	"ВЫБРАТЬ
							|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
							|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
							|	Товары.Количество 							КАК Количество,
							|	Товары.Номенклатура.Код 					КАК Код,
							|	Товары.Номенклатура.Артикул 				КАК Артикул,
							|	Товары.Номенклатура.НаименованиеПолное 		КАК Номенклатура
							|ИЗ
							|	Документ.РеализацияТоваров.Товары КАК Товары
							|ГДЕ
							|	Товары.Ссылка = &Ссылка
							|	И Товары.Номенклатура.ТипНоменклатуры = <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
							|
							|УПОРЯДОЧИТЬ ПО
							|	Товары.НомерСтроки");
														
							
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Макет =	Документы.РеализацияТоваров.ПолучитьМакет("РасходнаяНакладная");
	
	Если НЕ ВыводитьКоды Тогда
		// Раздвинуть колонку "КолонкаТоваров" на ширину колонки "КолонкаКодов"
		Макет.Область("КолонкаТоваров").ШиринаКолонки = Макет.Область("КолонкаТоваров").ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура("Номер, Дата", Ссылка.Номер, Ссылка.Дата);
	
	ВыборкаПоТоварам = Запрос.Выполнить().Выбрать();
					
	// ЗАГОЛОВОК
			
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная'");
	ТабличныйДокумент.Вывести(Область);
			
	// ШАПКА
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.ПредставлениеРаспоряжения = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(РеквизитыДокумента, НСтр("ru='Реализация товаров'"), Истина, Истина);
	Область.Параметры.ПредставлениеСклада = Ссылка.Склад;
	ТабличныйДокумент.Вывести(Область);
		
	// ПОСТАВЩИК
			
	Область = Макет.ПолучитьОбласть("Поставщик");
	Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование");
	ТабличныйДокумент.Вывести(Область);
			
	// ПОКУПАТЕЛЬ
			
	Область = Макет.ПолучитьОбласть("Покупатель");
	Область.Параметры.ПредставлениеПартнера = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Ссылка.Контрагент, Ссылка.Дата), "ПолноеНаименование");
	ТабличныйДокумент.Вывести(Область);
			
	// ШАПКА ТАБЛИЦЫ
			
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ТабличныйДокумент.Вывести(Область);
	Если ВыводитьКоды Тогда
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		Область.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		ТабличныйДокумент.Присоединить(Область);
	КонецЕсли;
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкиКоличества");
	ТабличныйДокумент.Присоединить(Область);
			
	СчетСтрок = 1;
	Пока ВыборкаПоТоварам.Следующий() Цикл
				
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
		Область.Параметры.НомерСтроки = СчетСтрок;
		СчетСтрок = СчетСтрок + 1;
		ТабличныйДокумент.Вывести(Область);
		Если ВыводитьКоды Тогда
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			Область.Параметры.ЗначениеКода = ВыборкаПоТоварам[КолонкаКодов];
			ТабличныйДокумент.Присоединить(Область);
		КонецЕсли;
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
		Область.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.Номенклатура);
		ТабличныйДокумент.Присоединить(Область);
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкиКоличества");
		Область.Параметры.Заполнить(ВыборкаПоТоварам);
		ТабличныйДокумент.Присоединить(Область);
				
	КонецЦикла;
			
	// ПОДВАЛ ТАБЛИЦЫ
			
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	ТабличныйДокумент.Вывести(Область);
	Если ВыводитьКоды Тогда
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
		ТабличныйДокумент.Присоединить(Область);
	КонецЕсли;
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкиКоличества");
	ТабличныйДокумент.Присоединить(Область);
			
	// ПОДПИСИ
			
	Область = Макет.ПолучитьОбласть("Подписи");
	ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
	ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
	Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
	ТабличныйДокумент.Вывести(Область);	
	
КонецПроцедуры
Процедура Печать_Акт(ТабличныйДокумент, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка              КАК Ссылка,
	|	Док.Номер               КАК Номер,
	|	Док.Дата                КАК Дата,
	|	Док.Контрагент          КАК Контрагент,
	|	Док.Организация         КАК Организация,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК Должность,
	|	Док.Валюта              КАК Валюта,
	|	Док.СуммаВключаетНДС    КАК ЦенаВключаетНДС,
	|	Док.УчитыватьНДС 		КАК УчитыватьНДС,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ								  КАК ОтпускПроизвел
	|ИЗ
	|	Документ.РеализацияТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	Товары.Номенклатура.Код                                           КАК Код,
	|	Товары.Номенклатура.Артикул                                       КАК Артикул,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	Товары.Номенклатура.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	Товары.СтавкаНДС                                                  КАК СтавкаНДС,
	|	Товары.Цена													      КАК Цена,
	|	Товары.Количество                                                 КАК Количество,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки							  КАК Сумма,
	|	Товары.СуммаНДС												   	  КАК СуммаНДС,
	|	Товары.СуммаРучнойСкидки                                          КАК СуммаСкидки,
	|	Товары.Сумма		                                              КАК СуммаБезСкидки,
	|	Товары.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ 	Документ.РеализацияТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|;
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	Товары.Сумма                									  КАК Сумма,
	|	Товары.СуммаНДС          										  КАК СуммаНДС
	|ИЗ
	|		Документ.РеализацияТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|");

	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаТовары			= МассивРезультатов[2].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
	//	СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
	//	НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		//Если НайденСледующий Тогда
			Если ВыборкаПоДокументам.Следующий() Тогда
				ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
			//	ЕстьСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам);
			    ЕстьСкидки = Ложь; // требование бухгалтерии!
			//	ЕстьНДС = ДанныеПечати.УчитыватьНДС;
				ЕстьНДС = Ложь; // требование бухгалтерии!
				ВыборкаПоУслугам.Сбросить();
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
					ДанныеПечати.Ссылка
					);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка
				);
				Возврат;	
			КонецЕсли;
			
		//Иначе
		//	
		//	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		//		НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
		//		ДанныеПечати.Ссылка
		//		);
		//		
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//		Текст,
		//		ДанныеПечати.Ссылка
		//	);
		//	
		//	Продолжить;
		//КонецЕсли;
		
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент    = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = Документы.РеализацияТоваров.ПолучитьМакет("Акт");
		
		// Выводим шапку акта
		
		ОбластьМакета	= Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка 	= ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт'"), Истина, Истина);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),  "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Услуги
		
		СуффиксОбласти = ?(ЕстьСкидки, "СоСкидкой", "") + ?(ЕстьНДС, "СНДС", "");
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка" + СуффиксОбласти);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;
		
		СтрокаНаименованиеТоваров = "";
		//ИтогоСумма  = Сумма;
		//ИтогоСуммаНДС = СуммаНДС;
		
		Пока ВыборкаТовары.Следующий() Цикл
			
			СтрокаНаименованиеТоваров = СтрокаНаименованиеТоваров + ?(ПустаяСтрока(СтрокаНаименованиеТоваров), "", ", ") +
				ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаТовары.ТоварНаименование);
				
			Сумма = Сумма + ВыборкаТовары.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаТовары.СуммаНДС;
			
		КонецЦикла;
		
		
		
		// Выводим строки таблицы Услуги
		
		Пока ВыборкаПоУслугам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			Сумма    = Сумма    + ВыборкаПоУслугам.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоУслугам);
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
			
			Если ЕстьСкидки Тогда
				
				ОбластьСтроки.Параметры.Скидка         = ВыборкаПоУслугам.СуммаСкидки;
				ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоУслугам.Сумма + ВыборкаПоУслугам.СуммаСкидки);
				
			КонецЕсли;
			
			Если НомерСтроки = 1 Тогда
				
				ОбластьСтроки.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоУслугам.УслугаНаименованиеПолное) +
				?(ВыборкаТовары.Количество(), " в т.ч.:" + Символы.ПС + СтрокаНаименованиеТоваров, ""); 				
				
				ОбластьСтроки.Параметры.Цена = ?(ДанныеПечати.ЦенаВключаетНДС, Сумма/ВыборкаПоУслугам.Количество, (Сумма+СуммаНДС)/ВыборкаПоУслугам.Количество);  
				ОбластьСтроки.Параметры.Сумма = Сумма;

			Иначе
				ОбластьСтроки.Параметры.Товар       = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоУслугам.УслугаНаименованиеПолное);
			КонецЕсли;
			
			СтавкаНДС = ВыборкаПоУслугам.СтавкаНДС;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		
		ОбластьМакета.Параметры.ВсегоНДС = СуммаНДС;
		Если ДанныеПечати.УчитыватьНДС Тогда
		
			ОбластьМакета.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, ДанныеПечати.ЦенаВключаетНДС);
			
		Иначе
			ОбластьМакета.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
	   	
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ИтоговаяСтрока = НСтр("ru = 'Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"г.""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		ОбластьМакета.Параметры.Руководитель = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Руководитель);
		ОбластьМакета.Параметры.Должность = ДанныеПечати.Должность;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
		
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
		
КонецПроцедуры
Процедура Печать_ТоварныйЧек(ТабДокумент, Ссылка) Экспорт
	
	
	Макет = Документы.РеализацияТоваров.ПолучитьМакет("ТоварныйЧек");
		
	//ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	//|	Док.КассаККМ                  КАК КассаККМ,
	|	Док.Валюта                    КАК Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	//|	Док.КассаККМ.Представление    КАК Покупатель,
	//|	Док.Кассир.Представление      КАК ОтветственныйПредставление,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ						  КАК ОтветственныйПредставление,
	|	Док.Организация               КАК Организация,
	|	Док.Организация.Наименование  КАК Поставщик,
	|	Док.Сумма			          КАК СуммаДокумента,
	|	Док.Товары.(
	|		НомерСтроки                       КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                  КАК Код,
	|		Номенклатура.Артикул              КАК Артикул,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Док.Товары.Количество * Док.Товары.Цена - Док.Товары.Сумма КАК Скидка, // + ПроцентРучнойСкидки  ???
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.РеализацияТоваров КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Если Не ПервыйДокумент Тогда
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Выборка, НСтр("ru = 'Товарный чек'"), Истина, Истина);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//ДопКолонка = ""; //Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		//	ВыводитьКоды = Истина;
		//	Колонка = "Артикул";
		//ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		//Иначе
		//	ВыводитьКоды = Ложь;
		//КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидки Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("СуммаБезСкидки").ШиринаКолонки
			                                  + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		
		
		ТаблицаТовары = Выборка.Товары.Выгрузить();
		//Если ЕстьНДС Тогда
		//	Документы.РеализацияТоваров.УдалитьЛишниеКопейкиВТабличнойЧасти(Выборка.Ссылка, ТаблицаТовары); 
		//КонецЕсли;
		
		Для Каждого ВыборкаСтрокТовары Из ТаблицаТовары Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка         = ВыборкаСтрокТовары.Скидка;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
				ТабДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				ТабДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаСНДС = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				СуммаСНДС = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
			ТабДокумент.Присоединить(ОбластьСуммы);
			
			ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокТовары.Скидка;
			ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
			
		КонецЦикла;
		
		Товары = ТаблицаТовары;
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		
		СуммаНДС = Товары.Итог("СуммаНДС");
		Сумма    = Товары.Итог("Сумма");
		
		Если ЕстьНДС Тогда
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		Если Не Выборка.ЦенаВключаетНДС Тогда
			СуммаДокумента = Сумма + СуммаНДС;
		Иначе
			СуммаДокумента = Сумма;
		КонецЕсли;
		
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести Сумму прописью.
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ТаблицаТовары.Количество()
		                                       + ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(Выборка.СуммаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Выборка.СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьМакета);
	
		// Вывести подписи.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Функция ПолучитьТаблицуКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслуг.Валюта КАК Валюта
		|ИЗ
		|	Документ.РеализацияТоваров КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)
		|	И РеализацияТоваровУслуг.Валюта <> &ВалютаРегламентированногоУчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта,
		|	Дата
		|");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = ОбщиеФункции.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ПолучитьТаблицуКурсовВалют()

Функция ПолучитьДанныеДляТОРГ12(ТабличныйДокумент, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = "Артикул";
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|   ЕСТЬNULL(НоменклатураДокументов.ЕстьУслуги, Ложь)						   КАК ЕстьУслуги,
	|    ЕСТЬNULL(НоменклатураДокументов.ЕстьТовары, Ложь)						   КАК ЕстьТовары,
	|	Док.Ссылка                                                 КАК Ссылка,   
	|	Док.Номер                                                  КАК Номер,
	|	Док.Дата                                                   КАК Дата,
	|	Док.Контрагент                                             КАК Контрагент,
	|	Док.Организация                                            КАК Организация,
	|	Док.Заказ											  	   КАК Основание,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Кладовщик,
	|	ЕСТЬNULL(Рук.Должность, """")                                      									  КАК ДолжностьКладовщика,   
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Контрагент
	|	ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ	Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	ТОГДА	Док.Организация
	|	ИНАЧЕ	Док.Грузоотправитель
	|	КОНЕЦ	Грузоотправитель,
	|
	|	Док.БанковскийСчетОрганизации                             КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера                            	  КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетГрузоотправителя                        КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетГрузополучателя                         КАК БанковскийСчетГрузополучателя,
	|	Док.Валюта         						                  КАК Валюта,
	|	Док.СуммаВключаетНДС                                      КАК ЦенаВключаетНДС,
	|	Неопределено                                              КАК Подразделение,
	|	""""								                      КАК АдресДоставки,
	|	""""                                     				  КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0)                                    КАК ДоверенностьДата,
	|	""""                                   					  КАК ДоверенностьВыдана,
	|	""""                                     				  КАК ДоверенностьЛицо,
	|	ВЫБОР КОГДА НЕ Док.Плательщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	ТОГДА Док.Плательщик		
	|	ИНАЧЕ 	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	            ТОГДА	Док.Контрагент
	|	            ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ КОНЕЦ	                                               Плательщик

	|ИЗ
	|	Документ.РеализацияТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО Док.Организация = Бух.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО Док.Организация = Рук.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250)         КАК ТоварНаименование,
	|	Товары.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК БазоваяЕдиницаКодПоОКЕИ, 														 
	|	""""												              КАК ВидУпаковки,
	|	МАКСИМУМ(Товары.НомерСтроки)                                      КАК НомерСтроки,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	СУММА(Товары.Количество)                                          КАК Количество,
	|	Товары.СтавкаНДС          										  КАК СтавкаНДС,
	|	СУММА(Товары.Сумма)           									  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)     										  КАК СуммаНДС,
	|   0                                                                 КАК КоличествоВОдномМесте,
	|	0                                								  КАК КоличествоМест,
	|	0							                                      КАК МассаБрутто,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.РеализацияТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Упаковка, Цена, СтавкаНДС
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");                                 
		
	
	Запрос.УстановитьПараметр("Дата", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", 		Ссылка);
	Запрос.УстановитьПараметр("Коэф", 			0.01);
//	Запрос.УстановитьПараметр("Организация", 	Ссылка.Организация);

	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// ТТН
 //
Функция ПолучитьДанныеДляТТН(МассивСсылок) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Артикул";
	КонецЕсли;
	
	Ссылка = МассивСсылок[0];
	
	Запрос = Новый Запрос();
	Запрос.Текст = " 
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка 			КАК Ссылка,
	|	Док.Номер 			КАК Номер,
	|	Док.Дата 			КАК Дата,
	|	Док.Организация 	КАК Организация,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА Док.Организация
	|		ИНАЧЕ Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	Док.Контрагент КАК Контрагент,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	Док.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера	 КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	"""" 						КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) 		КАК ДоверенностьДата,
	|	"""" 						КАК ДоверенностьВыдана,
	|	"""" 						КАК ДоверенностьЛицо,
	|	Док.СуммаВключаетНДС 		КАК ЦенаВключаетНДС,
	|
	|	Док.Валюта                  КАК Валюта,				                                                 
	|
	|	НаименованияТоваров.Количество КАК КоличествоНаименований
	|ИЗ                                                            
	|	Документ.РеализацияТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	//|		ПО РеализацияТоваров.Склад = СкладыКонтактнаяОтправитель.Ссылка
	//|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество
	//|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|				РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура
	|			ИЗ
	|				Документ.РеализацияТоваров.Товары КАК РеализацияТоваровУслугТовары
	|			ГДЕ
	|				РеализацияТоваровУслугТовары.Ссылка В (&МассивСсылок)
	|				И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК СписокТоваров
	|		
	//|		СГРУППИРОВАТЬ ПО СписокТоваров.Ссылка
	|			) КАК НаименованияТоваров
	//|		ПО Док.Ссылка = НаименованияТоваров.Ссылка
	|		ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
 	|	Товары.Цена			КАК Цена,
	|	0 КАК МассаБрутто,
	|	Товары.Количество * Товары.Номенклатура.Вес КАК МассаНетто,
	|	0 КАК КоличествоМест,
	|	Товары.Сумма 		КАК Сумма,
	|	Товары.СуммаНДС 	КАК СуммаНДС,
	|	Товары.НомерСтроки  КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Товары.Ссылка В (&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
		
	//ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов);
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции
Функция ПолучитьДанныеДляТранспортнаяНакладная(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваров.Ссылка 		КАК Ссылка,
	|	РеализацияТоваров.Номер 		КАК Номер,
	|	РеализацияТоваров.Дата 			КАК Дата,
	|	РеализацияТоваров.Организация	КАК Организация,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА РеализацияТоваров.Контрагент
	|		ИНАЧЕ РеализацияТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|			ТОГДА РеализацияТоваров.Организация
	|		ИНАЧЕ РеализацияТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	РеализацияТоваров.Контрагент КАК Контрагент,
	|	РеализацияТоваров.Контрагент КАК ЗаказчикПеревозок,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.РеализацияТоваров КАК РеализацияТоваров
	|ГДЕ
	|	РеализацияТоваров.Ссылка = &МассивДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", Ссылка);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаРезульта
КонецФункции

// Функция формирует печатную форму Счета-фактуры.
//скорее всего данны функция не используется, никогда не использовалась и не будет.
//Вызов приводит к FATAL ERROR, объекта СчетФактураВыданный тут отродясь не водилось.
Функция ПолучитьДанныеДляСчетФактура(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА ВТ_ТаблицаКорректировок
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка                                           КАК Ссылка,
	//|	ЕСТЬNULL(СчетФактура.Номер, Неопределено)            КАК Номер,
	//|	ЕСТЬNULL(СчетФактура.Дата, Неопределено)             КАК Дата,
	//|	ЕСТЬNULL(СчетФактура.СтрокаПлатежноРасчетныеДокументы, """")                 КАК СтрокаПоДокументу,
	|	Док.Партнер                                          КАК Партнер,
	|	Док.Контрагент                                       КАК Контрагент,
	|	Док.Организация                                      КАК Организация,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	"""" КАК АдресДоставки,
	|
	|	Док.Валюта КАК Валюта,
	|
	|	Истина КАК ЦенаВключаетНДС,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги
	|
	|ИЗ
	|	Документ.РеализацияТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		Документ.СчетФактураВыданный КАК СчетФактура
	//|	ПО
	//|		Док.Ссылка = СчетФактура.ДокументОснование
	////|		И Док.Организация = СчетФактура.Организация
	//|		И Не СчетФактура.ПометкаУдаления
	|  
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	//|ВЫБРАТЬ
	//|	ТаблицаВидыЗапасов.Ссылка КАК Ссылка,
	//|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	//|	ТаблицаВидыЗапасов.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	//|	ТаблицаВидыЗапасов.Номенклатура.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	//|	ТаблицаВидыЗапасов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	//|	ТаблицаВидыЗапасов.Характеристика.НаименованиеПолное КАК Характеристика,
	//|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	//|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	//|	ТаблицаВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	//|	0 КАК Цена,
	//|	0 КАК КоличествоМест,
	//|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	//|
	//|	СУММА(
	//|		ВЫБОР КОГДА ТаблицаКорректировок.Сумма ЕСТЬ NULL ТОГДА
	//|			ТаблицаВидыЗапасов.СуммаСНДС
	//|		ИНАЧЕ
	//|			ВЫБОР КОГДА ТаблицаВидыЗапасов.Ссылка.ЦенаВключаетНДС ТОГДА
	//|				ТаблицаКорректировок.Сумма
	//|			ИНАЧЕ
	//|				ТаблицаКорректировок.Сумма + ЕСТЬNULL(ТаблицаКорректировок.СуммаНДС, 0)
	//|			КОНЕЦ
	//|		КОНЕЦ
	//|	) КАК Сумма,
	//|
	//|	СУММА(ЕСТЬNULL(ТаблицаКорректировок.СуммаНДС, ТаблицаВидыЗапасов.СуммаНДС)) КАК СуммаНДС,
	//|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	//|	Ложь КАК ЭтоВозвратнаяТара
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаВидыЗапасов
	//|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		ВТ_ТаблицаКорректировок КАК ТаблицаКорректировок
	//|	ПО
	//|		ТаблицаВидыЗапасов.Ссылка = ТаблицаКорректировок.ДокументСсылка
	//|		И ТаблицаВидыЗапасов.НомерСтроки = ТаблицаКорректировок.НомерСтроки
	//|		И ТаблицаКорректировок.ВидыЗапасов
	//|ГДЕ
	//|	ТаблицаВидыЗапасов.Ссылка В (&МассивДокументов)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТаблицаВидыЗапасов.Ссылка,
	//|	ТаблицаВидыЗапасов.Номенклатура,
	//|	ТаблицаВидыЗапасов.Характеристика,
	//|	ТаблицаВидыЗапасов.СтавкаНДС,
	//|	ТаблицаВидыЗапасов.НомерГТД
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 100) КАК ТоварНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	0 КАК Цена,
	|	0 КАК КоличествоМест,
	|	СУММА(Товары.Количество) КАК Количество,
	|
	|	СУММА(
	
	|			ВЫБОР КОГДА Товары.Ссылка.СуммаВключаетНДС ТОГДА
	|				Товары.Сумма
	|			ИНАЧЕ
	|				Товары.Сумма + Товары.СуммаНДС
	|			КОНЕЦ
	|	) КАК Сумма,
	|
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	Ложь КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	//И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.СтавкаНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()
Функция ПолучитьДанныеДляСчетФактура_ИзРеализации(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	//|////////////////////////////////////////////////////////////////////////////
	//|// ВРЕМЕННАЯ ТАБЛИЦА ВТ_ТаблицаКорректировок
	//|ВЫБРАТЬ
	//|	*
	//|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	//|ИЗ 
	//|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Док.Ссылка                                      		КАК Ссылка,
	|	СчетФактура.Номер                             			КАК Номер,
	|	СчетФактура.Дата                              			КАК Дата,
	|	Док.Склад.НомерПодразделения                    		КАК НомерПодразделения,
	|	Док.ПлатежныеДокументы.(	
	|		ДокументОплаты.Дата						Дата,
	|       ДокументОплаты.НомерВходящегоДокумента  Номер
	|		)											РасчетныеДокументы,
	|	Док.Партнер                                     КАК Партнер,
	|	Док.Контрагент                                  КАК Контрагент,
	|	Док.Организация                                 КАК Организация,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	"""" КАК АдресДоставки,
	|   Док.Валюта					  КАК Валюта,
	|	Док.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	Док.Валюта.Код				  КАК ВалютаКод,
	|
	|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|
	|	НоменклатураДокументов.ЕстьУслуги КАК ЕстьУслуги,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ДоговорыКонтрагентов.ИдентификаторГосударственногоКонтракта
	|
	|ИЗ
	|	Документ.РеализацияТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СчетФактуры КАК СчетФактура
	|	ПО
	|		Док.Ссылка = СчетФактура.Основание
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ПО Док.Контрагент = ДоговорыКонтрагентов.Владелец
	|		И (ДоговорыКонтрагентов.ЗначениеПоУмолчанию)
	//|		И Док.Организация = СчетФактура.Организация
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250)	      КАК ТоварНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК ЕдиницаИзмеренияКод, 														 
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Товары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.НомерГТД    
	|	ИНАЧЕ
	|		Товары.НомерГТД
	|	КОНЕЦ  														  	  КАК НомерГТД,
	|	Товары.Номенклатура.СтранаПроисхождения 						  КАК СтранаПроисхождения,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	СУММА(Товары.Количество)                                          КАК Количество,
	|	0                                								  КАК КоличествоМест,
	|	Товары.СтавкаНДС          										  КАК СтавкаНДС,
	|	СУММА(Товары.Сумма)           									  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)     										  КАК СуммаНДС,
	|	МАКСИМУМ(Товары.НомерСтроки)                                      КАК НомерСтроки,
	|	ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ                                                             КАК ЭтоУслуга,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.РеализацияТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка //И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Упаковка, Цена, СтавкаНДС,НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);

	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()

// Функции для формирования УПД
Функция ПолучитьДанныеДляУПД(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ВозможностьДублейСтрок
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	Товары.Ссылка КАК Ссылка,
	//                      |	МАКСИМУМ(ВЫБОР
	//                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ЛОЖЬ
	//                      |		КОНЕЦ) КАК ЕстьУслуги,
	//                      |	МАКСИМУМ(ВЫБОР
	//                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ЛОЖЬ
	//                      |		КОНЕЦ) КАК ЕстьТовары
	//                      |ПОМЕСТИТЬ НоменклатураДокументов
	//                      |ИЗ
	//                      |	Документ.РеализацияТоваров.Товары КАК Товары
	//                      |ГДЕ
	//                      |	Товары.Ссылка = &Ссылка
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	Товары.Ссылка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	Док.Ссылка 												КАК Ссылка,
	//                      |	Док.Номер 												КАК Номер,
	//                      |	Док.Дата 											 	КАК Дата,
	//                      |	Док.Склад.НомерПодразделения 							КАК НомерПодразделения,
	//                      |	Док.ПлатежныеДокументы.(
	//                      |		ДокументОплаты.Дата КАК Дата,
	//                      |		ДокументОплаты.НомерВходящегоДокумента КАК Номер
	//                      |	) 														КАК РасчетныеДокументы,
	//                      |	Док.Партнер 			КАК Партнер,
	//                      |	Док.Контрагент 			КАК Контрагент,
	//                      |	Док.Организация 		КАК Организация,
	//                      |	"""" 					КАК Кладовщик,
	//                      |	""""					КАК ДолжностьКладовщика,
	//                      |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	//                      |	ЕСТЬNULL(Рук.Должность, """") 																КАК ДолжностьРуководителя,
	//                      |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ГлавныйБухгалтер,
	//                      |	ВЫБОР
	//                      |		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	//                      |			ТОГДА Док.Контрагент
	//                      |		ИНАЧЕ Док.Грузополучатель
	//                      |	КОНЕЦ 								КАК Грузополучатель,
	//                      |	ВЫБОР
	//                      |		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	//                      |			ТОГДА Док.Организация
	//                      |		ИНАЧЕ Док.Грузоотправитель
	//                      |	КОНЕЦ 								КАК Грузоотправитель,
	//                      |	"""" 								КАК АдресДоставки,
	//					  |	Док.Склад 							КАК Склад,
	//                      |	Док.Валюта 							КАК Валюта,
	//                      |	Док.Валюта.НаименованиеПолное 		КАК ВалютаНаименованиеПолное,
	//                      |	Док.Валюта.Код 						КАК ВалютаКод,
	//                      |	Док.СуммаВключаетНДС 				КАК ЦенаВключаетНДС,
	//                      |	НоменклатураДокументов.ЕстьУслуги 	КАК ЕстьУслуги,
	//                      |	ВЫБОР
	//                      |		КОГДА НоменклатураДокументов.ЕстьУслуги
	//                      |				И НЕ НоменклатураДокументов.ЕстьТовары
	//                      |			ТОГДА ИСТИНА
	//                      |		ИНАЧЕ ЛОЖЬ
	//                      |	КОНЕЦ 								КАК ТолькоУслуги,
	//                      |	Док.Заказ 							КАК Основание,
	//					  |	Док.Плательщик 						КАК Плательщик
	//                      |ИЗ
	//                      |	Документ.РеализацияТоваров КАК Док
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	//                      |				&Дата,
	//                      |				Организация = &Организация
	//                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) КАК Бух
	//                      |		ПО (ИСТИНА)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	//                      |				&Дата,
	//                      |				Организация = &Организация
	//                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК Рук
	//                      |		ПО (ИСТИНА)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	//                      |		ПО Док.Ссылка = НоменклатураДокументов.Ссылка
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетФактуры КАК СчетФактура
	//                      |		ПО Док.Ссылка = СчетФактура.Основание
	//                      |ГДЕ
	//                      |	Док.Ссылка = &Ссылка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	Товары.Ссылка КАК Ссылка,
	//                      |	Товары.Номенклатура КАК Номенклатура,
	//                      |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250) КАК ТоварНаименование,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	//                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	//                      |	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	//                      |		ИНАЧЕ """"
	//                      |	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	//                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	//                      |	КОНЕЦ КАК ЕдиницаИзмерения,
	//                      |	Товары.Номенклатура.НомерГТД КАК НомерГТД,
	//                      |	Товары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	//                      |	Товары.Цена КАК Цена,
	//                      |	СУММА(Товары.Количество) КАК Количество,
	//                      |	0 КАК КоличествоМест,
	//                      |	Товары.СтавкаНДС КАК СтавкаНДС,
	//                      |	СУММА(Товары.Сумма) КАК Сумма,
	//                      |	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	//                      |	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	//                      |			ТОГДА ИСТИНА
	//                      |		ИНАЧЕ ЛОЖЬ
	//                      |	КОНЕЦ КАК ЭтоУслуга,
	//                      |	ЛОЖЬ КАК ЭтоВозвратнаяТара
	//                      |ИЗ
	//                      |	Документ.РеализацияТоваров.Товары КАК Товары
	//                      |ГДЕ
	//                      |	Товары.Ссылка = &Ссылка
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	Товары.Ссылка,
	//                      |	Товары.Номенклатура,
	//                      |	Товары.Упаковка,
	//                      |	Товары.Цена,
	//                      |	Товары.СтавкаНДС,
	//                      |	Товары.Номенклатура.НомерГТД,
	//                      |	Товары.Номенклатура.СтранаПроисхождения,
	//                      |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250),
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	//                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	//                      |	КОНЕЦ,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	//                      |		ИНАЧЕ """"
	//                      |	КОНЕЦ,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	//                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	//                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	//                      |	КОНЕЦ,
	//                      |	ВЫБОР
	//                      |		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	//                      |			ТОГДА ИСТИНА
	//                      |		ИНАЧЕ ЛОЖЬ
	//                      |	КОНЕЦ
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	НомерСтроки");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Товары.Ссылка КАК Ссылка,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ ЛОЖЬ
	                      |		КОНЕЦ) КАК ЕстьУслуги,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ ЛОЖЬ
	                      |		КОНЕЦ) КАК ЕстьТовары
	                      |ПОМЕСТИТЬ НоменклатураДокументов
	                      |ИЗ
	                      |	Документ.РеализацияТоваров.Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Товары.Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Док.Ссылка 												КАК Ссылка,
	                      |	Док.Номер 												КАК Номер,
                          |	Док.Дата 											 	КАК Дата,
						  |	ВЫБОР КОГДА Док.Заказ <> Неопределено ТОГДА Док.Заказ.Номер ИНАЧЕ """" КОНЕЦ  				КАК НомерЗаказа,
						  | ВЫБОР КОГДА Док.Заказ <> Неопределено ТОГДА Док.Заказ.Дата	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ  	КАК ДатаЗаказа,
	                      |	Док.Склад.НомерПодразделения 							КАК НомерПодразделения,
	                      |	Док.ПлатежныеДокументы.(
	                      |		ДокументОплаты.Дата КАК Дата,
	                      |		ДокументОплаты.НомерВходящегоДокумента КАК Номер
	                      |	) 														КАК РасчетныеДокументы,
	                      |	Док.Партнер 			КАК Партнер,
	                      |	Док.Контрагент 			КАК Контрагент,
	                      |	Док.Организация 		КАК Организация,
	                      |	"""" 					КАК Кладовщик,
	                      |	""""					КАК ДолжностьКладовщика,
	                      |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	                      |	ЕСТЬNULL(Рук.Должность, """") 																КАК ДолжностьРуководителя,
	                      |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ГлавныйБухгалтер,
	                      |	ВЫБОР
	                      |		КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	                      |			ТОГДА Док.Контрагент
	                      |		ИНАЧЕ Док.Грузополучатель
	                      |	КОНЕЦ 								КАК Грузополучатель,
	                      |	ВЫБОР
	                      |		КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	                      |			ТОГДА Док.Организация
	                      |		ИНАЧЕ Док.Грузоотправитель
	                      |	КОНЕЦ 								КАК Грузоотправитель,
	                      |	"""" 								КАК АдресДоставки,
						  |	Док.Склад 							КАК Склад,
	                      |	Док.Валюта 							КАК Валюта,
	                      |	Док.Валюта.НаименованиеПолное 		КАК ВалютаНаименованиеПолное,
	                      |	Док.Валюта.Код 						КАК ВалютаКод,
	                      |	Док.СуммаВключаетНДС 				КАК ЦенаВключаетНДС,
	                      |	НоменклатураДокументов.ЕстьУслуги 	КАК ЕстьУслуги,
	                      |	ВЫБОР
	                      |		КОГДА НоменклатураДокументов.ЕстьУслуги
	                      |				И НЕ НоменклатураДокументов.ЕстьТовары
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ 								КАК ТолькоУслуги,
	                      |	Док.Заказ 							КАК Основание,
						  |	Док.Плательщик 						КАК Плательщик
	                      |ИЗ
	                      |	Документ.РеализацияТоваров КАК Док
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	                      |				&Дата,
	                      |				Организация = &Организация
	                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) КАК Бух
	                      |		ПО (ИСТИНА)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	                      |				&Дата,
	                      |				Организация = &Организация
	                      |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК Рук
	                      |		ПО (ИСТИНА)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	                      |		ПО Док.Ссылка = НоменклатураДокументов.Ссылка
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетФактуры КАК СчетФактура
	                      |		ПО Док.Ссылка = СчетФактура.Основание
	                      |ГДЕ
	                      |	Док.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.Ссылка КАК Ссылка,
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250) КАК ТоварНаименование,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	                      |		ИНАЧЕ """"
	                      |	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	                      |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	                      |	КОНЕЦ КАК ЕдиницаИзмерения,
						  |	ВЫБОР
	                      |		КОГДА Товары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	                      |			ТОГДА Товары.Номенклатура.НомерГТД
	                      |		ИНАЧЕ Товары.НомерГТД
	                      |	КОНЕЦ КАК НомерГТД, 
						  |	Товары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	                      |	Товары.Цена КАК Цена,
	                      |	Товары.Количество КАК Количество,
	                      |	0 КАК КоличествоМест,
	                      |	Товары.СтавкаНДС КАК СтавкаНДС,
	                      |	Товары.Сумма КАК Сумма,
	                      |	Товары.СуммаНДС КАК СуммаНДС,
	                      |	Товары.НомерСтроки КАК НомерСтроки,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЭтоУслуга,
	                      |	ЛОЖЬ КАК ЭтоВозвратнаяТара
	                      |ИЗ
	                      |	Документ.РеализацияТоваров.Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |
						  //|СГРУППИРОВАТЬ ПО
						  //|	Товары.Ссылка,
						  //|	Товары.Номенклатура,
						  //|	Товары.Упаковка,
						  //|	Товары.Цена,
						  //|	Товары.СтавкаНДС,
						  //|	Товары.Номенклатура.НомерГТД,
						  //|	Товары.Номенклатура.СтранаПроисхождения,
						  //|	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 250),
						  //|	ВЫБОР
						  //|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
						  //|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
						  //|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
						  //|	КОНЕЦ,
						  //|	ВЫБОР
						  //|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
						  //|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
						  //|		ИНАЧЕ """"
						  //|	КОНЕЦ,
						  //|	ВЫБОР
						  //|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
						  //|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
						  //|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
						  //|	КОНЕЦ,
						  //|	ВЫБОР
						  //|		КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
						  //|			ТОГДА ИСТИНА
						  //|		ИНАЧЕ ЛОЖЬ
						  //|	КОНЕЦ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);

	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()

