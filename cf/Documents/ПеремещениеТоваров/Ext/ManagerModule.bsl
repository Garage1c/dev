
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Если НЕ ПроведенияДокументов.РазрешеноПерепроводитьДокумент(Ссылка) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(Ссылка.Основание) = Тип("БизнесПроцессСсылка.ПеремещениеТоваров") Тогда
		Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Основание); 
		ЭтоВнутреннийЗаказ = ТипЗнч(Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ");
		Если ЗначениеЗаполнено(Заказ) Тогда
			КонечныйСклад = ?(ЭтоВнутреннийЗаказ, Заказ.Заказчик, Заказ.Склад);
		Иначе
			КонечныйСклад = Справочники.Склады.ПустаяСсылка();
		КонецЕсли;	
	Иначе
		Заказ = Документы.ЗаказПокупателя.ПустаяСсылка();
		ЭтоВнутреннийЗаказ = Ложь;
		КонечныйСклад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	
	ПроцессСборка = ?(	ЗначениеЗаполнено(Ссылка.Основание) И
						Не Ссылка.Основание.Пустая() И
						ТипЗнч(Ссылка.Основание) = Тип("БизнесПроцессСсылка.ПеремещениеТоваров") И
						ТипЗнч(Ссылка.Основание.Заказчик) = Тип("БизнесПроцессСсылка.СборкаЗаказа"),
							Ссылка.Основание.Заказчик,
							БизнесПроцессы.СборкаЗаказа.ПустаяСсылка());
	
	ЗаказчикВнутреннегоЗаказа = ПроцессСборка; 
	
	Если ТипЗнч(ПроцессСборка.Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		ЗаказчикВнутреннегоЗаказа = ПроцессСборка.Заказ.Заказчик; 
	КонецЕсли;  // оставить для заполнения измерения
	
	
	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	
	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() +Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	
	"//>>> Шапка

	|ВЫБРАТЬ
	|	СкладОтправитель, СкладПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров
	|ГДЕ
	|	Ссылка = &Ссылка";
	
	
	
	Нтаб=Новый Структура;
	ТекНомер=1;	
		
	Если ИменаРегистров.Найти("ТоварыНаСкладах")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыНаСкладах",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ТОВАРЫ НА СКЛАДАХ
		
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияРасход			КАК ВидДвижения,
		|	Ссылка.СкладОтправитель		КАК Склад,
		|	Номенклатура	            КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество*Упаковка.Коэффициент)
		|	КОНЕЦ					КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И Ссылка.СкладПолучатель <> Ссылка.СкладОтправитель
		//|	И (НЕ Ссылка.СкладОтправитель.Ячеестый ИЛИ НЕ ЯчейкаОтправитель.ЭтоЗонаПриемки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка.СкладОтправитель,
		|	Номенклатура,
		|	Упаковка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияПриход			КАК ВидДвижения,
		|	Ссылка.СкладПолучатель		КАК Склад,
		|	Номенклатура	            КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество*Упаковка.Коэффициент)
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И Ссылка.СкладПолучатель <> Ссылка.СкладОтправитель
		//|	И (НЕ Ссылка.СкладПолучатель.Ячеестый ИЛИ НЕ ЯчейкаПолучатель.ЭтоЗонаПриемки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка.СкладПолучатель,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ТоварыВРезерве")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВРезерве",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ТОВАРЫ В РЕЗЕРВЕ
		
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияРасход			КАК ВидДвижения,
		|	Ссылка.СкладОтправитель		КАК Склад,
		|	Номенклатура	            КАК Номенклатура,
		|	Ссылка.СкладОтправитель Размещение,
		|	ДокументРезерва,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		Количество
		|	ИНАЧЕ
		|		Количество*Упаковка.Коэффициент
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка 
		|	И ДокументРезерва <> Неопределено 
		|	И ДокументРезерва <> Значение(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	И ДокументРезерва <> Значение(Документ.ИнтернетЗаказПокупателя.ПустаяСсылка)
		|	И ДокументРезерва <> Значение(Документ.ВнутреннийЗаказ.ПустаяСсылка)
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияПриход			КАК ВидДвижения,
		|	Ссылка.СкладПолучатель		КАК Склад,
		|	Номенклатура	            КАК Номенклатура,
		|	Ссылка.СкладПолучатель Размещение,
		|	ДокументРезерва,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		Количество
		|	ИНАЧЕ
		|		Количество*Упаковка.Коэффициент
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка 
		|	И ДокументРезерва <> Неопределено 
		|	И ДокументРезерва <> Значение(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	И ДокументРезерва <> Значение(Документ.ИнтернетЗаказПокупателя.ПустаяСсылка)
		|	И ДокументРезерва <> Значение(Документ.ВнутреннийЗаказ.ПустаяСсылка)
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияПриход			КАК ВидДвижения,
		|	Ссылка.СкладПолучатель		КАК Склад,
		|	Номенклатура	            КАК Номенклатура,
		|	Ссылка.СкладПолучатель		КАК Размещение,
		|	&СпецЗаказ					КАК ДокументРезерва,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		Количество
		|	ИНАЧЕ
		|		Количество*Упаковка.Коэффициент
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка 
		|	И ЯчейкаПолучатель = &ЯчейкаНеНайдено 
		|
		|	"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ТоварыВЯчейках")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВЯчейках",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ТОВАРЫ в ячейках
		
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияРасход			КАК ВидДвижения,
		|	ЯчейкаОтправитель 			КАК Ячейка,
		|	Номенклатура	            КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество*Упаковка.Коэффициент)
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	ЯчейкаОтправитель <> &ПустаяЯчейка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЯчейкаОтправитель,
		|	Номенклатура,
		|	Упаковка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияПриход			КАК ВидДвижения,
		|	ЯчейкаПолучатель			КАК Ячейка,
		|	Номенклатура	            КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
		|		СУММА(Количество)
		|	ИНАЧЕ
		|		СУММА(Количество*Упаковка.Коэффициент)
		|	КОНЕЦ						КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	ЯчейкаПолучатель <> &ПустаяЯчейка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЯчейкаПолучатель,
		|	Номенклатура,
		|	Упаковка"
		
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ПриёмщикЗаказа")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ПриёмщикЗаказа",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ПРИЕМЩИК
		
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	Сборщик						КАК Приёмщик,
		|	&Заказ						КАК Заказ,
		|	Номенклатура				КАК Номенклатура,
		|	Упаковка					КАК Упаковка,
		|	Ссылка.СкладОтправитель		КАК Склад,
		|  	ЯчейкаОтправитель			КАК Ячейка,		
		|	КОЛИЧЕСТВО(Номенклатура)	КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Сборщик,
		|	Номенклатура,
		|	Упаковка,
		|	ЯчейкаОтправитель"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ДвижениеТовара")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДвижениеТовара",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ДВИЖЕНИЕ ТОВАРА
		
		"ВЫБРАТЬ
		|	&Период							Период,
		|	&ВидДвиженияПриход				ВидДвижения,
		|	&СкладПолучатель 				Склад,
		|	ЕСТЬNULL(Ссылка.Основание.Заказчик.Заказ, Ссылка.Основание) Заказ,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество) Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Ссылка.Основание.Заказчик.Заказ, Ссылка.Основание),
		|	Номенклатура,
		|	Упаковка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период							Период,
		|	&ВидДвиженияПриход				ВидДвижения,
		|	&СкладОтправитель 				Склад,
		|	ЕСТЬNULL(Ссылка.Основание.Заказчик.Заказ, Ссылка.Основание) Заказ,
		|	Номенклатура,
		|	Упаковка,
		|	-СУММА(Количество) Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Ссылка.Основание.Заказчик.Заказ, Ссылка.Основание),
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ТоварыСобранные")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыСобранные",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// СОБРАННЫЕ ТОВАРЫ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|	Ссылка.СкладОтправитель		Склад,
		|	Ссылка.СборочныйЛист.Заказ 	Заказ,
		|	Ссылка.СборочныйЛист		СборочныйЛист,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество) КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка 
		| И	Ссылка.Основание Ссылка БизнесПроцесс.ПеремещениеТоваров
		| И Ссылка.СборочныйЛист <> Значение(Документ.СборочныйЛист.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ЗаказыНаПеремещения")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ЗаказыНаПеремещения",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ЗаказыНаПеремещение
		
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияРасход			КАК ВидДвижения,
		|	Ссылка.СкладОтправитель		КАК СкладОтправитель,
		|	&Заказ 	Заказ,
		|	Номенклатура,
		|	Упаковка, 
		|	Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		| И	Ссылка.Основание Ссылка БизнесПроцесс.ПеремещениеТоваров"
		
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ВнутренниеЗаказы")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ВнутренниеЗаказы",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"//>>> ВнутренниеЗаказы
		
		|ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияРасход			КАК ВидДвижения,
		|	&КонечныйСклад				КАК Заказчик,
		|	&Заказ						КАК ВнутреннийЗаказ,
		|	Номенклатура	        КАК Номенклатура,
		|	Упаковка		        КАК Упаковка,
		|	&СкладОтправитель			КАК Размещение,
		|	Количество				КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|  И &ЭтоВнутреннийЗаказ и &СкладПолучатель = &КонечныйСклад"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("СборкаЗаказа")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("СборкаЗаказа",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		"//>>> СборкаЗаказа
		|выбрать неопределено где истина=ложь"
		
	КонецЕсли;	
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяЯчейка", 		Справочники.Ячейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСборщик", 		Справочники.ФизическиеЛица.ПустаяСсылка());

	Запрос.УстановитьПараметр("Заказ", 					Заказ);
	Запрос.УстановитьПараметр("СкладПолучатель",		Ссылка.СкладПолучатель);
	Запрос.УстановитьПараметр("СкладОтправитель",		Ссылка.СкладОтправитель);
	Запрос.УстановитьПараметр("ЯчейкаНеНайдено",		Ссылка.СкладПолучатель.ЯчейкаНеНайдено);
	Запрос.УстановитьПараметр("СпецЗаказ",				Константы.ЗаказРезервПотеряшек.Получить());
	Запрос.УстановитьПараметр("КонечныйСклад",			КонечныйСклад);
	Запрос.УстановитьПараметр("ЭтоИнтернетЗаказ", 		ТипЗнч(Заказ) = Тип("ДокументСсылка.ИнтернетЗаказПокупателя"));
	Запрос.УстановитьПараметр("ЭтоЗаказПокупателя", 	ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПокупателя"));
	Запрос.УстановитьПараметр("ЭтоВнутреннийЗаказ", 	ТипЗнч(Заказ) = Тип("ДокументСсылка.ВнутреннийЗаказ"));
	Запрос.УстановитьПараметр("ПроцессСборка", 			ПроцессСборка);
	Запрос.УстановитьПараметр("ЗаказчикВнутреннегоЗаказа", 			ЗаказчикВнутреннегоЗаказа);
	
	Запрос.Текст=ТекстЗапроса;
	Пакет = Запрос.ВыполнитьПакет();

	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
	
	//ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	//ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	//ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 			Пакет[2].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыВРезерве", 			Пакет[3].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыВЯчейках", 			Пакет[4].Выгрузить());
	////ДополнительныеСвойства.Вставить("ВнутренниеЗаказы", 		Пакет[5].Выгрузить());
	////ДополнительныеСвойства.Вставить("СборкаЗаказа", 			Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПриёмщикЗаказа", 			Пакет[5].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДвижениеТовара", 			Пакет[6].Выгрузить());
	////ДополнительныеСвойства.Вставить("Резерв",	 				Пакет[9].Выгрузить());
	////ДополнительныеСвойства.Вставить("ПартииТоваров",	 		Пакет[10].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыСобранные",		 	Пакет[7].Выгрузить());
	//ДополнительныеСвойства.Вставить("ЗаказыНаПеремещения",	 	Пакет[8].Выгрузить());
	//
	//Если Заказ <> Неопределено И Не Ссылка.СпособРазмещенияБезЗаказа Тогда // По старому
	//	ДополнительныеСвойства.Вставить("ЗаказыПокупателей", 		Пакет[9].Выгрузить());
	//	ДополнительныеСвойства.Вставить("ИнтернетЗаказПокупателя", 	Пакет[10].Выгрузить());
	//КонецЕсли;

	
КонецПроцедуры


		
Функция ПолучитьданныеДляТТН(МассивСсылок,_Параметры = Неопределено) Экспорт		
	УстановитьПривилегированныйРежим(Истина);	
	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Артикул";
	КонецЕсли;
	
	Ссылка = МассивСсылок[0];
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Док.Ссылка КАК Ссылка,
	               |	Док.Номер КАК Номер,
	               |	Док.Дата КАК Дата,
	               |	&Грузоотправитель КАК Грузоотправитель,
	               |	&Грузополучатель КАК Грузополучатель,
	               |	&Организация КАК Организация,
	               |	&Валюта,
	               |	ИСТИНА КАК ЦенаВключаетНДС,
	               |	ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) КАК БанковскийСчетКонтрагента,
	               |	ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) КАК БанковскийСчетГрузополучателя,
	               |	ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) КАК БанковскийСчетГрузоотправителя,
	               |	ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) КАК БанковскийСчеторганизации,
	               |	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	               |	"""""""" КАК Кладовщик,
	               |	"""""""" КАК ДолжностьКладовщика,
	               |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	               |	ЕСТЬNULL(Рук.Должность, """""""") КАК ДолжностьРуководителя,
	               |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ГлавныйБухгалтер,
	               |	"""""""" КАК ДоверенностьНомер,
	               |	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДоверенностьДата,
	               |	"""""""" КАК ДоверенностьВыдана,
	               |	"""""""" КАК ДоверенностьЛицо,
	               |	ЕСТЬNULL(НаименованияТоваров.Количество, 0) КАК КоличествоНаименований
	               |ИЗ
	               |	Документ.ПеремещениеТоваров КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	               |				&Дата,
	               |				Организация = &Организация
	               |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) КАК Бух
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	               |				&Дата,
	               |				Организация = &Организация
	               |					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК Рук
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			СУММА(1) КАК Количество
	               |		ИЗ
	               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	               |				ПеремещениеТоваровТовары.Ссылка КАК Ссылка
	               |			ИЗ
	               |				Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |			ГДЕ
	               |				ПеремещениеТоваровТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК СписокТоваров) КАК НаименованияТоваров
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	Док.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	0 КАК Сумма,
	               |	0 КАК СуммаНДС,
	               |	0 КАК Цена,
	               |	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	               |	ПеремещениеТоваровТовары.Номенклатура.Артикул КАК ТоварКод,
	               |	ПеремещениеТоваровТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	               |	ПеремещениеТоваровТовары.Количество КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	               |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваровТовары.Упаковка)
	               |	КОНЕЦ КАК ВидУпаковки,
	               |	ВЫБОР
	               |		КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	               |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваровТовары.Упаковка)
	               |	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	               |	0 КАК МассаБрутто,
	               |	ПеремещениеТоваровТовары.Количество * ПеремещениеТоваровТовары.Номенклатура.Вес КАК МассаНетто,
	               |	0 КАК КоличествоМест,
	               |	ЛОЖЬ КАК Весовой,
	               |	ЛОЖЬ КАК ЭтоВозвратнаяТара
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |ГДЕ
	               |	ПеремещениеТоваровТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |	И ПеремещениеТоваровТовары.Ссылка В (&МассивСсылок)";
	               //|УПОРЯДОЧИТЬ ПО";
	              // |	Товары.НомерСтроки";
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("Организация", _Параметры._Организация);
	Запрос.УстановитьПараметр("Грузоотправитель", ?(ЗначениеЗаполнено(_Параметры._Грузоотправитель), _Параметры._Грузоотправитель, _Параметры._Организация));
	Запрос.УстановитьПараметр("Грузополучатель", _Параметры._Грузополучатель);
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоКоду("643"));
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;//ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
	
	Возврат СтруктураДанныхДляПечати;
		

		
КонецФункции

Функция ПолучитьДанныеДляТранспортнаяНакладная(Ссылка, _Параметры = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Перемещение.Ссылка КАК Ссылка,
	|	Перемещение.Номер КАК Номер,
	|	Перемещение.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	&Грузополучатель КАК Грузополучатель,
	|	&Грузоотправитель КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ЗаказчикПеревозок,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Перемещение
	|ГДЕ
	|	Перемещение.Ссылка = &МассивДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("Организация", _Параметры._Организация);
	Запрос.УстановитьПараметр("Грузополучатель", _Параметры._Грузополучатель);
	Запрос.УстановитьПараметр("Грузоотправитель", _Параметры._Грузоотправитель);
	Запрос.УстановитьПараметр("МассивДокументов", Ссылка);
	//Запрос.УстановитьПараметр("Контрагент", );
	//Запрос.УстановитьПараметр("ЗаказчикПеревозок", );
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаРезульта
КонецФункции

