
&НаКлиенте
Перем мВведенныйПароль, мПарольВведен;

#Область Типовые

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда  // Заполним по умолчанию
		
		Объект.Автор 	= ПараметрыСеанса.ТекущийПользователь; // чтобы корректно отображался отбор по владельцу у профиля у нового письма
		Объект.Профиль 	= Почта2Сервер.ПолучитьПрофильПоУмоланию();
		Объект.Текст 	= Объект.Профиль.Шаблон; КонецЕсли;
	
	// Заполним параметры
	
	Если Параметры.Вложения <> Неопределено Тогда РазобратьВложения(Параметры.Вложения) КонецЕсли;
	
	// Создадим свое вложение если такое пришло
	
	Если 	Не ПустаяСтрока(Параметры.ИмяТабличногоДокумента) И 
			Не СохранитьТабличныйДокументВХранилище(Параметры.ИмяТабличногоДокумента, Параметры.ТабличныйДокумент, Параметры.ТипФайлаВложения, Параметры.РасширениеФайлаВложения) Тогда Отказ = Истина КонецЕсли;
	
	// Отобразим
	
	ОбновитьПредставлениеВложений();
	ОбновитьПредставлениеПолучателей("КомуСписок");
	ОбновитьПредставлениеПолучателей("КопияСписок");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Установим доступность
	
	Элементы.Отправить.Видимость = Не ТекущийОбъект.Проведен;
	Элементы.ГруппаВложений.Видимость = ТекущийОбъект.Вложения.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ВложенияНаходятсяВТЗ Тогда // Сохраним вложения
		
		ТекущийОбъект.Вложения.Очистить();
		Для Каждого Строка Из Вложения ЦИкл
			
			НовСтрока = ТекущийОбъект.Вложения.Добавить();
			НовСтрока.ИмяФайла = Строка.ИмяФайла;
			НовСтрока.Вложение = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Строка.Адрес)); КонецЦикла; КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область Обработка // вложений

&НаСервере
Функция СохранитьТабличныйДокументВХранилище(ИмяДокумента, ТабличныйДокумент, ТипФайлаВложения, РасширениеФайлаВложения)
	
	Если ТипФайлаВложения = Неопределено Тогда ТипФайлаВложения = ТипФайлаТабличногоДокумента.PDF КонецЕсли;
	Если ПустаяСтрока(РасширениеФайлаВложения) Тогда РасширениеФайлаВложения = "pdf" КонецЕсли;
	
	ИмяФайла 	= ИмяДокумента + "." + РасширениеФайлаВложения;
	ФулИмяФайла = КаталогВременныхФайлов() + ИмяФайла;
	
	// Сохраним
	
	Попытка
		ТабличныйДокумент.Записать(ФулИмяФайла, ТипФайлаВложения);
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи макета в файл
											|" + стрОшибки);
		Возврат ложь; КонецПопытки;

	// Запихаем в ТЗ
	
	ВложенияНаходятсяВТЗ = Истина;
	
	Строка = Вложения.Добавить();
	Строка.ИмяФайла = ИмяФайла;
	Строка.Адрес 	= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ФулИмяФайла), УникальныйИдентификатор);
	
	// Удалим за собой
	
	УдалитьФайлы(ФулИмяФайла);
	
	Возврат Истина;
		
КонецФункции

&НаСервере
Процедура РазобратьВложения(текВложения)
	
	ВложенияНаходятсяВТЗ = текВложения.Количество();
	
	Для Каждого Вложение Из текВложения Цикл 
		
		НовСтрока = Вложения.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Вложение);
		Если ПустаяСтрока(НовСтрока.Адрес) Или ПустаяСтрока(НовСтрока.ИмяФайла) Тогда Вложения.Удалить(НовСтрока) КонецЕсли;
		
		Если Не Объект.КомуСписок.НайтиСтроки(Новый Структура("Партнер", Вложение.Партнер)).Количество() Тогда
		
			НовСтрока = Объект.КомуСписок.Добавить();
			НовСтрока.Партнер 	= Вложение.Партнер;
			НовСтрока.Кому 		= ?(Вложение.Свойство("Почта"), Вложение.Почта, Почта2Сервер.ПолучитьПочтуПартнера(Вложение.Партнер)); КонецЕсли; КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеВложений()
	
	// Нарисуем вложения красиво
	
	ФормСтроки = Новый Массив;
	
	Инд = -1;
	Для Каждого Строка Из ?(ВложенияНаходятсяВТЗ, Вложения, Объект.Вложения) Цикл Инд = Инд + 1;
		
		Если Инд Тогда ФормСтроки.Добавить(Новый ФорматированнаяСтрока("; ")); КонецЕсли;
		
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка.ИмяФайла,,,,Формат(Инд, "ЧН=0; ЧГ=")));
		
		Если ВложенияНаходятсяВТЗ Тогда 
			ФормСтроки.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок.Удалить,,,,"Удалить" + Формат(Инд, "ЧН=0; ЧГ="))); КонецЕсли; КонецЦикла;
	
	СтрВложения = Новый ФорматированнаяСтрока(ФормСтроки);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьПредставлениеПолучателей(ИмяТаблицы)
	
	Стр = "";
	Для Каждого Строка Из Объект[ИмяТаблицы] Цикл 
		
		стрПартнер = ?(Строка.Партнер.Пустая(), "", "(" + Строка.Партнер + ")");
		Стр = Стр +?(Стр = "","","; ") + Строка.Кому + " " + стрПартнер; КонецЦикла;
	
	ЭтотОбъект["Стр" + ИмяТаблицы] 	= Стр;
	Объект.Кому 					= стрКомуСписок;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДвДанные(Адрес)
	
	Возврат ПолучитьИзВременногоХранилища(Адрес).Получить();
	
КонецФункции

&НаСервере
Функция УдалитьВложениеНаСервере(ИндексСтроки)
	
	Вложения.Удалить(ИндексСтроки);
	
КонецФункции
&НаСервере
Функция ПолучитьПараметрыСтрокиВложения(ИндексСтроки)
	
	Если ВложенияНаходятсяВТЗ Тогда
		
		Строка = Вложения[ИндексСтроки];
		Возврат Новый Структура("ИмяФайла, Адрес", Строка.ИмяФайла, Строка.Адрес);
		
	Иначе // Поместим в хранилище
		
		Строка = Объект.Ссылка.Вложения[ИндексСтроки];
		Возврат Новый Структура("ИмяФайла, Адрес", Строка.ИмяФайла, ПоместитьВоВременноеХранилище(Строка.Вложение.Получить())); КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ВложенияОбработкаНавигационнойСсылки(Элемент, НавСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Если Найти(НавСсылка, "Удалить") = 1 Тогда
		
		Индекс = Число(Сред(НавСсылка, 8));
		УдалитьВложениеНаСервере(Индекс);
		ОбновитьПредставлениеВложений();
		
	Иначе
		
		Индекс 				= Число(НавСсылка);
		ПараметрыВложения 	= ПолучитьПараметрыСтрокиВложения(Индекс);
	
		// Получим
		
		ИмяФайла = КаталогВременныхФайлов() + ПараметрыВложения.ИмяФайла;
		ДвДанные = ПолучитьИзВременногоХранилища(ПараметрыВложения.Адрес);	
		
		// Запишем
		
		Попытка
			ДвДанные.Записать(ИмяФайла);
		Исключение
			стрОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка открытия файла
											|" + стрОшибки);
			Возврат КонецПопытки;
		
		// Откроем
		
		ЗапуститьПриложение(ИмяФайла); КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Выбор // Партнеров

&НаСервере
Функция ПолучитьСтрТаблицу(ИмяТаблицы) Экспорт
	 
	Возврат ЗначениеВСтрокуВнутр(Объект[ИмяТаблицы].Выгрузить());
	
КонецФункции
&НаСервере
Процедура ЗагрузитьСтрТаблицу(стрТаблица, ИмяТаблицы)
	
	Объект[ИмяТаблицы].Загрузить(ЗначениеИзСтрокиВнутр(стрТаблица));
	ОбновитьПредставлениеПолучателей(ИмяТаблицы);
	
КонецПроцедуры
&НаКлиенте
Процедура стрКомуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Документ.Письмо.Форма.ВыборПолучателей", Новый Структура("стрТаблица", ПолучитьСтрТаблицу("КомуСписок")),,,,,Новый ОписаниеОповещения("ВыборПолучателей", ЭтаФорма, "КомуСписок"));
	
КонецПроцедуры
&НаКлиенте
Процедура ВыборПолучателей(стрРезультат, ИмяТаблицы) Экспорт
	
	Если стрРезультат <> Неопределено Тогда Модифицированность = Истина;
		ЗагрузитьСтрТаблицу(стрРезультат, ИмяТаблицы); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура стрКомуПриИзменении(Элемент)
	
	// Преобразуем текст в таблицу
	
	
	
КонецПроцедуры

#КонецОбласти

#Область Отправка // письма

&НаСервере
Функция ПолучитьПрофиль()
	
	Запрос = Новый Запрос("ВЫБРАТЬ АдресСервераSMTP, ПортSMTP, ПользовательSMTP, ПарольSMTP ИЗ Справочник.ПрофильИнтернетПочты ГДЕ Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Объект.Профиль);
	Возврат КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Запрос.Выполнить().Выгрузить());
	
КонецФункции
&НаКлиенте
Процедура Отправить(Команда = Неопределено, ВведенПароль = "")
	
	// сперва запишем документ
	Если Модифицированность И Не Записать() Тогда Возврат КонецЕсли;
	
	Отказ = Ложь; // Проверим чтобы все было заполнено
	
	Если Не Объект.КомуСписок.Количество() Тогда 
		ОбщиеФункции.СообщитьТекст("Кому отправлять письмо?", "стрКомуСписок"); Отказ = Истина; КонецЕсли;
	
	Если Объект.Профиль.Пустая() Тогда 
		ОбщиеФункции.СообщитьТекст("Не указан профиль", "Объект.Профиль"); Отказ = Истина; КонецЕсли;

	// Заполним письмо
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Объект.Тема;
	Письмо.Тексты.Добавить(Объект.Текст);
	
	// Добавим получателей
	
	Для Каждого Строка Из Объект.КомуСписок Цикл
		Если ПустаяСтрока(Строка.Кому) Тогда
			ОбщиеФункции.СообщитьТекст("Не указано кому", "Объект.КомуСписок"); Отказ = Истина; 
		Иначе
			Письмо.Получатели.Добавить(Строка.Кому);КонецЕсли; КонецЦикла;
	
	// Подключим профиль
	
	Если Не Отказ Тогда
		
		ПарольИзКеша = Почта2Клиент.ПолучитьПарольИзКеша(Объект.Профиль, глПаролиНаПочту);
	
		Профиль 			= Новый ИнтернетПочтовыйПрофиль;
		НастройкиПрофиля 	= ПолучитьПрофиль();
		//Профиль.ТолькоЗащищеннаяАутентификацияSMTP = Истина;
		
		ЗаполнитьЗначенияСвойств(Профиль, НастройкиПрофиля);
		Если Не ПустаяСтрока(ВведенПароль) Тогда 					// Пароль прислали
			Профиль.ПарольSMTP = ВведенПароль;
			Почта2Клиент.УстановитьПарольВКеше(Объект.Профиль, ВведенПароль, глПаролиНаПочту);
			
		ИначеЕсли Не ПустаяСтрока(ПарольИзКеша) Тогда				// Получим пароль из ранне введенного в этом сеансе
			Профиль.ПарольSMTP = ПарольИзКеша;
			
		ИначеЕсли ПустаяСтрока(НастройкиПрофиля.ПарольSMTP) Тогда 	// Введем пароль
			ОткрытьФорму("Документ.Письмо.Форма.ВводПароля", Новый Структура("Почта, Логин", Строка(Объект.Профиль), НастройкиПрофиля.ПользовательSMTP),,,,,Новый ОписаниеОповещения("ВводПароля", ЭтаФорма)); Возврат; КонецЕсли;
		
		// Проверим подключения профиля
		
		Соединение = Новый ИнтернетПочта;
		
		Попытка
			Соединение.Подключиться(Профиль);
		Исключение
			стрОшибки = ОписаниеОшибки();
			Почта2Клиент.СброситьПарольВКеше(Объект.Профиль, глПаролиНаПочту);
			ОбщиеФункции.СообщитьТекст("Ошибка подключения
			|" + стрОшибки); Отказ = Истина ; КонецПопытки; КонецЕсли;

	// Проверим 
	
	Если Отказ Тогда Возврат КонецЕсли;
	
	// Добавим вложения
	
	Инд = -1; ТаблицаВложений = ?(ВложенияНаходятсяВТЗ, Вложения, Объект.Вложения);
	Для Каждого Вложение Из ТаблицаВложений Цикл Инд = Инд + 1;
		
		текПараметры 	= ПолучитьПараметрыСтрокиВложения(Инд);
		ДвоичныеДанные 	= ПолучитьИзВременногоХранилища(текПараметры.Адрес);
		
		Если ДвоичныеДанные = Неопределено Тогда
			ОбщиеФункции.СообщитьТекст("Не удалось получить вложение, повторите попытку"); Возврат КонецЕсли;
		
		Письмо.Вложения.Добавить(ДвоичныеДанные, текПараметры.ИмяФайла); КонецЦикла;

	// Пошлем
	
	Попытка
		Соединение.Послать(Письмо);
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка отправки письма
		|" + стрОшибки); 
		Возврат ; КонецПопытки;
	
	// Ехха!
	
	Соединение.Отключиться();
	ПоказатьОтправкуПисьма();
	
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	Закрыть();
	
КонецПроцедуры
&НаКлиенте
Процедура ВводПароля(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда Отправить(, Результат) КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтправкуПисьма()
	
	ПоказатьОповещениеПользователя("Отправлено письмо",, Объект.Тема + Символы.ПС + стрКомуСписок, БиблиотекаКартинок.ОтправленоПисьмо);
	
КонецПроцедуры

#КонецОбласти
