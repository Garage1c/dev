
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции

Функция ПолучитьСтруктуруШапки()
	
	Возврат Новый Структура;
	
КонецФункции
Функция ПолучитьТаблицуТоваров()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НомерСтроки,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	ТипЦен,
	|	Валюта,
	|	ДатаНачала 	КАК Период,
	|	Ссылка.Дата КАК ДатаПрайса
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101000000"));
	//Запрос.УстановитьПараметр("ПустойТипЦен", Справочники.ТипыЦен.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДвиженияПоРегистрам(СтруктураШапки, ТаблицаТоваров, РежимПроведения, Отказ, Заголовок)
	
	// ТОВАРЫ НА СКЛАДАХ
	
	Таблица = Движения.ЦеныНоменклатуры.Выгрузить();
	Таблица.Очистить();
	
	Для КАждого СтрокаТоваров Из ТаблицаТоваров Цикл
		
		НовСтрока = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаТоваров);
		Если НЕ ЗначениеЗаполнено(СтрокаТоваров.Валюта) Тогда
			НовСтрока.Валюта = СтрокаТоваров.ТипЦен.Валюта;
		КонецЕсли;
		НовСтрока.Активность = Истина;
		
	КонецЦИкла;
	
	Движения.ЦеныНоменклатуры.Загрузить(Таблица);
	Движения.ЦеныНоменклатуры.Записывать=Истина;
	Движения.Записать();
	
КонецПроцедуры
 
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = "Проведение документа " + Ссылка;
	
	СтруктураШапки	= ПолучитьСтруктуруШапки();
	ТаблицаТоваров 	= ПолучитьТаблицуТоваров();
	
	Если НЕ Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапки, ТаблицаТоваров, РежимПроведения, Отказ, Заголовок);
	КонецЕсли;
	
	// Обновим кэш
	Если 	Не Отказ И
			Не РаботаСНоменклатурой.ОбновитьКэш(,ПолучитьТекстЗапросаПолученияСпискаТоваров(), Новый Структура("ДокументСсылка", Ссылка)) Тогда
			
		Отказ = Истина; КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда	
		
		Товары.Загрузить(ПолучитьИзВременногоХранилища(ДанныеЗаполнения.Товары));
		Валюта = ?(ДанныеЗаполнения.Свойство("Валюта"), ДанныеЗаполнения.Валюта, КэшируемыеФункции.ВалютаУправленческогоУчета()); 
		
		Если ДанныеЗаполнения.Свойство("ТипЦен") Тогда
			Для Каждого Строка Из Товары Цикл Строка.ТипЦен = ДанныеЗаполнения.ТипЦен; КонецЦикла;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДополнительныеТипыЦен") Тогда
			ТаблицаТоваров = Товары.Выгрузить();

			Для Каждого СтрокаТипЦен Из ДанныеЗаполнения.ДополнительныеТипыЦен Цикл
								
				Для Каждого Строка Из ТаблицаТоваров Цикл
					НоваяСтрока = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					НоваяСтрока.ТипЦен = СтрокаТипЦен;
					НоваяСтрока.Цена = РаботаСНоменклатурой.ПолучитьЦену(НоваяСтрока.Номенклатура, НоваяСтрока.ТипЦен, Валюта);
				КонецЦикла; КонецЦикла;

		КонецЕсли;
				
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда	
		
		ТипЦен	= ДанныеЗаполнения.ТипЦен;
		Валюта	= ДанныеЗаполнения.Валюта;	
		
		Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Валюта) Тогда
			Валюта = ТипЦен.Валюта;
		КонецЕсли;
		
		// товары
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Упаковка,
		|	&ТипЦен		ТипЦен,
		|	Цена		Цена,
		|	&Дата		ДатаНачала,
		|	&Валюта     Валюта
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", 	ТекущаяДата());
		Запрос.УстановитьПараметр("ТипЦен", ДанныеЗаполнения.ТипЦен);
		Запрос.УстановитьПараметр("Валюта", ДанныеЗаполнения.Валюта);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		// Пересчет
		
	//СтруктураКолонокТовары = Новый Структура("ЕстьКоличество, ЕстьЦена, ЕстьСуммаБезСкидки, ЕстьСумма, ЕстьСуммаАвтоматическойСкидки, ЕстьСуммаРучнойСкидки, ЕстьСтавкаНДС, ЕстьСуммаНДС, СуммаВключаетНДС, ЕстьВсего",
	//											Истина, Истина, Ложь, Истина, Ложь, Ложь, Истина, Истина, СуммаВключаетНДС, Ложь);
	
		Пока Выборка.Следующий() Цикл
			
			НовСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
			
			//ФункцииФормДокументов.РассчитатьСуммыТабличныхЧастей(НовСтрока, СтруктураКолонокТовары);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
	
		ТипЦен	= ДанныеЗаполнения.ТипЦен;
		Валюта	= ДанныеЗаполнения.Валюта;	
		
		Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Валюта) Тогда
			Валюта = ТипЦен.Валюта;
		КонецЕсли;
		
 		Запрос = Новый Запрос("ВЫБРАТЬ
 		                      |	&ТипЦен КАК ТипЦен,
 		                      |	&Дата КАК ДатаНачала,
 		                      |	&Валюта КАК Валюта,
 		                      |	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
 		                      |	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
 		                      |	ЗаказПоставщикуТовары.Цена КАК Цена
 		                      |ИЗ
 		                      |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
 		                      |ГДЕ
 		                      |	ЗаказПоставщикуТовары.Ссылка = &Ссылка");
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", 	ТекущаяДата());
		Запрос.УстановитьПараметр("ТипЦен", ДанныеЗаполнения.ТипЦен);
		Запрос.УстановитьПараметр("Валюта", ДанныеЗаполнения.Валюта);
		
		ВыборкаИзЗаказа = Запрос.Выполнить().Выбрать();

		Пока ВыборкаИзЗаказа.Следующий() Цикл
			
			НовСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ВыборкаИзЗаказа);
						
		КонецЦикла;

		
	КонецЕсли;
	
КонецПроцедуры


