
&НаКлиенте
Процедура ДополнительныеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СписокУровнейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Уровни	 	 = ПолучитьСписокУровней();
	СписокВыбора = Новый СписокЗначений;
	
	// Проставим отметки
	
	СписокВыбора.ЗагрузитьЗначения(Уровни);
	
	Для Каждого ЭлементСписка Из СписокВыбора Цикл
		
		ЭлементСписка.Пометка = СписокУровней.НайтиПоЗначению(ЭлементСписка.Значение) <> Неопределено;
		
	КонецЦикла;
	
	// Выберем
	
	Если СписокВыбора.ОтметитьЭлементы("Выбор уровней скидок:") Тогда
		
		// Созадим список
		
		СписокУровней.Очистить();
		Для Каждого ЭлементСписка Из СписокВыбора Цикл
			Если ЭлементСписка.Пометка Тогда
			
				СписокУровней.Добавить(ЭлементСписка.Значение);
				
			КонецЕсли;
		КонецЦикла;
		
		// Обновим таблицу
		
		СформироватьТаблицу(Ложь);
		
	КонецЕсли;

КонецПроцедуры


&НаСервере
Функция ПолучитьСписокУровней()
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.УровниСкидок ГДЕ НЕ ПометкаУдаления УПОРЯДОЧИТЬ ПО Наименование");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции
&НаСервере
Функция ПолучитьСоответствияИменКолонок()
	
	Соответствия	= Новый Соответствие;
	
	Для Каждого Элемент Из СписокУровней Цикл
		Соответствия.Вставить(СтрЗаменить(Строка(Элемент.Значение.УникальныйИдентификатор()),"-",""), Элемент.Значение);
	КонецЦикла;
	
	Возврат Соответствия;
	
КонецФункции
&НаСервере
Функция ПолучитьСоответствияУровней()
	
	Соответствия	= Новый Соответствие;
	
	Для Каждого Элемент Из СписокУровней Цикл
			
		Соответствия.Вставить(Элемент.Значение, СтрЗаменить(Строка(Элемент.Значение.УникальныйИдентификатор()),"-",""));
		
	КонецЦикла;
	
	Возврат Соответствия;
	
КонецФункции


&НаСервере
Функция ДобавитьПолеФормы(Имя, ПутьКДанным, Родитель, Заголовок = Неопределено)
	                      // уникальное имя     тип      родитель       
	НовоеПоле = Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);	
	НовоеПоле.ПутьКДанным = ПутьКДанным;
	//НовоеПоле.Заголовок = ?(ЗначениеЗаполнено(Заголовок), Заголовок, Имя);
	НовоеПоле.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	НовоеПоле.Вид = ВидПоляФормы.ПолеВвода;
	
	Возврат НовоеПоле;
	
КонецФункции
&НаСервере
Функция ДобавитьГруппуФормы(Имя, Родитель, Заголовок = Неопределено)
	                            // уникально имя      тип         родитель(таблица формы) 
	НоваяГруппа = Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);	
	//НоваяГруппа.Заголовок = ?(ЗначениеЗаполнено(Заголовок), Заголовок, Имя);
	НоваяГруппа.Вид = ВидГруппыФормы.ГруппаКолонок;
	НоваяГруппа.ОтображатьВШапке = Ложь;
	НоваяГруппа.Группировка = ГруппировкаКолонок.ВЯчейке;
	
	Возврат НоваяГруппа;
	
КонецФункции


&НаСервере
Процедура СформироватьТаблицу(Открыт)
	
	// Добавим колонки
	
	СоответствияИмен = ПолучитьСоответствияИменКолонок();
	
	ТипЧисло 	= Новый ОписаниеТипов("Число");
	Таблица 	= Новый ТаблицаЗначений;
	Колонки		= Таблица.Колонки;
	
	Колонки.Добавить("НомерСтроки", 	ТипЧисло);
	Колонки.Добавить("ЦеноваяГруппа", 	Новый ОписаниеТипов("СправочникСсылка.ЦеновыеГруппы"));
	Колонки.Добавить("Процент");	
	
	КолонкиТаблицы = Новый Массив;
	
	
	// старые колонки
	
	Для Каждого Элемент Из ПолучитьРеквизиты("ТаблицаСкидок") Цикл
		ИмяРеквизита = Элемент.Имя;
		Если Найти(ИмяРеквизита, "Уровень") Тогда
			
			КолонкиТаблицы.Добавить(ИмяРеквизита);
			
		КонецЕсли;
	КонецЦикла;
	
	
	// новые колонки
	
	НовыеКолонки = Новый Массив;
	ИменаНовыхКолонок = Новый Массив;
	
	Для Каждого Элемент Из СоответствияИмен Цикл
		
		ИмяКолонки = Элемент.Ключ;
			
		Колонки.Добавить("Уровень" + ИмяКолонки, ТипЧисло);  // имя          тип          путь           заголовок   сохраняемый реквизит формы
		
		НовыеКолонки.Добавить(Новый РеквизитФормы("Уровень" + ИмяКолонки, ТипЧисло, "ТаблицаСкидок", Элемент.Значение, Истина));
		ИменаНовыхКолонок.Добавить("Уровень" + ИмяКолонки);
	КонецЦикла;
	
	// добавляемые реквизиты
	
	КолонкиДобавить = Новый Массив;
	Для Каждого Строка Из НовыеКолонки Цикл
		
		Если КолонкиТаблицы.Найти(Строка.Имя) = Неопределено Тогда  // в старых рекцизитах такого элемнета нет, нужно его добавить
			КолонкиДобавить.Добавить(Строка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	//удаляемые реквизиты
	
	КолонкиУдалить = Новый Массив;
	Для Каждого Строка Из КолонкиТаблицы Цикл
		
		Если ИменаНовыхКолонок.Найти(Строка) = Неопределено Тогда // старой колонки нету в новых значит удалим ее
			КолонкиУдалить.Добавить("ТаблицаСкидок." + Строка);
			Элементы.Удалить(Элементы.ТаблицаСкидок.ПодчиненныеЭлементы["Группа" + Строка]);
		КонецЕсли;
		
	КонецЦикла;
	
	ИзменитьРеквизиты(КолонкиДобавить, КолонкиУдалить);
	
	// Удалим колонки на форме
		
	//Пока Элементы.ТаблицаСкидок.ПодчиненныеЭлементы.Количество() > 2 Цикл
	//	Элементы.Удалить(Элементы.ТаблицаСкидок.ПодчиненныеЭлементы[Элементы.ТаблицаСкидок.ПодчиненныеЭлементы.Количество() - 1]);
	//КонецЦикла;
	
	// Добавим колонки на форме
	
	Для Каждого Строка Из КолонкиДобавить Цикл
			
		ИмяКолонки = Строка.Имя;
		                 					 
		НовГруппа =  ДобавитьГруппуФормы("Группа" + ИмяКолонки, Элементы.ТаблицаСкидок);
		
		ДобавитьПолеФормы(ИмяКолонки, "ТаблицаСкидок." + ИмяКолонки, НовГруппа);
		ДобавитьПолеФормы("Процент" + ИмяКолонки, "ТаблицаСкидок.Процент", НовГруппа);
		
	КонецЦикла;
	
	// Заполним строки
	
	Если Открыт Тогда
		 ЗагрузитьСписокСкидок(Таблица);
	Иначе	 
		// ИзменитьСписокСкидок(Таблица);
	КонецЕсли;

КонецПроцедуры
&НаСервере
Процедура ИзменитьСписокСкидок(Таблица);
	
	СоответствияУровней = ПолучитьСоответствияУровней();
	
	Для Каждого Строка Из ТаблицаСкидок Цикл
		
		НовСтрока = Таблица.Добавить();
		НовСтрока.НомерСтроки	= Таблица.Количество();
		НовСтрока.ЦеноваяГруппа	= Строка.ЦеноваяГруппа;
		НовСтрока.Процент		= "%";
		
		Для Каждого СтрокаУровень Из СписокУровней Цикл
			
			ИмяКолонки = СоответствияУровней[СтрокаУровень];
			Если ИмяКолонки <> Неопределено Тогда
		
				НовСтрока["Уровень" + ИмяКолонки] = Строка["Уровень" + ИмяКолонки];
			
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Загрузим в таблицу

	ТаблицаСкидок.Загрузить(Таблица);

КонецПроцедуры
&НаСервере
Процедура ЗагрузитьСписокСкидок(Таблица);
	
	СоответствияУровней = ПолучитьСоответствияУровней();
	
	Для Каждого Строка Из Объект.Скидки Цикл
		
		Строки = Таблица.НайтиСтроки(Новый Структура("ЦеноваяГруппа", Строка.ЦеноваяГруппа));
		
		Если Не Строки.Количество() Тогда
			НовСтрока = Таблица.Добавить();
			НовСтрока.НомерСтроки	= Таблица.Количество();
			НовСтрока.ЦеноваяГруппа = Строка.ЦеноваяГруппа;
			НовСтрока.Процент		= "%";
		Иначе
			НовСтрока = Строки[0];
		КонецЕсли;
		
		Если Не Строка.УровеньСкидки.Пустая() Тогда
			
			ИмяКолонки = СоответствияУровней[Строка.УровеньСкидки];
		
			Если ИмяКолонки <> Неопределено Тогда
		
				НовСтрока["Уровень" + ИмяКолонки] = Строка.ПроцентСкидки;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	// Загрузим в таблицу
	
	ТаблицаСкидок.Загрузить(Таблица);
	
КонецПроцедуры
&НаСервере
Процедура ЗагрузитьСписокУровней()
	
	ВремТаблица = Объект.Скидки.Выгрузить(,"УровеньСкидки");
	ВремТаблица.Свернуть("УровеньСкидки");
	
	СписокУровней.ЗагрузитьЗначения(ВремТаблица.ВыгрузитьКолонку("УровеньСкидки"));
	СписокУровней.СортироватьПоЗначению();	
КонецПроцедуры

&НаСервере
Процедура УдалитьЛишниеКолонки()

	// удаляем строки из табличной части у которых уровень был удален
	
	СоответствиеУровней = ПолучитьСоответствияУровней();
	Скидки			= Объект.Скидки;
	КолСтрок		= Скидки.Количество();
	
	Для Ном = 1 По КолСтрок Цикл
		
		Строка = Скидки[КолСтрок - Ном];
		Если СоответствиеУровней[Строка.УровеньСкидки] = Неопределено Тогда
			
			Скидки.Удалить(Строка);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТабличнуюЧасть() 
	
	Скидки = Объект.Скидки;
	
	Скидки.Очистить();
	
	СоответствиеУровней = ПолучитьСоответствияУровней();
	
	Для Каждого Строка Из ТаблицаСкидок Цикл
		
		ТекКатегория = Строка.ЦеноваяГруппа;
		
		Для Каждого СтрокаУровень Из СписокУровней Цикл
		    ТекУровень = СтрокаУровень.Значение;
			
			НоваяСтрока =  Скидки.Добавить();
			КолонкаУровень = "Уровень" + СоответствиеУровней[ТекУровень];
			НоваяСтрока.УровеньСкидки = ТекУровень;
		    НоваяСтрока.ЦеноваяГруппа = ТекКатегория;
			НоваяСтрока.ПроцентСкидки = Строка[КолонкаУровень];
		    
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаНачала = Объект.Дата;
	
	ЗагрузитьСписокУровней();
	СформироватьТаблицу(Истина);

КонецПроцедуры
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УдалитьЛишниеКолонки();
	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкидокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерСтроки = ТаблицаСкидок.Количество();
		ТаблицаСкидок[ТаблицаСкидок.Количество()-1].Процент = "%";
	КонецЕсли;
КонецПроцедуры
