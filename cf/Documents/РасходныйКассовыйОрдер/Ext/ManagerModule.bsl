
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	//Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Процесс);
	//ПолучитьТаблицуПоРезервам = 
	//		Не Ссылка.Процесс.Пустая() И
	//		ЗначениеЗаполнено(Заказ);
	
	Запрос = Новый Запрос(
	
	// ПАРАМЕТРЫ СИСТЕМЫ
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	// ШАПКА

	|ВЫБРАТЬ
	|	Процесс
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|" + 
	РаботаСКурсамиВалют.ПолучитьТекстЗапросаКурсыВалют() + "
	|;	
	// ВЗАИМОРАСЧЕТЫ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	&ВидДвиженияПриход		ВидДвижения,
	|	Док.Организация			Организация,
	|	Док.Партнер				Партнер,
	|	Док.Контрагент			Контрагент,
	|   ВЫБОР 
	|		КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПоставщику) 	ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Поставщик) 
	|		КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВозвратПокупателю) 	ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент)
	|	КОНЕЦ 					ФормаОтношений,
	|	Док.Сумма				Сумма, 
	|" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " КАК СуммаУпр
    |ИЗ
	|	Документ.РасходныйКассовыйОрдер Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка И Док.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	и (док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПоставщику) или ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВозвратПокупателю))  
	|;
	
	// ДЕНЕЖНЫЕ СРЕДСТВА
	
	|ВЫБРАТЬ
	|	&Период						КАК Период,
	|	&ВидДвиженияРасход			КАК ВидДвижения,
	|	Касса,
	|	Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	// ОБОРОТЫ ДЕНЕЖНЫХ СРЕДСТВ
	
	|ВЫБРАТЬ
	|	 &Период							КАК Период,
	|	 Док.Касса							КАК КассаСчет,
	|	 Док.СтатьяДДС					    КАК СтатьяДДС,
	|	Подразделение, Отдел, ЦфУ,
	|	-Док.Сумма							КАК Сумма, 
	|" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("-Док.Сумма") + " КАК СуммаУпр
	|                          
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	//// ОПЛАТЫ
	//
	//|ВЫБРАТЬ
	//|	&Период			Период,
	//|	Ссылка  	ДокументОплаты,
	//|	Заказ,
	//|	Ссылка.Партнер,
	//|	Ссылка.Организация,
	//|	-СУММА(Сумма) Сумма
	//|ИЗ
	//|	Документ.РасходныйКассовыйОрдер.РасшифровкаСуммы
	//|ГДЕ
	//|	Ссылка = &Ссылка И Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВозвратПокупателю) И Заказ <> Неопределено// И ДокументОплаты <> Неопределено
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка,
	//|	Заказ
	//|;
	//
	//// АВАНСЫ
	//
	//|ВЫБРАТЬ
	//|	&Период				Период,
	//|	&ВидДвиженияПриход	ВидДвижения,
	//|	Ссылка.Организация	Организация,
	//|	Ссылка.Партнер		Партнер,
	//|	Ссылка		ДокументОплаты,
	//|	-СУММА(Сумма)		Сумма
	//|ИЗ
	//|	Документ.РасходныйКассовыйОрдер.РасшифровкаСуммы
	//|ГДЕ
	//|	Ссылка = &Ссылка И Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВозвратПокупателю) И Заказ = Неопределено //И ДокументОплаты <> Неопределено
	//|СГРУППИРОВАТЬ ПО Ссылка
	//|;
	
	// ДОЛГИ КОНТРАГЕНТОВ
	
	//|ВЫБРАТЬ 
	//|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//|	ЕСТЬNULL(СуммаУпрОстаток, 0) + " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " Сумма
	//|ИЗ
	//|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//|
	//|ПРАВОЕ СОЕДИНЕНИЕ
	//|	(	ВЫБРАТЬ Дата, Организация, Контрагент, Ссылка, Сумма ИЗ Документ.РасходныйКассовыйОрдер ГДЕ Ссылка = &Ссылка
	//|		И Контрагент <> &ПустойКонтрагент) Док
	//|ПО ИСТИНА
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	//|;

	
	|// ДОЛГИ ПО ОТГРУЗКАМ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация КАК Организация,
	|	Док.Партнер КАК Партнер,
	|	Док.Контрагент КАК Контрагент,
	|	Расшифровка.Заказ КАК Заказ,
	|	Расшифровка.ДокументОтгрузки	КАК ДокументОтгрузки,
	|	-ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.ДокументОтгрузки КАК ДокументОтгрузки,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.РасходныйКассовыйОрдер.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.ВидОперации = &ВозвратПокупателя и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|;
	
	|	// Долги по заказам
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация 				КАК Организация,
	|	Док.Партнер 					КАК Партнер,
	|	&Менеджер					 	КАК Менеджер,
	|	Док.Контрагент 					КАК Контрагент,
	|	Расшифровка.Заказ 				КАК Заказ,
	|	-ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.РасходныйКассовыйОрдер.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.ВидОперации = &ВозвратПокупателя и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|");
	
	
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("Валюта", 			Ссылка.Валюта);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Оплата);
	Запрос.УстановитьПараметр("ФормаОтношений", 	?(Ссылка.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратПокупателю, Перечисления.ФормаОтношений.Клиент, Перечисления.ФормаОтношений.Поставщик));
	Запрос.УстановитьПараметр("ПустойКонтрагент", 	Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВозвратПокупателя",	Перечисления.ВидыОперацийРКО.ВозвратПокупателю);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("Взаиморасчеты", Пакет[3].Выгрузить());

	ДополнительныеСвойства.Вставить("ДенежныеСредства",	Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ОборотыДенежныхСредств",	Пакет[5].Выгрузить());
	//ДополнительныеСвойства.Вставить("Оплаты", Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("Авансы", Пакет[7].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов", Пакет[8].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", Пакет[6].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоЗаказам", Пакет[7].Выгрузить());
	
	

КонецПроцедуры

// Функция возвращает статью движения денежных средств по данным документа.
//
// Параметры: ДанныеДокумента - Структура.
//
// Возвращаемое значение: СправочникСсылка.СтатьяДвиженияДенежныхСредств.
//
//Функция ПолучитьСтатьюДвиженияДенежныхСредств(ДанныеДокумента)

//	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
//		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
//	Иначе
//		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(ДанныеДокумента.ХозяйственнаяОперация, ДанныеДокумента.Валюта);
//	КонецЕсли;
//	
//	Возврат СтатьяДвиженияДенежныхСредств;

//КонецФункции // ПолучитьСтатьюДвиженияДенежныхСредств() 


// Функция формирует табличный документ с печатной формой расходного ордера КО-2.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма КО-2.
//
Процедура Печать_Расходник(ТабличныйДокумент, Ссылка) Экспорт
	
	//Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходныйКассовыйОрдер.ПФ_MXL_КО2");
	Макет = Документы.РасходныйКассовыйОрдер.ПолучитьМакет("КассовыйОрдер");	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.Номер КАК Номер,
	|	Док.Организация КАК Организация,
	|	Док.Организация.НаименованиеПолное	 КАК НаименованиеОрганизации,
	|	Док.Организация.Наименование		 КАК НаименованиеОрганизацииСокращенное,
	|	Док.Контрагент КАК Контрагент,
	|	Док.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
	|	Док.ПоДокументу КАК РеквизитыДокументаУдостоверяющегоЛичность,
	|	Док.Основание КАК Основание,
	|	Док.Приложение КАК Приложение,
	|	Док.Сумма КАК Сумма,
	|	Док.Валюта КАК Валюта,
	|	Док.Валюта.Представление КАК ВалютаПредставление,
	|	Док.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный						         
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
	|	КОНЕЦ											 КАК Кассир,
	|	Док.Выдать КАК ФИОПолучателя,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер
	|	
	//|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	//|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|");
	
	
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		Если Не ПустаяСтрока(Выборка.НаименованиеОрганизацииСокращенное) Тогда
			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизацииСокращенное;
		Иначе
			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизации;
		КонецЕсли;
		
		ОбластьМакета.Параметры.НомерДокумента = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(
			Выборка.Номер);
		//СтатьяДвиженияДенежныхСредств = ПолучитьСтатьюДвиженияДенежныхСредств(Выборка);
		//ОбластьМакета.Параметры.ДебетСубсчет = СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет;
		
		ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
		Если ВалютаРегламентированногоУчета = Выборка.Валюта Тогда
			КредитСубсчет = "50.01";
		Иначе
			КредитСубсчет = "50.21";
		КонецЕсли;
		ОбластьМакета.Параметры.КредитСубсчет = КредитСубсчет;

		Сумма = Формат(Выборка.Сумма, "ЧЦ=15; ЧДЦ=2");
		Если ВалютаРегламентированногоУчета <> Выборка.Валюта Тогда
			Сумма = Сумма + " " + СокрЛП(Выборка.ВалютаПредставление);
		КонецЕсли;
		ОбластьМакета.Параметры.Сумма = Сумма;
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
			Выборка.Сумма, 
			Выборка.Валюта, 
			Ложь // ВыводитьСуммуБезКопеек
		);
		
		ОбластьМакета.Параметры.ФИОРуководителя = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Руководитель);
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОКассира = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Кассир);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
						
	КонецЦикла;
		
КонецПроцедуры // СформироватьПечатнуюФормуКО2()

//Процедура Печать_КассовыйОрдер(ТабличныйДокумент, Ссылка) Экспорт
//	
//	Макет = Документы.ПриходныйКассовыйОрдер.ПолучитьМакет("КассовыйОрдер");
//	
//	Запрос = Новый Запрос("
//	|ВЫБРАТЬ
//	|	Док.Ссылка КАК Ссылка,
//	|	Док.Дата КАК ДатаДокумента,
//	|	Док.Номер КАК Номер,
//	|	Док.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
//	|	Док.Организация.Наименование КАК НаименованиеОрганизацииСокращенное,
//	|	Док.Контрагент КАК Контрагент,
//	|	Док.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
//	|	Док.ПринятоОт КАК ПринятоОт,
//	|	Док.Основание КАК Основание,
//	|	Док.Приложение КАК Приложение,
//	|	Док.ВТомЧислеНДС КАК ВТомЧисле,
//	|	Док.СуммаДокумента КАК Сумма,
//	|	Док.Валюта КАК Валюта,
//	|	Док.Валюта.Представление КАК ВалютаПредставление,
//	|	Док.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
//	|	ВЫБОР КОГДА
//	|		Док.Ответственный.Организация = Док.Организация
//	|	ТОГДА
//	|		Док.Ответственный						         
//	|	ИНАЧЕ
//	|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
//	|	КОНЕЦ											 КАК Кассир,
//	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер
//	//|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
//	//|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
//	|	
//	|ИЗ
//	|	Документ.ПриходныйКассовыйОрдер КАК Док
//	|	ЛЕВОЕ СОЕДИНЕНИЕ
//	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
//	|	ПО ИСТИНА
//	|ГДЕ
//	|	Док.Ссылка = &Ссылка
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Номер
//	|");
//		
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
//	Выборка = Запрос.Выполнить().Выбрать();
//	Пока Выборка.Следующий() Цикл
//		
//		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
//		
//		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
//		ОбластьМакета.Параметры.Заполнить(Выборка);
//		
//		Если Не ПустаяСтрока(Выборка.НаименованиеОрганизацииСокращенное) Тогда
//			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизацииСокращенное;
//		Иначе
//			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизации;
//		КонецЕсли;
//		
//		Сумма = Формат(Выборка.Сумма, "ЧЦ=15; ЧДЦ=2");
//		ВалютаРегламентированногоУчета = Константы.ВалютаУправленческогоУчета.Получить();
//		Если ВалютаРегламентированногоУчета <> Выборка.Валюта Тогда
//			Сумма = Сумма + " " + СокрЛП(Выборка.ВалютаПредставление);
//		КонецЕсли;
//		ОбластьМакета.Параметры.Сумма = Сумма;
//		ОбластьМакета.Параметры.СуммаРубКоп = ФормированиеПечатныхФорм.СуммаРубКоп(
//			Выборка.Сумма, 
//			Выборка.Валюта,	
//			ВалютаРегламентированногоУчета
//		);
//		Если Выборка.Валюта <> ВалютаРегламентированногоУчета Тогда
//			ОбластьМакета.Параметры.СуммаРубКоп = ОбластьМакета.Параметры.СуммаРубКоп + " " + СокрЛП(Выборка.ВалютаПредставление); 
//		КонецЕсли;
//		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
//			Выборка.Сумма, 
//			Выборка.Валюта, 
//			Ложь // ВыводитьСуммуБезКопеек
//		);
//		ОбластьМакета.Параметры.НомерДокумента = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Выборка.Номер);
//		//СтатьяДвиженияДенежныхСредств = ПолучитьСтатьюДвиженияДенежныхСредств(Выборка);
//		//ОбластьМакета.Параметры.СубСчет = СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет;
//		
//		ВалютаРегламентированногоУчета = Константы.ВалютаУправленческогоУчета.Получить();
//		Если ВалютаРегламентированногоУчета = Выборка.Валюта Тогда
//			КодДебета = "50.01";
//		Иначе
//			КодДебета = "50.21";
//		КонецЕсли;
//		ОбластьМакета.Параметры.КодДебета = КодДебета;


//		Если ПустаяСтрока(Выборка.ВТомЧисле) Тогда
//			ОбластьМакета.Параметры.ВТомЧисле = "без налога (НДС)";
//		Иначе
//			Если Выборка.Валюта = ВалютаРегламентированногоУчета Тогда
//				ОбластьМакета.Параметры.ВТомЧисле = ОбластьМакета.Параметры.ВТомЧисле + " руб.";
//			Иначе
//				ОбластьМакета.Параметры.ВТомЧисле = ОбластьМакета.Параметры.ВТомЧисле + " " + СокрЛП(Выборка.ВалютаПредставление);
//			КонецЕсли;
//		КонецЕсли;
//		
//		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.ГлавныйБухгалтер);
//		ОбластьМакета.Параметры.ФИОКассира = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Кассир);
//		
//		ТабличныйДокумент.Вывести(ОбластьМакета);
//				
//	КонецЦикла;
//	
//КонецПроцедуры	