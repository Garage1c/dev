Функция ПолучитьСкладСписания() Экспорт Возврат СкладПолучатель КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ПриемТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Процесс);
	ПолучитьТаблицуПоРезервам = 
			Не Ссылка.Процесс.Пустая() И
			ЗначениеЗаполнено(Заказ);
			
	Если ПолучитьТаблицуПоРезервам Тогда
	
		Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура
		|ИЗ
		|	Документ.ПриемТоваров.Товары
		|ГДЕ
		|	Ссылка = &ДокументСсылка И
		|	НЕ ДокументРезерва.Дата ЕСТЬ NULL И
		|	Ссылка.Процесс.ЗаказСобран = ЛОЖЬ
		|";
		
	Иначе
		
		Возврат "ЛОЖЬ"; КонецЕсли;
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
	//Если Не РольДоступна("ПолныеПрава") Тогда

	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Процесс);
	//
	//КонтрольПроведения.ПроверитьТоварыВПути(
	//			ЭтотОбъект, 
	//			СкладОтправитель,
	//			СкладПолучатель,
	//			Процесс.Заказчик,
	//			?(ДополнительныеСвойства.ПараметрыСистемы.КонтрольОстатков, Отказ, Ложь),
	//			Заголовок);
	//			
	//КонтрольПроведения.ПроверитьПартииТоваров(ЭтотОбъект, СкладПолучатель, Отказ, Заголовок);
	//	
	//	//avdonin {{21.09.2010#
	//	//
	//	Если НЕ РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//		КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//	КонецЕсли;
	//	//}}avdonin
	//	
	////КонецЕсли;
		
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьПартииТоваров(ЭтотОбъект, СкладПолучатель, Отказ, Заголовок);
	//
	//КонтрольПроведения.ПроверитьТоварыНаСкладах(
	//		ЭтотОбъект, 
	//		СкладПолучатель, 
	//		?(ДополнительныеСвойства.ПараметрыСистемы.КонтрольОстатков, Отказ, Ложь),
	//		Заголовок);
	//		
	//КонтрольПроведения.ПроверитьТоварыВПути(
	//		ЭтотОбъект, 
	//		СкладОтправитель,
	//		СкладПолучатель,
	//		Процесс.Заказчик,
	//		?(ДополнительныеСвойства.ПараметрыСистемы.КонтрольОстатков, Отказ, Ложь),
	//		Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	////}}avdonin
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СкладПолучатель.Ячеестый Тогда
		
		ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтгрузкаТоваров") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Процесс, СкладОтправитель, СкладПолучатель, Дата");
		Перемещение = ДанныеЗаполнения.Процесс;
		Если ЗначениеЗаполнено(Перемещение) Тогда
			Товары.Загрузить(БизнесПроцессы.ПеремещениеТоваров.ПолучитьСостояниеТоваровПоЗаказчику(Перемещение, ДанныеЗаполнения.Дата));
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
