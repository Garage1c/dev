
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Артикул = 2;
	НоменклатураДляТаможни = 3;
	КоличествоВУпаковке = 6;
	Количество = 7;
	КоличествоМест = 8;
	ВесНеттоУпаковка = 9;
	ВесБруттоУпаковка = 10;
	
КонецПроцедуры

&НаСервере
Функция НайтиНоменклатуру(Артикул, НомерСтроки, стрОшибки = "")
	
	Запрос = Новый Запрос("ВЫБРАТЬ Артикул, Ссылка КАК Номенклатура ИЗ Справочник.Номенклатура ГДЕ Артикул = """ + Артикул + """");
	
	Попытка                      // мало ли что подусунули в артикул, поэтому через попытку...
		Рез = Запрос.Выполнить();
	Исключение
		стрОшибки = "Строка " + Строка(НомерСтроки) + ": Проверте правильность написания артикула, возможно там ковычка или иной инородный смивол - " + ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки;
	
	Если НЕ Рез.Пустой() Тогда
		
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		
		Возврат Новый Структура("Артикул, Номенклатура", Выборка.Артикул, Выборка.Номенклатура);
		
	КонецЕсли;
	
	стрОшибки = "Не найдено ни одного товара с артикулом " + Артикул;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СоздатьВыбранныйЭлемент(Текст, ИмяСправочника, СписокРеквизитов = "", СтрОшибки = "") Экспорт
	
	СписокРеквизитов = ?(ЗначениеЗаполнено(СписокРеквизитов), СписокРеквизитов, Новый Структура);	
	
	НовыйСправочник = Справочники[ИмяСправочника].СоздатьЭлемент();
	НовыйСправочник.Наименование = Текст;
	Для Каждого Реквизит Из СписокРеквизитов Цикл
		НовыйСправочник[Реквизит.Ключ] = Реквизит.Значение; 	
	КонецЦикла;
	
	Попытка
		НовыйСправочник.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при создании нового справочника
										|" + стрОшибки);
		Возврат Неопределено
	КонецПопытки;
	
	Возврат НовыйСправочник.Ссылка;
	
КонецФункции

&НаСервере
Функция НайтиУпаковку(Значение, Товар, ВесНетто, ВесБрутто, стрОшибки = "")
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка КАК Упаковка ИЗ Справочник.УпаковкиНоменклатуры 
							|ГДЕ Владелец = &Ссылка И Коэффициент = &Количество И ПометкаУдаления = Ложь
							|		И ВесНетто = &ВесНетто И ВесБрутто = &ВесБрутто");
	Запрос.УстановитьПараметр("Ссылка", Товар);
	Запрос.УстановитьПараметр("Количество", Значение);
	Запрос.УстановитьПараметр("ВесНетто", ВесНетто);
	Запрос.УстановитьПараметр("ВесБрутто", ВесБрутто);
	
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		Выборка = Рез.Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
			
			Возврат Выборка.Упаковка;
			
		КонецЕсли;
	КонецЕсли;

	Возврат СоздатьВыбранныйЭлемент(Товар.Наименование, "УпаковкиНоменклатуры", Новый Структура("Коэффициент, Владелец, ВесНетто, ВесБрутто", Значение, Товар, ВесНетто, ВесБрутто), СтрОшибки);
	
КонецФункции

&НаСервере
Функция НайтиНоменклатуруДляТаможни(Текст, стрОшибки = "")
	
	Ссылка = Справочники["НоменклатураДляТаможни"].НайтиПоНаименованию(Текст, Истина);
	
	Если Не Ссылка.Пустая() Тогда
		Возврат Ссылка;
	КонецЕсли;
	
	Возврат СоздатьВыбранныйЭлемент(Текст, "НоменклатураДляТаможни", ,стрОшибки);
	
КонецФункции
&НаСервере
Функция ПолучитьРасчетВеса(РасчетВеса)
Возврат РасчетВеса = Перечисления.ВидыРасчетаВеса.ПоУпаковкам;	
КонецФункции
&НаКлиенте
Процедура ВыгрузкаТНВЭД(Эксель)
	
	Таблица = ВладелецФормы.Товары;
	стрОшибки = "";
	
	Таблица.Очистить();
	
	ПоУпаковкам = ПолучитьРасчетВеса(ВладелецФормы.Объект.РасчетВеса);
	
	Лист = Эксель.Worksheets(1);
	КолВоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
		
	Для Сч = 2 По КолВоСтрок Цикл // первая строка - заголовок
		
		СтрокаАртикул = СокрЛП(Лист.Cells(Сч, Артикул).Value);
		Если ПустаяСтрока(СтрокаАртикул) Тогда
			Сообщить("Строка " + Строка(Сч) + ": Не указан артикул товара. Выгрузка данных по этой строке не произведена");
			Продолжить;
		КонецЕсли;
		
		стрОшибки = "";
		Рез = НайтиНоменклатуру(СокрЛП(Лист.Cells(Сч, Артикул).Value), Сч, стрОшибки);
		Если Рез <> Неопределено Тогда
			Строка = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, Рез);
		Иначе
			Сообщить(стрОшибки);
			Продолжить;
		КонецЕсли;
		
		// попытка записи числовых данных: если в ячейке не число, пропускаем

		Попытка  				
			Строка.Количество = Число(СокрЛП(Лист.Cells(Сч, Количество).Value)); 
		Исключение
			Сообщить("Колонка ""Количесто"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		Если ПоУпаковкам Тогда
		
			Попытка  				
				Строка.ВесНеттоУпаковка	= Число(СокрЛП(Лист.Cells(Сч, ВесНеттоУпаковка).Value));
			Исключение
				Сообщить("Колонка ""Вес Нетто упаковки"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
			
			Попытка  				
				Строка.ВесБруттоУпаковка 	= Число(СокрЛП(Лист.Cells(Сч, ВесБруттоУпаковка).Value));
			Исключение
				Сообщить("Колонка ""Вес Брутто упаковки"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
		Иначе
		
			Попытка  				
				Строка.ВесНеттоТовар	= Число(СокрЛП(Лист.Cells(Сч, ВесНеттоУпаковка).Value));
			Исключение
				Сообщить("Колонка ""Вес Нетто упаковки"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;
			                     
			Попытка  				
				Строка.ВесБруттоТовар 	= Число(СокрЛП(Лист.Cells(Сч, ВесБруттоУпаковка).Value));
			Исключение
				Сообщить("Колонка ""Вес Брутто упаковки"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
				Продолжить;
			КонецПопытки;

		КонецЕсли;	
			
		
		// Упаковки
		
		Попытка  				
			Строка.КоличествоВУпаковке = Число(СокрЛП(Лист.Cells(Сч, КоличествоВУпаковке).Value));
		Исключение
			Сообщить("Колонка ""Количесто в упаковке"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		Если Строка.КоличествоВУпаковке <> 0 Тогда
			
			стрОшибки = "";
			Упаковка = НайтиУпаковку(Строка.КоличествоВУпаковке, Строка.Номенклатура, Строка.ВесНеттоУпаковка, Строка.ВесБруттоУпаковка, стрОшибки);
			Если Упаковка <> Неопределено Тогда
				Строка.Упаковка = Упаковка;
				Иначе Сообщить("Не удалось создать упаковку для " + Строка.Номенклатура + " на " + Строка(Строка.КоличествоВУпаковке) + " ед. " + стрОшибки);
			КонецЕсли;
			
			ОкрКоличествоМест = Строка.Количество/Строка.КоличествоВУпаковке;	
			
		КонецЕсли;
		
		Попытка  				
			Строка.КоличествоМест = Число(СокрЛП(Лист.Cells(Сч, КоличествоМест).Value));
		Исключение
			Сообщить("Колонка ""Количесто мест"" - Ошибка преобразования значения ячейки к числовому типу данных: " + Строка.Номенклатура);
			Продолжить;
		КонецПопытки;
		
		Если Строка.КоличествоМест <> ОкрКоличествоМест Тогда
			Сообщить("""Количесвто мест"" вызывает сомнение: " + Строка.Номенклатура + " Мне кажется дложно быть - " + ОкрКоличествоМест + " мест");
		КонецЕсли;
			
		// Итоговые веса	
			
		Строка.ВесНеттоИтогУпаковка  = Строка.ВесНеттоУпаковка*Строка.КоличествоМест;
		Строка.ВесБруттоИтогУпаковка = Строка.ВесБруттоУпаковка*Строка.КоличествоМест;			
		
		// Номенклатура для таможни
		
		стрОшибки = "";
		Текст = СокрЛП(Лист.Cells(Сч, НоменклатураДляТаможни).Value);
		
		Если ПустаяСтрока(Текст) Тогда
			Продолжить;
		КонецЕсли;
		
		НоменклатураДляТаможниСсылка = НайтиНоменклатуруДляТаможни(Текст, стрОшибки);
		Если НоменклатураДляТаможниСсылка <> Неопределено Тогда
			Строка.НоменклатураДляТаможни = НоменклатураДляТаможниСсылка;
			Иначе Сообщить("Не удалось создать номенклатуру для таможни " + Текст + " " + стрОшибки);
		КонецЕсли;	

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаТНВЭД_врем(Эксель)
	
	Таблица = ВладелецФормы.Товары;
	стрОшибки = "";
	
	Таблица.Очистить();
	
	Лист = Эксель.Worksheets(1);
	КолВоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
		
	Для Сч = 2 По КолВоСтрок Цикл // первая строка - заголовок
		
		СтрокаАртикул = СокрЛП(Лист.Cells(Сч, Артикул).Value);
		Если ПустаяСтрока(СтрокаАртикул) Тогда
			Сообщить("Строка " + Строка(Сч) + ": Не указан артикул товара. Выгрузка данных по этой строке не произведена");
			Продолжить;
		КонецЕсли;
		
		стрОшибки = "";
		Рез = НайтиНоменклатуру(СокрЛП(Лист.Cells(Сч, Артикул).Value), Сч, стрОшибки);
		Если Рез <> Неопределено Тогда
			Строка = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, Рез);
		Иначе
			Сообщить(стрОшибки);
			Продолжить;
		КонецЕсли;
		
		ВладелецФормы.ПодборЗначений(Строка.ПолучитьИдентификатор());

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузку(Команда)
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		ОбщиеФункции.СообщитьТекст("Не выбран файл", "ИмяФайла", Объект);
		Возврат;
	КонецЕсли;
		
	// Получим эксель
	стрОшибки = "";	         
	Эксель = COMФункцииДиалогов.ОткрытьФайлЭкселя(ИмяФайла, стрОшибки);
	
	Если Эксель = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(стрОшибки);
		Возврат;
	КонецЕсли;
						  
	ВыгрузкаТНВЭД(Эксель);
	
	COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
	ОбщиеФункции.СообщитьТекст("Данные загружены.");
	//
	//ЭтаФорма.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Эксель (*.xls)|*.xls*";
	
	Если ДВ.Выбрать() Тогда
		
		ИмяФайла = ДВ.ПолноеИмяФайла;
		
	КонецЕсли;

КонецПроцедуры