
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() +Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	"
	|ВЫБРАТЬ
	|	Партнер, Контрагент
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|" + 
	РаботаСКурсамиВалют.ПолучитьТекстЗапросаКурсыВалют();
	
	
	Нтаб=Новый Структура;
	ТекНомер=2;	
		
	Если ИменаРегистров.Найти("Взаиморасчеты")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Взаиморасчеты",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+

		"ВЫБРАТЬ
		|	&Период					КАК Период,
		|	&ВидДвиженияРасход		КАК ВидДвижения,
		|	Док.Организация			КАК Организация,
		|	Док.Партнер				КАК Партнер,
		|	Док.Контрагент			КАК Контрагент,
		|	ВЫБОР 
		|		КОГДА ВидОперации = &ОплатаПокупателя 	ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент)
		|		КОГДА ВидОперации = &ВозвратПоставщика  ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Поставщик)
		|		ИНАЧЕ Неопределено
		|	КОНЕЦ 					ФормаОтношений,
		|	Док.Сумма				Сумма, 
		|" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " КАК СуммаУпр
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка И Док.ВидОперации В (&ОперацииДляВзаиморасчетов)"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ДенежныеСредства")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДенежныеСредства",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период						КАК Период,
		|	&ВидДвиженияПриход			КАК ВидДвижения,
		|	Док.БанковскийСчетОрганизации	КАК Касса,
		|	" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " Сумма
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
		|ГДЕ
		|	Ссылка = &Ссылка"
	КонецЕсли;	
	
	//Если ИменаРегистров.Найти("ОплатыПоБанковскимКартам")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("ОплатыПоБанковскимКартам",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	"ВЫБРАТЬ
	//	|	&Период							Период,
	//	| 	&ВидДвиженияРасход 				ВидДвижения,
	//	|	ВЫБОР КОГДА СУММА(Сумма) < 0 ТОГДА &Возврат ИНАЧЕ &Продажа КОНЕЦ ВидОперации,
	//	|	ДокументОтгрузки				ДокументОплаты,
	//	|	ВЫБОР КОГДА СУММА(Сумма) < 0 ТОГДА -СУММА(Сумма) ИНАЧЕ СУММА(Сумма) КОНЕЦ Сумма
	//	|ИЗ
	//	|	Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы
	//	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//    |                            НачалоУчетаПодтвержденийОперацийПоБК
	//    |                        ИЗ
	//    |                            Константы) Конст
	//	|	ПО ИСТИНА
	//	|ГДЕ
	//	|	Ссылка = &Ссылка И 
	//	|	Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПоБанковскойКарте) И
	//	|	Конст.НачалоУчетаПодтвержденийОперацийПоБК <= &Период 
	//	|СГРУППИРОВАТЬ ПО 
	//	|	ДокументОтгрузки"
	//КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ОборотыДенежныхСредств")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ОборотыДенежныхСредств",ТекНомер);
		
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период								КАК Период,
		|	Док.БанковскийСчетОрганизации		КАК КассаСчет,
		|	Док.СтатьяДвиженияДенежныхСредств   КАК СтатьяДДС,
		|	Док.Контрагент						КАК ФизЛицоПартнер,
		|	Подразделение, Отдел, ЦФУ,
		|	Док.Сумма	КАК Сумма,  " + 
			РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " КАК СуммаУпр
		|                          
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
		|ГДЕ
		|	Ссылка = &Ссылка"
	КонецЕсли;	
	
	
	//Если ИменаРегистров.Найти("Оплаты")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("Оплаты",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	
	//	"ВЫБРАТЬ
	//	|	&Период		Период,
	//	|	Ссылка 		ДокументОплаты,
	//	|	Заказ,
	//	|	СУММА(Сумма) Сумма
	//	|ИЗ
	//	|	Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы
	//	|ГДЕ
	//	|	Ссылка = &Ссылка И Ссылка.ВидОперации = &ОплатаПокупателя И Заказ <> Неопределено
	//	|СГРУППИРОВАТЬ ПО
	//	|	Ссылка,
	//	|	Заказ"
	//			
	//КонецЕсли;	
	//
	//
	//Если ИменаРегистров.Найти("Авансы")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("Авансы",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	"ВЫБРАТЬ
	//	|	&Период				Период,
	//	|	&ВидДвиженияПриход 	ВидДвижения,
	//	|	Ссылка.Организация	Организация,
	//	|	Ссылка.Партнер		Партнер,
	//	|	Ссылка 				ДокументОплаты,
	//	|	СУММА(Сумма)		Сумма
	//	|ИЗ
	//	|	Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы
	//	|ГДЕ
	//	|	Ссылка = &Ссылка И Ссылка.ВидОперации = &ОплатаПокупателя И Заказ = Неопределено 
	//	|СГРУППИРОВАТЬ ПО Ссылка"
	//КонецЕсли;	
	
	Если ИменаРегистров.Найти("ДенежныеСредстваВПути")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДенежныеСредстваВПути",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияРасход 	ВидДвижения,
		|	Контрагент		Контрагент,
		|	Сумма		Сумма,
		|	Значение(Перечисление.ВидыОперацииДенежныеСредстваВПути.ПеречислениеДСОтОператора) ВидОперации
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее
		|ГДЕ
		|	Ссылка = &Ссылка И Ссылка.ВидОперации = &ПоступлениеОтОператораПлатежнойСистемы"
	КонецЕсли;	
	
	
	//Если ИменаРегистров.Найти("ДолгиКонтрагентов")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("ДолгиКонтрагентов",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	"ВЫБРАТЬ 
	//	|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//	|	ЕСТЬNULL(СуммаУпрОстаток, 0) - " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " Сумма
	//	//|	ЕСТЬNULL(СуммаУпрОстаток, 0) СуммаВзаиморасчеты
	//	|ИЗ
	//	|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//	|
	//	|ПРАВОЕ СОЕДИНЕНИЕ
	//	|	(ВЫБРАТЬ Дата, Организация, Контрагент, Ссылка, Сумма ИЗ Документ.ПлатежноеПоручениеВходящее ГДЕ Ссылка = &Ссылка И Не Ссылка.ВидОперации = &ПоступлениеОтОператораПлатежнойСистемы) Док
	//	|ПО ИСТИНА
	//	|
	//	|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА"
	//КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ДолгиПоОтгрузкам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДолгиПоОтгрузкам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияРасход 	ВидДвижения,
		|	Док.Организация КАК Организация,
		|	Док.Партнер КАК Партнер,
		|	Док.Контрагент КАК Контрагент,
		|	Расшифровка.Заказ КАК Заказ,
		|	Расшифровка.ДокументОтгрузки	КАК ДокументОтгрузки,
		|	ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Расшифровка.Заказ КАК Заказ,
		|			Расшифровка.ДокументОтгрузки КАК ДокументОтгрузки,
		|			Расшифровка.Сумма КАК Сумма
		|		ИЗ
		|			Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы КАК Расшифровка
		|		ГДЕ
		|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ВидОперации = &ОплатаПокупателя"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ДолгиПоЗаказам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДолгиПоЗаказам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияРасход 	ВидДвижения,
		|	Док.Организация 				КАК Организация,
		|	Док.Партнер 					КАК Партнер,
		|	&Менеджер					 	КАК Менеджер,
		|	Док.Контрагент 					КАК Контрагент,
		|	Расшифровка.Заказ 				КАК Заказ,
		|	ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ПлатежноеПоручениеВходящее КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Расшифровка.Заказ КАК Заказ,
		|			Расшифровка.Сумма КАК Сумма
		|		ИЗ
		|			Документ.ПлатежноеПоручениеВходящее.РасшифровкаСуммы КАК Расшифровка
		|		ГДЕ
		|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ВидОперации = &ОплатаПокупателя"
	КонецЕсли;	
	
	
	
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	
	ОперацииДляВзаиморасчетов = Новый Массив;
	ОперацииДляВзаиморасчетов.Добавить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя);
	ОперацииДляВзаиморасчетов.Добавить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика);	
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("Валюта", 			Ссылка.Валюта);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Оплата);
	Запрос.УстановитьПараметр("ФормаОтношений", 	?(Ссылка.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика, Перечисления.ФормаОтношений.Поставщик, Перечисления.ФормаОтношений.Клиент));
	
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ОплатаПокупателя",	Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя);
	Запрос.УстановитьПараметр("ВозвратПоставщика",	Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика);
	Запрос.УстановитьПараметр("ПоступлениеОтОператораПлатежнойСистемы",	Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПоступлениеОтОператораПлатежнойСистемы);
	Запрос.УстановитьПараметр("Возврат", 			Перечисления.ВидыОперацийЧекККМ.Возврат);
	Запрос.УстановитьПараметр("Продажа", 			Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Запрос.УстановитьПараметр("ОперацииДляВзаиморасчетов", 	ОперацииДляВзаиморасчетов);
	
	
	Пакет = Запрос.ВыполнитьПакет();
	
	// Поместим авансовый платеж если расшифровка суммы не заполнена корректно
	//Долги = Пакет[11].Выгрузить();
	//Если Не Долги.Количество() И Ссылка.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя Тогда
	//	НовСтрока = Долги.Добавить();
	//	НовСтрока.Период 		= Ссылка.Дата;
	//	НовСтрока.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	//	НовСтрока.Организация 	= Ссылка.Организация;
	//	НовСтрока.Партнер 		= Ссылка.Партнер;
	//	НовСтрока.Контрагент 	= Ссылка.Контрагент;
	//	НовСтрока.Сумма 		= Ссылка.Сумма;
	//			
	//КонецЕсли;
	
	//Авансы = Пакет[8].Выгрузить();
	//Если Не Ссылка.РасшифровкаСуммы.Количество() И НЕ Ссылка.Партнер.Пустая() И Ссылка.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя Тогда
	//	НовСтрока = Авансы.Добавить();
	//	НовСтрока.Период 		= Ссылка.Дата;
	//	НовСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
	//	НовСтрока.ДокументОплаты = Ссылка; 
	//	НовСтрока.Организация 	= Ссылка.Организация;
	//	НовСтрока.Партнер 		= Ссылка.Партнер;
	//	НовСтрока.Сумма 		= Ссылка.Сумма;
	//КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
	Авансы=0;
	Если ДополнительныеСвойства.Свойство("Авансы",Авансы) Тогда		
		Если Не Ссылка.РасшифровкаСуммы.Количество() И НЕ Ссылка.Контрагент.Пустая() И Ссылка.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя Тогда
			НовСтрока = Авансы.Добавить();
			НовСтрока.Период 		= Ссылка.Дата;
			НовСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			НовСтрока.ДокументОплаты = Ссылка; 
			НовСтрока.Организация 	= Ссылка.Организация;
			НовСтрока.Контрагент 		= Ссылка.Контрагент;
			НовСтрока.Сумма 		= Ссылка.Сумма;
		КонецЕсли;
	КонецЕсли;


	//ДополнительныеСвойства.Вставить("Взаиморасчеты", 	Пакет[3].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДенежныеСредства", Пакет[4].Выгрузить());
	//ДополнительныеСвойства.Вставить("ОплатыПоБанковскимКартам", Пакет[5].Выгрузить());
	//ДополнительныеСвойства.Вставить("ОборотыДенежныхСредств", Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("Оплаты", Пакет[7].Выгрузить());
	//ДополнительныеСвойства.Вставить("Авансы", Авансы);
	//ДополнительныеСвойства.Вставить("ДенежныеСредстваВПути", Пакет[9].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов", Пакет[10].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",	Пакет[11].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиПоЗаказам", Пакет[12].Выгрузить());
	
	
КонецПроцедуры

Функция ЗаполнитьРасшифровкуСуммы(Ссылка) Экспорт
	
	// найдем висящие заказы или реализации и оплатим их
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Заказ,
	|	ДокументОтгрузки,
	|	СуммаПриход 			СуммаДолга,
	|	ВЫБОР КОГДА СуммаПриход = &Сумма ТОГДА 0
	|	ИНАЧЕ 1 КОНЕЦ			Порядок
	|ИЗ 
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Период,,, Контрагент = &Контрагент И Организация = &Организация И (Заказ <> Неопределено ИЛИ ДокументОтгрузки <> Неопределено))
	|УПОРЯДОЧИТЬ ПО Порядок");
	
    Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", Ссылка.Контрагент);
	Запрос.УстановитьПараметр("Сумма", Ссылка.Сумма);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	
	Оплаты = Новый ТаблицаЗначений;
	Оплаты.Колонки.Добавить("Заказ");
	Оплаты.Колонки.Добавить("ДокументОтгрузки");
	Оплаты.Колонки.Добавить("Сумма");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СколькоРаспределить =  Ссылка.Сумма; 
	
	Пока Выборка.Следующий() Цикл
		НовСтрока = Оплаты.Добавить();
		НовСтрока.Заказ = Выборка.Заказ;
		НовСтрока.ДокументОтгрузки = Выборка.ДокументОтгрузки;
		
		Если Выборка.СуммаДолга >= СколькоРаспределить Тогда
			НовСтрока.Сумма = СколькоРаспределить;
			Прервать;
		Иначе
			НовСтрока.Сумма = Выборка.СуммаДолга;
			СколькоРаспределить = СколькоРаспределить - НовСтрока.Сумма;
		КонецЕсли;
	 КонецЦикла;
	 
	 Возврат Оплаты;
	 
КонецФункции
