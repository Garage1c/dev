
&НаКлиенте
Процедура СкладыПометкаПриИзменении(Элемент)
//	ВсеСклады = КонвертацияТипов.ПолучитьОтмеченныеЗначенияСписка(Склады).Количество() = Склады.Количество();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(Параметры.Поставщик) Тогда Поставщик = Параметры.Поставщик; КонецЕсли;
	ОбновитьДинамическийСписок();
	СтруктураКолонокТовары  = Параметры.СтруктураКолонокТовары;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	//Склады = КонвертацияТипов.ПолучитьОтмеченныеЗначенияСпискаСписком(Склады);
	//Закрыть(Новый Структура("Склады, Поставщик, Производитель, ТолькоПодтверженные, ПроизводительНеЗаполнен, РезервПодЗаказ", Склады, Поставщик, Производитель.ВыгрузитьЗначения(), ТолькоПодтверженные, ПроизводительНеЗаполнен, РезервПодЗаказ));

	ОбновитьДинамическийСписок();
	
КонецПроцедуры

Функция ПолучитьПроизводителей()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ИЗ Справочник.Производители ГДЕ НЕ ПометкаУдаления УПОРЯДОЧИТЬ ПО Наименование");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ПроизводительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка =Ложь;	
	
	Производители 	= ПолучитьПроизводителей();
	СписокВыбора 	= Новый СписокЗначений;
	
	// Проставим отметки
	
	СтарыеОтметки = Новый Массив;
	
	СписокВыбора.ЗагрузитьЗначения(Производители);
	
	Для Каждого ЭлементСписка Из СписокВыбора Цикл
		
		ЭлементСписка.Пометка = Производитель.НайтиПоЗначению(ЭлементСписка.Значение) <> Неопределено;
		Если ЭлементСписка.Пометка Тогда
			СтарыеОтметки.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// Выберем
	
	Если СписокВыбора.ОтметитьЭлементы("Выбор производителей:") Тогда 
		
		НовыеОтметки = Новый Массив;
		
		Производитель.Очистить();
		Для Каждого ЭлементСписка Из СписокВыбора Цикл
			Если ЭлементСписка.Пометка Тогда
				
				ВыбранноеЗначение = ЭлементСписка.Значение;
				
				Производитель.Добавить(ВыбранноеЗначение);
				
				Если СтарыеОтметки.Найти(ВыбранноеЗначение) = Неопределено Тогда
					НовыеОтметки.Добавить(ВыбранноеЗначение);
				КонецЕсли;
				
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли;
	//ПроизводительНачалоВыбораНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
		
	Если ЗначениеЗаполнено(Параметры.Поставщик) Тогда
		Настройки.Удалить("Поставщик"); КонецЕсли;
	
	СкладыСохр = Настройки["Склады"];
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ИЗ Справочник.Склады ГДЕ НЕ ВАрхив И Не ПометкаУдаления УПОРЯДОЧИТЬ ПО Наименование");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл Склады.Добавить(Выборка.Ссылка,, СкладыСохр.НайтиПоЗначению(Выборка.Ссылка) <> Неопределено); КонецЦикла;
	
	Настройки.Удалить("Склады");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ Склады.Количество() Тогда ЗаполнитьСписокСкладов(); КонецЕсли;
	ОбновитьДинамическийСписок();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСкладов()

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ИЗ Справочник.Склады ГДЕ НЕ ВАрхив И Не ПометкаУдаления УПОРЯДОЧИТЬ ПО Наименование");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл Склады.Добавить(Выборка.Ссылка,, Истина); КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбновитьДинамическийСписок()
	
	Список.Параметры.УстановитьЗначениеПараметра("ФлагПроизводительНеЗаполнен", ПроизводительНеЗаполнен); 
	Список.Параметры.УстановитьЗначениеПараметра("ПустойПроизводитель", Справочники.Производители.ПустаяСсылка()); 
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоПодтверженные", ТолькоПодтверженные); 
	Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоПроизводителю", НЕ ПроизводительНеЗаполнен И Булево(Производитель.Количество())); 
	Список.Параметры.УстановитьЗначениеПараметра("Производитель", Производитель); 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработкаВыбораСтроки(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСтроки(ВыбраннаяСтрока)
	ВыбраннаяСтрока = Элементы.Список.ДанныеСтроки(ВыбраннаяСтрока);
	Цена = 0;
	Количество = 1;
	Упаковка = Неопределено;
		// если необходимо заполнить упаковку (для заказов поставщику)
	Если СтруктураКолонокТовары.ЕстьУпаковка Тогда
				
		Упаковка	= РаботаСНоменклатурой.ПолучитьУпаковкуПоставщика(ВыбраннаяСтрока.Номенклатура);
		Если НЕ Упаковка.Пустая() Тогда
			Цена = РаботаСНоменклатурой.ПолучитьЦену(ВыбраннаяСтрока.Номенклатура, СтруктураКолонокТовары.ТипЦен, СтруктураКолонокТовары.Валюта, Упаковка,, СтруктураКолонокТовары.ЕстьАкция);
			//Если СтруктураКолонокТовары.СуммаВключаетНДС <> ЦенаВключаетНДС Тогда
			//	Цена = РаботаСНоменклатурой.ПолучитьЦенуСУчетомНДС(Цена, РаботаСНоменклатурой.ПолучитьСтавкуНДСНоменклатуры(ВыбраннаяСтрока), , ЦенаВключаетНДС) КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

	Если Цена = 0 Тогда
		
		// берем цену из текущих данных
		//Цена = ?(СтруктураКолонокТовары.ЕстьАкция И НЕ ЦенаПоАкцииОтдельно, Элементы.Список.ТекущиеДанные.Цена, Элементы.Список.ТекущиеДанные.ЦенаБезАкции);
		
		Цена = РаботаСНоменклатурой.ПолучитьЦену(ВыбраннаяСтрока.Номенклатура, СтруктураКолонокТовары.ТипЦен, СтруктураКолонокТовары.Валюта, Упаковка,, СтруктураКолонокТовары.ЕстьАкция);
		//Если СтруктураКолонокТовары.СуммаВключаетНДС <> ЦенаВключаетНДС Тогда
		//	Цена = РаботаСНоменклатурой.ПолучитьЦенуСУчетомНДС(Цена, РаботаСНоменклатурой.ПолучитьСтавкуНДСНоменклатуры(ВыбраннаяСтрока), , ЦенаВключаетНДС) КонецЕсли;
		

	Если ЗапрашиватьЦену И ЗапрашиватьКоличество Тогда
		
		ВозврЗначение = ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВводаКоличестваЦены", 
					Новый Структура("Количество, Цена, ЗапрашиватьКоличество, ЗапрашиватьЦена", Количество, Цена, Истина, Истина),
					ЭтаФорма,,,,
					Новый ОписаниеОповещения("ОбработкаВводаКоличестваИЦены", ЭтаФорма, Новый Структура("ВыбраннаяСтрока, Упаковка", ВыбраннаяСтрока.Номенклатура, Упаковка))
					);
			Возврат;
						
	ИначеЕсли ЗапрашиватьЦену Тогда
			
		Если Не ВвестиЧисло(Цена, НСтр("ru='Цена:'; de='Preis:'"),15,2) Тогда Возврат; КонецЕсли;
		
	КонецЕсли;
	
	КонецЕсли;
		
	Если ЗапрашиватьКоличество Тогда
			
		Если Не ВвестиЧисло(Количество, НСтр("ru='Количество:'; de='Quantität:'"),15,3) Тогда Возврат; КонецЕсли;
			
	КонецЕсли;
	
	ОбработкаСтрокиТовары(Количество, Цена, ВыбраннаяСтрока.Номенклатура, Упаковка);	

КонецПроцедуры
&НаКлиенте
Процедура ОбработкаВводаКоличестваИЦены(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
				
		ОбработкаСтрокиТовары(Результат.Количество, Результат.Цена, Параметры.ВыбраннаяСтрока, Параметры.Упаковка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСтрокиТовары(Количество, Цена, ВыбраннаяСтрока, Упаковка = Неопределено)
	
	// Поищем
	
	Строки = Товары.НайтиСтроки(Новый Структура("Номенклатура", ВыбраннаяСтрока));
	
	// Отработаем новую строку
	
	Если Не Строки.Количество() Тогда
		
		НовСтрока = Товары.Добавить();
		НовСтрока.Номенклатура 	= ВыбраннаяСтрока;
		
		Если СтруктураКолонокТовары.ЕстьЦена Тогда

			НовСтрока.Цена = Цена;
			
		КонецЕсли;
		
		Если СтруктураКолонокТовары.ЕстьУпаковка Тогда
			НовСтрока.Упаковка		= Упаковка;
		КонецЕсли;
					
		ФункцииФормДокументов.НоменклатураПриИзменении(НовСтрока, СтруктураКолонокТовары, НовСтрока,, Ложь,,,Ложь);
		
		Строки.Добавить(НовСтрока);
		
	КонецЕсли;
	
	// Обработаем добавленные строки
	
	Для Каждого Строка Из Строки Цикл
		
		Строка.Количество = Строка.Количество + Количество;
		//ФункцииФормДокументов.РассчитатьСуммыТабличныхЧастей(Строка, СтруктураКолонокТовары);
		ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(Строка, СтруктураКолонокТовары);
		
	КонецЦикла;			
	
	//ОбновитьИнформационнуюНадпись();
	Элементы.Товары.ТекущаяСтрока = Товары.Индекс(Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЗаказ(Команда)
	Закрыть(ПоместитьТоварыВХранилище());
КонецПроцедуры
Функция ПоместитьТоварыВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(
					Товары.Выгрузить(), 
					УникальныйИдентификатор);
КонецФункции


