
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	Нтаб=Новый Структура;
	ТекНомер = 1;	
	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + Символы.ПС + ";" + Символы.ПС + "
	|ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|	Документ.ЗаказПоставщику
	|ГДЕ
	|	Ссылка = &Ссылка";
	
	
	Если ИменаРегистров.Найти("ЗаказыПоставщикам")<>Неопределено ИЛИ ПоВсем Тогда ТекНомер=ТекНомер+1;
		
		Нтаб.Вставить("ЗаказыПоставщикам",ТекНомер);
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС+ ";" + Символы.ПС + "
		
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	Ссылка КАК ЗаказПоставщику,
		|	Номенклатура,
		|	Упаковка,
		|	Цена,
		|	СтавкаНДС,
		|	СУММА(Количество) КАК Количество,
		|	СУММА(Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары 
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Номенклатура,
		|	Упаковка,
		|	Цена,
		|	СтавкаНДС"
	
	КонецЕсли;
	
	Если ИменаРегистров.Найти("РазмещениеЗаказов")<>Неопределено ИЛИ ПоВсем Тогда ТекНомер=ТекНомер+1;
		
		Нтаб.Вставить("РазмещениеЗаказов",ТекНомер);
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС+ ";" + Символы.ПС + "
	
		|ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход  КАК ВидДвижения,
		|	Очередь 			КАК Очередь,
		|	Размещение			КАК Заказ,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество)	Количество
	    |ИЗ
		|	Документ.ЗаказПоставщику.Резервы
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Размещение,
		|	Очередь,
		|	Номенклатура,
		|	Упаковка
		|"
	КонецЕсли;
	
	Если ИменаРегистров.Найти("РазмещениеЗаказовВПути")<>Неопределено ИЛИ ПоВсем Тогда ТекНомер=ТекНомер+1;
		
		Нтаб.Вставить("РазмещениеЗаказовВПути",ТекНомер);
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС+ ";" + Символы.ПС + "
	

		|ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход  КАК ВидДвижения,
		|	Очередь				КАК Очередь,
		|	Размещение			КАК Размещение,			
		|	Номенклатура		КАК Номенклатура,
		|	Упаковка			КАК Упаковка,
		|	Ссылка				КАК ЗаказПоставщику,
		|	СУММА(Количество)	Количество
	    |ИЗ
		|	Документ.ЗаказПоставщику.Резервы
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Очередь,
		|	Размещение,
		|	Номенклатура,
		|	Упаковка
		|"
	КонецЕсли;
	
	Если ИменаРегистров.Найти("РасчетныеСрокиДвиженияЗаказа")<>Неопределено ИЛИ ПоВсем Тогда ТекНомер=ТекНомер+1;
		
		Нтаб.Вставить("РасчетныеСрокиДвиженияЗаказа",ТекНомер);
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС+ ";" + Символы.ПС + "
	

          |ВЫБРАТЬ
          |	&Ссылка,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ВЫРАЗИТЬ(ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство / 2 КАК ЧИСЛО(15, 0))), ДЕНЬ) КАК СерединаЭтапаПроизводстваТоваров,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство), ДЕНЬ) КАК ДатаПроизводстваТоваров,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство + Заказ.ПартнерСрокПодготовкиКОтгрузке), ДЕНЬ) КАК ДатаОтгрузкиВПуть,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство + Заказ.ПартнерСрокПодготовкиКОтгрузке + (ВЫРАЗИТЬ(Заказ.ПартнерСрокВПути / 2 КАК ЧИСЛО(15, 0)))), ДЕНЬ) КАК СерединаЭтапаВПути,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство + Заказ.ПартнерСрокПодготовкиКОтгрузке + Заказ.ПартнерСрокВПути), ДЕНЬ) КАК ДатаПриходаНаТаможню,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство + Заказ.ПартнерСрокПодготовкиКОтгрузке + Заказ.ПартнерСрокВПути + КоличествоДнейНаТаможне.Значение), ДЕНЬ) КАК ДатаВыпускаСТаможни,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Заказ.Дата, ДЕНЬ, ПроизводствоНоменклатуры.НоменклатураВремяНаПроизводство + Заказ.ПартнерСрокПодготовкиКОтгрузке + Заказ.ПартнерСрокВПути + КоличествоДнейНаТаможне.Значение + КоличествоДнейНаДоставкуСТаможни.Значение), ДЕНЬ) КАК ДатаРасчетногоПоступления,
          |	Инвойс.Дата КАК ДатаОтгрузкиВПутьПоИнвойсу,
          |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Инвойс.Дата, ДЕНЬ, ВЫРАЗИТЬ(Заказ.ПартнерСрокВПути / 2 КАК ЧИСЛО(15, 0))), ДЕНЬ) КАК СерединаЭтапаВПутиПоИнвойсу
          |ИЗ
          |	Константа.КоличествоДнейНаДоставкуСТаможни КАК КоличествоДнейНаДоставкуСТаможни,
          |	Константа.КоличествоДнейНаТаможне КАК КоличествоДнейНаТаможне,
          |	(ВЫБРАТЬ
          |		ЗаказПоставщику.Ссылка КАК Ссылка,
          |		ЗаказПоставщику.Дата КАК Дата,
          |		ЗаказПоставщику.Контрагент.СрокПодготовкиКОтгрузке КАК ПартнерСрокПодготовкиКОтгрузке,
          |		ЗаказПоставщику.Контрагент.СрокВПути КАК ПартнерСрокВПути
          |	ИЗ
          |		Документ.ЗаказПоставщику КАК ЗаказПоставщику
          |	ГДЕ
          |		ЗаказПоставщику.Ссылка = &Ссылка) КАК Заказ
          |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
          |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнвойсТовары.Ссылка) КАК Ссылка,
          |			МАКСИМУМ(ИнвойсТовары.Ссылка.Дата) КАК Дата,
          |			ИнвойсТовары.ЗаказПоставщику КАК ЗаказПоставщику
          |		ИЗ
          |			Документ.Инвойс.Товары КАК ИнвойсТовары
          |		ГДЕ
          |			ИнвойсТовары.ЗаказПоставщику = &Ссылка
          |		
          |		СГРУППИРОВАТЬ ПО
          |			ИнвойсТовары.ЗаказПоставщику) КАК Инвойс
          |		ПО Заказ.Ссылка = Инвойс.ЗаказПоставщику
          |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
          |			МАКСИМУМ(ЗаказПоставщикуТовары.Номенклатура.ВремяНаПроизводство) КАК НоменклатураВремяНаПроизводство,
          |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказПоставщикуТовары.Номенклатура) КАК Номенклатура,
          |			ЗаказПоставщикуТовары.Ссылка КАК Ссылка
          |		ИЗ
          |			Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
          |		ГДЕ
          |			ЗаказПоставщикуТовары.Ссылка = &Ссылка
          |		
          |		СГРУППИРОВАТЬ ПО
          |			ЗаказПоставщикуТовары.Ссылка) КАК ПроизводствоНоменклатуры
          |		ПО Заказ.Ссылка = ПроизводствоНоменклатуры.Ссылка
		  |"
	КонецЕсли;
	
	Если ИменаРегистров.Найти("ДолгиПоЗаказамПоставщику")<>Неопределено ИЛИ ПоВсем Тогда ТекНомер=ТекНомер+1;
		
		Нтаб.Вставить("ДолгиПоЗаказамПоставщику",ТекНомер);
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС+ ";" + Символы.ПС + "

		
		|ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияПриход 	ВидДвижения,
		|	Контрагент,
		|	Ссылка				ЗаказПоставщику,
		|   Сумма	
		|ИЗ Документ.ЗаказПоставщику
		|ГДЕ
		|	Ссылка = &Ссылка И КонтролироватьОплату					  
		|"
		
	КонецЕсли;	
		
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);

	Пакет = Запрос.ВыполнитьПакет();
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	//ДополнительныеСвойства.Вставить("ЗаказыПоставщикам", 	Пакет[0].Выгрузить());
	//ДополнительныеСвойства.Вставить("РазмещениеЗаказов", 	Пакет[1].Выгрузить());
	//ДополнительныеСвойства.Вставить("РазмещениеЗаказовВПути", 	Пакет[2].Выгрузить());

	//ДополнительныеСвойства.Вставить("РасчетныеСрокиДвиженияЗаказа", Пакет[3].Выгрузить());
	//   ДополнительныеСвойства.Вставить("ДолгиПоЗаказамПоставщику", 	Пакет[4].Выгрузить());
	
	
	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
КонецПроцедуры

Процедура Печать_ЗаказПоставщику(ТабличныйДокумент, Ссылка) Экспорт
		
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 	
	//"/////////////////////////////////////////
		//|// ШАПКА
		//|
		//|ВЫБРАТЬ
		//|	Рег.ЗаказПоставщику.Ссылка                                       КАК Ссылка,
		//|	Рег.ЗаказПоставщику.Номер                                        КАК Номер,
		//|	Рег.ЗаказПоставщику.Дата                                         КАК Дата,
		//|	Рег.ЗаказПоставщику.Организация                                  КАК Организация,                                                   
		//|	Рег.ЗаказПоставщику.УчитыватьНДС 								 КАК УчитыватьНДС,
		//|	Рег.ЗаказПоставщику.Контрагент                                   КАК Контрагент,
		//|	Рег.ЗаказПоставщику.СуммаВключаетНДС                             КАК СуммаВключаетНДС,
		//|	Рег.ЗаказПоставщику.Валюта                                       КАК Валюта,
		//|	Рег.ЗаказПоставщику.Ответственный						         КАК Менеджер,
		//|	Рег.ЗаказПоставщику.Комментарий                     			 КАК ДополнительнаяИнформация,
		//|	Рег.ЗаказПоставщику.ДатаОплаты                                   КАК ДатаОплаты
		//|ИЗ
		//|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику = &Ссылка) КАК Рег
		//|;
		//|////////////////////////////////////////
		//|// ТОВАРЫ	
		//|
		//|ВЫБРАТЬ
		//|	ЕСТЬNULL(Док.НомерСтроки, 0) 								НомерСтроки,	
		//|	Рег.Номенклатура, 		
		//|	Рег.Номенклатура.Код                                      КАК Код,
		//|	Рег.Номенклатура.Артикул                                  КАК Артикул,
		//|	Рег.Номенклатура.НаименованиеПолное                       КАК НаименованиеПолное,
		//|	Рег.Номенклатура.ЕдиницаИзмерения                         КАК ЕдиницаИзмерения,
		//|	Рег.КоличествоОстаток                                     КАК Количество,
		//|	Рег.СуммаОстаток                                          КАК Сумма,
		//|	ЕСТЬNULL(Док.СуммаНДС, 0)                                 КАК СуммаНДС,
		//|	ЕСТЬNULL(Док.Цена,	0)                                    КАК Цена
		//|ИЗ
		//|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&Дата1, ЗаказПоставщику = &Ссылка) КАК Рег
		//|	ЛЕВОЕ СОЕДИНЕНИЕ
		//|		(	ВЫБРАТЬ
		//|				НомерСтроки,
		//|				Номенклатура,
		//|				Количество,		                                  
		//|				Цена,                                                 
		//|				Сумма,                                               
		//|				СуммаНДС                                              
		//|			ИЗ
		//|				Документ.ЗаказПоставщику.Товары 
		//|			ГДЕ
		//|				Ссылка = &Ссылка) Док
		//|ПО 
		//|	Рег.Номенклатура = Док.Номенклатура
		//|";
		"ВЫБРАТЬ
		|	Док.Ссылка                                       КАК Ссылка,
		|	Док.Номер                                        КАК Номер,
		|	Док.Дата                                         КАК Дата,
		|	Док.Организация                                  КАК Организация,                                                   
		|	Док.УчитыватьНДС 								 КАК УчитыватьНДС,
		|	Док.Контрагент                                   КАК Контрагент,
		|	Док.СуммаВключаетНДС                             КАК СуммаВключаетНДС,
		|	Док.Валюта                                       КАК Валюта,
		|	ВЫБОР КОГДА
		|		Док.Ответственный.Организация = Док.Организация
		|	ТОГДА
		|		Док.Ответственный						         
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
		|	КОНЕЦ											 КАК Менеджер,
		|	Док.Комментарий                     			 КАК ДополнительнаяИнформация,
		|	Док.ДатаОплаты                                   КАК ДатаОплаты,
		|	Док.Товары.(
		|				НомерСтроки,
		|				АртикулПоставщика,
		|				Номенклатура,		
		|				Номенклатура.Код                                      КАК Код,
		|				Номенклатура.Артикул                                  КАК Артикул,
		|				Номенклатура.НаименованиеПолное                       КАК НаименованиеПолное,
		|				Номенклатура.ЕдиницаИзмерения                         КАК ЕдиницаИзмерения,
		|				Количество,		                                  
		|				Цена,                                                 
		|				Сумма,                                               
		|				СуммаНДС)                                              
		|ИЗ
		|	Документ.ЗаказПоставщику Док 
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|";
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	Если НЕ ДанныеПечати.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("ЗаказПоставщику");
	
	// ЗАГОЛОВОК
		
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Заказ поставщику'"));
	ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	// ПОСТАВЩИК
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);	
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// ПОКУПАТЕЛЬ
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		
	СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// ТАБЛИЦА

	ТаблицаТовары = ДанныеПечати.Товары.Выгрузить();
	ТаблицаТовары.Сортировать("НомерСтроки");
	
	КолонкаКодов  = "" ; // заглушка //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	КолонкаКодов = "Артикул";
	ВыводитьКоды  = ЗначениеЗаполнено(КолонкаКодов);
		
	ОбластьКолонкаТовар = Макет.Область("Товар");
			
	Если Не ВыводитьКоды Тогда                                                          
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.14;
	КонецЕсли;
	
	// ШАПКА ТАБЛИЦЫ
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодыПоставщика = Макет.ПолучитьОбласть("ШапкаТаблицы|КодыПоставщика");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
	ТабличныйДокумент.Вывести(ОбластьНомера);
	
	ОбластьКодыПоставщика.Параметры.ИмяКода = КолонкаКодов;
	ТабличныйДокумент.Присоединить(ОбластьКодыПоставщика);
	
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
		
	ТабличныйДокумент.Присоединить(ОбластьТовар);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
	
	// СТРОКИ ТАБЛИЦЫ
	
	ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
	ОбластьКодыПоставщика = Макет.ПолучитьОбласть("СтрокаТаблицы|КодыПоставщика");
	ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
	ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
	
	Сумма          = 0;
	СуммаНДС       = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;
		
	НомерСтроки = 0;
		
	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
						
		НомерСтроки = НомерСтроки + 1;
			
		ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
		ТабличныйДокумент.Вывести(ОбластьНомера);

		ОбластьКодыПоставщика.Параметры.КодПоставщика = СтрокаТовары.АртикулПоставщика;
		ТабличныйДокумент.Присоединить(ОбластьКодыПоставщика);

		Если ВыводитьКоды Тогда
				ИмяКолонки = КолонкаКодов;
				
				ОбластьКодов.Параметры.Артикул = СтрокаТовары[ИмяКолонки];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ОбластьТовар.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.НаименованиеПолное);
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		ОбластьДанных.Параметры.Заполнить(СтрокаТовары);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		Сумма          = Сумма      + СтрокаТовары.Сумма;
		СуммаНДС       = СуммаНДС   + СтрокаТовары.СуммаНДС;
			
	КонецЦикла;
	
	// ПОДВАЛ ТАБЛИЦЫ
	
	ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
	ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
		
	ТабличныйДокумент.Вывести(ОбластьНомера);
		
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
		
	ТабличныйДокумент.Присоединить(ОбластьТовар);
				
	ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
		
	// ПОДВАЛ НДС
	
	Если ДанныеПечати.УчитыватьНДС Тогда
			
		ОбластьНомера      = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
		ОбластьКодов       = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
		ОбластьТовар       = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
		ОбластьДанных      = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
			
		ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.СуммаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
		ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
	
	КонецЕсли;

	// СУММА ПРОПИСЬЮ
	
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(ДанныеПечати.СуммаВключаетНДС, 0, СуммаНДС);
		
	ИтоговаяСтрока = НСтр("ru='Всего наименований %Количество%, на сумму %Сумма%'");
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Количество%", НомерСтроки);
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Сумма%",      ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
	ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ
	
	Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформация) Тогда	
		
		ОбластьМакета                                    = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
		ОбластьМакета.Параметры.ДополнительнаяИнформация = ДанныеПечати.ДополнительнаяИнформация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
	// ПОДВАЛ ЗАКАЗА
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.ФИОМенеджер = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер);
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
						
КонецПроцедуры

Функция УстановитьСостояния(масЗаказов = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Ост.ЗаказПоставщику Заказ,
	|	ВЫБОР 
//	|		КОГДА Ост.КоличествоРасход = 0 ТОГДА 															&СостояниеОткрыт
														// Когда не было инвойсов
	|		КОГДА ЕСТЬNULL(Путь.КоличествоПриход,0) = 0 ТОГДА	
	|			ВЫБОР
	|				КОГДА Ост.КоличествоКонечныйОстаток = 0 ТОГДА											&СостояниеПринят
	|				ИНАЧЕ																					&СостояниеПринятЧастично
	|			КОНЕЦ									
														// Когда были инвойсы
														
	|		КОГДА Ост.КоличествоКонечныйОстаток = 0 И ЕСТЬNULL(Путь.КоличествоКонечныйОстаток,0) = 0 ТОГДА 	&СостояниеПринят
	|
	|		КОГДА Ост.КоличествоКонечныйОстаток = 0 И ЕСТЬNULL(Путь.КоличествоРасход,0) = 0 ТОГДА 			&СостояниеВПути
	|		КОГДА ЕСТЬNULL(Путь.КоличествоРасход,0) = 0 ТОГДА 												&СостояниеВПутиЧастично
	|		ИНАЧЕ 																							&СостояниеПринятЧастично
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(,,,," + ?(масЗаказов = Неопределено, "", "ЗаказПоставщику В(&Заказы)") + ") Ост
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыПоставщиковВПути.ОстаткиИОбороты(,,,," + ?(масЗаказов = Неопределено, "", "ЗаказПоставщику В(&Заказы)") + ") Путь
	|ПО
	|	Ост.ЗаказПоставщику = Путь.ЗаказПоставщику
	|ГДЕ Ост.КоличествоРасход > 0 
	|");
	
	Запрос.УстановитьПараметр("Заказы", 					масЗаказов);
	Запрос.УстановитьПараметр("СостояниеОткрыт", 			Перечисления.СостоянияЗаказа.Открыт);
	Запрос.УстановитьПараметр("СостояниеПринят", 			Перечисления.СостоянияЗаказа.Принят);
	Запрос.УстановитьПараметр("СостояниеПринятЧастично", 	Перечисления.СостоянияЗаказа.ПринятЧастично);
	Запрос.УстановитьПараметр("СостояниеВПути", 			Перечисления.СостоянияЗаказа.ВПути);
	Запрос.УстановитьПараметр("СостояниеВПутиЧастично", 	Перечисления.СостоянияЗаказа.ВПутиЧастично);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не Заказы.УстановитьСостояниеЗаказа(Выборка.Заказ, Выборка.Состояние) Тогда
			Возврат Ложь; КонецЕсли; КонецЦикла;
	
	Возврат Истина;
	
КонецФункции