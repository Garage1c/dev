
Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции

Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	Если Не Отказ Тогда
		ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	// Запись
	
	Движения.Записать();
	
	// контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);

	// ЛИМИТЫ
	
	КонтрольПроведения.ПроверитьЛимиты(ЭтотОбъект, ОтветственноеЛицо, Отказ, Заголовок);



КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	
	ТипОсн = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипОсн = Тип("ДокументСсылка.ПередачаТовара") Тогда
		

		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Ссылка, Дата, Номер, ПометкаУдаления, Проведен, Автор, Ответственный");
		Основание = ДанныеЗаполнения.Ссылка;
		Инициатор = ДанныеЗаполнения.МВЗ;
		СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТоварыПоОбъекту(ЭтотОбъект);
		//Новый Структура("ЕстьКоличество, ЕстьЦена, ЕстьСуммаБезСкидки, ЕстьСумма, ЕстьСуммаАвтоматическойСкидки, ЕстьСуммаРучнойСкидки, ЕстьСтавкаНДС, ЕстьСуммаНДС, СуммаВключаетНДС, ЕстьВсего, ЕстьАкция, ЕстьУпаковка, ЕстьПроцентРучнойСкидки, ЕстьПроцентАвтоматическойСкидки",
								//			  Истина, 		  Истина,	Ложь, 				Истина,    Ложь, 						  Ложь, 				 Истина, 		Истина,		  Истина,		    Ложь,	Ложь,	Истина,		Ложь,			 Ложь);	
				
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Номенклатура,
		|	Упаковка,
		|	Количество,
		|	Цена,
		|	Сумма,
		|	СтавкаНДС,
		|	СуммаНДС,
		|	Размещение
		|ИЗ
		|	Документ.ПередачаТовара.Товары
		|ГДЕ
		|	Ссылка = &Основание
		|;
		|ВЫБРАТЬ
		|	Номенклатура,
		|	КоличествоОборот Количество
		|ИЗ
		|	РегистрНакопления.ПродажиПоМВЗ.Обороты(,,,МВЗ = &Инициатор)
		|");
		
		Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения.Ссылка);
		Запрос.УстановитьПараметр("Инициатор", ДанныеЗаполнения.МВЗ);

		Пакет = Запрос.ВыполнитьПакет();
		
		ТаблицаДок 	= Пакет[0].Выгрузить();
		ТаблицаРег 	= Пакет[1].Выгрузить();
		
		Для Каждого Строка Из ТаблицаДок Цикл
			
			Отбор = Новый Структура("Номенклатура", Строка.Номенклатура);
			
			РегСтроки = ТаблицаРег.НайтиСтроки(Отбор);
			Если РегСтроки.Количество() Тогда
				РегСтрока = РегСтроки[0];
			Иначе
				РегСтрока = Неопределено;
			КонецЕсли;
			
			Отдаем = Мин(Строка.Количество, РегСтрока.Количество);
			Если Отдаем Тогда
				
				НовСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
				
				НовСтрока.Количество = Отдаем;
				//ФункцииФормДокументов.РассчитатьСуммыТабличныхЧастей(НовСтрока, СтруктураКолонокТовары);
				ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(НовСтрока, СтруктураКолонокТовары, Ложь);
				
				Если РегСтрока <> Неопределено Тогда
					РегСтрока.Количество = РегСтрока.Количество - Отдаем;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Склад.Ячеестый Тогда
		ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаНДС	= Товары.Итог("СуммаНДС");
	Сумма 		= Товары.Итог("Сумма") + ?(СуммаВключаетНДС, 0, СуммаНДС);

КонецПроцедуры
