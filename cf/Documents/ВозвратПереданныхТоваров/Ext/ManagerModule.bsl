Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции


Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
		
	
	Запрос = Новый Запрос(
			 
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	///
	|ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|  	Документ.ВозвратПереданныхТоваров
	|ГДЕ
	|   Ссылка = &Ссылка
	|;

	// ТОВАРЫ НА СКЛАДАХ	
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Ссылка.Склад		КАК Склад,       // Размещение
	|	Номенклатура,
	|	Цена,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары 	
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Номенклатура.ТипНоменклатуры <> &Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка,
	|	Цена
	|;
		
	
	// Продажи
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	Ссылка.Склад			Склад,
	|	Ссылка.Основание.Заказ	Заказ,
	|	&Менеджер				Менеджер,
	|	Ссылка.Партнер			Партнер,
	|	Ссылка.Контрагент		Контрагент,
	|	Номенклатура,
	|	Упаковка,
	|	Ссылка.Основание		ДокументПродажи,	
	|	-СУММА(Количество) 		Количество,
	|	-СУММА(СуммаПартии)		Себестоимость,
	|	ВЫБОР 
	|		КОГДА Ссылка.СуммаВключаетНДС 
	|		ТОГДА -СУММА(Сумма)		
	|		ИНАЧЕ -СУММА(Сумма) - СУММА(СуммаНДС)  
	|	КОНЕЦ 	Сумма
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,	
	|	Упаковка
	|;
	
	// Продажи по МВЗ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	Ссылка.Склад			Склад,
	|	Ссылка.Инициатор		МВЗ,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	-СУММА(Количество) 		Количество,
	|	-СУММА(Сумма) 			Сумма 					
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,	
	|	Упаковка,
	|	Цена
	|;
	
	// ЛИМИТЫ
	
	|ВЫБРАТЬ
	|   &Период,
	|	&ВидДвиженияРасход			ВидДвижения,
	|	Ссылка.ОтветственноеЛицо	Инициатор,
	|	- СУММА(Сумма) 			Сумма
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|ГДЕ
	|   Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО Ссылка
	|;
	
	// ПЕРЕДАЧА ТОВАРОВ
	
	|ВЫБРАТЬ
	|   &Период,
	|	&ВидДвиженияПриход	ВидДвижения,	
	|	Ссылка.Основание 	ДокументПередачи,
	|	Ссылка.Инициатор 	Инициатор,
	|	Ссылка.Склад		Размещение,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	СтавкаНДС,
	|	Ссылка.Контрагент 	Контрагент,
	|	Ссылка.Партнер		Партнер,
	|	-СУММА(Количество)	Количество,
	|	-СУММА(Сумма)		Сумма
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|ГДЕ
	|	Ссылка = &Ссылка
	|	СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Размещение, Упаковка, Цена, СтавкаНДС
	|;
	
	// ПАРТИИ ТОВАРОВ
	|ВЫБРАТЬ неопределено ГДЕ Истина=Ложь
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	Ссылка.Склад Склад, Партия, Номенклатура,
	//|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	//|		СУММА(Количество)
	//|	ИНАЧЕ
	//|		СУММА(Количество*Упаковка.Коэффициент)
	//|	КОНЕЦ				КАК Количество,
	//|	СУММА(СуммаПартии) 	КАК Сумма
	//|ИЗ
	//|	Документ.ВозвратПереданныхТоваров.Товары
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И СуммаПартии <> 0 И Номенклатура.ТипНоменклатуры <> &Услуга
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка, Партия, Номенклатура, Упаковка
	|;
	
	// ЯЧЕЙКИ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Ячейка				КАК Ячейка,
	|	Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ  				КАК Количество
    |ИЗ
	|	Документ.ВозвратПереданныхТоваров.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Ячейка <> &ПустаяЯчейка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ячейка,
	|	Номенклатура,
	|	Упаковка
	|;
	
	//// СБОРКА ТОВАРОВ
	//
	//|ВЫБРАТЬ
	//|	&Период				Период,
	//|	&ВидДвиженияРасход	ВидДвижения,
	//|	Ссылка.Склад		СкладЯчейка,
	//|	&Заказ				Заказ,
	//|						Номенклатура,
	//|						Упаковка,
	//|	СУММА(Количество) 	Собрано
	//|ИЗ
	//|	Документ.ВозвратПереданныхТоваров.Товары
	//|
	//|ГДЕ
	//|	&ВозвратОбратноНаСборку И Ссылка = &Ссылка И Ячейка = &ПустаяЯчейка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка.Склад,
	//|	Ссылка,
	//|	Номенклатура,
	//|	Упаковка
	//|;
	|");
	
	//СостоянияЗаказаСВозвратомНаСборку = Новый Массив;
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.Собран);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.Собирается);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.СобранЧастично);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.Редактируется);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.Перемещается);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ПередатьНаСкладВыдачи);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.Открыт);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ОжиданиеПодтверждения);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ОжиданиеОтвета);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ОжиданиеОплаты);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ОжидаетПеремещения);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ВРаботе);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ВОчередиНаСборку);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ВОчередиНаСклад);
	//СостоянияЗаказаСВозвратомНаСборку.Добавить(Перечисления.СостоянияЗаказа.ВОчередиНаСкладПовторно);
	//
	//Заказ = ?(Ссылка.Основание.Пустая(), Неопределено, Ссылка.Основание.Заказ);
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойИнициатор", 	Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("Услуга", 			Перечисления.ТипыНоменклатуры.Услуга);
    Запрос.УстановитьПараметр("ПустаяЯчейка", 		Справочники.Ячейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Партнеры.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Партнер));
	//Запрос.УстановитьПараметр("Заказ", 				Заказ);
	//Запрос.УстановитьПараметр("ВозвратОбратноНаСборку", Заказ <> Неопределено И СостоянияЗаказаСВозвратомНаСборку.Найти(Заказы.ПолучитьСостояниеЗаказа(Заказ, Ссылка.Дата)) <> Неопределено);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 	Пакет[2].Выгрузить());
	ДополнительныеСвойства.Вставить("Продажи", 			Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("ПродажиПоМВЗ", 	Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("Лимиты",			Пакет[5].Выгрузить());
	ДополнительныеСвойства.Вставить("ПередачаТоваров",	Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПартииТоваров",	Пакет[7].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыВЯчейках", 	Пакет[8].Выгрузить());
	//ДополнительныеСвойства.Вставить("СборкаЗаказа", 	Пакет[9].Выгрузить());
	
КонецПроцедуры

Процедура Печать_АктНаВозвратТМЦ(ТабДокумент, Ссылка) Экспорт
		
	
	Макет = Документы.ПередачаТовара.ПолучитьМакет("АктПриемПередачаТМЦ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|   Док.Организация               КАК Организация,
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	|	Док.Валюта						Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	Док.Инициатор					МВЗ,
	|	Док.ОтветственноеЛицо			Инициатор,
	//|	ВЫБОР КОГДА Док.Грузополучатель = Неопределено ИЛИ Док.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//|	ТОГДА	Док.Контрагент
	//|	ИНАЧЕ 	Док.Грузополучатель
	//|	КОНЕЦ	Покупатель,
	|	Док.Контрагент Покупатель,
	|	Основание,
	|	Основание.Номер НомерАкта,
	|	Основание.Дата  ДатаАкта,
	|	Док.Товары.(
	|		НомерСтроки                       КАК НомерСтроки,
	|		Номенклатура                      КАК Номенклатура,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ВозвратПереданныхТоваров КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата", Выборка.Номер, Выборка.Дата), "Акт на возврат ТМЦ");//+ ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Ссылка.Номер)+" от "+Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПоставщикПокупатель");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	//	ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		//////
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		КонецЕсли;
		
		ОбластьМакета.Параметры.МВЗ = Выборка.МВЗ;
		ТабДокумент.Вывести(ОбластьМакета);
		
	
			ОбластьМакета = Макет.ПолучитьОбласть("ОснованиеВозврат");
			ОбластьМакета.Параметры.НомерЗаказа = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Выборка.НомерАкта);
			ОбластьМакета.Параметры.ДатаЗаказа 	= Формат(Выборка.ДатаАкта, "ДФ=dd.MM.yyyy");
			
			ТабДокумент.Вывести(ОбластьМакета);
			

		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыводитьКоды = Истина;
		Колонка = "Артикул";


		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСуммыБезНДС   = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
				
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
			//ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		//ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСуммыБезНДС   = Макет.ПолучитьОбласть("Строка|Сумма");
		//ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		//ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Номенклатура.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьНДС Тогда 
				СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;			
				Если Не Выборка.ЦенаВключаетНДС Тогда
					Сумма = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма;
				Иначе
					Сумма = ВыборкаСтрокТовары.Сумма; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
				КонецЕсли;
				ОбластьСуммыБезНДС.Параметры.Сумма = СуммаБезНДС;
				ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
				///
				//ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
				//ТабДокумент.Присоединить(ОбластьСуммыНДС);
			Иначе
				СуммаБезНДС = 0;
				СуммаНДС = 0;
				Сумма = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			////////
			//ОбластьСуммы.Параметры.Сумма = Сумма;
			//ТабДокумент.Присоединить(ОбластьСуммы);				
		КонецЦикла;
		
		Товары = Выборка.Товары.Выгрузить();
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСуммыБезНДС = Макет.ПолучитьОбласть("Итого|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.БезНДС = ?(Выборка.ЦенаВключаетНДС, "", "без НДС");
		ТабДокумент.Присоединить(ОбластьДанных);
		///////////
		Сумма    = Товары.Итог("Сумма");
		Если ЕстьНДС Тогда
			СуммаНДС = Товары.Итог("СуммаНДС");	
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаДокумента = Сумма + СуммаНДС;
				СуммаБезНДС = Сумма;
			Иначе
				СуммаДокумента = Сумма;
				СуммаБезНДС = Сумма - СуммаНДС;
			КонецЕсли;
			ОбластьСуммыБезНДС.Параметры.Сумма = СуммаБезНДС;
			ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
			
			//ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			//ТабДокумент.Присоединить(ОбластьСуммыНДС);
			
			//ОбластьВсего.Параметры.НДСПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаНДС, Выборка.Валюта);

		Иначе
			СуммаНДС = 0;
			СуммаБезНдс = 0;
			СуммаДокумента = Сумма;
		КонецЕсли;	
		
		ОбластьВсего   = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.КоличествоТовара = Товары.Количество();
		ОбластьВсего.Параметры.СуммаНДС = СуммаНДС;
		ОбластьВсего.Параметры.СуммаИтого = СуммаДокумента;
		ОбластьВсего.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьВсего);
		//ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		//ТабДокумент.Присоединить(ОбластьСуммы);
		
		//ОбластьИнициатор = Макет.ПолучитьОбласть("Инициатор");
		//ТабДокумент.вывести(ОбластьИнициатор);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРазделитель");
 		ТабДокумент.Вывести(областьМакета);
		
		Если ЗначениеЗаполнено(Выборка.Инициатор) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Инициатор");
			ОбластьМакета.Параметры.Инициатор = Выборка.Инициатор;
 			ТабДокумент.Вывести(областьМакета);
		КонецЕсли;

		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		//ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОбластьМакета.Параметры.ДатаОтгрузки = Выборка.Дата;

		//ПечатьНаСервере.ДобитьНемецкимиСтрокамиЧтобыКолонтитулОказалсяВнизу(ТабДокумент, ОБластьПустаяСтрока, , ОбластьМакета);		
		 ТабДокумент.Вывести(областьМакета);
			
	КонецЦикла;
	
КонецПроцедуры
