&НаКлиенте
Перем СтруктураКолонокТовары Экспорт;

&НаКлиенте
Процедура ОбщиеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Процедура ПересчитатьСуммыТабличныхЧастей(СтруктураКолонокТовары) Экспорт
	
	ФункцииФормДокументов.ПересчитатьСуммыТабличныхЧастей(Объект.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НеОткрыватьДругуюФорму = Параметры.НеОткрыватьДругуюФорму;
	
	// Рассчитаем динамические колонки
	
	ФункцииФормДокументов.РассчитатьДинамическиеКолонки(
	Объект.Товары,
	ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары, Объект.СуммаВключаетНДС, Объект.ТипЦен));
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	ФункцииФормДокументовСервер.УстановитьСвязиГрузополучателя(Объект,Элементы,Новый Структура("Грузополучатель, БанковскийСчетГрузополучателя, Грузоотправитель, БанковскийСчетГрузоотправителя","Объект.Контрагент","Объект.Грузополучатель","Объект.Организация","Объект.Грузоотправитель"));
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.МенеджерЗаказа) Тогда Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузополучатель); КонецЕсли;
	КонецЕсли;
КонецПроцедуры
&НаСервере
Функция ПолучитьПроцесс()
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 ССЫЛКА ИЗ БизнесПроцесс.ЗаявкаПокупателя ГДЕ Заказ = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выполнение = Запрос.Выполнить();
	Если Выполнение.Пустой() Тогда
		
		Возврат БизнесПроцессы.ЗаявкаПокупателя.ПустаяСсылка();
		
	Иначе
		
		Выборка = Выполнение.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если Не НеОткрыватьДругуюФорму Тогда
	//	
	//	Процесс = ПолучитьПроцесс();
	//	Если Не Процесс.Пустая() Тогда
	//	
	//		Отказ = Истина;
	//		ОткрытьФорму("БизнесПроцесс.ЗаявкаПокупателя.ФормаОбъекта", Новый Структура("Ключ", Процесс), ВладелецФормы,,Окно);
	//		Возврат;
	//	
	//	КонецЕсли;
	//КонецЕсли;
		
	//СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары, Объект.СуммаВключаетНДС, Объект.ТипЦен);
	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары, Объект.СуммаВключаетНДС, Объект.ТипЦен, , , Объект.Валюта, Объект.УчитыватьНДС, Объект.Валюта, Объект.СуммаВключаетНДС,,Объект.УчитыватьНДС);
		
	// 	Обновим подвал
		
	ФункцииФормДокументов.ОбновитьПодвал(Объект, Элементы, Сумма, СтруктураКолонокТовары);
	УправлениеВидимостьюДоступностьюНаКлиенте();	
КонецПроцедуры

// ОБРАБОТКИ ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)

	ФункцииФормДокументов.НоменклатураПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);

КонецПроцедуры
&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ФункцииФормДокументов.КоличествоПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ФункцииФормДокументов.ЦенаПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СтавкаНДСПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ФункцииФормДокументов.УпаковкаПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
				
КонецПроцедуры
&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаНДСПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//ДиалогиСПользователем.НачалоВыбораРазмещения(Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

// КОМАНДЫ

&НаКлиенте
Процедура ЗаполнитьРучСкидку(Команда)
	
	ДиалогиСПользователем.ЗаполнитьРучСкидку(Объект.Товары, СтруктураКолонокТовары);
		
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьСтавкуНДС(Команда)
	
	ДиалогиСПользователем.ЗаполнитьСтавкуНДС(Объект.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры

// ВЕС ОБЪЕМ
&НаСервере
Функция ПодготовитьТаблицу()
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить(), УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

&НаКлиенте
Процедура ВесОбъем(Команда)
	АдресХранилища = ПодготовитьТаблицу();
	
	ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаВеса", Новый Структура("АдресХранилища", АдресХранилища));

КонецПроцедуры

// ПОДБОР

&НаСервере
Функция ПоместитьТоварыВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(
					Объект.Товары.Выгрузить(), 
					УникальныйИдентификатор);
КонецФункции
&НаКлиенте
Процедура ПодборВыполнить()
	
	ИмяТабличнойЧасти = "Товары";
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	ПараметрыПодбора = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
	
	ПараметрыПодбора.Вставить("СтруктураКолонокТовары", СтруктураКолонокТовары);
	//ПараметрыПодбора.Вставить("ВидЗапроса", 			"ОстаткиНоменклатуры");
	//ПараметрыПодбора.Вставить("ВидыЗапросов", 			"СписокНоменклатуры");
	ПараметрыПодбора.Вставить("Склад", 					Объект.Склад);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыПодбора, Элементы.Товары);
	
КонецПроцедуры
&НаСервере
Процедура ПолучитьТоварыИзХранилища(АдресТоваровВХранилище)
	
	Объект.Товары.Загрузить(ПолучитьИзВременногоХранилища(АдресТоваровВХранилище));
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение <> Неопределено Тогда		
		
		ПолучитьТоварыИзХранилища(ВыбранноеЗначение);		// получаем
		УдалитьИзВременногоХранилища(ВыбранноеЗначение); 	// заметаем следы
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#Область Информация // о товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Товары", "Объект.Товары");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Объект.Партнер=ПолучитьПартнера(Объект.Контрагент);
	
	Объект.Грузополучатель = ФункцииФормДокументовСервер.ГрузополучательПриИзмененииРеквизита(Объект.Контрагент);
	Объект.БанковскийСчетГрузополучателя = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузополучатель);
	Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузополучатель);
	
	СтруктураДанныхКонтрагента = ПолучитьСтруктуруЗначенийДоставкиКонтрагентаНаСервере(Объект.Контрагент);
	Объект.ВариантДоставкиНов = СтруктураДанныхКонтрагента.ВариантДоставкиНов;
	Объект.ЗаЧейСчетДоставка = СтруктураДанныхКонтрагента.ЗаЧейСчетДоставка;
	Объект.Грузоперевозчик = СтруктураДанныхКонтрагента.ОсновнойГрузоперевозчик;
	Объект.ЧастичнаяОтгрузка = СтруктураДанныхКонтрагента.ЧастичнаяОтгрузка;
	
	УправлениеВидимостьюДоступностьюНаКлиенте();
КонецПроцедуры
&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЗначенийДоставкиКонтрагентаНаСервере(Контрагент)
	Структура = Новый Структура;
	Структура.Вставить("ВариантДоставкиНов" , Контрагент.ВариантДоставки);
	Структура.Вставить("ЗаЧейСчетДоставка" , Контрагент.ЗаЧейСчетДоставка);
	Структура.Вставить("ОсновнойГрузоперевозчик", Контрагент.ОсновнойГрузоперевозчик);
	Структура.Вставить("ЧастичнаяОтгрузка", Контрагент.ЧастичнаяОтгрузка);

	Возврат Структура;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПартнера(Контрагент)
	Запрос=Новый Запрос("Выбрать Партнер из Справочник.Контрагенты ГДЕ Ссылка=&Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Контрагент);
	Возврат Запрос.Выполнить().Выгрузить()[0].Партнер;
КонецФункции

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	Объект.БанковскийСчетГрузополучателя = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузополучатель);
	Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузополучатель);
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	Объект.БанковскийСчетГрузоотправителя = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузоотправитель);
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиНовПриИзменении(Элемент)
	УправлениеВидимостьюДоступностьюНаКлиенте();	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюДоступностьюНаКлиенте()
	
	Если Объект.ВариантДоставкиНов=ПредопределенноеЗначение("Перечисление.ВариантДоставки.СамовывозСНашегоСклада") Тогда
		Элементы.ЗаЧейСчетДоставка.Видимость				 = Ложь;
		Элементы.Грузоперевозчик.Видимость					 = Ложь;
		Элементы.ДатаДоставки.Видимость						 = Ложь;
		Элементы.ВремяДоставкиС.Видимость					 = Ложь;
		Элементы.ВремяДоставкиПо.Видимость					 = Ложь;
		Элементы.АдресДоставкиНов.Видимость					 = Ложь;
		Элементы.КонтактноеЛицо.Видимость					 = Ложь;
		Элементы.ТелефонКонтактногоЛицаДоставки.Видимость	 = Ложь;
	ИначеЕсли Объект.ВариантДоставкиНов=ПредопределенноеЗначение("Перечисление.ВариантДоставки.ДоставкаДоКлиента") Тогда
		Элементы.ЗаЧейСчетДоставка.Видимость				 = Истина;
		Элементы.Грузоперевозчик.Видимость					 = Истина;
		Элементы.ДатаДоставки.Видимость						 = Истина;
		Элементы.ВремяДоставкиС.Видимость					 = Истина;
		Элементы.ВремяДоставкиПо.Видимость					 = Истина;
		Элементы.АдресДоставкиНов.Видимость					 = Истина;
		Элементы.КонтактноеЛицо.Видимость					 = Истина;
		Элементы.ТелефонКонтактногоЛицаДоставки.Видимость	 = Истина;
	ИначеЕсли Объект.ВариантДоставкиНов=ПредопределенноеЗначение("Перечисление.ВариантДоставки.ДоставкаДоГрузоперевозчика") Тогда
		Элементы.ЗаЧейСчетДоставка.Видимость				 = Истина;
		Элементы.Грузоперевозчик.Видимость					 = Истина;
		Элементы.ДатаДоставки.Видимость						 = Ложь;
		Элементы.ВремяДоставкиС.Видимость					 = Ложь;
		Элементы.ВремяДоставкиПо.Видимость					 = Ложь;
		Элементы.АдресДоставкиНов.Видимость					 = Ложь;
		Элементы.КонтактноеЛицо.Видимость					 = Истина;
		Элементы.ТелефонКонтактногоЛицаДоставки.Видимость	 = Истина;
	ИначеЕсли Объект.ВариантДоставкиНов=ПредопределенноеЗначение("Перечисление.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами") Тогда
		Элементы.ЗаЧейСчетДоставка.Видимость				 = Истина;
		Элементы.Грузоперевозчик.Видимость					 = Ложь;
		Элементы.ДатаДоставки.Видимость						 = Истина;
		Элементы.ВремяДоставкиС.Видимость					 = Истина;
		Элементы.ВремяДоставкиПо.Видимость					 = Истина;
		Элементы.АдресДоставкиНов.Видимость					 = Истина;
		Элементы.КонтактноеЛицо.Видимость					 = Истина;
		Элементы.ТелефонКонтактногоЛицаДоставки.Видимость	 = Истина;
	Иначе
		Элементы.ЗаЧейСчетДоставка.Видимость				 = Истина;
		Элементы.Грузоперевозчик.Видимость					 = Истина;
		Элементы.ДатаДоставки.Видимость						 = Истина;
		Элементы.ВремяДоставкиС.Видимость					 = Истина;
		Элементы.ВремяДоставкиПо.Видимость					 = Истина;
		Элементы.АдресДоставкиНов.Видимость					 = Истина;
		Элементы.КонтактноеЛицо.Видимость					 = Истина;
		Элементы.ТелефонКонтактногоЛицаДоставки.Видимость	 = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//+Андриянов 13.06.2017 Проверяем размещение товаров, которые нельзя заказывать, в очереди
	Если ПроверитьРазмещение() Тогда Отказ = Истина; Возврат; КонецЕсли;
	//-Андриянов
КонецПроцедуры

//+Андриянов 13.06.2017 проверяем размещение
&НаКлиенте
Функция ПроверитьРазмещение()
	ТоварыБольшеНеПоставляются = Объект.Товары.НайтиСтроки(Новый Структура("БольшеНеПоставляется",Истина));
	Если ТоварыБольшеНеПоставляются.Количество()>0 Тогда
		Для Каждого ТекСтрока Из ТоварыБольшеНеПоставляются Цикл
			ТекРазмещение = Объект.РазмещениеТоваров.НайтиСтроки(Новый Структура("Номенклатура",ТекСтрока.Номенклатура));
			Для Каждого ТекСтрокаРазмещение Из ТекРазмещение Цикл
				Если ТипЗнч(ТекСтрокаРазмещение.Размещение) = Тип("Число") Тогда
					ПоказатьПредупреждение(,"Товар """+ТекСтрока.Номенклатура+""" больше не поставляется, но размещён в очереди. Такой заказ проводить нельзя.");
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	Возврат Ложь;
КонецФункции
//-Андриянов

//&НаСервере
//Процедура ЗаполнитьОплатыНаСервере()
//	
//	Объект.ПлатежныеДокументы.Загрузить(Документы.ЗаказПокупателя.ЗаполнитьПлатежныеДокументы(Объект.Ссылка));

//КонецПроцедуры

//&НаКлиенте
//Процедура ЗаполнитьПлатежныеДокументы(Команда)
//	
//	ЗаполнитьОплатыНаСервере();
//	
//КонецПроцедуры

