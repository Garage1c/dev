Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ	Номенклатура
	|ИЗ		Документ.ЗаказПокупателя.Товары
	|ГДЕ	Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ	Номенклатура
	|ИЗ		Документ.ЗаказПокупателя.РазмещениеТоваров
	|ГДЕ	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьСкладСписания() Экспорт
	
	Возврат Неопределено;
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ЗаказПокупателя.РазмещениеТоваров
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|";
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(
					Метаданные().Движения, 
					ДополнительныеСвойства, 
					Движения, 
					Отказ);
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект,, Отказ, Заголовок, Ссылка);
	КонтрольПроведения.ПроверитьЛимиты(ЭтотОбъект, ОтветственноеЛицо, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект,, Отказ, Заголовок, ); // контроль доступного остатка
	
	// Установим статус оплаты
	
	Если 	Не Отказ И
			Не Заказы.ПроверитьИУстановитьСтатусОплатыЗаказа(Ссылка) Тогда
			
		Отказ = Истина;
			
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	ПроведенияДокументов.ОчиститьДвиженияДокумента(Метаданные().Движения, Движения);
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект,, Отказ, Заголовок, );

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаАванса = ПлатежныеДокументы.Итог("Сумма");
	СуммаНДС	= Товары.Итог("СуммаНДС");
	Сумма 		= Товары.Итог("Сумма") + ?(СуммаВключаетНДС, 0, СуммаНДС);
	
	// Если не выбран склад но есть склад в размещении то возмем первый попавшийся из размещения
	
	Если Склад.Пустая() Тогда
		
		Для Каждого Строка Из Товары Цикл
			Если ЗначениеЗаполнено(Строка.Размещение) Тогда
				
				Склад = Строка.Размещение;
				Прервать; КонецЕсли; КонецЦикла; КонецЕсли;
	
	// подхватим аванс
	
//	ПлатежныеДокументы.Загрузить(Документы.ЗаказПокупателя.ЗаполнитьПлатежныеДокументы(Ссылка));

	// если розничная заявка, поставим смену
	
	Если РозничнаяЗаявка Тогда Смена =	БизнесПроцессы.ПродажаВРозницу.ПолучитьТекущуюСмену(Касса); КонецЕсли;

	Если ЗакупитьНедостающее <> Ссылка.ЗакупитьНедостающее Тогда
		
		Если НЕ ЗакупитьНедостающее Тогда ДатаОтправкиВЗакупку = '00010101'; 
		Иначе ДатаОтправкиВЗакупку = ТекущаяДата() КонецЕсли;
		
	КонецЕсли;
	
	//Если НЕ ПередачаТовара Тогда ПередачаТовара = НЕ МВЗ.Пустая() ИЛИ Склад.ПередачаТовараМВЗ; КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Склад.ПередачаТовараМВЗ Тогда
		ПроверяемыеРеквизиты.Добавить("ОтветственноеЛицо"); КонецЕсли;
	
	//Если 	Сумма И
	//		ПлатежныеДокументы.Количество() И 
	//		ПлатежныеДокументы.Итог("Сумма") > Сумма Тогда
	//		
	//	ОбщиеФункции.СообщитьТекст("Сумма аванса превышает сумму документа!");
	//	Отказ = Истина;
	//		
	//КонецЕсли;

	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Если ЭтоНовый() Тогда СпособРазмещенияБезЗаказа = Истина КонецЕсли; // Теперь все заказы формируются по новому
	
КонецПроцедуры



