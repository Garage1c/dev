
Процедура ИницилизироватьДополнительныеДанныеДокумента_Ст(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	
	|;
	|ВЫБРАТЬ
	|	Партнер, Склад, Контрагент
	|ИЗ
	|	Документ.ЗаказПокупателя
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// ЗАКАЗЫ ПОКУПАТЕЛЕЙ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	&Ссылка				КАК ЗаказПокупателя,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	Размещение,
	|	ПроцентРучнойСкидки,
	|	ПроцентАвтоматическойСкидки,
	|	СтавкаНДС,
	|	СУММА(Количество)	КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	Размещение,
	|	ПроцентРучнойСкидки,
	|	ПроцентАвтоматическойСкидки,
	|	СтавкаНДС
	|;
	
	// ТОВАРЫ В РЕЗЕРВЕ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Размещение,
	|	&Ссылка				КАК ДокументРезерва,
	|	Номенклатура,
	|	Цена,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Размещение ССЫЛКА Справочник.Склады И ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещение,
	|	Номенклатура,
	|	Упаковка,
	|	Цена
	|;
	
	// РАЗМЕЩЕНИЕ ЗАКАЗОВ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Размещение 			Очередь,
	|	&Ссылка				КАК Заказ,
	|	Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество
    |ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	НЕ Размещение ССЫЛКА Справочник.Склады И Размещение <> Неопределено И ЕСТЬNULL(Размещение, 0) <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещение,
	|	Номенклатура,
	|	Упаковка
	|;
	
	// ДОЛГИ ПО ОТГРУЗКАМ
	
	|ВЫБРАТЬ
	|	ДокументОтгрузки,
	|	-СуммаОстаток Сумма
	|ПОМЕСТИТЬ
	|	ТаблицаДолга
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.Остатки(&Период, 
	|									Организация = &Организация И 
	|									Партнер 	= &Партнер И 
	//|									Контрагент 	= &Контрагент И 
	|									Заказ 		= НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	СуммаОстаток < 0
	|;
	|
	|ВЫБРАТЬ								// движение по долгу
	|	&Период				Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	Организация,
	|	Партнер,
	|	Контрагент,
	|	&Ссылка				Заказ,
	|	НЕОПРЕДЕЛЕНО		ДокументОтгрузки,
	|	&СуммаЗаказа		Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя
	|ГДЕ
	|	Ссылка = &Ссылка И &СуммаЗаказа <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                                // закрываем аванс
	|	&Период,
	|	&ВидДвиженияПриход,
	|	&Организация,
	|	&Партнер,
	|	&Контрагент,
	|	НЕОПРЕДЕЛЕНО,
	|	ДокументОтгрузки,
	|	ВЫБОР КОГДА Сумма > &СуммаЗаказа ТОГДА &СуммаЗаказа ИНАЧЕ Сумма КОНЕЦ
	|ИЗ
	|	ТаблицаДолга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                                // показываем оплаченную часть
	|	&Период,
	|	&ВидДвиженияРасход,
	|	&Организация,
	|	&Партнер,
	|	&Контрагент,
	|	&Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР КОГДА Сумма > &СуммаЗаказа ТОГДА &СуммаЗаказа ИНАЧЕ Сумма КОНЕЦ
	|ИЗ
	|	ТаблицаДолга
	|");
	
	Запрос.УстановитьПараметр("Ссылка", 				Ссылка);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	Запрос.УстановитьПараметр("Партнер", 				Ссылка.Партнер);
	Запрос.УстановитьПараметр("Контрагент", 			Ссылка.Контрагент);
	Запрос.УстановитьПараметр("СуммаЗаказа", 			Ссылка.Сумма);
	Запрос.УстановитьПараметр("Период", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 		ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 		ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустойСклад", 			Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 		Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 	КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 				КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ЗаказыПокупателей", 	Пакет[2].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыВРезерве", 		Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("РазмещениеЗаказов", 	Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", 	Пакет[6].Выгрузить());
	
КонецПроцедуры
Процедура ИницилизироватьДополнительныеДанныеДокумента_нов(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	
	|;
	|ВЫБРАТЬ
	|	Партнер, Склад, Контрагент
	|ИЗ
	|	Документ.ЗаказПокупателя
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// ЗАКАЗЫ ПОКУПАТЕЛЕЙ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	&Ссылка				КАК ЗаказПокупателя,
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	Размещение,
	|	ПроцентРучнойСкидки,
	|	ПроцентАвтоматическойСкидки,
	|	СтавкаНДС,
	|	СУММА(Количество)	КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка,
	|	Цена,
	|	Размещение,
	|	ПроцентРучнойСкидки,
	|	ПроцентАвтоматическойСкидки,
	|	СтавкаНДС
	|;
	
	// ТОВАРЫ В РЕЗЕРВЕ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Размещение,
	|	&Ссылка				КАК ДокументРезерва,
	|	Номенклатура,
	|	Цена,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Размещение ССЫЛКА Справочник.Склады И ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещение,
	|	Номенклатура,
	|	Упаковка,
	|	Цена
	|;
	
	// РАЗМЕЩЕНИЕ ЗАКАЗОВ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	Размещение 			Очередь,
	|	&Ссылка				КАК Заказ,
	|	Номенклатура,
	|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА
	|		СУММА(Количество)
	|	ИНАЧЕ
	|		СУММА(Количество*Упаковка.Коэффициент)
	|	КОНЕЦ				КАК Количество
    |ИЗ
	|	Документ.ЗаказПокупателя.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	НЕ Размещение ССЫЛКА Справочник.Склады И Размещение <> Неопределено И ЕСТЬNULL(Размещение, 0) <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещение,
	|	Номенклатура,
	|	Упаковка
	|;
	
	// ДОЛГИ ПО ОТГРУЗКАМ
	
	// сторнирующая проводка (всегда на сумму платежа, если он присутствует)

	|ВЫБРАТЬ								
	|	&Период					Период,
	|	&ВидДвиженияПриход		ВидДвижения,
	|	Ссылка.Организация,
	|	Ссылка.Партнер,
	|	НЕОПРЕДЕЛЕНО			Заказ,
	|	НЕОПРЕДЕЛЕНО			ДокументОтгрузки,
	|   ДокументОплаты      	ДокументОплаты,
	|	- СУММА(Сумма)			Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.ПлатежныеДокументы
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	ДокументОплаты <> Неопределено И НЕ ДокументОплаты ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка, ДокументОплаты
	|
	|ИМЕЮЩИЕ СУММА(Сумма) > 0
	
	// основная проводка (открывает заказ)
	
	// на сумму найденных оплат
	
	|ОБЪЕДИНИТЬ ВСЕ
    |
	|ВЫБРАТЬ								
	|	&Период				Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	Ссылка.Организация,
	|	Ссылка.Партнер,
	|	Ссылка				Заказ,
	|	НЕОПРЕДЕЛЕНО		ДокументОтгрузки,
	|   ДокументОплаты      ДокументОплаты,
	|	СУММА(Сумма)		Сумма
	|
	|ИЗ
	|	Документ.ЗаказПокупателя.ПлатежныеДокументы
	|ГДЕ
	|	Ссылка = &Ссылка И 
	|	ДокументОплаты <> Неопределено И НЕ ДокументОплаты ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ссылка, ДокументОплаты
	|
	|ИМЕЮЩИЕ СУММА(Сумма) > 0 
	
	// на неоплаченну сумму
	
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ								
	|	&Период				Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	Организация,
	|	Партнер,
	|	Ссылка				Заказ,
	|	НЕОПРЕДЕЛЕНО		ДокументОтгрузки,
	|   НЕОПРЕДЕЛЕНО      	ДокументОплаты,
	|	Сумма - СуммаАванса	Сумма
	|
	|ИЗ
	|	Документ.ЗаказПокупателя
	|ГДЕ
	|	Ссылка = &Ссылка И Сумма - СуммаАванса > 0	
	|");
	
	Запрос.УстановитьПараметр("Ссылка", 				Ссылка);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	Запрос.УстановитьПараметр("Партнер", 				Ссылка.Партнер);
	Запрос.УстановитьПараметр("Контрагент", 			Ссылка.Контрагент);
	Запрос.УстановитьПараметр("СуммаЗаказа", 			Ссылка.Сумма);
	Запрос.УстановитьПараметр("Период", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 		ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 		ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустойСклад", 			Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 		Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	
	Пакет = Запрос.ВыполнитьПакет();
	ПараметрыСистемы = КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 	ПараметрыСистемы);
	ДополнительныеСвойства.Вставить("Шапка", 				КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ЗаказыПокупателей", 	Пакет[2].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыВРезерве", 		Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("РазмещениеЗаказов", 	Пакет[4].Выгрузить());
	
	// Разнесем оплату
	
	ДолгиПоОтгрузкам = Пакет[5].Выгрузить();
	
	// если платежные доки не заполнены, откроем проводку на сумму заказа
	
	Если Не ДолгиПоОтгрузкам.Количество() Тогда
		НовСтрока = ДолгиПоОтгрузкам.Добавить();
		НовСтрока.Период 		= Ссылка.Дата;
		НовСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		НовСтрока.Организация 	= Ссылка.Организация;
		НовСтрока.Партнер 		= Ссылка.Партнер;
		НовСтрока.Заказ         = Ссылка;
		НовСтрока.Сумма 		= Ссылка.Сумма;
	КонецЕсли;
	
	//Если ПараметрыСистемы.ДолгиПоОтгрузкамУчитываютАвансы Тогда // уменьшем на аванс сумму
	//	Заказы.РазнестиОплатуАвансовЗаказаПриПроведении(ДолгиПоОтгрузкам, Пакет[5].Выбрать(), Ссылка);
	//КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", ДолгиПоОтгрузкам);
	
КонецПроцедуры

Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
		
	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() +Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+

		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказПокупателя.Партнер,
		|	ЗаказПокупателя.Склад,
		|	ЗаказПокупателя.Контрагент
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка"
		;
		
	Нтаб=Новый Структура;
	ТекНомер=1;	
		
	Если ИменаРегистров.Найти("ЗаказыПокупателей")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ЗаказыПокупателей",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+

		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	&Ссылка КАК ЗаказПокупателя,
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Упаковка,
		|	ЗаказПокупателяТовары.Цена,
		|	ЗаказПокупателяТовары.Акция,
		|	ЗаказПокупателяТовары.Размещение,
		|	ЗаказПокупателяТовары.ПроцентРучнойСкидки,
		|	ЗаказПокупателяТовары.ПроцентАвтоматическойСкидки,
		|	ЗаказПокупателяТовары.СтавкаНДС,
		|	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
		|	СУММА(ЗаказПокупателяТовары.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Упаковка,
		|	ЗаказПокупателяТовары.Цена,
		|	ЗаказПокупателяТовары.Акция,
		|	ЗаказПокупателяТовары.Размещение,
		|	ЗаказПокупателяТовары.ПроцентРучнойСкидки,
		|	ЗаказПокупателяТовары.ПроцентАвтоматическойСкидки,
		|	ЗаказПокупателяТовары.СтавкаНДС"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ТоварыВРезерве")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВРезерве",ТекНомер);
		
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	ЗаказПокупателяТовары.Размещение,
		|	&Ссылка КАК ДокументРезерва,
		|	ЗаказПокупателяТовары.Номенклатура,
		|	СУММА(ВЫБОР
		|			КОГДА ЗаказПокупателяТовары.Упаковка = &ПустаяУпаковка
		|				ТОГДА ЗаказПокупателяТовары.Количество
		|			ИНАЧЕ ЗаказПокупателяТовары.Количество * ЗаказПокупателяТовары.Упаковка.Коэффициент
		|		КОНЕЦ) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка = &Ссылка
		|	И ЗаказПокупателяТовары.Размещение ССЫЛКА Справочник.Склады
		|	И ЕСТЬNULL(ЗаказПокупателяТовары.Размещение, &ПустойСклад) <> &ПустойСклад
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Размещение,
		|	ЗаказПокупателяТовары.Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	&ВидДвиженияПриход,
		|	ЗаказПокупателяРазмещениеТоваров.Размещение,
		|	&Ссылка,
		|	ЗаказПокупателяРазмещениеТоваров.Номенклатура,
		|	СУММА(ЗаказПокупателяРазмещениеТоваров.Количество)
		|ИЗ
		|	Документ.ЗаказПокупателя.РазмещениеТоваров КАК ЗаказПокупателяРазмещениеТоваров
		|ГДЕ
		|	ЗаказПокупателяРазмещениеТоваров.Ссылка = &Ссылка
		|	И ЗаказПокупателяРазмещениеТоваров.Размещение ССЫЛКА Справочник.Склады
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяРазмещениеТоваров.Размещение,
		|	ЗаказПокупателяРазмещениеТоваров.Номенклатура"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("РазмещениеЗаказов")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("РазмещениеЗаказов",ТекНомер);
		
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	ЗаказПокупателяТовары.Размещение КАК Очередь,
		|	&Ссылка КАК Заказ,
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Упаковка,
		|	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка = &Ссылка
		|	И ЗаказПокупателяТовары.Ссылка = &Ссылка
		|	И ТИПЗНАЧЕНИЯ(ЗаказПокупателяТовары.Размещение) = ТИП(ЧИСЛО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Размещение,
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Упаковка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	&ВидДвиженияПриход,
		|	ЗаказПокупателяРазмещениеТоваров.Размещение,
		|	&Ссылка,
		|	ЗаказПокупателяРазмещениеТоваров.Номенклатура,
		|	&ПустаяУпаковка,
		|	СУММА(ЗаказПокупателяРазмещениеТоваров.Количество)
		|ИЗ
		|	Документ.ЗаказПокупателя.РазмещениеТоваров КАК ЗаказПокупателяРазмещениеТоваров
		|ГДЕ
		|	ЗаказПокупателяРазмещениеТоваров.Ссылка = &Ссылка
		|	И ЗаказПокупателяРазмещениеТоваров.Ссылка = &Ссылка
		|	И ТИПЗНАЧЕНИЯ(ЗаказПокупателяРазмещениеТоваров.Размещение) = ТИП(ЧИСЛО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяРазмещениеТоваров.Размещение,
		|	ЗаказПокупателяРазмещениеТоваров.Номенклатура"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ДолгиПоЗаказам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ДолгиПоЗаказам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	ЗаказПокупателя.Организация,
		|	ЗаказПокупателя.Партнер,
		|	ЗаказПокупателя.Контрагент,
		|	&Ссылка КАК Заказ,
		|	&СуммаЗаказа КАК Сумма
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка и &СуммаЗаказа<>0 и (Склад.ПередачаТовараМВЗ=Ложь И МВЗ=Значение(Справочник.МВЗ.ПустаяСсылка) И ПередачаТовара=Ложь)"
	КонецЕсли;	
	
	
	Если ИменаРегистров.Найти("ОтгруженныеЗаказы")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ОтгруженныеЗаказы",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	ЗаказПокупателяТовары.Ссылка КАК Заказ,
		|	СУММА(ЗаказПокупателяТовары.Номенклатура.Вес * ВЫБОР
		|			КОГДА ЗаказПокупателяТовары.Упаковка = &ПустаяУпаковка
		|				ТОГДА ЗаказПокупателяТовары.Количество
		|			ИНАЧЕ ЗаказПокупателяТовары.Количество * ЗаказПокупателяТовары.Упаковка.Коэффициент
		|		КОНЕЦ) КАК ВесЗаказа,
		|	СУММА(ЗаказПокупателяТовары.Номенклатура.Объем * ВЫБОР
		|			КОГДА ЗаказПокупателяТовары.Упаковка = &ПустаяУпаковка
		|				ТОГДА ЗаказПокупателяТовары.Количество
		|			ИНАЧЕ ЗаказПокупателяТовары.Количество * ЗаказПокупателяТовары.Упаковка.Коэффициент
		|		КОНЕЦ) КАК ОбъемЗаказа
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Ссылка"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("Лимиты")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Лимиты",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	&Период,
		|	&ВидДвиженияРасход КАК ВидДвижения,
		|	ЗаказПокупателяТовары.Ссылка.ОтветственноеЛицо КАК Инициатор,
		|	СУММА(ЗаказПокупателяТовары.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка = &Ссылка
		|	И ЗаказПокупателяТовары.Ссылка.ОтветственноеЛицо <> &ПустойИнициатор
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Ссылка,
		|	ЗаказПокупателяТовары.Ссылка.ОтветственноеЛицо"
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("РазмещениеЗаказовВПути")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+3;
		Нтаб.Вставить("РазмещениеЗаказовВПути",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		"ВЫБРАТЬ
		|	ЗаказПокупателяРазмещениеТоваров.Номенклатура
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ЗаказПокупателя.РазмещениеТоваров КАК ЗаказПокупателяРазмещениеТоваров
		|ГДЕ
		|	ЗаказПокупателяРазмещениеТоваров.Ссылка = &Ссылка
		|	И ЗаказПокупателяРазмещениеТоваров.Размещение ССЫЛКА Документ.ЗаказПоставщику
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РазмещениеЗаказовВПутиОстатки.Номенклатура,
		|	МАКСИМУМ(РазмещениеЗаказовВПутиОстатки.Очередь) КАК Очередь
		|ПОМЕСТИТЬ ТаблОчереди
		|ИЗ
		|	РегистрНакопления.РазмещениеЗаказовВПути.Остатки(
		|			&ПериодОчереди,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					Товары.Номенклатура
		|				ИЗ
		|					Товары)) КАК РазмещениеЗаказовВПутиОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	РазмещениеЗаказовВПутиОстатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		|	ЕСТЬNULL(Оч.Очередь, 1) КАК Очередь,
		|	Док.Ссылка КАК Размещение,
		|	Док.Номенклатура КАК Номенклатура,
		|	Док.Размещение КАК ЗаказПоставщику,
		|	СУММА(Док.Количество) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.РазмещениеТоваров КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблОчереди КАК Оч
		|		ПО Док.Номенклатура = Оч.Номенклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Размещение ССЫЛКА Документ.ЗаказПоставщику
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Ссылка,
		|	ЕСТЬNULL(Оч.Очередь, 1),
		|	Док.Размещение,
		|	Док.Номенклатура"
	КонецЕсли;	
	
	
	
	
	
	
	
	//Запрос = Новый Запрос(
	//
	//КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	//
	//|;
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	Партнер, Склад, Контрагент
	//|ИЗ
	//|	Документ.ЗаказПокупателя
	//|ГДЕ
	//|	Ссылка = &Ссылка
	//|;
	//
	//// ЗАКАЗЫ ПОКУПАТЕЛЕЙ
	//
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	&Ссылка				КАК ЗаказПокупателя,
	//|	Номенклатура,
	//|	Упаковка,
	//|	Цена,
	//|	Акция,
	//|	Размещение,
	//|	ПроцентРучнойСкидки,
	//|	ПроцентАвтоматическойСкидки,
	//|	СтавкаНДС,
	//|	СУММА(Количество)	КАК Количество,
	//|	СУММА(Сумма)		КАК Сумма
	//|ИЗ
	//|	Документ.ЗаказПокупателя.Товары
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Номенклатура,
	//|	Упаковка,
	//|	Цена,
	//|	Акция,
	//|	Размещение,
	//|	ПроцентРучнойСкидки,
	//|	ПроцентАвтоматическойСкидки,
	//|	СтавкаНДС
	//|;
	//
	//// ТОВАРЫ В РЕЗЕРВЕ
	//
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	Размещение,
	//|	&Ссылка				КАК ДокументРезерва,
	//|	Номенклатура,
	//|	СУММА(ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА 	Количество
	//|	ИНАЧЕ												Количество * Упаковка.Коэффициент КОНЕЦ) КАК Количество
	//|ИЗ
	//|	Документ.ЗаказПокупателя.Товары
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И
	//|	Размещение ССЫЛКА Справочник.Склады И ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Размещение, Номенклатура
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	Размещение,
	//|	&Ссылка				КАК ДокументРезерва,
	//|	Номенклатура,
	//|	СУММА(Количество)	КАК Количество
	//|ИЗ
	//|	Документ.ЗаказПокупателя.РазмещениеТоваров	
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И
	//|	Размещение ССЫЛКА Справочник.Склады
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Размещение, Номенклатура
	//|;
	//
	//// РАЗМЕЩЕНИЕ ЗАКАЗОВ
	//
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	Размещение 			Очередь,
	//|	&Ссылка				КАК Заказ,
	//|	Номенклатура,
	//|	Упаковка,
	//|	СУММА(Количество) Количество
	//|ИЗ
	//|	Документ.ЗаказПокупателя.Товары
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И
	//|	Ссылка = &Ссылка И ТИПЗНАЧЕНИЯ(Размещение) = ТИП(ЧИСЛО)
	////|	НЕ Размещение ССЫЛКА Справочник.Склады И Размещение <> Неопределено И ЕСТЬNULL(Размещение, 0) <> 0
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Размещение, Номенклатура, Упаковка
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход	КАК ВидДвижения,
	//|	Размещение 			Очередь,
	//|	&Ссылка				КАК Заказ,
	//|	Номенклатура,
	//|	&ПустаяУпаковка,
	//|	СУММА(Количество) Количество
	//|ИЗ
	//|	Документ.ЗаказПокупателя.РазмещениеТоваров
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И
	//|	Ссылка = &Ссылка И ТИПЗНАЧЕНИЯ(Размещение) = ТИП(ЧИСЛО)
	////|	НЕ Размещение ССЫЛКА Справочник.Склады И Размещение <> Неопределено И ЕСТЬNULL(Размещение, 0) <> 0
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Размещение, Номенклатура
	//|;
	//
	////// ДОЛГИ ПО ОТГРУЗКАМ 1
	////
	////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	////|	ДокументОтгрузки,
	////|	-СуммаОстаток Сумма
	////|ИЗ
	////|	РегистрНакопления.ДолгиПоОтгрузкам.Остатки(&Период, 
	////|									Организация = &Организация И 
	////|									Партнер 	= &Партнер И 
	////|									Заказ 		= НЕОПРЕДЕЛЕНО)
	////|ГДЕ
	////|	СуммаОстаток < 0
	////|;
	////
	////// ДОЛГИ ПО ОТГРУЗКАМ 2
	////
	////|ВЫБРАТЬ РАЗРЕШЕННЫЕ								// движение по долгу
	////|	&Период				Период,
	////|	&ВидДвиженияПриход	ВидДвижения,
	////|	Организация,
	////|	Партнер,
	////|	Контрагент,
	////|	&Ссылка				Заказ,
	////|	НЕОПРЕДЕЛЕНО		ДокументОтгрузки,
	////|	&СуммаЗаказа		Сумма
	////|ИЗ
	////|	Документ.ЗаказПокупателя
	////|ГДЕ
	////|	Ссылка = &Ссылка И &СуммаЗаказа <> 0
	////|;
	//
	//// Долги по заказам
	//
	//|ВЫБРАТЬ
	//|	&Период				Период,
	//|	&ВидДвиженияПриход	ВидДвижения,
	//|	Организация,
	//|	Партнер,
	//|	Контрагент,
	//|	&Ссылка				Заказ,
	//|	&СуммаЗаказа		Сумма
	//|ИЗ
	//|	Документ.ЗаказПокупателя
	//|ГДЕ
	//|	Ссылка = &Ссылка 
	//|;
	//
	//// ОТГРУЖЕННЫЕ ЗАКАЗЫ

	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	&Период	Период,
	//|	Ссылка 	Заказ,
	//|	СУММА(Номенклатура.Вес * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ВесЗаказа,
	//|	СУММА(Номенклатура.Объем * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА Количество ИНАЧЕ Количество * Упаковка.Коэффициент КОНЕЦ) 	ОбъемЗаказа
	//|ИЗ
	//|	Документ.ЗаказПокупателя.Товары
	//|ГДЕ
	//|	Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка
	//|;
	//// ЛИМИТЫ
	//|ВЫБРАТЬ
	//|   &Период,
	//|	&ВидДвиженияРасход			ВидДвижения,
	//|	Ссылка.ОтветственноеЛицо	Инициатор,
	//|	СУММА(Сумма) 				Сумма
	//|ИЗ
	//|	Документ.ЗаказПокупателя.Товары
	//|ГДЕ
	//|   Ссылка = &Ссылка И Ссылка.ОтветственноеЛицо <> &ПустойИнициатор
	//|СГРУППИРОВАТЬ ПО Ссылка;
	//
	//// Вычисляем последюю очередь (глупо но времени нет, от очереди в регистре надо избавлятся)
	//
	//|ВЫБРАТЬ Номенклатура, МАКСИМУМ(Очередь) Очередь
	//|ПОМЕСТИТЬ ТаблОчереди
	//|ИЗ РегистрНакопления.РазмещениеЗаказовВПути.Остатки(
	//|										&ПериодОчереди, 
	//|										Номенклатура В(ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ Документ.ЗаказПокупателя.РазмещениеТоваров ГДЕ Ссылка = &Ссылка И Размещение ССЫЛКА Документ.ЗаказПоставщику))
	//|СГРУППИРОВАТЬ ПО Номенклатура;
	//
	//
	//
	//// РАЗМЕЩЕНИЕ ЗАКАЗОВ В ПУТИ
	//
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияПриход  КАК ВидДвижения,
	//|	ЕСТЬNULL(Оч.Очередь , 1) КАК Очередь,
	//|	Ссылка				КАК Размещение,
	//|	Док.Номенклатура	КАК Номенклатура,
	//|	Размещение			КАК ЗаказПоставщику,
	//|	СУММА(Количество)	Количество
	//|ИЗ
	//|	Документ.ЗаказПокупателя.РазмещениеТоваров Док
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ 	ТаблОчереди Оч
	//|ПО					Док.Номенклатура = Оч.Номенклатура
	//|
	//|ГДЕ
	//|	Ссылка = &Ссылка И Размещение ССЫЛКА Документ.ЗаказПоставщику
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка,
	//|	ЕСТЬNULL(Оч.Очередь , 1),
	//|	Размещение,
	//|	Док.Номенклатура
	//|");
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 				Ссылка);
	Запрос.УстановитьПараметр("Организация", 			Ссылка.Организация);
	Запрос.УстановитьПараметр("Партнер", 				Ссылка.Партнер);
	Запрос.УстановитьПараметр("Контрагент", 			Ссылка.Контрагент);
	Запрос.УстановитьПараметр("СуммаЗаказа", 			Ссылка.Сумма);
	Запрос.УстановитьПараметр("Период", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("ПериодОчереди", 		?(НачалоДня(Ссылка.Дата) = НачалоДня(ТекущаяДата()), НачалоДня(ТекущаяДата()), Ссылка.Дата));
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 		ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 		ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустойСклад", 			Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 		Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойИнициатор", 		Справочники.ФизическиеЛица.ПустаяСсылка());
	
	Пакет = Запрос.ВыполнитьПакет();
	ПараметрыСистемы = КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 	ПараметрыСистемы);
	ДополнительныеСвойства.Вставить("Шапка", 				КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", 	Новый ТаблицаЗначений);//необходимо очищать старые наборы движений
	
КонецПроцедуры



Функция ЗаполнитьПлатежныеДокументы(Ссылка) Экспорт
	//не используется
	Возврат Неопределено;
	
	//// найдем висящие авансы и прикрепим к заказу
	//
	//Запрос = Новый Запрос("
	//|ВЫБРАТЬ
	//|	ДокументОплаты, 
	//|	СуммаПриход		 		СуммаАванса
	//|ИЗ 
	//|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,&Период,,, 
	//|		Партнер = &Партнер И 
	//|		Организация = &Организация И 
	//|		Заказ = Неопределено И 
	//|		ДокументОтгрузки = Неопределено И 
	//|		ДокументОплаты <> Неопределено
	//|	)
	//|
	//|УПОРЯДОЧИТЬ ПО ДокументОплаты.Дата
	//|");
	//
	//Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//Запрос.УстановитьПараметр("Партнер", Ссылка.Партнер);
	//Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	//
	//Оплаты = Новый ТаблицаЗначений;
	//Оплаты.Колонки.Добавить("ДокументОплаты");
	//Оплаты.Колонки.Добавить("Сумма");
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//СколькоРаспределить =  Ссылка.Сумма; 
	//
	//Пока Выборка.Следующий() Цикл
	//	НовСтрока = Оплаты.Добавить();
	//	НовСтрока.ДокументОплаты = Выборка.ДокументОплаты;
	//	
	//	Если Выборка.СуммаАванса >= СколькоРаспределить Тогда
	//		НовСтрока.Сумма = СколькоРаспределить;
	//		Прервать;
	//	Иначе
	//		НовСтрока.Сумма = Выборка.СуммаАванса;
	//		СколькоРаспределить = СколькоРаспределить - НовСтрока.Сумма;
	//	КонецЕсли;
	// КонецЦикла;
	// 
	// Возврат Оплаты;

КонецФункции


#Область Печать

#Область Русский

// Процедура заполнения реквизитов шапки счета, заказа.
//
// Параметры:
//	ДанныеПечати - ВыборкаИзРезультатаЗапроса - Данные шапки документа
//	Макет - Макет СчетЗаказ
//	ТабличныйДокумент - Табличный документ
//
Процедура ЗаполнитьРеквизитыШапкиСчетЗаказ(ДанныеПечати, Макет, ТабличныйДокумент, Тип)
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата); //
	
	Если Тип = "Счет" ИЛИ Тип = "СчетКВозврату" Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		 ДатаПлатежа = '00010101';

		//Если ТаблицаЭтапыОплаты.Количество() = 0 Тогда
		//		//ИначеЕсли ТаблицаЭтапыОплаты.Количество() = 1 Тогда
		//	ДатаПлатежа = ТаблицаЭтапыОплаты[0].ДатаПлатежа;
		//Иначе
		//	ТаблицаЭтапыОплаты.Сортировать("ДатаПлатежа Убыв");
		//	ДатаПлатежа = ТаблицаЭтапыОплаты[0].ДатаПлатежа;
		//КонецЕсли;
		//	
		Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
			
			НадписьСрокДействия = НСтр("ru='Счет действителен до %СрокДействия%. '");
			НадписьСрокДействия = СтрЗаменить(НадписьСрокДействия, "%СрокДействия%", Формат(ДатаПлатежа, "ДЛФ=D"));
			ОбластьМакета.Параметры.СрокДействия = НадписьСрокДействия;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИНН             = СведенияОПоставщике.ИНН;
		ОбластьМакета.Параметры.КПП             = СведенияОПоставщике.КПП;
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			
			Банк = ?(ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет.БанкДляРасчетов),
				ДанныеПечати.БанковскийСчет.БанкДляРасчетов,
				ДанныеПечати.БанковскийСчет.Банк
			);
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ?(ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет.БанкДляРасчетов),
				ДанныеПечати.БанковскийСчет.Банк.КоррСчет,
				ДанныеПечати.БанковскийСчет.НомерСчета
			);
			
			ОбластьМакета.Параметры.БИКБанкаПолучателя               = БИК;
			ОбластьМакета.Параметры.БанкПолучателя                   = Банк;
			ОбластьМакета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) + " " + ГородБанка;
			ОбластьМакета.Параметры.СчетБанкаПолучателя              = КоррСчет;
			ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = КоррСчет;
			ОбластьМакета.Параметры.СчетПолучателяПредставление      = НомерСчета;
			ОбластьМакета.Параметры.СчетПолучателя                   = НомерСчета;
			ПредставлениеПоставщикаДляПлатПоручения                  = ДанныеПечати.БанковскийСчетТекстКорреспондента;
			
		КонецЕсли;
		
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеПоставщикаДляПлатПоручения = ПредставлениеПоставщикаДляПлатПоручения;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	
	Если Тип = "Счет" ИЛИ Тип = "СчетКВозврату" Тогда
		
		ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Счет на оплату'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	ИначеЕсли Тип = "Заказ" Тогда
		
		ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Заказ клиента'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	ИначеЕсли Тип = "ЗаявкаНаЗамену" Тогда
		
		ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Заявка на замену'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	
	ОбластьМакета.Параметры.ТекстПоставщик = ?(Тип = "Счет" ИЛИ Тип = "СчетКВозврату", НСтр("ru='Поставщик:'"), НСтр("ru='Исполнитель:'"));
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	Если Тип = "Счет" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
		ОбластьМакета.Параметры.Грузоотправитель	=  ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ТекстПокупатель         = ?(Тип = "Счет" ИЛИ Тип = "СчетКВозврату", НСтр("ru='Покупатель:'"), НСтр("ru='Заказчик:'"));
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	Если Тип = "Счет" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
		ОбластьМакета.Параметры.Грузополучатель			= ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата), "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");	
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРеквизитыШапкиСчетЗаказ()

// Процедура заполнения реквизитов подвала счета, заказа.
//
// Параметры:
//	ДанныеПечати - ВыборкаИзРезультатаЗапроса - Данные шапки документа
//	ИтоговыеСуммы - Структура - Структура итоговых сумм документа
//	Макет - Макет СчетЗаказ
//	ТабличныйДокумент - Табличный документ
//
Процедура ЗаполнитьРеквизитыПодвалаСчетЗаказ(ДанныеПечати, Макет, ТабличныйДокумент, Тип, СоответствиеСтавокНДС, ИмяДопИмениОбластей = "")
	
	// Вывести этапы графика оплаты
	//Если ТаблицаЭтапыОплаты.Количество() > 1 Тогда
	//	
	//	ТаблицаЭтапыОплаты.Сортировать("НомерСтроки Возр");
	//	
	//	ИмяКолонкиДатыОплаты = ?(Тип="СчетКВозврату", НСтр("ru='Дата оплаты или возврата'"), НСтр("ru='Дата оплаты'"));
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты|НомерСтрокиТаблицаЭтапыОплаты");
	//	ТабличныйДокумент.Вывести(ОбластьМакета);
	//	
	//	Если Тип = "Заказ" Тогда
	//		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты|ВариантОплатыТаблицаЭтапыОплаты");
	//		ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	КонецЕсли;
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты|ДанныеТаблицаЭтапыОплаты");
	//	ОбластьМакета.Параметры.ИмяКолонкиДатыОплаты = ИмяКолонкиДатыОплаты;
	//	ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты|НДСТаблицаЭтапыОплаты");
	//	ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	
	//	ОбластьНомерСтроки = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплаты|НомерСтрокиТаблицаЭтапыОплаты");
	//	ОбластьДанные      = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплаты|ДанныеТаблицаЭтапыОплаты");
	//	ОбластьНДС         = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплаты|НДСТаблицаЭтапыОплаты");
	//	
	//	Для Каждого ТекЭтап Из ТаблицаЭтапыОплаты Цикл
	//		
	//		ОбластьНомерСтроки.Параметры.Заполнить(ТекЭтап);
	//		ТабличныйДокумент.Вывести(ОбластьНомерСтроки);
	//		
	//		Если Тип = "Заказ" Тогда
	//			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплаты|ВариантОплатыТаблицаЭтапыОплаты");
	//			ОбластьМакета.Параметры.Заполнить(ТекЭтап);
	//			ТабличныйДокумент.Присоединить(ОбластьМакета);
	//		КонецЕсли;
	//		
	//		ОбластьДанные.Параметры.Заполнить(ТекЭтап);
	//		ТабличныйДокумент.Присоединить(ОбластьДанные);
	//		
	//		ТекстНДС = СформироватьТекстНДСЭтапаОплаты(СоответствиеСтавокНДС, ТекЭтап.ПроцентПлатежа);
	//		
	//		ОбластьНДС.Параметры.ТекстНДС = ТекстНДС;
	//		ТабличныйДокумент.Присоединить(ОбластьНДС);
	//		
	//	КонецЦикла;
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты|НомерСтрокиТаблицаЭтапыОплаты");
	//	ТабличныйДокумент.Вывести(ОбластьМакета);
	//	
	//	Если Тип = "Заказ" Тогда
	//		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты|ВариантОплатыТаблицаЭтапыОплаты");
	//		ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	КонецЕсли;
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты|ДанныеТаблицаЭтапыОплаты");
	//	ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты|НДСТаблицаЭтапыОплаты");
	//	ТабличныйДокумент.Присоединить(ОбластьМакета);
	//	
	//КонецЕсли;
	
	// Вывести дополнительную информацию
	Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформация) Тогда
		
		ОбластьМакета                                    = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
		ОбластьМакета.Параметры.ДополнительнаяИнформация = ДанныеПечати.ДополнительнаяИнформация;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
		
	// Вывести подписи
	Если Тип = "Счет" ИЛИ Тип = "СчетКВозврату" Тогда
			
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета" + ИмяДопИмениОбластей);
		ОбластьМакета.Параметры.ФИОРуководителя = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Руководитель);
		ОбластьМакета.Параметры.ФИОБухгалтера   = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ГлавныйБухгалтер);
		Если ДанныеПечати.ОрганизацияМенеджер = ДанныеПечати.Организация Тогда
			ОбластьМакета.Параметры.ФИОМенеджер = ?(ДанныеПечати.Менеджер = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор("9e97c9f1-7b4c-11e1-86be-0015175303fd")), "",ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер));	
		КонецЕсли;	
	Иначе
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
		Если ДанныеПечати.ОрганизацияМенеджер = ДанныеПечати.Организация Тогда
			ОбластьМакета.Параметры.ФИОМенеджер = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер);
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры // ЗаполнитьРеквизитыПодвалаСчетЗаказ()

// Процедура заполняет табличный документ  счета, заказа.
//
Процедура ЗаполнитьТабличныйДокументСчетЗаказ(ТабличныйДокумент, Запрос, ОбъектыПечати, Тип, ПечататьСНаличием = Ложь, НомерЗапросаТоваров = 3, ИмяДопИмениОбластей = "", ПечатьСоСрокомДоставки = Ложь) Экспорт
	
	//ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	Рез = Запрос.ВыполнитьПакет();
	Если НЕ Рез.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПечати = Рез[0].Выбрать();
	//ИспользоватьРучныеСкидки         = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	//ИспользоватьАвтоматическиеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	
	//ПервыйДокумент = Истина;
	КолонкаКодов   = "Артикул"; //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	Пока ДанныеПечати.Следующий() Цикл
		
		ПечататьКолонкиНДС = ДанныеПечати.УчитыватьНДС;
		СкладОтгрузки = ДанныеПечати.Склад;
		
		Макет = Документы.ЗаказПокупателя.ПолучитьМакет("СчетЗаказ");
		
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		//ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказКлиента_СчетЗаказ";
		
		//ТаблицаЭтапыОплаты = ДанныеПечати.ЭтапыГрафикаОплаты.Выгрузить();
		ТаблицаТовары      = Рез[НомерЗапросаТоваров].Выгрузить(); //ДанныеПечати.Товары.Выгрузить();
		
		ЕстьСкидки    = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ТаблицаТовары, НЕ ДанныеПечати.НеВыводьКолонкуСкидкаВПечатнойФорме);
		ВыводитьКоды  = ЗначениеЗаполнено(КолонкаКодов);
		
		Если ЕстьСкидки Или ПечататьКолонкиНДС Тогда  
			ОбластьКолонкаТовар = Макет.Область("ТоварСНДСИлиСоСкидкой");
		ИначеЕсли ЕстьСкидки И ПечататьКолонкиНДС Тогда
			ОбластьКолонкаТовар = Макет.Область("ТоварСНДССоСкидкой");
		Иначе
			ОбластьКолонкаТовар = Макет.Область("Товар");
		КонецЕсли;
			
		Если Не ВыводитьКоды Тогда
			
			Если ЕстьСкидки Или ПечататьКолонкиНДС Тогда 
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			ИначеЕсли ЕстьСкидки И ПечататьКолонкиНДС Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.35;
			Иначе
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.14;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьСкидки И (ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки) Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкойИНаличием|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкойИНаличием|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкойИНаличием|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкойИНаличием|ДанныеСНДСИлиСоСкидкой");
			
			
		ИначеЕсли ЕстьСкидки И ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыСНДССоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыСНДССоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицыСНДССоСкидкой|ТоварСНДССоСкидкой2");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыСНДССоСкидкой|ДанныеСНДССоСкидкой2");
			
		ИначеЕсли ЕстьСкидки Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ДанныеСНДСИлиСоСкидкой");
			
		ИначеЕсли ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыСНаличием|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыСНаличием|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицыСНаличием|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыСНаличием|Данные");
			
			
		ИначеЕсли ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыСНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыСНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицыСНДС|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыСНДС|ДанныеСНДСИлиСоСкидкой");
			
		Иначе
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		КонецЕсли;
		
		ЗаполнитьРеквизитыШапкиСчетЗаказ(ДанныеПечати, Макет, ТабличныйДокумент, Тип);
		
		
		Если ПечатьСоСрокомДоставки Тогда 
			ОбластьТовар.Параметры.Наличие = "Срок поставки";
			ОбластьМВЗ = Макет.ПолучитьОбласть("МВЗ");
			ОбластьМВЗ.Параметры.МВЗ = ДанныеПечати.МВЗ;
			ОбластьМВЗ.Параметры.ОтветственноеЛицо = ДанныеПечати.ОтветственноеЛицо;
			ТабличныйДокумент.Вывести(ОбластьМВЗ);		
		ИначеЕсли ПечататьСНаличием Тогда ОбластьТовар.Параметры.Наличие = "Наличие"; КонецЕсли;
		
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
			
		КонецЕсли;
		
		ОбластьТовар.Параметры.Товар = НСтр("ru='Товары (работы, услуги)'");
				
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		Если ЕстьСкидки И (ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки) Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкойИНаличием|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкойИНаличием|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкойИНаличием|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкойИНаличием|ДанныеСНДСИлиСоСкидкой");
			
		ИначеЕсли ЕстьСкидки И ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицыСНДССоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицыСНДССоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицыСНДССоСкидкой|ТоварСНДССоСкидкой2");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицыСНДССоСкидкой|ДанныеСНДССоСкидкой2");
			
		ИначеЕсли ЕстьСкидки Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ДанныеСНДСИлиСоСкидкой");
			
		ИначеЕсли ПечататьСНаличием ИЛИ (ПечатьСоСрокомДоставки) Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицыСНаличием|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицыСНаличием|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицыСНаличием|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицыСНаличием|Данные");
			
		ИначеЕсли ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицыСНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицыСНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицыСНДС|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицыСНДС|ДанныеСНДСИлиСоСкидкой");
			
		Иначе
			
			ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		КонецЕсли;
		
		Сумма             = 0;
		СуммаНДС          = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		
		НомерСтроки = 0;
		
		Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
			
			Если СтрокаТовары.Отменено Тогда
				Продолжить;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = СтрокаТовары[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			ОбластьТовар.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.НаименованиеПолное);
			Если ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки Тогда
				ОбластьТовар.Параметры.Наличие = ?(ТипЗнч(СтрокаТовары.Наличие) = Тип("Дата"), 
					"Ожидается " + Формат(СтрокаТовары.Наличие, "ДЛФ=D"),
					СтрокаТовары.Наличие);
					
			КонецЕсли;
			//Если ПечатьСоСрокомДоставки Тогда
			//	ОбластьТовар.Параметры.Наличие = ?(СкладОтгрузки = СтрокаТовары.Размещение, "2 рабочих дня", ?(СтрокаТовары.ЕстьНаСкладе, "1 неделя", "6 недель")); 
			//КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(СтрокаТовары);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Сумма          = Сумма          + СтрокаТовары.Сумма;
			СуммаНДС       = СуммаНДС       + СтрокаТовары.СуммаНДС;
			
			Если ЕстьСкидки Тогда
				ВсегоСкидок    = ВсегоСкидок    + СтрокаТовары.СуммаСкидки;
				ВсегоБезСкидок = ВсегоБезСкидок + СтрокаТовары.СуммаБезСкидки;
			КонецЕсли;
		
		КонецЦикла;
		
		Если ЕстьСкидки И (ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки) Тогда
		
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ДанныеСНДСИлиСоСкидкой");
			
		ИначеЕсли ЕстьСкидки И ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыСНДССоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыСНДССоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыСНДССоСкидкой|ТоварСНДССоСкидкой2");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыСНДССоСкидкой|ДанныеСНДССоСкидкой2");
			
		ИначеЕсли ЕстьСкидки Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ДанныеСНДСИлиСоСкидкой");
			
		ИначеЕсли  ПечататьСНаличием ИЛИ ПечатьСоСрокомДоставки Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
				
		ИначеЕсли ПечататьКолонкиНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыСНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыСНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыСНДС|ТоварСНДСИлиСоСкидкой");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыСНДС|ДанныеСНДСИлиСоСкидкой");
			
		Иначе
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		Если ЕстьСкидки Тогда
			
			ОбластьДанных.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьДанных.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			
			Если ПечататьКолонкиНДС И НЕ ПечататьСНаличием И НЕ ПечатьСоСрокомДоставки Тогда
				ОбластьДанных.Параметры.ВсегоСуммаНДС = СуммаНДС;
			КонецЕсли;
		
		КонецЕсли;
		
		ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		// Вывести ИтогоНДС
		
		СоответствиеСтавокНДС = ФормированиеПечатныхФорм.ПолучитьСоответствиеСтавокНДС();
		
		ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
		ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			Для Каждого ТекСтавкаНДС Из СоответствиеСтавокНДС Цикл
				
				ПараметрыОтбора = Новый Структура();
				ПараметрыОтбора.Вставить("СтавкаНДС", ТекСтавкаНДС.Ключ);
				ПараметрыОтбора.Вставить("Отменено",  Ложь);
				НайденныеСтроки = ТаблицаТовары.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() > 0 Тогда
					ТаблицаТоварыНДС = ТаблицаТовары.Скопировать(НайденныеСтроки, "СуммаНДС");
					ТаблицаТоварыНДС.Свернуть(,"СуммаНДС");
					СоответствиеСтавокНДС.Вставить(ТекСтавкаНДС.Ключ, ТаблицаТоварыНДС[0].СуммаНДС);
					
					ТабличныйДокумент.Вывести(ОбластьНомера);
					
					Если ВыводитьКоды Тогда
						ТабличныйДокумент.Присоединить(ОбластьКодов);
					КонецЕсли;
					
					ТабличныйДокумент.Присоединить(ОбластьТовар);
					
					ОбластьДанных.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС);
					ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(ТаблицаТоварыНДС[0].СуммаНДС, ,"-");
					ТабличныйДокумент.Присоединить(ОбластьДанных);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			ОбластьДанных.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
			ОбластьДанных.Параметры.ВсегоНДС = "-";
			ТабличныйДокумент.Присоединить(ОбластьДанных);
		КонецЕсли;
		
		// итоговая сумма
		ОбластьНомера = Макет.ПолучитьОбласть("ПодвалВсегоКОплате|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалВсегоКОплате|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалВсегоКОплате|Товар");
		ОбластьКОплате = Макет.ПолучитьОбласть("ПодвалВсегоКОплате|Данные");
		Если ДанныеПечати.ЦенаВключаетНДС Тогда
			ОбластьКОплате.Параметры.ВсегоКОплате = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		Иначе
			ОбластьКОплате.Параметры.ВсегоКОплате = ФормированиеПечатныхФорм.ФорматСумм(Сумма + СуммаНДС);
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
        ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьКОплате);
		
		// Вывести Сумму прописью
		
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		
		ИтоговаяСтрока = НСтр("ru='Всего наименований %Количество%, на сумму %Сумма%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Количество%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Сумма%",      ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		Если Тип = "СчетКВозврату" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописьюКВозврату");
			СуммаКВозврату = ДанныеПечати.СуммаКВозврату;
			СуммаИтого = СуммаКПрописи-СуммаКВозврату;
			Если СуммаИтого < 0 Тогда
				СуммаИтого = 0;
			КонецЕсли;
			ОбластьМакета.Параметры.СуммаВозврата = ФормированиеПечатныхФорм.ФорматСумм(СуммаКВозврату, ДанныеПечати.Валюта);
			ОбластьМакета.Параметры.СуммаИтогоКОплате = ФормированиеПечатныхФорм.ФорматСумм(СуммаИтого, ДанныеПечати.Валюта, "0");
			ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаИтого, ДанныеПечати.Валюта);
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
			ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ЗаполнитьРеквизитыПодвалаСчетЗаказ(ДанныеПечати, Макет, ТабличныйДокумент, Тип, СоответствиеСтавокНДС, ИмяДопИмениОбластей);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	//ТабличныйДокумент.АвтоМасштаб = Истина;
	
КонецПроцедуры // ЗаполнитьТабличныйДокументСчетЗаказ()

Процедура ЗаполнитьТабличныйДокументКвитанция(ТабличныйДокумент, Запрос, ОбъектыПечати, Тип, ПечататьСНаличием = Ложь, НомерЗапросаТоваров = 3, ИмяДопИмениОбластей = "", ПечатьСоСрокомДоставки = Ложь) Экспорт
	

			
	Рез = Запрос.ВыполнитьПакет();
	Если НЕ Рез.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПечати = Рез[0].Выбрать();
		 	
	Пока ДанныеПечати.Следующий() Цикл   
		
		//ПечататьКолонкиНДС = ДанныеПечати.УчитыватьНДС;
		//СкладОтгрузки = ДанныеПечати.Склад;
		ТаблицаТовары      = Рез[НомерЗапросаТоваров].Выгрузить();
		ЕстьСкидки         = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ТаблицаТовары);
		Макет = Документы.ЗаказПокупателя.ПолучитьМакет("Квитанция");
		ОбластьМакета = Макет.ПолучитьОбласть("Квитанция");
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата); 
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата); 
		ОбластьМакета.Параметры.Организация      = СведенияОПоставщике.Представление;
        ОбластьМакета.Параметры.ИНН              = СведенияОПоставщике.ИНН;
		
		Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			
			Банк = ?(ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет.БанкДляРасчетов),ДанныеПечати.БанковскийСчет.БанкДляРасчетов,ДанныеПечати.БанковскийСчет.Банк);
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ?(ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет.БанкДляРасчетов),
				ДанныеПечати.БанковскийСчет.Банк.КоррСчет,
				ДанныеПечати.БанковскийСчет.НомерСчета
			);
			
			ОбластьМакета.Параметры.БИК              = БИК;
			ОбластьМакета.Параметры.БанкНаименование                 = СокрЛП(Банк);
			ОбластьМакета.Параметры.КорСчет                          = КоррСчет;
			ОбластьМакета.Параметры.НомерСчета                       = НомерСчета;
			
		КонецЕсли;

		
		ОбластьМакета.Параметры.НазначениеПлатежа = "Оплата товара по заказу № "+ ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ДанныеПечати.Номер)+ " от "+ Формат(ДанныеПечати.Дата, "ДЛФ=Д");
		ОбластьМакета.Параметры.ПлательщикНаименование = СведенияОПокупателе.Представление;
		ОбластьМакета.Параметры.АдресПлательщика       = ?(СведенияОПокупателе.ЮридическийАдрес = "",СведенияОПокупателе.ФактическийАдрес,СведенияОПокупателе.ЮридическийАдрес);
		ОбластьМакета.Параметры.ТелефонПлательщика     = Сред(СведенияОПокупателе.Телефоны, 7) ;
		
		Сумма             = 0;
		СуммаНДС          = 0;
				
		НомерСтроки = 0;
		
		Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
			
						
			Сумма          = Сумма          + СтрокаТовары.Сумма;
			СуммаНДС       = СуммаНДС       + СтрокаТовары.СуммаНДС;
			
		КонецЦикла;
		
        Если ДанныеПечати.ЦенаВключаетНДС Тогда
			ОбластьМакета.Параметры.СуммаРубли   = Цел(Сумма);
			ОбластьМакета.Параметры.СуммаКопейки = (Сумма - Цел(Сумма))*100 ;
		Иначе
			ОбластьМакета.Параметры.СуммаРубли = Цел(Сумма + СуммаНДС);
			ОбластьМакета.Параметры.СуммаКопейки = (Сумма+СуммаНДС - Цел(Сумма + СуммаНДС))*100;
		КонецЕсли;

		    ТабличныйДокумент.АвтоМасштаб = Истина;

		  	ТабличныйДокумент.Вывести(ОбластьМакета);

		КонецЦикла;
		
	КонецПроцедуры // ЗаполнитьТабличныйДокументКвитанция()



// Функция формирует печатную форму документа.
//
// Параметры:
// Тип - Строка - тип печатной формы: Заказ или Счет
// МассивОбъектов - Массив - массив документов для печати
// ОбъектыПечати - СписокЗначений
//
// Возвращаемое значение:
// ТабличныйДокумент
//
Функция СформироватьПечатнуюФорму_ст(ТабличныйДокумент, Ссылка, Тип)	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.Текст = 
		"
		|ВЫБРАТЬ
		|	
		|	Номенклатура				Номенклатура,
		|	Цена						Цена,
		|	Упаковка					Упаковка,
		|	Размещение					Размещение,
		|	СУММА(Сумма)				Сумма,
		|	СУММА(Количество)			Количество,
		|	СУММА(СуммаНДС)				СуммаНДС,
		|	МАКСИМУМ(СтавкаНДС)         СтавкаНДС
		|ПОМЕСТИТЬ ТаблицаКорректировок
		|		
		|ИЗ
		|	Документ.КорректировкаЗаказаПокупателя.Товары
		|ГДЕ
		|	Ссылка.Заказ = &Ссылка
		|СГРУППИРОВАТЬ ПО 
		|	Номенклатура, Цена, Упаковка, Размещение
		|;
		|///////////////////////////////////
		|///ШАПКА
		|
		|ВЫБРАТЬ 
		|	Док.Ссылка                                            КАК Ссылка,
		|	Док.Номер                                             КАК Номер,
		|	Док.Дата                                              КАК Дата,
		|	Док.Организация                                       КАК Организация,
		|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
		|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
		|	Док.УчитыватьНДС                                     КАК УчитыватьНДС,
		|	Док.Контрагент                                   	 КАК Контрагент,
		|	БанковскийСчетПартнера                               КАК БанковскийСчет,
		|	БанковскийСчетПартнера.ТекстКорреспондента           КАК БанковскийСчетТекстКорреспондента,
		|	Док.СуммаВключаетНДС                             КАК ЦенаВключаетНДС,
		|	Док.Валюта                                       КАК Валюта,
		|	Док.Ответственный.Наименование         			 КАК Менеджер,
		|	Док.Комментарий				                     КАК ДополнительнаяИнформация
		|ИЗ
		|	Документ.ЗаказПокупателя Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
		|	ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
		|	ПО ИСТИНА
		|ГДЕ
		|	Ссылка = &Ссылка
        |;
		|//////////////////////////////////////////////
		|///ТОВАРЫ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Док.Номенклатура, Кор.Номенклатура)                                           КАК Номенклатура,
		|	ЕСТЬNULL(Док.Номенклатура.Код, Кор.Номенклатура.Код)                                   КАК Код,
		|	ЕСТЬNULL(Док.Номенклатура.Артикул, Кор.Номенклатура.Артикул)                           КАК Артикул,
		|	ЕСТЬNULL(Док.Номенклатура.НаименованиеПолное, Кор.Номенклатура.НаименованиеПолное)     КАК НаименованиеПолное,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Док.Упаковка, Кор.Упаковка) = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(Док.Номенклатура.ЕдиницаИзмерения, Кор.Номенклатура.ЕдиницаИзмерения))
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(Док.Упаковка, Кор.Упаковка))
		|	КОНЕЦ                                                 КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(Док.Цена, Кор.Цена)                          КАК Цена,
		|	ЕСТЬNULL(Док.Количество, 0) + ЕСТЬNULL(Кор.Количество, 0) 								КАК Количество,
		|	ЕСТЬNULL(Док.СуммаРучнойСкидки, 0)				      									КАК СуммаСкидки,
		|	ЕСТЬNULL(Док.Сумма, 0) + ЕСТЬNULL(Кор.Сумма, 0) + ЕСТЬNULL(Док.СуммаРучнойСкидки, 0)	КАК Сумма,
		|	ЕСТЬNULL(Док.Сумма, 0) + ЕСТЬNULL(Кор.Сумма, 0)                                         КАК СуммаБезСкидки,
		|	ЕСТЬNULL(Док.СтавкаНДС, Кор.СтавкаНДС)			                                        КАК СтавкаНДС,
		|	ЕСТЬNULL(Док.СуммаНДС, 0) + ЕСТЬNULL(Кор.СуммаНДС, 0)                                   КАК СуммаНДС,
		|	ДАТАВРЕМЯ(1,1,1,0,0,0)                                КАК ДатаОтгрузки,
		|	ЛОЖЬ	                                              КАК Отменено
		|	
		|ИЗ
		|	ТаблицаКорректировок Кор
		|	ПОЛНОЕ СОЕДИНЕНИЕ
		|		(	ВЫБРАТЬ
		|				Номенклатура,
		|				Упаковка,
		|				Цена,
		|				Количество,
		|				СуммаРучнойСкидки,
		|				Сумма,
		|				СтавкаНДС,
		|				СуммаНДС,
		|				Размещение
		|			ИЗ
		|				Документ.ЗаказПокупателя.Товары
		|			ГДЕ  
		|				Ссылка = &Ссылка
		|		)	КАК Док
		|	ПО
		|		Док.Номенклатура = Кор.Номенклатура И Док.Цена = Кор.Цена И Док.Упаковка = Кор.Упаковка И Док.Размещение = Кор.Размещение			
		|;
		|ВЫБРАТЬ * ИЗ ТаблицаКорректировок";
		
	Рез = Запрос.Выполнить().Выбрать();	
	//Тип = "";	
	ЗаполнитьТабличныйДокументСчетЗаказ(ТабличныйДокумент, Запрос, , Тип);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецФункции // СформироватьПечатнуюФорму()
	//Запрос.Текст = 
	  //  "
	  //  //|ВЫБРАТЬ
	  //  //|	
	  //  //|	Номенклатура				Номенклатура,
	  //  //|	Цена						Цена,
	  //  //|	Упаковка					Упаковка,
	  //  //|	Размещение					Размещение,
	  //  //|	СУММА(Сумма)				Сумма,
	  //  //|	СУММА(Количество)			Количество,
	  //  //|	СУММА(СуммаНДС)				СуммаНДС,
	  //  //|	МАКСИМУМ(СтавкаНДС)         СтавкаНДС
	  //  //|ПОМЕСТИТЬ ТаблицаКорректировок
	  //  //|		
	  //  //|ИЗ
	  //  //|	Документ.КорректировкаЗаказаПокупателя.Товары
	  //  //|ГДЕ
	  //  //|	Ссылка.Заказ = &Ссылка
	  //  //|СГРУППИРОВАТЬ ПО 
	  //  //|	Номенклатура, Цена, Упаковка, Размещение
	  //  //|;
	  //  |///////////////////////////////////
	  //  |///ШАПКА
	  //  |
	  //  |ВЫБРАТЬ 
	  //  |	Док.Ссылка                                            КАК Ссылка,
	  //  |	Док.Номер                                             КАК Номер,
	  //  |	Док.Дата                                              КАК Дата,
	  //  |	Док.Организация                                       КАК Организация,
	  //  |	Док.Склад												Склад,
	  //  |" + ?(СоСрокомДоставки, "ПРЕДСТАВЛЕНИЕ(Док.МВЗ) 	МВЗ,
	  //  |	Док.ОтветственноеЛицо 							ОтветственноеЛицо,", "") + "
	  //  |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	  //  |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	  //  |	Док.УчитыватьНДС                            		 КАК УчитыватьНДС,
	  //  |	Док.Контрагент                                   	 КАК Контрагент,
	  //  |	ВЫБОР КОГДА Док.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	  //  |	      ТОГДА Док.Организация
	  //  |	      ИНАЧЕ Док.Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	  //  |	ВЫБОР КОГДА Док.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	  //  |	      ТОГДА Док.Контрагент
	  //  |	      ИНАЧЕ Док.Грузополучатель КОНЕЦ КАК Грузополучатель,
	  //  |	ВЫБОР КОГДА БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ТОГДА
	  //  |		&БанковскийСчетПоУмолчанию
	  //  |	ИНАЧЕ
	  //  |		БанковскийСчетОрганизации
	  //  |	КОНЕЦ КАК БанковскийСчет,
	  //  |	БанковскийСчетОрганизации.ТекстКорреспондента           КАК БанковскийСчетТекстКорреспондента,
	  //  |	Док.СуммаВключаетНДС                             КАК ЦенаВключаетНДС,
	  //  |	Док.Валюта                                       КАК Валюта,
	  //  |	Док.Ответственный.Наименование         			 КАК Менеджер,
	  //  |	Док.Ответственный.Организация					 КАК ОрганизацияМенеджер,
	  //  |	""""						                     КАК ДополнительнаяИнформация
	  //  |ИЗ
	  //  |	Документ.ЗаказПокупателя Док
	  //  |	ЛЕВОЕ СОЕДИНЕНИЕ
	  //  |		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	  //  |	ПО ИСТИНА
	  //  |	ЛЕВОЕ СОЕДИНЕНИЕ
	  //  |		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	  //  |	ПО ИСТИНА
	  //  |ГДЕ
	  //  |	Ссылка = &Ссылка
	  //  |;
	  //  |//////////////////////////////////////////////
	  //  |///ТОВАРЫ
	  //  |" + ?(Ссылка.Проведен,"
	  //  //|ВЫБРАТЬ
	  //  //|	Док.Номенклатура                        КАК Номенклатура,
	  //  //|	ВЫБОР
	  //  //|		КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	  //  //|			ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения)
	  //  //|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка)
	  //  //|	КОНЕЦ                                   КАК ЕдиницаИзмерения,
	  //  //|	Док.Цена                       		КАК Цена,
	  //  //|	Док.КоличествоПриход				КАК Количество,
	  //  ////|	Док.Цена * Док.КоличествоПриход * Док.ПроцентРучнойСкидки * 0,01 +
	  //  ////|	Док.Цена * Док.КоличествоПриход * Док.ПроцентАвтоматическойСкидки * 0,01  КАК СуммаСкидки,
	  //  //|	Док.Цена * Док.КоличествоПриход * Док.ПроцентРучнойСкидки * 0.01 + Док.Цена * Док.КоличествоПриход * Док.ПроцентАвтоматическойСкидки * 0.01  КАК СуммаСкидки,
	  //  //|	Док.СуммаПриход						КАК Сумма,
	  //  //|	Док.Цена * Док.КоличествоПриход     КАК СуммаБезСкидки,
	  //  //|	Док.СтавкаНДС			        	КАК СтавкаНДС,
	  //  //|" + Заказы.ПолучитьСуммуНДСВЗапросе("Док") + " КАК СуммаНДС,         
	  //  //|	Док.Размещение						Размещение,
	  //  //|	ВЫБОР КОГДА Док.Размещение ССЫЛКА Справочник.Склады ТОГДА ИСТИНА
	  //  //|	ИНАЧЕ ЛОЖЬ
	  //  //|	КОНЕЦ								ЕстьНаСкладе
	  //  //|	ПОМЕСТИТЬ СписокТоваров
	  //  //|ИЗ
	  //  //|	РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(,&ДатаВыполнения,,,ЗаказПокупателя = &Ссылка) Док
	  //  |ВЫБРАТЬ
	  //  |	Док.Номенклатура                        КАК Номенклатура,
	  //  |	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения) ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка) КОНЕЦ КАК ЕдиницаИзмерения,
	  //  |	Док.Цена                       		КАК Цена,
	  //  |	Док.КоличествоПриход				КАК Количество,
	  //  |	МАКСИМУМ(Док.Цена * Док.КоличествоПриход * Док.ПроцентРучнойСкидки * 0.01 + Док.Цена * Док.КоличествоПриход * Док.ПроцентАвтоматическойСкидки * 0.01)  КАК СуммаСкидки,
	  //  |	МАКСИМУМ(Док.СуммаПриход)			КАК Сумма,
	  //  |	МАКСИМУМ(Док.Цена * Док.КоличествоПриход)     КАК СуммаБезСкидки,
	  //  |	Док.СтавкаНДС			        	КАК СтавкаНДС,
	  //  |	МАКСИМУМ(" + Заказы.ПолучитьСуммуНДСВЗапросе("Док") + ") КАК СуммаНДС,
	  //  |	МАКСИМУМ(ЕСТЬNULL(Рез.Размещение, Неопределено))		 КАК Размещение,
	  //  |	МАКСИМУМ(ВЫБОР КОГДА ЕСТЬNULL(Рез.Размещение, Неопределено) ССЫЛКА Справочник.Склады ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) ЕстьНаСкладе
	  //  |
	  //  |ПОМЕСТИТЬ СписокТоваров
	  //  |ИЗ					РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(,&ДатаВыполнения,,,ЗаказПокупателя = &Ссылка) Док
	  //  |
	  //  |ЛЕВОЕ СОЕДИНЕНИЕ	РегистрНакопления.ТоварыВРезерве.Остатки(&ДатаВыполнения, ДокументРезерва = &Ссылка) Рез
	  //  |ПО					Док.Номенклатура = Рез.Номенклатура
	  //  |
	  //  |
	  //  |СГРУППИРОВАТЬ ПО
	  //  |	Док.Номенклатура,
	  //  |	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения) ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка) КОНЕЦ,
	  //  |	Док.Цена,
	  //  |	Док.КоличествоПриход,
	  //  |	Док.СтавкаНДС
	  //  //|	Рез.Размещение,
	  //  //|	ВЫБОР КОГДА Рез.Размещение ССЫЛКА Справочник.Склады ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ
	  //  |"," " + ?(Не Ссылка.СпособРазмещенияБезЗаказа, "
	  //  |ВЫБРАТЬ
	  //  |	Док.Номенклатура                        КАК Номенклатура,
	  //  |	ВЫБОР
	  //  |		КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	  //  |			ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения)
	  //  |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка)
	  //  |	КОНЕЦ                                   КАК ЕдиницаИзмерения,
	  //  |	Док.Цена                        		КАК Цена,
	  //  |	СУММА(Док.Количество)						КАК Количество,
	  //  //|	Док.Цена * Док.КоличествоПриход * Док.ПроцентРучнойСкидки * 0,01 +
	  //  //|	Док.Цена * Док.КоличествоПриход * Док.ПроцентАвтоматическойСкидки * 0,01  КАК СуммаСкидки,
	  //  |	СУММА(Док.СуммаРучнойСкидки + Док.СуммаАвтоматическойСкидки) КАК СуммаСкидки,
	  //  |	СУММА(Док.Сумма)							КАК Сумма,
	  //  |	СУММА(Док.Цена * Док.Количество)		    КАК СуммаБезСкидки,
	  //  |	Док.СтавкаНДС			        	КАК СтавкаНДС,
	  //  |	СУММА(" + Заказы.ПолучитьСуммуНДСВЗапросе("Док","", "Ссылка") + ") КАК СуммаНДС,
	  //  |	Док.Размещение						Размещение,
	  //  |	ВЫБОР КОГДА Док.Размещение ССЫЛКА Справочник.Склады ТОГДА ИСТИНА
	  //  |	ИНАЧЕ ЛОЖЬ
	  //  |	КОНЕЦ								ЕстьНаСкладе,
	  //  |	МАКСИМУМ(Док.НомерСтроки)			НомерСтроки
	  //  |	ПОМЕСТИТЬ СписокТоваров
	  //  |ИЗ
	  //  |	Документ.ЗаказПокупателя.Товары Док
	  //  |ГДЕ
	  //  |	Ссылка = &Ссылка
	  //  |
	  //  |СГРУППИРОВАТЬ ПО
	  //  |	Док.Номенклатура,
	  //  |	ВЫБОР
	  //  |		КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	  //  |			ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения)
	  //  |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка)
	  //  |	КОНЕЦ,
	  //  |	Док.Цена,
	  //  |	Док.СтавкаНДС,
	  //  |	Док.Размещение
	  //  |", "ВЫБРАТЬ
	  //  |	Док.Номенклатура                        КАК Номенклатура,
	  //  |	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения) ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка) КОНЕЦ                                   КАК ЕдиницаИзмерения,
	  //  |	Док.Цена                        		КАК Цена,
	  //  |	МАКСИМУМ(Док.Количество)				КАК Количество,
	  //  |	МАКСИМУМ(Док.СуммаРучнойСкидки + Док.СуммаАвтоматическойСкидки) КАК СуммаСкидки,
	  //  |	МАКСИМУМ(Док.Сумма)						КАК Сумма,
	  //  |	МАКСИМУМ(Док.Цена * Док.Количество)		КАК СуммаБезСкидки,
	  //  |	Док.СтавкаНДС			        		КАК СтавкаНДС,
	  //  |	МАКСИМУМ(" + Заказы.ПолучитьСуммуНДСВЗапросе("Док","", "Ссылка") + ") КАК СуммаНДС,
	  //  |	МАКСИМУМ(ЕСТЬNULL(Разм.Размещение, Неопределено))				КАК Размещение,
	  //  |	МАКСИМУМ(ВЫБОР КОГДА Разм.Размещение ССЫЛКА Справочник.Склады ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) ЕстьНаСкладе,
	  //  |	МАКСИМУМ(Док.НомерСтроки)				КАК НомерСтроки
	  //  |
	  //  |ПОМЕСТИТЬ 	СписокТоваров
	  //  |ИЗ			Документ.ЗаказПокупателя.Товары Док
	  //  |
	  //  |ЛЕВОЕ СОЕДИНЕНИЕ	Документ.ЗаказПокупателя.РазмещениеТоваров Разм
	  //  |ПО					Док.Номенклатура = Разм.Номенклатура
	  //  |
	  //  |ГДЕ Док.Ссылка = &Ссылка И Разм.Ссылка = &Ссылка
	  //  |
	  //  |СГРУППИРОВАТЬ ПО
	  //  |	Док.Номенклатура,
	  //  |	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения) ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка) КОНЕЦ,
	  //  |	Док.Цена,
	  //  |	Док.СтавкаНДС
	  //  //|	Разм.Размещение
	  //  |")) + "
	  //  |;
	  //  |ВЫБРАТЬ Номенклатура, Позиция ПОМЕСТИТЬ ПорядокСтрок ИЗ РегистрСведений.ПорядокСтрокНоменклатуры ГДЕ Объект = &Ссылка
	  //  |;
	  //  |" + ?(СНаличием, "
	  //  |ВЫБРАТЬ
	  //  |	ЕСТЬNULL(НомСтрок.Позиция, " + ?(Ссылка.Проведен, "0","Тов.НомерСтроки") + ") НомерСтроки,
	  //  |	Тов.Номенклатура,
	  //  |	Тов.Номенклатура.Наименование									Наименование,
	  //  |	Тов.Номенклатура.Код                    						Код,
	  //  |	Тов.Номенклатура.Артикул              							Артикул,
	  //  |	ВЫРАЗИТЬ(Тов.Номенклатура.НаименованиеПолное КАК СТРОКА(255))   НаименованиеПолное,
	  //  |	Тов.ЕдиницаИзмерения,
	  //  |	Тов.Цена,
	  //  |	Тов.СтавкаНДС,
	  //  |	СУММА(Тов.Количество)											Количество,
	  //  |	СУММА(Тов.СуммаСкидки) 	 										СуммаСкидки,
	  //  |	СУММА(Тов.Сумма)												Сумма,
	  //  |	СУММА(Тов.СуммаБезСкидки)										СуммаБезСкидки,
	  //  |	СУММА(Тов.СуммаНДС)												СуммаНДС,
	  // 	|	ДАТАВРЕМЯ(1,1,1,0,0,0)              							ДатаОтгрузки,
	  //  |	ЛОЖЬ	    	                        						Отменено,
	  //  |	ВЫБОР КОГДА НЕ Тов.ЕстьНаСкладе ТОГДА
	  //  |		ЕСТЬNULL(МИНИМУМ(Рег.ДатаПоступления), ""Нет в наличии"") 
	  //  |	ИНАЧЕ
	  //  |		""В наличии""
	  //  |	КОНЕЦ															Наличие
	  //  |ИЗ 
	  //  |	СписокТоваров Тов
	  //  |	ЛЕВОЕ СОЕДИНЕНИЕ
	  //  |		( ВЫБРАТЬ Номенклатура, МИНИМУМ(Инвойс.ДатаПоступления) ДатаПоступления
	  //  |			ИЗ РегистрНакопления.ТоварыПоставщиковВПути.Остатки(, Номенклатура В 
	  //  |								(ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ СписокТоваров))
	  //  |			СГРУППИРОВАТЬ ПО Номенклатура
	  //  |		) Рег
	  //  |ПО 
	  //  |	Тов.Номенклатура = Рег.Номенклатура 
	  //  |	ЛЕВОЕ СОЕДИНЕНИЕ
	  //  |		ПорядокСтрок НомСтрок
	  //  |	ПО	
	  //  |		Тов.Номенклатура = НомСтрок.Номенклатура
	  //  |СГРУППИРОВАТЬ ПО НомСтрок.Позиция, Тов.Номенклатура, Тов.ЕдиницаИзмерения, Тов.Цена, Тов.СтавкаНДС, Тов.ЕстьНаСкладе 
	  //  |" + ?(Ссылка.Проведен,""," , НомерСтроки ") + "
	  //  |УПОРЯДОЧИТЬ ПО " + ПолеСортировки + ", Наименование
	  //  |
	  //  |","ВЫБРАТЬ
	  //  |	ЕСТЬNULL(НомСтрок.Позиция, " + ?(Ссылка.Проведен, "0","Тов.НомерСтроки") + ") НомерСтроки,
	  //  |	Тов.Номенклатура,
	  //  |	Тов.Номенклатура.Наименование			КАК Наименование,
	  //  |	Тов.Номенклатура.Код                    КАК Код,
	  //  |	Тов.Номенклатура.Артикул                КАК Артикул,
	  //  |	ВЫРАЗИТЬ(Тов.Номенклатура.НаименованиеПолное КАК СТРОКА(255))   КАК НаименованиеПолное,
	  //  |	ЕдиницаИзмерения,
	  //  |	Цена,
	  //  |" + ?(СоСрокомДоставки, "Размещение, ЕстьНаСкладе, ", "") + "
	  //  |	СУММА(Количество)			Количество,
	  //  |	СУММА(СуммаСкидки)  		СуммаСкидки,
	  //  |	СУММА(Сумма)				Сумма,
	  //  |	СУММА(СуммаБезСкидки)		СуммаБезСкидки,
	  //  |	СтавкаНДС,
	  //  |	СУММА(СуммаНДС)				СуммаНДС,
	  //  |	ДАТАВРЕМЯ(1,1,1,0,0,0)      ДатаОтгрузки,
	  //  |	ЛОЖЬ	                    Отменено
	  //  |ИЗ
	  //  |	СписокТоваров Тов
	  //  |	ЛЕВОЕ СОЕДИНЕНИЕ
	  //  |		ПорядокСтрок НомСтрок
	  //  |	ПО	
	  //  |		Тов.Номенклатура = НомСтрок.Номенклатура
	  //  |СГРУППИРОВАТЬ ПО НомСтрок.Позиция, Тов.Номенклатура, ЕдиницаИзмерения,  
	  //  |" + ?(Ссылка.Проведен, ""," Тов.НомерСтроки, ") + "
	  //  |" + ?(СоСрокомДоставки, "Размещение, ЕстьНаСкладе, ", "") + " 
	  //  |	Цена, СтавкаНДС
	  //  |УПОРЯДОЧИТЬ ПО " + ПолеСортировки + ", Наименование
	  //|") + "	
	  //  |";
	  //  
		
Функция СформироватьПечатнуюФорму(ТабличныйДокумент, Ссылка, Тип, Дата=Неопределено, ИмяДопИмениОбластей = "", ПолеСортировки = "НомерСтроки",  ИмяДокумента = "ЗаказПокупателя")	
	
	Если ИмяДокумента = "ЗаказПокупателя" Тогда
		ИмяРегистра = "ЗаказыПокупателей";
		ИмяРеквизитаЗаказ = "ЗаказПокупателя";
	ИначеЕсли
		ИмяДокумента = "ИнтернетЗаказПокупателя" Тогда
		ИмяРегистра = "ИнтернетЗаказПокупателя";
		ИмяРеквизитаЗаказ = "ИнтернетЗаказ"
	ИначеЕсли
		ИмяДокумента = "РеализацияТоваров" Тогда
		ИмяРегистра = "ЗаказыПокупателей";
		ИмяРеквизитаЗаказ = "ЗаказПокупателя";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Дата <> Неопределено Тогда
		ДатаВыполнения = Дата
	Иначе
		ДатаВыполнения = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ДатаВыполнения", ДатаВыполнения);
    Запрос.УстановитьПараметр("СтавкаНДС", Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("БанковскийСчетПоУмолчанию", Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(Ссылка.Организация));
	
	//ВозможностьДублейСтрок	
	Запрос.Текст = 
		"
		|///////////////////////////////////
		|///ШАПКА
		|
		|ВЫБРАТЬ 
		|	Док.Ссылка                                          КАК Ссылка,
		|	Док.Номер                                           КАК Номер,
		|	Док.Дата                                            КАК Дата,
		|	Док.Организация                                     КАК Организация,
		|	Док.Склад											КАК Склад,
		|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
		|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
		|	Док.УчитыватьНДС                            		КАК УчитыватьНДС,
		|	Док.Контрагент                                   	КАК Контрагент,
		|	ЕСТЬNULL(Док.Контрагент.НеВыводьКолонкуСкидкаВПечатнойФорме, ЛОЖЬ)  КАК НеВыводьКолонкуСкидкаВПечатнойФорме,
		|	ВЫБОР 	КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
		|	      	ТОГДА Док.Организация
		|	      	ИНАЧЕ Док.Грузоотправитель 
		|			КОНЕЦ 										КАК Грузоотправитель,
		|	ВЫБОР 	КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
		|	      	ТОГДА Док.Контрагент
		|	    	ИНАЧЕ Док.Грузополучатель 
		|			КОНЕЦ 										КАК Грузополучатель,
		|	ВЫБОР 	КОГДА БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) 
		|			ТОГДА &БанковскийСчетПоУмолчанию
		|			ИНАЧЕ БанковскийСчетОрганизации
		|			КОНЕЦ 										КАК БанковскийСчет,
		|	БанковскийСчетОрганизации.ТекстКорреспондента   	КАК БанковскийСчетТекстКорреспондента,
		|	Док.СуммаВключаетНДС                           	  	КАК ЦенаВключаетНДС,
		|	Док.Валюта                                       	КАК Валюта,
		|	Док.Ответственный.Наименование         			 	КАК Менеджер,
		|	Док.Ответственный.Организация						КАК ОрганизацияМенеджер,
		|	""""						    	                КАК ДополнительнаяИнформация
		|ИЗ
		|	Документ." + ИмяДокумента + " Док
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
		|		ПО ИСТИНА
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
		|		ПО ИСТИНА
		|ГДЕ
		|	Ссылка = &Ссылка
        |;
		|//////////////////////////////////////////////
		|///ТОВАРЫ
		|
		// вытаскиваем товары из документа для заказа по-новому (с галочкой СпособРазмещенияБезЗаказа) или если по-старому - то для непроведенных с порядком строк как в документе
		
		|" + ?(ИмяДокумента = "РеализацияТоваров" ИЛИ Ссылка.СпособРазмещенияБезЗаказа ИЛИ НЕ Ссылка.Проведен,"
		|
		|ВЫБРАТЬ ""фиктивный запрос для равенства количества запросов в пакете""
		|;
		|ВЫБРАТЬ
		|	Док.НомерСтроки                         					КАК НомерСтроки,
		|	ВЫБОР 	КОГДА Док.НоменклатураУчет <>  ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|			ТОГДА Док.НоменклатураУчет 
		|			ИНАЧЕ Док.Номенклатура КОНЕЦ  						КАК Номенклатура,
		|	Док.Цена                       								КАК Цена,
		|	ВЫБОР 	КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) 
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения) 
		|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка) КОНЕЦ 			КАК ЕдиницаИзмерения,
		|	Док.Количество												КАК Количество,
		|	Док.Сумма													КАК Сумма,
		|	Док.Цена * Док.Количество    				 				КАК СуммаБезСкидки,
		|	(Док.Цена * Док.Количество - ЕСТЬNULL(Таб.Доставка, 0)) * Док.ПроцентРучнойСкидки * 0.01 + (Док.Цена * Док.Количество -  ЕСТЬNULL(Таб.Доставка, 0)) * Док.ПроцентАвтоматическойСкидки * 0.01  КАК СуммаСкидки,
		|	Док.СтавкаНДС			        							КАК СтавкаНДС,
		|	" + Заказы.ПолучитьСуммуНДСВЗапросе("Док","","Ссылка") + " 	КАК СуммаНДС
		|
		|ПОМЕСТИТЬ СписокТоваров
		|ИЗ		
		|	Документ." + ИмяДокумента + ".Товары Док
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ИнтернетЗаказПокупателя.Доставка Таб
		|		ПО Док.Ссылка = Таб.Ссылка И Док.Номенклатура = Таб.Номенклатура И Док.Упаковка = Таб.Упаковка 
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|",  
		// вытаскивам товары из регистра для проведнных заказов по-старому (СпособРазмещенияБезЗаказа = ЛОЖЬ) с сохраненныем порядком строк
		"
		|ВЫБРАТЬ Номенклатура, Позиция ПОМЕСТИТЬ ПорядокСтрок ИЗ РегистрСведений.ПорядокСтрокНоменклатуры ГДЕ Объект = &Ссылка
		|;
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НомСтрок.Позиция, 0)				КАК НомерСтроки,
	    |	Док.Номенклатура                    		КАК Номенклатура,
	    |	Док.Цена                       				КАК Цена,
	    |	ВЫБОР	КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	    |			ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Номенклатура.ЕдиницаИзмерения)
	    |			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Упаковка)
	    |			КОНЕЦ                      			КАК ЕдиницаИзмерения,
	    |	Док.КоличествоПриход						КАК Количество,
	    |	Док.СуммаПриход								КАК Сумма,
	    |	Док.Цена * Док.КоличествоПриход     		КАК СуммаБезСкидки,                                                                                             
	    |	(Док.Цена * Док.КоличествоПриход - ЕСТЬNULL(Таб.Доставка, 0)) * Док.ПроцентРучнойСкидки * 0.01 + (Док.Цена * Док.КоличествоПриход - ЕСТЬNULL(Таб.Доставка, 0))* Док.ПроцентАвтоматическойСкидки * 0.01  КАК СуммаСкидки,
	    |	Док.СтавкаНДС			        			КАК СтавкаНДС,
	    |" + Заказы.ПолучитьСуммуНДСВЗапросе("Док") + " КАК СуммаНДС         
	    |	ПОМЕСТИТЬ СписокТоваров
	    |ИЗ
	    |	РегистрНакопления." + ИмяРегистра + ".ОстаткиИОбороты(,&ДатаВыполнения,,," + ИмяРеквизитаЗаказ + " = &Ссылка) Док
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПорядокСтрок НомСтрок
		|		ПО	Док.Номенклатура = НомСтрок.Номенклатура
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ИнтернетЗаказПокупателя.Доставка Таб
		|		ПО Док.ЗаказПокупателя = Таб.Ссылка И Док.Номенклатура = Таб.Номенклатура И Док.Упаковка = Таб.Упаковка 
		|") + "
		|;
		|ВЫБРАТЬ
		|	Тов.НомерСтроки,
		|	Тов.Номенклатура,
		|	Тов.Номенклатура.Наименование			КАК Наименование,
		|	Тов.Номенклатура.Код                    КАК Код,
		|	Тов.Номенклатура.Артикул                КАК Артикул,
		|	ВЫРАЗИТЬ(Тов.Номенклатура.НаименованиеПолное КАК СТРОКА(255))   КАК НаименованиеПолное,
		|	ЕдиницаИзмерения,
		|	Цена,
		|	Количество,
		|	СуммаСкидки,
		|	Сумма,
		|	СуммаБезСкидки,
		|	СтавкаНДС,
		|	СуммаНДС,
		|	ДАТАВРЕМЯ(1,1,1,0,0,0)      ДатаОтгрузки,
		|	ЛОЖЬ	                    Отменено
		|ИЗ
		|	СписокТоваров Тов
		|УПОРЯДОЧИТЬ ПО " + ПолеСортировки + ", Наименование
	  	|";
		
	Рез = Запрос.Выполнить().Выбрать();	
	
	Если Тип = "Квитанция" Тогда
		ЗаполнитьТабличныйДокументКвитанция(ТабличныйДокумент, Запрос, , Тип);
	Иначе
		ЗаполнитьТабличныйДокументСчетЗаказ(ТабличныйДокумент, Запрос, , Тип,,, ИмяДопИмениОбластей);
	КонецЕсли;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецФункции // СформироватьПечатнуюФорму()

Функция СформироватьПечатнуюФормуСРезервами(ТабличныйДокумент, Ссылка, Тип, Дата=Неопределено, СНаличием = Ложь, ИмяДопИмениОбластей = "", ПолеСортировки = "НомерСтроки", СоСрокомДоставки = Ложь, ИмяДокумента = "ЗаказПокупателя")	
	
	Если ИмяДокумента = "ЗаказПокупателя" Тогда
		ИмяРегистра = "ЗаказыПокупателей";
		ИмяРеквизитаЗаказ = "ЗаказПокупателя";
	ИначеЕсли
		ИмяДокумента = "ИнтернетЗаказПокупателя" Тогда
		ИмяРегистра = "ИнтернетЗаказПокупателя";
		ИмяРеквизитаЗаказ = "ИнтернетЗаказ" КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Дата <> Неопределено Тогда
		ДатаВыполнения = Дата
	Иначе
		ДатаВыполнения = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ДатаВыполнения", ДатаВыполнения);
    Запрос.УстановитьПараметр("СтавкаНДС", Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("БанковскийСчетПоУмолчанию", Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(Ссылка.Организация));
	Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
	
	// без возможности дублей строк
	Запрос.Текст = 
	    "
	    |///////////////////////////////////
	    |///ШАПКА
	    |
	    |ВЫБРАТЬ 
	    |	Док.Ссылка                                          КАК Ссылка,
	    |	Док.Номер                                           КАК Номер,
	    |	Док.Дата                                            КАК Дата,
	    |	Док.Организация                                     КАК Организация,
	    |	Док.Склад											КАК	Склад,
	    |" + ?(СоСрокомДоставки, " 
		|	ПРЕДСТАВЛЕНИЕ(Док.МВЗ) 								КАК МВЗ,
	    |	Док.ОтветственноеЛицо 								КАК ОтветственноеЛицо,", 
			"") + "
	    |	Док.УчитыватьНДС                            		КАК УчитыватьНДС,
	    |	Док.Контрагент                                   	КАК Контрагент,
		|	ЕСТЬNULL(Док.Контрагент.НеВыводьКолонкуСкидкаВПечатнойФорме, ЛОЖЬ)  КАК НеВыводьКолонкуСкидкаВПечатнойФорме,
	    |	Док.СуммаВключаетНДС                             	КАК ЦенаВключаетНДС,
	    |	Док.Валюта                                       	КАК Валюта,
	    |	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	    |	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	    |	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	    |	      ТОГДА Док.Организация
	    |	      ИНАЧЕ Док.Грузоотправитель КОНЕЦ 				КАК Грузоотправитель,
	    |	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	    |	      ТОГДА Док.Контрагент
	    |	      ИНАЧЕ Док.Грузополучатель КОНЕЦ 				КАК Грузополучатель,
	    |	ВЫБОР 	КОГДА 	БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) 
		|			ТОГДА 	&БанковскийСчетПоУмолчанию
	    |			ИНАЧЕ 	БанковскийСчетОрганизации
	    |	КОНЕЦ 												КАК БанковскийСчет,
	    |	БанковскийСчетОрганизации.ТекстКорреспондента       КАК БанковскийСчетТекстКорреспондента,
	    |	Док.Ответственный.Наименование         			 	КАК Менеджер,
	    |	Док.Ответственный.Организация					 	КАК ОрганизацияМенеджер,
	    |	""""						                     	КАК ДополнительнаяИнформация
	    |ИЗ
	    |	Документ." + ИмяДокумента + " Док
		|
	    |	ЛЕВОЕ СОЕДИНЕНИЕ
	    |		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	    |		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
	    |		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	    |		ПО ИСТИНА
	    |ГДЕ
	    |	Ссылка = &Ссылка
	    |;
	    |//////////////////////////////////////////////
		|///ТОВАРЫ
		
		// для заказов по-новому товары берутся из документа, если нет - то только для непроведенных, а разервы берутся из регистра ТоварыВРезерве
		
	    |" + ?(Ссылка.СпособРазмещенияБезЗаказа ИЛИ НЕ Ссылка.Проведен, "
		|
		|ВЫБРАТЬ
	    |	МИНИМУМ(Док.НомерСтроки)				КАК НомерСтроки,
		|	Док.Номенклатура						КАК Номенклатура,
		|	МАКСИМУМ(Док.НоменклатураУчет)			КАК НоменклатураУчет,
		|	Док.Упаковка                            КАК Упаковка,
	    |	Док.Цена                        		КАК Цена,
	    |	СУММА(Док.Количество)					КАК Количество,
	    |	СУММА(Док.ПроцентРучнойСкидки)		 	КАК ПроцентРучнойСкидки,
	    |	СУММА(Док.ПроцентАвтоматическойСкидки) 	КАК ПроцентАвтоматическойСкидки,
	    |	Док.СтавкаНДС			        		КАК СтавкаНДС,
		|	Неопределено							КАК Размещение,
		|	Док.Ссылка.СуммаВключаетНДС             КАК СуммаВключаетНДС,
		|	Док.Цена - СУММА(ЕСТЬNULL(Таб.Доставка, 0))/СУММА(Док.Количество)	КАК ЦенаБезДоставки
	    |
	    |ПОМЕСТИТЬ 	ТоварыСвернутые
	    |ИЗ			
		|	Документ." + ИмяДокумента + ".Товары Док
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ИнтернетЗаказПокупателя.Доставка Таб
		|		ПО Док.Ссылка = Таб.Ссылка И Док.Номенклатура = Таб.Номенклатура И Док.Упаковка = Таб.Упаковка 
		|
	    |ГДЕ Док.Ссылка = &Ссылка
	    |
	    |СГРУППИРОВАТЬ ПО
		|	Док.Ссылка,
		|	Док.Номенклатура,
	//	|	Док.НоменклатураУчет,	 
		|	Док.Упаковка,
	    |	Док.Цена,
	    |	Док.СтавкаНДС
		|;
		|ВЫБРАТЬ
		|	Док.НомерСтроки												НомерСтроки,
		|	Док.Номенклатура											Номенклатура,
		|	Док.НоменклатураУчет		                                НоменклатураУчет,
	    |	Док.Упаковка												Упаковка,
	    |	Док.Цена                       								Цена,
	    |	Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)			Количество,
		//|	Док.ПроцентРучнойСкидки										ПроцентРучнойСкидки,
		//|	Док.ПроцентАвтоматическойСкидки								ПроцентАвтоматическойСкидки,
	    |	Док.СтавкаНДС			        							СтавкаНДС,
	    |	Неопределено												Размещение,
		|	ЦенаБезДоставки * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) * Док.ПроцентРучнойСкидки * 0.01 + ЦенаБезДоставки * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) * Док.ПроцентАвтоматическойСкидки * 0.01  КАК СуммаСкидки,
		|	Док.Цена * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) - ЦенаБезДоставки * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) * Док.ПроцентРучнойСкидки * 0.01 - ЦенаБезДоставки * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) * Док.ПроцентАвтоматическойСкидки * 0.01  КАК Сумма,
		|	Док.Цена * (Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0)) 	КАК СуммаБезСкидки,
		|   Док.СуммаВключаетНДС                                            КАК СуммаВключаетНДС,
	    |	ЛОЖЬ ЕстьНаСкладе
	    |   ПОМЕСТИТЬ СписокТоваров
	    |ИЗ	
		|	ТоварыСвернутые Док
		|
	    |	ЛЕВОЕ СОЕДИНЕНИЕ	
		|		РегистрНакопления.ТоварыВРезерве.Остатки(&ДатаВыполнения, ДокументРезерва = &Ссылка) Рез
		|		ПО Док.Номенклатура = Рез.Номенклатура
		|ГДЕ  Док.Количество - ЕСТЬNULL(Рез.КоличествоОстаток,0) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Тов.НомерСтроки													КАК НомерСтроки,
		|	Рез.Номенклатура												КАК Номенклатура,
		|	Тов.НоменклатураУчет		                                    КАК НоменклатураУчет,
	    |	Тов.Упаковка													КАК Упаковка,
	    |	Тов.Цена                       									КАК Цена,
	    |	Рез.КоличествоОстаток											КАК Количество,
		//|	Тов.ПроцентРучнойСкидки 										ПроцентРучнойСкидки,
		//|	Тов.ПроцентАвтоматическойСкидки 								ПроцентАвтоматическойСкидки,
	    |	Тов.СтавкаНДС			        								КАК СтавкаНДС,
	    |	Рез.Размещение													КАК Размещение,
		|	Тов.ЦенаБезДоставки * Рез.КоличествоОстаток * Тов.ПроцентРучнойСкидки * 0.01 + Тов.ЦенаБезДоставки * Рез.КоличествоОстаток * Тов.ПроцентАвтоматическойСкидки * 0.01  КАК СуммаСкидки,
		|	Тов.Цена * Рез.КоличествоОстаток - Тов.ЦенаБезДоставки * Рез.КоличествоОстаток * Тов.ПроцентРучнойСкидки * 0.01- Тов.ЦенаБезДоставки * Рез.КоличествоОстаток * Тов.ПроцентАвтоматическойСкидки * 0.01  КАК Сумма,
		|	Тов.Цена * Рез.КоличествоОстаток	КАК СуммаБезСкидки,
		|   Тов.СуммаВключаетНДС                                            КАК СуммаВключаетНДС,
	    |	ВЫБОР КОГДА ЕСТЬNULL(Рез.Размещение, Неопределено) ССЫЛКА Справочник.Склады ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ ЕстьНаСкладе
	    |
	    |ИЗ	
		|	РегистрНакопления.ТоварыВРезерве.Остатки(&ДатаВыполнения, ДокументРезерва = &Ссылка)  Рез
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТоварыСвернутые  Тов
		|		ПО Рез.Номенклатура = Тов.Номенклатура
		|
		|", 
		
		// если по-старому оформлен заказ, то товары и размещение берем из регистра ЗаказыПокупателей
		"
	    |ВЫБРАТЬ Номенклатура, Позиция ПОМЕСТИТЬ ПорядокСтрок ИЗ РегистрСведений.ПорядокСтрокНоменклатуры ГДЕ Объект = &Ссылка
		|;
	    |ВЫБРАТЬ
		|	МИНИМУМ(ЕСТЬNULL(НомСтрок.Позиция, 0))							КАК НомерСтроки,
		|	Док.Номенклатура												КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)					КАК НоменклатураУчет,
	    |	Док.Цена                       									КАК Цена,
	    |	Док.Упаковка                                                    КАК Упаковка,
		|	СУММА(Док.КоличествоПриход)										КАК Количество,
		//|	Док.ПроцентРучнойСкидки                                         	ПроцентРучнойСкидки,
		//|   Док.ПроцентАвтоматическойСкидки									ПроцентАвтоматическойСкидки,
		|	СУММА(Док.СуммаПриход) 											КАК Сумма,
		|	СУММА(Док.Цена * Док.КоличествоПриход)							КАК СуммаБезСкидки,
		|	СУММА((Док.Цена * Док.КоличествоПриход - ЕСТЬNULL(Таб.Доставка, 0)) * Док.ПроцентРучнойСкидки * 0.01 + (Док.Цена * Док.КоличествоПриход - ЕСТЬNULL(Таб.Доставка, 0))* Док.ПроцентАвтоматическойСкидки * 0.01) СуммаСкидки,
	    |	Док.СтавкаНДС			        										КАК СтавкаНДС,
	    |	Док." + ИмяРеквизитаЗаказ + ".СуммаВключаетНДС							КАК СуммаВключаетНДС,
	    |	Док.Размещение															КАК Размещение,
	    |	ВЫБОР КОГДА Док.Размещение ССЫЛКА Справочник.Склады ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ	КОНЕЦ КАК ЕстьНаСкладе
		|
		|	ПОМЕСТИТЬ СписокТоваров
	    |ИЗ
	 	|	РегистрНакопления." + ИмяРегистра + ".ОстаткиИОбороты(,&ДатаВыполнения,,," + ИмяРеквизитаЗаказ + " = &Ссылка) Док
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
	    |		ПорядокСтрок НомСтрок
	    |		ПО Док.Номенклатура = НомСтрок.Номенклатура
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ИнтернетЗаказПокупателя.Доставка Таб
		|		ПО Док." + ИмяРеквизитаЗаказ + " = Таб.Ссылка И Док.Номенклатура = Таб.Номенклатура И Док.Упаковка = Таб.Упаковка 
		|		
		|СГРУППИРОВАТЬ ПО
		|	Док."+ ИмяРеквизитаЗаказ + ",
		|	Док.Номенклатура,
	    |	Док.Упаковка,
	    |	Док.Цена,
	    |	Док.СтавкаНДС,
	    |	Док.Размещение
	    |") + " 
		|;
	    |
	    |ВЫБРАТЬ
	    |	Тов.НомерСтроки											НомерСтроки,
		|	ВЫБОР 	КОГДА Тов.НоменклатураУчет <>  ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|			ТОГДА Тов.НоменклатураУчет 
		|			ИНАЧЕ Тов.Номенклатура КОНЕЦ    				Номенклатура,
	    |	ВЫБОР 	КОГДА Тов.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) 
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(Тов.Номенклатура.ЕдиницаИзмерения) 
		|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Тов.Упаковка) КОНЕЦ 		ЕдиницаИзмерения,
	    |	Тов.Цена												Цена,
	    |	Тов.СтавкаНДС											СтавкаНДС,
	    |	Тов.Количество											Количество,
		|	Тов.СуммаБезСкидки 										СуммаБезСкидки,
		|	Тов.СуммаСкидки								 			СуммаСкидки,
		|	Тов.Сумма												Сумма,
		|	" + Заказы.ПолучитьСуммуНДСВЗапросе("Тов","","Тов", Истина)+ "		СуммаНДС,
		|" + ?(СоСрокомДоставки, " 
		|	ВЫБОР КОГДА &Склад = Тов.Размещение ТОГДА ""2 рабочих дня"" ИНАЧЕ ВЫБОР КОГДА Тов.ЕстьНаСкладе ТОГДА ""1 неделя"" ИНАЧЕ ""6 недель"" КОНЕЦ КОНЕЦ Наличие ", "
		|	ВЫБОР 
		|		КОГДА НЕ Тов.ЕстьНаСкладе 
		|		ТОГДА ЕСТЬNULL(Рег.ДатаПоступления, ""Нет в наличии"") 
	    |		ИНАЧЕ ""В наличии""
	    |		КОНЕЦ												Наличие") + "
		|ПОМЕСТИТЬ ТоварыИтог
	    |ИЗ 
	    |	СписокТоваров Тов
	    |	ЛЕВОЕ СОЕДИНЕНИЕ
	    |		( ВЫБРАТЬ 
		|				Номенклатура, МИНИМУМ(Инвойс.ДатаПоступления) ДатаПоступления
	    |				ИЗ 
		|					РегистрНакопления.ТоварыПоставщиковВПути.Остатки(, Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ СписокТоваров))
	    |				СГРУППИРОВАТЬ ПО Номенклатура
	    |		) Рег
	    |	ПО  Тов.Номенклатура = Рег.Номенклатура 
		|;
		|
		// а теперь все это группируем и сортируем 
		|  ВЫБРАТЬ
		|	МИНИМУМ(НомерСтроки)		НомерСтроки,
	    |	Номенклатура,
		|	Номенклатура.Наименование										Наименование,
	//	|	Номенклатура.Наименование										НаименованиеПолное,
	    |	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(255))   	НаименованиеПолное,
	    |	Номенклатура.Код                    							Код,
	    |	Номенклатура.Артикул              								Артикул,
		|	ЕдиницаИзмерения,
		|	Цена,
		|	СтавкаНДС,
		|	СУММА(Количество)									Количество,
		|	ВЫРАЗИТЬ(СУММА(Сумма) 			КАК ЧИСЛО(15,2))    Сумма,
		|	ВЫРАЗИТЬ(СУММА(СуммаСкидки) 	КАК ЧИСЛО(15,2))    СуммаСкидки,
		|	ВЫРАЗИТЬ(СУММА(СуммаБезСкидки) 	КАК ЧИСЛО(15,2))    СуммаБезСкидки,
		|	ВЫРАЗИТЬ(СУММА(СуммаНДС) 		КАК ЧИСЛО(15,2))	СуммаНДС,
	   	|	ДАТАВРЕМЯ(1,1,1,0,0,0)      						ДатаОтгрузки,
	    |	ЛОЖЬ	    	           							Отменено,
		|	Наличие
		|ИЗ
		| ТоварыИтог
		|СГРУППИРОВАТЬ ПО Номенклатура, ЕдиницаИзмерения, Цена, СтавкаНДС, Наличие
		|УПОРЯДОЧИТЬ ПО " + ПолеСортировки + ", Наименование
	  	|";
	Рез = Запрос.Выполнить().Выбрать();	
	
	Если Тип = "Квитанция" Тогда
		ЗаполнитьТабличныйДокументКвитанция(ТабличныйДокумент, Запрос, , Тип);
	Иначе
		ЗаполнитьТабличныйДокументСчетЗаказ(ТабличныйДокумент, Запрос, , Тип, СНаличием,4, ИмяДопИмениОбластей, СоСрокомДоставки);
	КонецЕсли;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецФункции // СформироватьПечатнуюФорму()

Процедура Печать_СчетЗаказ(ТабДок, Ссылка, Тип, СНаличием = Ложь, ИмяДопИмениОбластей = "", ПолеСортировки = "", СоСрокомДоставки = Ложь, ИмяДокумента = "ЗаказПокупателя") Экспорт
	
	ПолеСортировки = ?(ПустаяСтрока(ПолеСортировки), "НомерСтроки", ПолеСортировки);
	
	Если СоСрокомДоставки ИЛИ СНаличием тогда
		СформироватьПечатнуюФормуСРезервами(ТабДок, Ссылка, Тип,, СНаличием, ИмяДопИмениОбластей, ПолеСортировки, СоСрокомДоставки, ИмяДокумента)
	Иначе
		СформироватьПечатнуюФорму(ТабДок, Ссылка, Тип,, ИмяДопИмениОбластей, ПолеСортировки, ИмяДокумента)
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать_Квитанция_уд(ТабДок, Ссылка, Тип, СНаличием = Ложь, ИмяДопИмениОбластей = "", ПолеСортировки = "", СоСрокомДоставки = Ложь) Экспорт
	
	ПолеСортировки = ?(ПустаяСтрока(ПолеСортировки), "НомерСтроки", ПолеСортировки);
	
	Если СоСрокомДоставки ИЛИ СНаличием тогда
		СформироватьПечатнуюФормуСРезервами(ТабДок, Ссылка, Тип,, СНаличием, ИмяДопИмениОбластей, ПолеСортировки, СоСрокомДоставки)
	Иначе
		СформироватьПечатнуюФорму(ТабДок, Ссылка, Тип,, ИмяДопИмениОбластей, ПолеСортировки)
	КонецЕсли;
		
КонецПроцедуры


#КонецОбласти

#КонецОбласти