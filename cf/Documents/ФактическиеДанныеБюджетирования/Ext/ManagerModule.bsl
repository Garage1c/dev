Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	         
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	|ВЫБРАТЬ
	|	Автор, Ответственный, ДатаНачала, ДатаОкончания
	|ИЗ
	|	Документ.ФактическиеДанныеБюджетирования
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	Ссылка.Отдел Отдел,Значение(Справочник.СценарииПланирования.Факт) Сценарий, СтатьяБюджета, Аналитика1,  Аналитика2, Аналитика3, 
	|   Период, Сумма*СтатьяБюджета.Коэффициент Сумма 
	|ИЗ 
	|	Документ.ФактическиеДанныеБюджетирования.Показатели 
	|ГДЕ 
	|	Ссылка = &Ссылка
	|");
	

	//Запрос.УстановитьПараметр("Область", 		ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 		Ссылка);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 		КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	
	ДополнительныеСвойства.Вставить("Шапка", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	ДополнительныеСвойства.Вставить("Бюджетирование", Пакет[2].Выгрузить());
	
КонецПроцедуры

Функция ПолучитьЗапросФактРасшифровкаПоУмолчанию() Экспорт
	
	Возврат "ВЫБРАТЬ
	    |Регистратор,
		|Период,
		|СтатьяДДС.СтатьяБюджета КАК СтатьяБюджета,
		|Отдел,
		|ФизЛицоПартнер     ФизлицоПартнер,
		|Неопределено  		Аналитика1,
		|Неопределено  		Аналитика2,
		|Неопределено 		Аналитика3,
		|ВЫБОР КОГДА СуммаУпр<0 ТОГДА -1*СуммаУпр ИНАЧЕ СуммаУпр КОНЕЦ	Сумма
		|
		|ИЗ
		|	РегистрНакопления.ОборотыДенежныхСредств
		|ГДЕ 
		|	Период МЕЖДУ &ДатаНачала И &ДатаОкончания И
		|	Отдел = &Отдел И
		|	СтатьяДДС В (ВЫБРАТЬ Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств ГДЕ СтатьяБюджета = &СтатьяБюджета)
		|";

КонецФункции

Функция ПолучитьФактическиеДанные(ДатаНачала, ДатаОкончания, Отдел) Экспорт
	
	СтатьиБюджета = Новый Массив;
	
	Запрос = Новый Запрос("Выбрать Ссылка,ЗапросФакт из Справочник.СтатьиБюджета ГДЕ НЕ Выразить(ЗапросФакт КАК Строка(10))="""" И НЕ ПометкаУдаления");
	Рез = Запрос.Выполнить();
	
	//Если Не Рез.Пустой() Тогда 
		Выборка = Рез.Выбрать();
		
		ОбщийЗапрос ="";
		ТекЗапрос 	="";
		Н=1;
		Пока Выборка.Следующий() Цикл СтатьиБюджета.Добавить(Выборка.Ссылка);
			
			Если Н >1 Тогда ОбщийЗапрос = ОбщийЗапрос+Символы.ПС+" ОБЪЕДИНИТЬ ВСЕ "+Символы.ПС; КонецЕсли;	
			
			ТекЗапрос	= Выборка.ЗапросФакт;
			ТекЗапрос	= СтрЗаменить(ТекЗапрос,"&СтатьяБюджета","&СтатьяБюджета"+Н);
			ОбщийЗапрос	= ОбщийЗапрос + ТекЗапрос;
			
			Запрос.УстановитьПараметр("СтатьяБюджета"+Н,Выборка.Ссылка);
			Н=Н+1;
		КонецЦикла;
		
		// добавим запрос-факт для статей бюджета, где явно запрос-факт не прописан: по-умолчанию в качестве фактической суммы берем сумму оборота из регистра ОборотыДенежныхСредств
		
		Если Н >1 Тогда ОбщийЗапрос = ОбщийЗапрос+Символы.ПС+" ОБЪЕДИНИТЬ ВСЕ "+Символы.ПС; КонецЕсли;
		
		ТекЗапрос = "ВЫБРАТЬ
		|Период,
		|Отдел,
		|СтатьяДДС.СтатьяБюджета КАК СтатьяБюджета,
		|Неопределено  		Аналитика1,
		|Неопределено  		Аналитика2,
		|Неопределено 		Аналитика3,
		|ВЫБОР КОГДА СуммаУпрОборот < 0 ТОГДА -1*СуммаУпрОборот ИНАЧЕ СуммаУпрОборот КОНЕЦ	Сумма
		|
		|ИЗ
		|	РегистрНакопления.ОборотыДенежныхСредств.Обороты(&ДатаНачала, &ДатаОкончания, Месяц, СтатьяДДС В (ВЫБРАТЬ Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств ГДЕ СтатьяБюджета <> ЗНАЧЕНИЕ(Справочник.СтатьиБюджета.ПустаяСсылка) И НЕ СтатьяБюджета В (&УстСтатьи)))";
		
		ОбщийЗапрос	= ОбщийЗапрос + ТекЗапрос;
		Запрос.УстановитьПараметр("УстСтатьи", СтатьиБюджета);
		
		//
		
		ОбщийЗапрос="ВЫБРАТЬ Период,Отдел,СтатьяБюджета,Аналитика1,Аналитика2,Аналитика3,Сумма(Сумма) сумма из("+
					ОбщийЗапрос+
					")как вт ГДЕ Отдел=&Отдел 
					|Сгруппировать по Период,Отдел,СтатьяБюджета,Аналитика1,Аналитика2,Аналитика3
					|
					|Упорядочить по Отдел,Период,СтатьяБюджета,Аналитика1,Аналитика2,Аналитика3";
					
		Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
		Запрос.УстановитьПараметр("Отдел",Отдел);
		Запрос.Текст = ОбщийЗапрос;
		Попытка
			Рез=Запрос.Выполнить();
		Исключение
			Сообщить("Некорректный текст запроса в одной или нескольких статьях. "+ОписаниеОшибки());
			Возврат Новый ТаблицаЗначений;
		КонецПопытки;
		
		//Объект.Показатели.Загрузить(Рез.Выгрузить());
		Возврат Рез.Выгрузить();
		
	//КонецЕсли;	
	
КонецФункции
Функция КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, Значение)
	НекийПараметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
   
	Если НекийПараметр = Неопределено Тогда
		НекийПараметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Добавить();
		НекийПараметр.Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	КонецЕсли;
	
	НекийПараметр.Использование = Истина;
	НекийПараметр.Значение = Значение;
КонецФункции // КомпоновщикНастроекУстановитьПараметр()

Процедура ОбработкаРасшифровкиФактическойСуммыБюджетирования(СтруктураПараметров, Результат, ДанныеРасшифровки, АдресСхемы, ГУИД)	Экспорт
	
	СтатьяБюджета = СтруктураПараметров.СтатьяБюджета;
	
	//УстановитьПривилегированныйРежим(Истина);
	
	СхемаКомпоновкиДанных = Документы.ФактическиеДанныеБюджетирования.ПолучитьМакет("Макет");

	истДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	истДанных.Имя 					= "ИсточникДанных";
	истДанных.ТипИсточникаДанных 	= "Local"; 
		
	Набор = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	
	Набор.Имя 							= "НаборДанных";
	Набор.ИсточникДанных 				= истДанных.Имя;
	
	Набор.Запрос 						= ?(ПустаяСтрока(СтатьяБюджета.ЗапросФактРасшифровка), ПолучитьЗапросФактРасшифровкаПоУмолчанию(), СтатьяБюджета.ЗапросФактРасшифровка);
    Набор.АвтоЗаполнениеДоступныхПолей 	= Истина;  
	
	
	// Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// Загрузим пользовтельские настройки которые ввыел пользователь совсем недавно
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	Для Каждого ДоступноеПоле Из КомпоновщикНастроек.Настройки.Выбор.ДоступныеПоляВыбора.Элементы Цикл
	    Если ДоступноеПоле.Папка И ДоступноеПоле.Заголовок="Системные поля" Тогда
	            Продолжить;
		ИначеЕсли ДоступноеПоле.Папка И ДоступноеПоле.Заголовок= "Параметры" Тогда Продолжить;
		Иначе
	            ВыбранноеПоле= Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	            ВыбранноеПоле.Использование=Истина;
	            ВыбранноеПоле.Поле=ДоступноеПоле.Поле;
	      КонецЕсли;
	КонецЦикла;	
	
	ПолеРесурса             = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
    ПолеРесурса.ПутьКДанным = "Сумма";
    ПолеРесурса.Выражение   = "Сумма(Сумма)";
    	  
	  
	Если СтруктураПараметров.Аналитика1 <> Неопределено Тогда
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Аналитика1");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = СтруктураПараметров.Аналитика1;
	КонецЕсли;

	Если СтруктураПараметров.Аналитика2 <> Неопределено Тогда
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Аналитика2");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = СтруктураПараметров.Аналитика2;
	КонецЕсли;

	Если СтруктураПараметров.Аналитика3 <> Неопределено Тогда
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Аналитика3");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = СтруктураПараметров.Аналитика3;
	КонецЕсли;

	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	//КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(КомпоновщикОтчета.ПользовательскиеНастройки);
	
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "ДатаНачала", 	СтруктураПараметров.ДатаНачала);
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "ДатаОкончания", СтруктураПараметров.ДатаОкончания);
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "СтатьяБюджета", СтруктураПараметров.СтатьяБюджета);
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "Отдел", 		СтруктураПараметров.Отдел);
	
	//Для каждого элементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
	//	элементОтбора.Использование = Ложь;
	//КонецЦикла;
    АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ГУИД); 

	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Помещаем в переменную данные о расшифровке данных
	НовыеДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), НовыеДанныеРасшифровки);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,НовыеДанныеРасшифровки);
	

	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(НовыеДанныеРасшифровки, ГУИД);
	
	//Очищаем поле табличного документа
	Результат.Очистить();

	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
//	УстановитьПривилегированныйРежим(Ложь);
	

КонецПроцедуры

