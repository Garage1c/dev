
// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись
	
	Движения.Записать();

	// Установим статус оплаты
	
	Если 	Не Отказ Тогда
		
		Для Каждого Строка Из РасшифровкаСуммы Цикл
			Если ЗначениеЗаполнено(Строка.Заказ) Тогда
		
				Если Не Заказы.ПроверитьИУстановитьСтатусОплатыЗаказа(Строка.Заказ) Тогда
					Отказ = Истина;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ОбменДанными.Загрузка Тогда
		
		ПроверяемыеРеквизиты.Добавить("Касса");
		ПроверяемыеРеквизиты.Добавить("Отдел");
		
		Если ВидОперации <> Перечисления.ВидыОперацийПКО.ПрочийПриход Тогда
			ПроверяемыеРеквизиты.Добавить("Контрагент"); 
		КонецЕсли;
		
		ПроверяемыеРеквизиты.Добавить("Подразделение");
		ПроверяемыеРеквизиты.Добавить("ЦФУ");
		
		Если 	РасшифровкаСуммы.Итог("Сумма") <> Сумма
			И ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя Тогда
			
			ОбщиеФункции.СообщитьТекст("Сумма документа не совпадает с суммой расшифровки по документам!");
			Отказ = Истина;
			
		КонецЕсли;
		
	Иначе
		ПроверяемыеРеквизиты.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОсн = ТипЗнч(ДанныеЗаполнения);
	ЗаказПокупателя = Неопределено;
	
	Если ТипОсн = Тип("БизнесПроцессСсылка.ЗаявкаПокупателя") ИЛИ
		ТипОсн = Тип("БизнесПроцессСсылка.ИнтернетЗаявка") Тогда 
		
		ЗаказПокупателя = ДанныеЗаполнения.Заказ;
		ЭтоБП = Истина;
				
	ИначеЕсли
		ТипОсн = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ 
		ТипОсн = Тип("ДокументСсылка.ИнтернетЗаказПокупателя") Тогда
		
		ЗаказПокупателя = ДанныеЗаполнения;
		ЭтоБП = Ложь;
			
	КонецЕсли;
	
	
	Если ЗаказПокупателя <> Неопределено И НЕ ЗаказПокупателя.Пустая() Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗаказПокупателя,, "Ссылка, Дата, Номер, ПометкаУдаления" + ?(ЭтоБП, "", ", Проведен"));
		ДокументОснование 	= ЗаказПокупателя;
		СтатьяДДС 			= Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателя; // ОплатаПокупателя
		СтатьяДДСБух 		= СтатьяДДС.СтатьяДДСБух;
		Касса 				= ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Касса");
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ СуммаПриход Сумма 
		|ИЗ 
		|	РегистрНакопления.ДолгиПоЗаказам.Обороты(,,,Заказ = &Заказ)
		|");
		
		Запрос.УстановитьПараметр("Заказ", ЗаказПокупателя);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Сумма = Выборка.Сумма;
		КонецЕсли;
		
		// Ищем отгрузки по заказу
	
		РасшифровкаСуммы.Очистить();
		НовСтрока = РасшифровкаСуммы.Добавить();
		НовСтрока.Заказ = ЗаказПокупателя;
		НовСтрока.Сумма = Сумма;
		
		ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
		
	КонецЕсли;	
	
	Если
		ТипОсн = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		ЗаказПокупателя =  ДанныеЗаполнения.Заказ;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, , "Ссылка, Проведен, Дата, Номер, ПометкаУдаления");
		
		СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателя; // ОплатаПокупателя
		СтатьяДДСБух = СтатьяДДС.СтатьяДДСБух;
		Касса = ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Касса");
		
		ДокументОснование = ДанныеЗаполнения;
		Сумма = ДанныеЗаполнения.Сумма;
		
		РасшифровкаСуммы.Очистить();
		НовСтрока = РасшифровкаСуммы.Добавить();
		НовСтрока.Заказ = ЗаказПокупателя;
		//23.05.2017 Андриянов Включено по требованию Радюхина для магазинов
		НовСтрока.ДокументОтгрузки = ДанныеЗаполнения;
		НовСтрока.Сумма = Сумма;

		ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;

	ИначеЕсли
		ТипОсн = Тип("ДокументСсылка.ЗаказНаряд") Тогда 
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, , "Ссылка, Проведен, Дата, Номер, ПометкаУдаления");
		
		СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателя; // ОплатаПокупателя
		СтатьяДДСБух = СтатьяДДС.СтатьяДДСБух;
		Касса = ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Касса");
		
		ЗаказПокупателя = ДанныеЗаполнения;
		
		ДокументОснование = ДанныеЗаполнения;
		Сумма = ДанныеЗаполнения.Сумма;
			
		РасшифровкаСуммы.Очистить();
		НовСтрока 			= РасшифровкаСуммы.Добавить();
		НовСтрока.Заказ 	= ДанныеЗаполнения;
		НовСтрока.Сумма 	= Сумма;
		
		ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;

	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	// Запись
	
	Движения.ДолгиПоОтгрузкам.Очистить();
	Движения.Записать();
	
	// Установим статус оплаты
	
	Если Не Отказ Тогда
		
		Для Каждого Строка Из РасшифровкаСуммы Цикл
			Если ЗначениеЗаполнено(Строка.Заказ) Тогда
		
				Если Не Заказы.ПроверитьИУстановитьСтатусОплатыЗаказа(Строка.Заказ) Тогда
					Отказ = Истина;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ПараметрыСеанса.КонтрольОстатковВСеансеОтключен И Организация <> Касса.Организация И Не ОбменДанными.Загрузка Тогда
		ОбщиеФункции.СообщитьТекст("Выбранная касса не принадлежит организации, указанной в документе");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗаНеучтенныйТовар Тогда
		
		Партнер = Неопределено;
		Контрагент = Неопределено;
		  
		РасшифровкаСуммы.Очистить();
		
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда  	
		Отказ = Истина;                         	
	КонецЕсли;
	
	Для Каждого Стр Из РасшифровкаСуммы Цикл
		
		Если Не ЗначениеЗаполнено(Стр.Заказ) и Не Стр.Заказ = Неопределено Тогда
			Стр.Заказ=Неопределено;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Стр.ДокументОтгрузки) и Не Стр.ДокументОтгрузки = Неопределено Тогда
			Стр.ДокументОтгрузки=Неопределено;
		КонецЕсли;
		
	КонецЦикла;		
	
КонецПроцедуры
