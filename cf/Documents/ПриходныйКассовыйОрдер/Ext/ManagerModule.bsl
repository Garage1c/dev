
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	//Заказ = БизнесПроцессы.ПеремещениеТоваров.ПолучитьЗаказ(Ссылка.Процесс);
	//ПолучитьТаблицуПоРезервам = 
	//		Не Ссылка.Процесс.Пустая() И
	//		ЗначениеЗаполнено(Заказ);
	
	Запрос = Новый Запрос(
	
	// ПАРАМЕТРЫ СИСТЕМЫ
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	// ШАПКА

	|ВЫБРАТЬ
	|	Процесс
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|" + 
	РаботаСКурсамиВалют.ПолучитьТекстЗапросаКурсыВалют() + "
	|;

	// ВЗАИМОРАСЧЕТЫ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход	ВидДвижения,
	|	Док.Организация		Организация,
	|	Док.Контрагент		Контрагент,
	|   ВЫБОР 
	|		КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ВозвратОтПоставщика) 	ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Поставщик) 
	|		КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ОплатаПокупателя) 	ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент)
	|	КОНЕЦ 				ФормаОтношений,
	|	Док.Сумма 			Сумма, 
	|" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " СуммаУпр
    |ИЗ
	|	Документ.ПриходныйКассовыйОрдер Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка 
	|и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)   
	|и (док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ВозвратОтПоставщика) или ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ОплатаПокупателя))  
	|;
	
	// ДЕНЕЖНЫЕ СРЕДСТВА
	
	|ВЫБРАТЬ
	|	&Период						Период,
	|	&ВидДвиженияПриход			ВидДвижения,
	|	Касса,
	|	Сумма
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	
	// ОБОРОТЫ ДЕНЕЖНЫХ СРЕДСТВ	
	
	|ВЫБРАТЬ
	|	&Период								КАК Период,
	|	Док.Касса							КАК КассаСчет,
	|	Док.СтатьяДДС						КАК СтатьяДДС,
	|	Док.Контрагент						КАК ФизЛицоПартнер,
	|	Подразделение, Отдел, ЦФУ,
	|	Док.Сумма КАК Сумма, " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " КАК СуммаУпр
	|                          
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	

	
	|// ДОЛГИ ПО ОТГРУЗКАМ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация КАК Организация,
	|	Док.Контрагент КАК Контрагент,
	|	Расшифровка.Заказ КАК Заказ,
	|	Расшифровка.ДокументОтгрузки	КАК ДокументОтгрузки,
	|	ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.ДокументОтгрузки КАК ДокументОтгрузки,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.ПриходныйКассовыйОрдер.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.ВидОперации = &ОплатаПокупателя и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|;
	
	|	// Долги по заказам
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация 				КАК Организация,
	|	&Менеджер					 	КАК Менеджер,
	|	Док.Контрагент 					КАК Контрагент,
	|	Расшифровка.Заказ 				КАК Заказ,
	|	ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.ПриходныйКассовыйОрдер.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.ВидОперации = &ОплатаПокупателя и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|");
	
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Валюта", 			Ссылка.Валюта);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Оплата);
	Запрос.УстановитьПараметр("ФормаОтношений", 	?(Ссылка.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика, Перечисления.ФормаОтношений.Поставщик, Перечисления.ФормаОтношений.Клиент));
	Запрос.УстановитьПараметр("ПустойКонтрагент", 	Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ОплатаПокупателя", 	Перечисления.ВидыОперацийПКО.ОплатаПокупателя);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	ДополнительныеСвойства.Вставить("Взаиморасчеты", 	Пакет[3].Выгрузить());

	ДополнительныеСвойства.Вставить("ДенежныеСредства",	Пакет[4].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ОборотыДенежныхСредств", Пакет[5].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",	Пакет[6].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоЗаказам", Пакет[7].Выгрузить());

КонецПроцедуры



Процедура Печать_КассовыйОрдер(ТабличныйДокумент, Ссылка) Экспорт
	
	Макет = Документы.ПриходныйКассовыйОрдер.ПолучитьМакет("КассовыйОрдер");
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.Номер КАК Номер,
	|	Док.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Док.Организация.Наименование КАК НаименованиеОрганизацииСокращенное,
	|	Док.Контрагент КАК Контрагент,
	|	Док.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
	|	Док.ПринятоОт КАК ПринятоОт,
	|	Док.Основание КАК Основание,
	|	Док.Приложение КАК Приложение,
	|	Док.ВТомЧислеНДС КАК ВТомЧисле,
	|	Док.Сумма КАК Сумма,
	|	Док.Валюта КАК Валюта,
	|	Док.Валюта.Представление КАК ВалютаПредставление,
	|	Док.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный						         
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
	|	КОНЕЦ											 КАК Кассир,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер
	//|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	//|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|");
		
	Запрос.УстановитьПараметр("Дата", 	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		Если Не ПустаяСтрока(Выборка.НаименованиеОрганизацииСокращенное) Тогда
			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизацииСокращенное;
		Иначе
			ОбластьМакета.Параметры.ПредставлениеОрганизации = Выборка.НаименованиеОрганизации;
		КонецЕсли;
		
		Сумма = Формат(Выборка.Сумма, "ЧЦ=15; ЧДЦ=2");
		ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
		Если ВалютаРегламентированногоУчета <> Выборка.Валюта Тогда
			Сумма = Сумма + " " + СокрЛП(Выборка.ВалютаПредставление);
		КонецЕсли;
		ОбластьМакета.Параметры.Сумма = Сумма;
		ОбластьМакета.Параметры.СуммаРубКоп = ФормированиеПечатныхФорм.СуммаРубКоп(
			Выборка.Сумма, 
			Выборка.Валюта,	
			ВалютаРегламентированногоУчета
		);
		Если Выборка.Валюта <> ВалютаРегламентированногоУчета Тогда
			ОбластьМакета.Параметры.СуммаРубКоп = ОбластьМакета.Параметры.СуммаРубКоп + " " + СокрЛП(Выборка.ВалютаПредставление); 
		КонецЕсли;
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
			Выборка.Сумма, 
			Выборка.Валюта, 
			Ложь // ВыводитьСуммуБезКопеек
		);
		ОбластьМакета.Параметры.НомерДокумента = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Выборка.Номер);
		//СтатьяДвиженияДенежныхСредств = ПолучитьСтатьюДвиженияДенежныхСредств(Выборка);
		//ОбластьМакета.Параметры.СубСчет = СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет;
		
		ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
		Если ВалютаРегламентированногоУчета = Выборка.Валюта Тогда
			КодДебета = "50.01";
		Иначе
			КодДебета = "50.21";
		КонецЕсли;
		ОбластьМакета.Параметры.КодДебета = КодДебета;


		Если ПустаяСтрока(Выборка.ВТомЧисле) Тогда
			ОбластьМакета.Параметры.ВТомЧисле = "без налога (НДС)";
		Иначе
			Если Выборка.Валюта = ВалютаРегламентированногоУчета Тогда
				ОбластьМакета.Параметры.ВТомЧисле = ОбластьМакета.Параметры.ВТомЧисле + " руб.";
			Иначе
				ОбластьМакета.Параметры.ВТомЧисле = ОбластьМакета.Параметры.ВТомЧисле + " " + СокрЛП(Выборка.ВалютаПредставление);
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОКассира = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Кассир);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
				
	КонецЦикла;
	
КонецПроцедуры	

Процедура Печать_ТоварныйЧек(ТабДокумент, Ссылка) Экспорт
	
	
	Макет = Документы.РеализацияТоваров.ПолучитьМакет("ТоварныйЧек");
		
	//ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	|	Док.Валюта                    КАК Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	Док.Контрагент				  КАК Покупатель,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Касса.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ						  КАК ОтветственныйПредставление,
	|	Док.Организация               КАК Организация,
	|	Док.Организация.Наименование  КАК Поставщик,
	|	Док.Сумма			          КАК СуммаДокумента
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	МАКСИМУМ(Заказ.Услуга) Номенклатура, 
	|	
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
    |
	|СУММА(Заказ.Сумма) Сумма, СУММА(Заказ.СуммаНДС),   ИЗ Документ.ПриходныйКассовыйОрдер.РасшифровкаСуммы СГРУППИРОВАТЬ ПО Заказ
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Если Не ПервыйДокумент Тогда
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Выборка, НСтр("ru = 'Товарный чек'"));
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//ДопКолонка = ""; //Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		//ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			//ВыводитьКоды = Истина;
			//Колонка = "Код";
		//Иначе
		//	ВыводитьКоды = Ложь;
		//КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидки Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("СуммаБезСкидки").ШиринаКолонки
			                                  + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		
		//ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		//Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка         = ВыборкаСтрокТовары.Скидка;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
				ТабДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				ТабДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаСНДС = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				СуммаСНДС = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
			ТабДокумент.Присоединить(ОбластьСуммы);
			
			ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокТовары.Скидка;
			ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
			
		//КонецЦикла;
		
		Товары = Выборка.Товары.Выгрузить();
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		
		СуммаНДС = Товары.Итог("СуммаНДС");
		Сумма    = Товары.Итог("Сумма");
		
		Если ЕстьНДС Тогда
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		Если Не Выборка.ЦенаВключаетНДС Тогда
			СуммаДокумента = Сумма + СуммаНДС;
		Иначе
			СуммаДокумента = Сумма;
		КонецЕсли;
		
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести Сумму прописью.
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ВыборкаСтрокТовары.Количество()
		                                       + ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(Выборка.СуммаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Выборка.СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьМакета);
	
		// Вывести подписи.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;

	
КонецПроцедуры