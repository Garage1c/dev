Перем БизнесПроцесс;

Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ИнтернетЗаказПокупателя.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";         
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ИнтернетЗаказПокупателя.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ИнтернетЗаказПокупателя.РазмещениеТоваров
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияТаблицыРезервируемыхТоваров() Экспорт
	
	// Запрос для соединения должен содержать поля (Товар, Размещение, Количество)
	
	Возврат "
	|ВЫБРАТЬ
	|	Номенклатура, Размещение, СУММА(Количество) КАК Количество
	|ИЗ
	|	Документ.ИнтернетЗаказПокупателя.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	ЕСТЬNULL(Размещение, &ПустойСклад) <> &ПустойСклад
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура, Размещение
	|";
	
КонецФункции
Функция ПолучитьСкладСписания() Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьТекстЗапросаПолученияСпискаЗаказов() Экспорт
	
	Возврат "ВЫБРАТЬ &ДокументСсылка";	
	
КонецФункции


// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

 	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
										 
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(
							Метаданные().Движения, 
							ДополнительныеСвойства, 
							Движения, 
							Отказ);
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьЛимиты(ЭтотОбъект, ОтветственноеЛицо, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект,, Отказ, Заголовок, ); // контроль доступного остатка
	
	// Установим статус оплаты
	
	Если 	Не Отказ И
			Не Заказы.ПроверитьИУстановитьСтатусОплатыЗаказа(Ссылка) Тогда
			
		Отказ = Истина;
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	ПроведенияДокументов.ОчиститьДвиженияДокумента(Метаданные().Движения, Движения);
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект,, Отказ, Заголовок, );

		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Сумма = Товары.Итог("Сумма") + ?(СуммаВключаетНДС,0,Товары.Итог("СуммаНДС"));// + Доставка.Итог("Доставка");
	
	Если ЗакупитьНедостающее <> Ссылка.ЗакупитьНедостающее Тогда
		
		Если НЕ ЗакупитьНедостающее Тогда ДатаОтправкиВЗакупку = '00010101'; 
		Иначе ДатаОтправкиВЗакупку = ТекущаяДата() КонецЕсли;
		
	КонецЕсли;
	
	//Если НЕ ПередачаТовара Тогда ПередачаТовара = НЕ МВЗ.Пустая() ИЛИ Склад.ПередачаТовараМВЗ; КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Тип = ТипЗнч(ДанныеЗаполнения);
	
	Если Тип = Тип("ДокументСсылка.ИнтернетЗаказПокупателя") Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ * ИЗ Документ.ИнтернетЗаказПокупателя ГДЕ ссылка = &Ссылка
		|;
		|ВЫБРАТЬ * ИЗ Документ.ИнтернетЗаказПокупателя.Товары ГДЕ ссылка = &Ссылка
		|;
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Пакет = Запрос.ВыполнитьПакет();
		ВыборкаШапки = Пакет[0].Выбрать();
		Если ВыборкаШапки.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
			
		КонецЕсли;
		
		Товары.Загрузить(Пакет[1].Выгрузить());
		
		// Изменим дату
		
		Дата 	= '00010101';
		номер 	= "";
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Если ЭтоНовый() Тогда СпособРазмещенияБезЗаказа = Истина КонецЕсли; // Теперь все заказы формируются по новому
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	//синхронное изменение  и контрагента в документе оплаты
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ИнтернетЗаказПокупателя",Ссылка);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.Текст="ВЫБРАТЬ
	             |	ОплатаЭлектроннымиДеньгами.Ссылка,
	             |	ОплатаЭлектроннымиДеньгами.Контрагент
	             |ПОМЕСТИТЬ ВТ
	             |ИЗ
	             |	Документ.ОплатаЭлектроннымиДеньгами КАК ОплатаЭлектроннымиДеньгами
	             |ГДЕ
	             |	ОплатаЭлектроннымиДеньгами.ИнтернетЗаказПокупателя = &ИнтернетЗаказПокупателя
	             |	И ОплатаЭлектроннымиДеньгами.ПометкаУдаления = ЛОЖЬ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТ.Ссылка,
	             |	ВТ.Контрагент
	             |ИЗ
	             |	ВТ КАК ВТ
	             |ГДЕ
	             |	НЕ ВТ.Контрагент = &Контрагент
	             |";
	Рез=Запрос.Выполнить();
	Если Не Рез.Пустой() тогда
		Док = Рез.Выгрузить()[0].Ссылка;
		Попытка
			ДокОбъект=Док.ПолучитьОбъект();
			ДокОбъект.Контрагент=Контрагент;
			Реж=?(ДокОбъект.Проведен,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись);
			ДокОбъект.Записать(Реж);
		Исключение
			Отказ=Истина;
			Сообщить("Не удалось записать контрагента  в Оплату электронными деньгами! "+ОписаниеОшибки());
		КонецПопытки	
	КонецЕсли;	
		
КонецПроцедуры

