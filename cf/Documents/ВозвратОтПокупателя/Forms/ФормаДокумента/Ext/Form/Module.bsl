&НаКлиенте
Перем СтруктураКолонокТовары Экспорт;

&НаСервере
Функция СкладЯчеестый()
	
	Возврат Объект.Склад.Ячеестый;
	
КонецФункции
&НаКлиенте
Процедура ОбщиеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Процедура ПересчитатьСуммыТабличныхЧастей(СтруктураКолонокТовары) Экспорт
	
	ФункцииФормДокументов.ПересчитатьСуммыТабличныхЧастей(Объект.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Объект.Грузоотправитель = ФункцииФормДокументовСервер.ГрузополучательПриИзмененииРеквизита(Объект.Контрагент);
	Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузоотправитель);
	//Объект.БанковскийСчетПартнера = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузоотправитель);
КонецПроцедуры


&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузоотправитель);
	//Объект.БанковскийСчетПартнера = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузоотправитель);
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	//Объект.БанковскийСчетОрганизации = ФункцииФормДокументовСервер.БанковскийСчетПриИзмененииРеквизита(Объект.Грузополучатель);
КонецПроцедуры


// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.НомерДокументаОтгрузки.Видимость = Объект.ДокументОтгрузкиНеНайден;
	
	// Рассчитаем динамические колонки
	ФункцииФормДокументов.РассчитатьДинамическиеКолонки(
					Объект.Товары,
					ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары, Объект.СуммаВключаетНДС, Объект.ТипЦен));
					
	//ФункцииФормДокументовСервер.УстановитьСвязиГрузополучателя(Объект,Элементы,Новый Структура("Грузополучатель, БанковскийСчетОрганизации, Грузоотправитель, БанковскийСчетПартнера","Объект.Организация","Объект.Грузополучатель","Объект.Контрагент","Объект.Грузоотправитель"));
	ФункцииФормДокументовСервер.УстановитьСвязиГрузополучателя(Объект,Элементы,Новый Структура("Грузополучатель, Грузоотправитель","Объект.Организация","Объект.Контрагент"));
	Если НЕ ЗначениеЗаполнено(Объект.МенеджерЗаказа) Тогда Объект.МенеджерЗаказа = ФункцииФормДокументовСервер.МенеджерЗаказаПриИзмененииРеквизита(Объект.Контрагент,Объект.Грузоотправитель); КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары, Объект.СуммаВключаетНДС, Объект.ТипЦен);
	
	// Видимость ячеек
	
	Элементы.ТоварыЯчейка.Видимость = СкладЯчеестый();
	
	// 	Обновим подвал
	
	ФункцииФормДокументов.ОбновитьПодвал(Объект, Элементы, Сумма, СтруктураКолонокТовары);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗапретРедактирования.УстановитьРежимТолькоПросмотрПоДатеЗапрета(ЭтаФорма);

КонецПроцедуры


// ОБРАБОТКИ ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)

	ФункцииФормДокументов.НоменклатураПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);

КонецПроцедуры
&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ФункцииФормДокументов.КоличествоПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ФункцииФормДокументов.ЦенаПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СтавкаНДСПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ФункцииФормДокументов.УпаковкаПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);

КонецПроцедуры
&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаНДСПриИзменении(Элементы.Товары, СтруктураКолонокТовары);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ФункцииФормДокументов.ОбновитьПодвал(Объект, Элементы, Сумма, СтруктураКолонокТовары);
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	Элементы.ТоварыЯчейка.Видимость = СкладЯчеестый();
	//очистим заполненые ячейки при смене склада
	Для Каждого Строка Из Объект.Товары Цикл
	Строка.Ячейка = Неопределено;
	КонецЦикла;

КонецПроцедуры

// ЗАПОЛНИТЬ

&НаСервере
Процедура ЗаполнитьКолонкуНаСервере(Имя, Значение)
	
	Таблица = Объект.Товары.Выгрузить();
	Таблица.ЗаполнитьЗначения(Значение, Имя);
	Объект.Товары.Загрузить(Таблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЯчейки(Команда)
	
	ВыбЯчейка = ОткрытьФорму("Справочник.Ячейки.ФормаВыбора",Новый Структура("Склад", Объект.Склад),,,,,Новый ОписаниеОповещения("ОбработкаЗаполненияЯчейки",ЭтаФорма,));

КонецПроцедуры
&НаКлиенте
Процедура ОбработкаЗаполненияЯчейки(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		ЗаполнитьКолонкуНаСервере("Ячейка", Результат);	
	КонецЕсли;
КонецПроцедуры
// ПОДБОР

&НаСервере
Функция ПоместитьТоварыВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(
					Объект.Товары.Выгрузить(), 
					УникальныйИдентификатор);
КонецФункции
&НаКлиенте
Процедура ПодборВыполнить()
	
	ИмяТабличнойЧасти = "Товары";
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	ПараметрыПодбора = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
	
	ПараметрыПодбора.Вставить("СтруктураКолонокТовары", СтруктураКолонокТовары);
	//ПараметрыПодбора.Вставить("ВидЗапроса", 			"ОстаткиНоменклатуры");
	//ПараметрыПодбора.Вставить("ВидыЗапросов", 			"СписокНоменклатуры");
	ПараметрыПодбора.Вставить("Склад", 			Объект.Склад);
	ПараметрыПодбора.Вставить("ТипЦен", 		Объект.ТипЦен);
   	ПараметрыПодбора.Вставить("Валюта", 		Объект.Валюта);

	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыПодбора, Элементы.Товары);
	
КонецПроцедуры
&НаСервере
Процедура ПолучитьТоварыИзХранилища(АдресТоваровВХранилище)
	
	Объект.Товары.Загрузить(ПолучитьИзВременногоХранилища(АдресТоваровВХранилище));
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение <> Неопределено Тогда		
		
		ПолучитьТоварыИзХранилища(ВыбранноеЗначение);		// получаем
		УдалитьИзВременногоХранилища(ВыбранноеЗначение); 	// заметаем следы
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОтгрузкиНеНайденПриИзменении(Элемент)
	Элементы.НомерДокументаОтгрузки.Видимость = Объект.ДокументОтгрузкиНеНайден;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Объект.ДокументОтгрузкиНеНайден Тогда
		ТекущийОбъект.НомерДокументаОтгрузки = ""; КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
КонецПроцедуры


//#Область Партии

//&НаСервере
//Процедура ЗаполнитьПартииНаСервере(СтруктураКолонокТовары)
//	
//	Запрос = Новый Запрос("
//	|ВЫБРАТЬ 	Номенклатура, Упаковка, Партия, СУММА(СуммаПартии) СуммаПартии, СУММА(Количество) Количество
//	|ИЗ 		Документ.РеализацияТоваров.Товары
//	|ГДЕ 		Ссылка = &Основание
//	|СГРУППИРОВАТЬ ПО
//	|	Номенклатура, Упаковка, Партия
//		
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ 	Номенклатура, Упаковка, Партия, СУММА(СуммаПартии) СуммаПартии, СУММА(Количество) Количество
//	|ИЗ 		Документ.РеализацияТоваров.Товары
//	|ГДЕ 		Ссылка <> &Основание И Ссылка.Проведен И Номенклатура В(&Номенклатура) И Ссылка.Дата < &Дата
//	|СГРУППИРОВАТЬ ПО
//	|	Номенклатура, Упаковка, Партия
//	|
//	|УПОРЯДОЧИТЬ ПО Партия УБЫВ
//	|");
//		
//	Запрос.УстановитьПараметр("Дата", 			Объект.Дата);
//	Запрос.УстановитьПараметр("Основание", 		Объект.ДокументОтгрузки);
//	Запрос.УстановитьПараметр("Номенклатура", 	Объект.Товары.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура"));
//		
//	ТаблицаПартий 	= Запрос.Выполнить().Выгрузить();
//	СтрокиБезПартий = Объект.Товары.НайтиСтроки(Новый Структура("Партия", Неопределено));
//		
//	Для Каждого Строка Из СтрокиБезПартий Цикл
//			
//		строкиПартий = ТаблицаПартий.НайтиСтроки(Новый Структура("Номенклатура, Упаковка", Строка.Номенклатура, Строка.Упаковка));
//		Если строкиПартий.Количество() Тогда
//			Для Каждого СтрокаПартии ИЗ строкиПартий Цикл
//				Если строкаПартии.Количество Тогда
//							
//					Строка.Партия 		= СтрокаПартии.Партия;
//					Строка.СуммаПартии 	= ?(строкаПартии.Количество = Строка.Количество, строкаПартии.СуммаПартии, строкаПартии.СуммаПартии / строкаПартии.Количество * Строка.Количество);
//					Прервать; КонецЕсли; КонецЦикла; КонецЕсли; КонецЦикла;
//		
//КонецПроцедуры

//&НаКлиенте
//Процедура ЗаполнитьПартии(Команда)
//	
//	ЗаполнитьПартииНаСервере(СтруктураКолонокТовары);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ОчиститьИЗаполнитьПартии(Команда)
//	
//	Для Каждого Строка Из Объект.Товары Цикл Строка.Партия = Неопределено КонецЦикла;
//	ЗаполнитьПартииНаСервере(СтруктураКолонокТовары);
//	
//КонецПроцедуры

//#КонецОбласти
