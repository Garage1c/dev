Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ВозвратОтПокупателя.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции


// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись
	
	Движения.Записать();
	
	// Контроль
	
	//КонтрольПроведения.ПроверитьПартииТоваров(ЭтотОбъект, Склад, Отказ, Заголовок);
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	////avdonin {{21.09.2010#
	////
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//Иначе
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//КонецЕсли;
	////}}avdonin
	
	// Установим статус оплаты
	
	Если 	Не Отказ И
			Не Заказы.ПроверитьИУстановитьСтатусОплатыЗаказа(ДокументОтгрузки.Заказ) Тогда
			
		Отказ = Истина;
			
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	//ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//КонтрольПроведения.ПроверитьПартииТоваров(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	////}}avdonin
	//
	//Если Не Отказ Тогда
	//	КонтрольПроведения.ПроверитьТоварыВЯчейках(ЭтотОбъект, Склад, Отказ, Заголовок);
	//КонецЕсли;
	
	Контролировать =  Константы.КонтрольОстатков.Получить();
	Анализ =  Обработки.АнализВлиянияОтменыПроведенияНаРегистрыНакопления.Создать();
		
	Анализ.Документ = ЭтотОбъект.Ссылка;
	Анализ.ЗаполнитьЗависимости();
		
	Если Анализ.ЗависимыеДокументы.Количество() Тогда
		
		Если Контролировать Тогда Отказ = Истина; КонецЕсли;
		
		Сообщить("Обнаружены зависимые документы" + Символы.ПС);
		Для Каждого Строка ИЗ Анализ.ЗависимыеДокументы Цикл
				
			Сообщить(Строка(Строка.Документ) + "
					|Регистр: " + Строка.ИмяРегистра + " Измерения: " + Строка.Измерения + " Ресурсы: " + Строка.Ресурсы);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Сумма = Товары.Итог("Сумма") + ?(СуммаВключаетНДС,0,Товары.Итог("СуммаНДС"));
	
	// Установим подразделение
	
	Если Подразделение.Пустая() Тогда
		
		Если 	Не Контрагент.ОсновнойМенеджер.Пустая() И
				Не Контрагент.ОсновнойМенеджер.Подразделение.Пустая() Тогда
				
			Подразделение = Контрагент.ОсновнойМенеджер.Подразделение;
			
		ИначеЕсли Не Склад.Подразделение.Пустая() Тогда
			
			Подразделение = Склад.Подразделение; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Склад.Ячеестый Тогда
		
		ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
			
	КонецЕсли;

	Если ДокументОтгрузкиНеНайден Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДокументОтгрузки")); КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКолонокТовары = Новый Структура("ЕстьКоличество, ЕстьЦена, ЕстьСуммаБезСкидки, ЕстьСумма, ЕстьСуммаАвтоматическойСкидки, ЕстьСуммаРучнойСкидки, ЕстьСтавкаНДС, ЕстьСуммаНДС, СуммаВключаетНДС, ЕстьВсего, ЕстьАкция, УчитыватьНДС, ЕстьУпаковка, ЕстьКоличествоВУпаковке, ТипЦен, Валюта, Контрагент, ЕстьПроцентРучнойСкидки, ЕстьПроцентАвтоматическойСкидки",
												Истина, Истина, Ложь, Истина, Истина, Истина, Истина, Истина, Истина, Ложь, Истина, ДанныеЗаполнения.Ссылка.УчитыватьНДС, Истина, Истина, ДанныеЗаполнения.Ссылка.ТипЦен, ДанныеЗаполнения.Ссылка.Валюта, ДанныеЗаполнения.Ссылка.Контрагент, Истина, Истина);
	
	ТипОсн = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипОсн = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Ссылка, Дата, Номер, ПометкаУдаления, Проведен");
		ДокументОтгрузки = ДанныеЗаполнения.Ссылка;
		
		Если (ТипЗнч(ДанныеЗаполнения.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Или ТипЗнч(ДанныеЗаполнения.Заказ) = Тип("ДокументСсылка.ИнтернетЗаказПокупателя")) И ДанныеЗаполнения.Заказ.РозничнаяЗаявка Тогда
			СтруктураКолонокТовары.Вставить("Касса",ДанныеЗаполнения.Заказ.Касса);
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Упаковка,
		|	Ячейка,
		|	Количество,
		|	Цена,
		|	Акция,
		|	Сумма,
		|	ПроцентРучнойСкидки,
		|	СуммаРучнойСкидки,
		|	СтавкаНДС,
		|	СуммаНДС,
		|	ПроцентАвтоматическойСкидки,
		|	СуммаАвтоматическойСкидки,
		|	КоличествоВУпаковке
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|ГДЕ
		|	Ссылка = &Основание
		|;
		|ВЫБРАТЬ
		|	Номенклатура,
		|	КоличествоОборот Количество
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(,,,Заказ = &Заказ)
		|");
		
		Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения.Ссылка);
		Запрос.УстановитьПараметр("Заказ", ДанныеЗаполнения.Заказ);
		
		Пакет = Запрос.ВыполнитьПакет();
		
		ТаблицаДок 	= Пакет[0].Выгрузить();
		ТаблицаРег 	= Пакет[1].Выгрузить();
		
		Для Каждого Строка Из ТаблицаДок Цикл
			
			Отбор = Новый Структура("Номенклатура", Строка.Номенклатура);
			
			РегСтроки = ТаблицаРег.НайтиСтроки(Отбор);
			Если РегСтроки.Количество() Тогда
				РегСтрока = РегСтроки[0];
				
			Иначе
				РегСтрока = Неопределено;
				Продолжить; КонецЕсли;
			
			Отдаем = Мин(Строка.Количество, РегСтрока.Количество);
			Если Отдаем Тогда
				
				НовСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
				
				НовСтрока.Количество = Отдаем;
				ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(НовСтрока, СтруктураКолонокТовары, Ложь);
				
				Если РегСтрока <> Неопределено Тогда
					РегСтрока.Количество = РегСтрока.Количество - Отдаем; КонецЕсли; КонецЕсли; КонецЦикла; КонецЕсли;
	
КонецПроцедуры


