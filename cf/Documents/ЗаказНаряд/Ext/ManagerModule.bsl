Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + " 
		
	// РемонтИнструмента
	
	|;
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	&ВидДвиженияПриход	КАК ВидДвижения,
	|	&Ссылка				КАК ЗаказНаряд,
	|	Ссылка.Контрагент	КАК Контрагент,				
	|	Номенклатура,
	|	Гарантия,
	|	СУММА(Выработка)	КАК Выработка,
	|	СУММА(Количество)	КАК Количество,
    |	ВЫБОР КОГДА Гарантия Тогда СУММА(СуммаАвтоматическойСкидки) ИНАЧЕ СУММА(Сумма) КОНЕЦ Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
    |	Ссылка,
	|	Номенклатура,
	|	Гарантия
	|;
	
	
	
	// Долги по заказам
	
	|ВЫБРАТЬ ""оставлено для совместимости по количеству запросов""
	|;
	|ВЫБРАТЬ								// движение по долгу
	|	&Период				Период,
	|	&ВидДвиженияПриход	ВидДвижения,
	|	Ссылка.Организация,
	|	Ссылка.Контрагент,
	|	&Ссылка				Заказ,
	|	Сумма(Сумма)		Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Товары
	|ГДЕ
	|	Ссылка = &Ссылка И НЕ Ссылка.Отменен И НЕ Гарантия
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|ИМЕЮЩИЕ
	|	Сумма(Сумма) <> 0
	|;
	
	// СВЕДЕНЬЯ О РЕМОНТЕ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	Ссылка				КАК ЗаказНаряд,
	|	Номенклатура		КАК Номенклатура,
	|	Неисправность		КАК Неисправность,
	|	Гарантия			КАК Гарантия,
	|	ЦенаЗаЧас			КАК ЦенаЗаЧас,
	|	Комментарий			КАК Комментарий,
	|	Выработка			КАК Выработка,
	|	ВЫБОР КОГДА Гарантия Тогда СуммаАвтоматическойСкидки ИНАЧЕ Сумма КОНЕЦ Сумма,
	|	Количество			КАК Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// ТОВАРЫ В РЕЗЕРВЕ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	&ВидДвиженияПриход		ВидДвижения,
	|	Зап.Ссылка				ДокументРезерва,
	|	Зап.Ссылка.Склад		Размещение,
	|	Зап.Номенклатура		Номенклатура,
	|	Зап.Количество			Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти Зап
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(	ВЫБРАТЬ НомерСтроки - 1 ИндексСтрокиНоменклатуры, Гарантия
	|		ИЗ Документ.ЗаказНаряд.Товары
	|		ГДЕ	Ссылка = &Ссылка) Тов
	|ПО
	|	Зап.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|
	|ГДЕ
	//|	Зап.Ссылка = &Ссылка И НЕ Ссылка.Отменен И НЕ Зап.Ссылка.БезРезерва" + ?(Ссылка.Дата >= '20121214', "  И НЕ Тов.Гарантия", "") + "
	|	Зап.Ссылка = &Ссылка И НЕ Ссылка.Отменен И НЕ Зап.Ссылка.БезРезерва" + ?(Ссылка.Дата >= Константы.ДатаИзмененияЗаказНарядов.Получить(), "  И НЕ Тов.Гарантия", "") + "
	|;
	
	// ТОВАРЫ НА СКЛАДАХ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	&ВидДвиженияРасход		ВидДвижения,
	|	Зап.Ссылка.Склад		Склад,
	|	Зап.Номенклатура		Номенклатура,
	|	Зап.Количество			Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти Зап
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(	ВЫБРАТЬ НомерСтроки - 1 ИндексСтрокиНоменклатуры, Гарантия
	|		ИЗ Документ.ЗаказНаряд.Товары
	|		ГДЕ	Ссылка = &Ссылка) Тов
	|ПО
	|	Зап.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|
	|ГДЕ
	|	Зап.Ссылка = &Ссылка И НЕ Ссылка.Отменен И Тов.Гарантия и &Период>&ДатаИзмененияЗаказНарядов
	|;
	
	// ПАРТИИ ТОВАРОВ
	
	|ВЫБРАТЬ ""оставлено для совместимости по количеству запросов"" ГДЕ Истина=Ложь
	|;
	
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|	&ВидДвиженияРасход	КАК ВидДвижения,
	//|	Зап.Ссылка.Склад Склад, Партия, Номенклатура,
	//|	СУММА(Зап.СуммаПартии) 	Сумма,
	//|	СУММА(Зап.Количество) 	Количество
	//|ИЗ
	//|	Документ.ЗаказНаряд.Запчасти Зап
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ
	//|	(	ВЫБРАТЬ НомерСтроки - 1 ИндексСтрокиНоменклатуры, Гарантия
	//|		ИЗ Документ.ЗаказНаряд.Товары
	//|		ГДЕ	Ссылка = &Ссылка) Тов
	//|ПО
	//|	Зап.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	//|
	//|ГДЕ
	//|	Зап.Ссылка = &Ссылка И СуммаПартии <> 0 И НЕ Ссылка.Отменен И Тов.Гарантия
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка, Партия, Номенклатура
	//|;

	
	// СТОИМОСТЬ РЕМОНТА
	
	|ВЫБРАТЬ
	|	НомерСтроки - 1 ИндексСтрокиНоменклатуры,
	|	Гарантия,
	|	Номенклатура,
	|	Неисправность,
	|	Комментарий
	|ПОМЕСТИТЬ
	|	РемонируемыеТовары
	|ИЗ
	|	Документ.ЗаказНаряд.Товары
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	Ссылка				КАК ЗаказНаряд,
	|	Тов.Гарантия		КАК Гарантия,
	|	Раб.Номенклатура	КАК Компонент,
	|	Тов.Номенклатура	КАК РемонитруемыйТовар,
	|	Тов.Неисправность	КАК Неисправность,
	|	Тов.Комментарий		КАК Комментарий,
	|	Сумма				КАК Сумма,
	|	Количество			КАК Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Работы Раб
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ	РемонируемыеТовары Тов
	|ПО					Раб.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|ГДЕ				Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	Ссылка				КАК ЗаказНаряд,
	|	Тов.Гарантия		КАК Гарантия,
	|	Зап.Номенклатура	КАК Компонент,
	|	Тов.Номенклатура	КАК РемонитруемыйТовар,
	|	Тов.Неисправность	КАК Неисправность,
	|	Тов.Комментарий		КАК Комментарий,
	|	Сумма				КАК Сумма,
	|	Количество			КАК Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти Зап
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ	РемонируемыеТовары Тов
	|ПО					Зап.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|ГДЕ				Ссылка = &Ссылка
	|
	|;
	
	// СТОИМОСТЬ РЕМОНТА УСЛУГИ
	
	|ВЫБРАТЬ
	|	&Период					КАК Период,
	|	Ссылка					КАК ЗаказНаряд,
	|	Тов.Гарантия			КАК Гарантия,
	|	Раб.Номенклатура		КАК Услуга,
	|	Раб.УслугаСЗапчастями	КАК УслугаСЗапчастями,
	|	Тов.Номенклатура		КАК РемонитруемыйТовар,
	|	Тов.Неисправность		КАК Неисправность,
	|	Тов.Комментарий			КАК Комментарий,
	|	Сумма					КАК Сумма,
	|	Количество				КАК Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Работы Раб
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ	РемонируемыеТовары Тов
	|ПО					Раб.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|ГДЕ				Ссылка = &Ссылка
	|;
	
	// СТОИМОСТЬ РЕМОНТА ЗАПЧАСТИ
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	Ссылка				КАК ЗаказНаряд,
	|	Тов.Гарантия		КАК Гарантия,
	|	Зап.Номенклатура	КАК Запчасть,
	|	Тов.Номенклатура	КАК РемонитруемыйТовар,
	|	Тов.Неисправность	КАК Неисправность,
	|	Тов.Комментарий		КАК Комментарий,
	|	Сумма				КАК Сумма,
	|	Количество			КАК Количество
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти Зап
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ	РемонируемыеТовары Тов
	|ПО					Зап.ИндексСтрокиНоменклатуры = Тов.ИндексСтрокиНоменклатуры
	|ГДЕ				Ссылка = &Ссылка
	|
	|");
	
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 				Ссылка);
	Запрос.УстановитьПараметр("Контрагент", 			Ссылка.Контрагент);
	Запрос.УстановитьПараметр("Организация",			Ссылка.Организация);
	Запрос.УстановитьПараметр("Период", 				Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 		ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 		ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ДатаИзмененияЗаказНарядов",Константы.ДатаИзмененияЗаказНарядов.Получить());
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ПараметрыСистемы = КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить());

	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 	ПараметрыСистемы);
	//ДополнительныеСвойства.Вставить("Шапка", 				КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("РемонтИнструмента",	Пакет[1].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоЗаказам", Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("СведеньяОРемонте",	Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ТоварыВРезерве",	Пакет[5].Выгрузить());
	ДополнительныеСвойства.Вставить("СтоимостьРемонта",	Пакет[9].Выгрузить());
	
	ДополнительныеСвойства.Вставить("СтоимостьРемонтаУслуги",	Пакет[10].Выгрузить());
    ДополнительныеСвойства.Вставить("СтоимостьРемонтаЗапчасти",	Пакет[11].Выгрузить());

	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", Новый ТаблицаЗначений);  //очистка
	
	// заказ-наряд списывает запчасти, потраченные в счет гарантии с этого момента. 
	// раньше гарантийные товары списывались реализацией, отчего сумма реализации не совпадала с реальной суммой оплаты
	//Если Ссылка.Дата >= '20121214' Тогда 
	ДополнительныеСвойства.Вставить("ТоварыНаСкладах",	Пакет[6].Выгрузить());

	//// Разнесем оплату
	//ДолгиПоОтгрузкам = Пакет[3].Выгрузить();
	//
	//Если ПараметрыСистемы.ДолгиПоОтгрузкамУчитываютАвансы Тогда // уменьшем на аванс сумму
	//	Заказы.РазнестиОплатуАвансовЗаказаПриПроведении(ДолгиПоОтгрузкам, Пакет[2].Выбрать(), Ссылка); КонецЕсли;
	//
	//ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам", ДолгиПоОтгрузкам);
	
КонецПроцедуры

Функция ПолучитьПараметрыПечати(Ссылка)
	// Запрос
	
	Запрос 	= Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Рем.Номер, Док.Номер) Номер,
	|	ЕСТЬNULL(Зад.Дата, ДатаВремя(1,1,1,0,0,0)) 		   Дата,
	//|	Выбор КОГДА Док.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	//|		ЕСТЬNULL(Контр.Ссылка, Док.Контрагент)
	//|	ИНАЧЕ
	//|		Док.Контрагент
	//|	КОНЕЦ 				КАК Заказчик,
	|	Док.Номер КАК НомерЗаказНаряда,
	|	Док.Дата КАК ДатаЗаказНаряда,
	|	Док.Контрагент				КАК Заказчик,
	|	Док.ДоверенноеЛицо,
	|	Док.Сумма,
	|	Док.Услуга,
	|	Док.Валюта.ПараметрыПрописиНаРусском КАК ПараметрыПрописиНаРусском,
	|	Док.СуммаВключаетНДС,
	|	Док.Ответственный,
	|	Док.Товары.(
	|		Выработка,
	|       ЦенаЗаЧас,
	|		Сумма,
	|		СуммаНДС,
	|		Гарантия
	|	),
	|	Док.Работы.(
	|       Номенклатура Работа,
	|		Номенклатура.Артикул КАК РаботаАртикул,
	|		Количество,
	|		Цена,
	|		Сумма
	|	),
	|	Док.Запчасти.(
	|		Номенклатура Товар,
	|		Номенклатура.Артикул КАК ЗапчастиАртикул,
	|		Номенклатура.ЕдиницаИзмерения ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БизнесПроцесс.РемонтИнструмента Рем
	|	По
	|		Док.Ссылка = Рем.ЗаказНаряд
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	
	|		(ВЫБРАТЬ БизнесПроцесс, Дата ИЗ Задача.ЗадачаПользователю
	|			ГДЕ
	|				ТочкаМаршрута = &ПредупредитьКлиента И
	|				Выполнена
	|		) Зад ПО
	|				Зад.БизнесПроцесс = Рем.Ссылка
	|	
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|");
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("ПредупредитьКлиента", БизнесПроцессы.РемонтИнструмента.ТочкиМаршрута.ПредупредитьКлиента);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьДатуЗаказНаряда(Ссылка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ Дата ИЗ Документ.РеализацияТоваров ГДЕ ВЫРАЗИТЬ(Заказ КАК Документ.ЗаказНаряд) = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Дата;
	Иначе
		Возврат Ссылка.Дата;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДатуОповещения(Ссылка)
	Запрос = Новый Запрос("ВЫБРАТЬ ДатаВыполнения ИЗ Задача.ЗадачаПользователю ГДЕ ВЫРАЗИТЬ(Заказ КАК Документ.ЗаказНаряд) = &Ссылка И ТочкаМаршрута =&ТочкаМаршрута И Выполнена");
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.РемонтИнструмента.ТочкиМаршрута.ПредупредитьКлиента);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДатаВыполнения;
	Иначе
		Возврат '00010101';
	КонецЕсли;
	
КонецФункции

Процедура Печать_Акт_Новый(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("АктНовый");
	
	// Определим области
	
	ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
	ОбластьПоставщик 			= Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель 			= Макет.ПолучитьОбласть("Покупатель");
	ОбластьШапкаТаблицыРаботы 	= Макет.ПолучитьОбласть("ШапкаТаблицыРаботы");
	ОбластьСтрокаРаботы 		= Макет.ПолучитьОбласть("СтрокаРаботы");
	ОбластьИтогоРаботы 			= Макет.ПолучитьОбласть("ИтогоПоРаботам");
	ОбластьШапкаТаблицыЗапчасти	= Макет.ПолучитьОбласть("ШапкаТаблицыЗапчасти");
	ОбластьСтрокаЗапчасти 		= Макет.ПолучитьОбласть("СтрокаЗапчасти");
	ОбластьИтогоЗапчасти		= Макет.ПолучитьОбласть("ИтогоПоЗапчастям");
	ОбластьИтого 				= Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС 			= Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьСуммаПрописью 		= Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписи 				= Макет.ПолучитьОбласть("Подписи");
	
	Выборка = ПолучитьПараметрыПечати(Ссылка);
	
	Если Выборка.Следующий() Тогда
		
		// Шапка
		
		Если НЕ ЗначениеЗаполнено(Выборка.Дата) Тогда
			Сообщить("Дата документа не может быть получена, т.к. задача ""Предупредить клиента"" не выполнена");
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Акт выполненных работ №" + Выборка.Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.ПоДокументу = "по заказу-наряду №" + Выборка.НомерЗаказНаряда + " от " + Формат(Выборка.ДатаЗаказНаряда, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ?(Ссылка.Организация.Пустая(), Справочники.Организации.НайтиПоКоду("000000002"), Ссылка.Организация);
		ТабДок.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель.Параметры.ПредставлениеПолучателя = Выборка.ЗаказЧик;
		ТабДок.Вывести(ОбластьПокупатель);
		
		// Товары
		
		СуммаНДС 	= 0;
		Сумма		= 0;
		СуммаВсего	= 0;
		
		СуммаРаботы = 0;
		СуммаЗапчасти = 0;
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			СуммаНДС 	= СуммаНДС + ВыборкаТовары.СуммаНДС;
			Сумма		= Сумма + ВыборкаТовары.Сумма;
			СуммаВсего 	= СуммаВсего + ВыборкаТовары.Сумма + ?(Выборка.СуммаВключаетНДС, 0, ВыборкаТовары.СуммаНДС);
			
		КонецЦикла;
		
		// Работы
		
		НомерСтрокиРаботы = 1;
		ВыборкаРаботы = Выборка.Работы.Выбрать();
		Если ВыборкаРаботы.Количество() <> 0 Тогда // Есть работы
			
			ТабДок.Вывести(ОбластьШапкаТаблицыРаботы);

			Пока ВыборкаРаботы.Следующий() Цикл
				
				Строка 					= ОбластьСтрокаРаботы.Параметры;
				Строка.НомерСтроки 		= НомерСтрокиРаботы;
				Строка.Товар			= ВыборкаРаботы.Работа;
				Строка.Артикул			= ВыборкаРаботы.РаботаАртикул;
				Строка.НормоЧас			= ВыборкаРаботы.Количество;
				Строка.Количество 		= 1;
				Строка.Цена 			= ВыборкаРаботы.Сумма;
				Строка.Сумма 			= ВыборкаРаботы.Сумма;
				
				ТабДок.Вывести(ОбластьСтрокаРаботы);
				
				СуммаРаботы = СуммаРаботы + ВыборкаРаботы.Сумма;
				НомерСтрокиРаботы = НомерСтрокиРаботы + 1;
			КонецЦикла;	
			
			// Итого по работам
			
			ОбластьИтогоРаботы.Параметры.ВсегоПоРаботам = СуммаРаботы;
			ТабДок.Вывести(ОбластьИтогоРаботы);
		КонецЕсли;
	
		
		// Запчасти
		
		НомерСтрокиЗапчасти = 1;
		ВыборкаЗапчасти = Выборка.Запчасти.Выбрать();
		Если ВыборкаЗапчасти.Количество() <> 0 Тогда // Есть запчасти
			
			ТабДок.Вывести(ОбластьШапкаТаблицыЗапчасти);
			
			Пока ВыборкаЗапчасти.Следующий() Цикл
				
				Строка 					= ОбластьСтрокаЗапчасти.Параметры;
				Строка.НомерСтроки 		= НомерСтрокиЗапчасти;
				Строка.Товар			= ВыборкаЗапчасти.Товар;
				Строка.Артикул			= ВыборкаЗапчасти.ЗапчастиАртикул;
				Строка.Количество 		= ВыборкаЗапчасти.Количество;
				Строка.Цена 			= ВыборкаЗапчасти.Цена;
				Строка.Сумма 			= ВыборкаЗапчасти.Сумма;
				
				ТабДок.Вывести(ОбластьСтрокаЗапчасти);
				
				СуммаЗапчасти = СуммаЗапчасти + ВыборкаЗапчасти.Сумма;
				НомерСтрокиЗапчасти = НомерСтрокиЗапчасти + 1;
			КонецЦикла;
			
			// Итого по запчастям
			
			ОбластьИтогоЗапчасти.Параметры.ВсегоПоЗапчастям = СуммаЗапчасти;
			ТабДок.Вывести(ОбластьИтогоЗапчасти);
		КонецЕсли;	
			
		
		// Итоги
		
		ОбластьИтого.Параметры.Всего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтого);
		
		ОбластьИтогоНДС.Параметры.НДС 		= ?(Выборка.СуммаВключаетНДС, " В т.ч. НДС (18%):", "НДС:");
		ОбластьИтогоНДС.Параметры.ВсегоНДС 	= СуммаНДС;
		ТабДок.Вывести(ОбластьИтогоНДС);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего по заказу-наряду №" + Выборка.НомерЗаказНаряда + " от " + Формат(Выборка.ДатаЗаказНаряда, "ДЛФ=DD") + "   "  + СуммаВсего + " ";
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(СуммаВсего, "Л = ru_RU; ДП = Ложь", Выборка.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьСуммаПрописью);
		
		// Подписи
		
		ОбластьПодписи.Параметры.Отпустил 	= ПараметрыСеанса.ТекущийПользователь;
		ОбластьПодписи.Параметры.Получил 	= Выборка.ДоверенноеЛицо;
		ТабДок.Вывести(ОбластьПодписи);
		
	КонецЕсли;
	
КонецПроцедуры
Процедура Печать_ЗаказНаряд(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("ЗаказНаряд");
	
		
	// Запрос
	
	Запрос 	= Новый Запрос("
	|ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Контрагент КАК Заказчик,
	|	Док.ДоверенноеЛицо,
	//|	Док.ДатаОповещения,
	|	Док.ДатаВыдачи,
	|	&ДатаОповещения  КАК ДатаОповещения,
	|	&Дата 		КАК Дата,
	|	Док.Дата 	КАК ДатаПриема,
	|	Док.Сумма,
	|	Док.Комментарий,
	|	Док.ВыездныеРаботы,
	|	Док.Валюта.ПараметрыПрописиНаРусском КАК ПараметрыПрописиНаРусском,
	|	Док.СуммаВключаетНДС,
	|   Док.Организация.Наименование НаименованиеОрганизации,
	|	Док.Организация.УчитыватьНДС КАК УчитыватьНДС,
	|	Док.Товары.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура КАК Товар,
	|		Номенклатура.Артикул КАК Модель,
	|		Количество,
	|		Сумма,
	|		ЦенаЗаЧас КАК Цена,
	|		СуммаНДС,
	|		СтавкаНДС,
	|		Неисправность.Наименование КАК Неисправность,
	|		Гарантия,
	|		СуммаАвтоматическойСкидки
	|	),
	|	Док.Работы.(
	|		ИндексСтрокиНоменклатуры,
	|		Номенклатура КАК Работа,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Код КАК КодРаботы,
	|		Количество КАК Часов,
	|		Цена,
	|		0 Скидка,
	|		Сумма
	|	),
	|	Док.Запчасти.(
	|		ИндексСтрокиНоменклатуры,
	|		Номенклатура КАК Запчасть,
	|		Номенклатура.Артикул КАК Артикул,
	|		Количество,
	|		Цена,
	|		0 Скидка,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|");
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("Дата", Формат(ПолучитьДатуЗаказНаряда(Ссылка),"ДЛФ=DD"));
	Запрос.Параметры.Вставить("ДатаОповещения", Формат(ПолучитьДатуОповещения(Ссылка),"ДЛФ=DD"));
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Определим облости
	
	Если Выборка.Следующий() Тогда
		
		// Шапка
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
			
		ОбластьШапка.Параметры.Телефон 	= ФормированиеПечатныхФорм.ПолучитьТелефонИзКонтактнойИнформации(Ссылка.Контрагент);
		ОбластьШапка.Параметры.Адрес 	= ФормированиеПечатныхФорм.ПолучитьАдресИзКонтактнойИнформации(Ссылка.Контрагент, "Юридический");
	
		
		ТабДок.Вывести(ОбластьШапка);
		
		ОбластьСтрокаИнструмент = Макет.ПолучитьОбласть("СтрокаИнструмент");
			
		// Товары
		
		СуммаНДС 	= 0;
		Итог		= 0;
		СуммаСкидки = 0;
		
		ТаблицаТоваров = Выборка.Товары.Выгрузить();
		МассивГарантий = Новый Массив;
		ТоварыИЦены = Новый Соответствие;
		Для Каждого СтрокаТаблицы ИЗ ТаблицаТоваров Цикл  СтавкаНДС = СтрокаТаблицы.СтавкаНДС;
			
			ОбластьСтрокаИнструмент.Параметры.Заполнить(СтрокаТаблицы);
			ТабДок.Вывести(ОбластьСтрокаИнструмент);
			
			ТоварыИЦены.Вставить(СтрокаТаблицы.Номер-1, СтрокаТаблицы.Цена);
			
			Если Не СтрокаТаблицы.Гарантия Тогда
				
				СуммаНДС 	= СуммаНДС + СтрокаТаблицы.СуммаНДС;
				Итог		= Итог + СтрокаТаблицы.Сумма;
			Иначе
				МассивГарантий.Добавить(СтрокаТаблицы.Номер-1);
			КонецЕсли; 				

			СуммаСкидки = СуммаСкидки + СтрокаТаблицы.СуммаАвтоматическойСкидки;
			
		КонецЦикла;
		
		Итог = Итог + ?(Выборка.СуммаВключаетНДС, 0, СуммаНДС);
		
		// Работы
		
		ОбластьЗаголовокРабот   = Макет.ПолучитьОбласть("ЗаголовокРабот");
		Если СуммаСкидки Тогда
			ОбластьШапкаРабот 		= Макет.ПолучитьОбласть("ШапкаРаботСкидка");
			ОбластьСтрокаРабот 		= Макет.ПолучитьОбласть("СтрокаРаботСкидка");
		Иначе
			ОбластьШапкаРабот 		= Макет.ПолучитьОбласть("ШапкаРабот");
			ОбластьСтрокаРабот 		= Макет.ПолучитьОбласть("СтрокаРабот");
		КонецЕсли;
		
		ОбластьПодвалРабот 		= Макет.ПолучитьОбласть("ПодвалРабот");
		
		Если СуммаСкидки Тогда
			ОбластьШапкаЗапчасти 	= Макет.ПолучитьОбласть("ШапкаЗапчастиСкидка");
			ОбластьСтрокаЗапчасти	= Макет.ПолучитьОбласть("СтрокаЗапчастиСкидка");
		Иначе
			ОбластьШапкаЗапчасти 	= Макет.ПолучитьОбласть("ШапкаЗапчасти");
			ОбластьСтрокаЗапчасти	= Макет.ПолучитьОбласть("СтрокаЗапчасти");
		КонецЕсли;
									
		ОбластьПодвалЗапчасти 	= Макет.ПолучитьОбласть("ПодвалЗапчасти");
		
		ОбластьИтогоТаблицы	= Макет.ПолучитьОбласть("ИтогоТаблицы");
		ОбластьСкидкаТаблицы	= Макет.ПолучитьОбласть("СкидкаТаблицы");

		ОбластьПодвалТаблицы	= Макет.ПолучитьОбласть("ПодвалТаблицы");
		
		Сумма = 0;
		
		ВыборкаРаботы = Выборка.работы.Выбрать();
		Если ВыборкаРаботы.Количество() <> 0 Тогда //Если есть работы
			
			ТабДок.Вывести(ОбластьЗаголовокРабот);
			
			//ОбластьШапкаРабот.Параметры.Заполнить(СтрокаТаблицы);
			ТабДок.Вывести(ОбластьШапкаРабот);
			
			Пока ВыборкаРаботы.Следующий() Цикл
				
				ОбластьСтрокаРабот.Параметры.Заполнить(ВыборкаРаботы);
				
				Если МассивГарантий.Найти(ВыборкаРаботы.ИндексСтрокиНоменклатуры) <> Неопределено Тогда
					
					ОбластьСтрокаРабот.Параметры.Скидка = ВыборкаРаботы.Сумма;
					ОбластьСтрокаРабот.Параметры.Сумма = 0;
				Иначе
					Сумма = Сумма + ВыборкаРаботы.Сумма;
					
				КонецЕсли;
				
				//ОбластьСтрокаРабот.Параметры.Цена = ТоварыИЦены.Получить(ВыборкаРаботы.ИндексСтрокиНоменклатуры);
				ТабДок.Вывести(ОбластьСтрокаРабот);
				
			КонецЦикла;
			
			ОбластьПодвалРабот.Параметры.Сумма = Сумма;
			
			ТабДок.Вывести(ОбластьПодвалРабот);
		КонецЕсли;
		
		// Запчасти
		
		ОбластьЗаголовокЗапчасти   = Макет.ПолучитьОбласть("ЗаголовокЗапчасти");
						
		Сумма = 0;
		
		ВыборкаЗапчасти = Выборка.Запчасти.Выбрать();
		Если ВыборкаЗапчасти.Количество() <> 0 Тогда // Если есть запчасти
			
		ТабДок.Вывести(ОбластьЗаголовокЗапчасти);
		ТабДок.Вывести(ОбластьШапкаЗапчасти);
			
		Пока ВыборкаЗапчасти.Следующий() Цикл
			
			ОбластьСтрокаЗапчасти.Параметры.Заполнить(ВыборкаЗапчасти);
			
			Если МассивГарантий.Найти(ВыборкаЗапчасти.ИндексСтрокиНоменклатуры) <> Неопределено Тогда
				ОбластьСтрокаЗапчасти.Параметры.Скидка = ВыборкаЗапчасти.Сумма;
				ОбластьСтрокаЗапчасти.Параметры.Сумма = 0;
			Иначе
				Сумма = Сумма + ВыборкаЗапчасти.Сумма;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьСтрокаЗапчасти);
			
		КонецЦикла;
		
		ОбластьПодвалЗапчасти.Параметры.Сумма = Сумма;
		ТабДок.Вывести(ОбластьПодвалЗапчасти);
		КонецЕсли;
		
		// Итоги
		ОбластьИтогоТаблицы.Параметры.Сумма = Формат(Итог, "ЧДЦ=2"); 
		ТабДок.Вывести(ОбластьИтогоТаблицы);
		
		Если СуммаСкидки Тогда
			ОбластьСкидкаТаблицы.Параметры.Скидка = Формат(СуммаСкидки, "ЧДЦ=2");
			ТабДок.Вывести(ОбластьСкидкаТаблицы);
		КонецЕсли;

		ОбластьПодвалТаблицы.Параметры.Сумма 			= Формат(Итог, "ЧДЦ=2") ;
		ОбластьПодвалТаблицы.Параметры.СуммаПрописью 	= ЧислоПрописью(Итог, "Л = ru_RU; ДП = Ложь", Выборка.ПараметрыПрописиНаРусском);
		
		Если Выборка.УчитыватьНДС Тогда
		
			ОбластьПодвалТаблицы.Параметры.ПроНДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, Выборка.СуммаВключаетНДС);
			
		Иначе
			ОбластьПодвалТаблицы.Параметры.ПроНДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		
		//ОбластьПодвалТаблицы.Параметры.ПроНДС 			= ?(Выборка.СуммаВключаетНДС, "В том числе НДС", "НДС");
		//ОбластьПодвалТаблицы.Параметры.ПроИтого 		= "Итого по заявке №" + Выборка.Номер;
		ОбластьПодвалТаблицы.Параметры.СуммаНДС 		= СуммаНДС;
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		
		
		ТабДок.НижнийКолонтитул.Выводить = истина;
		ТабДок.НижнийКолонтитул.ТекстСправа = "Страница [&НомерСтраницы] из [&СтраницВсего]";

		// Если до конца страницы не выйдет то выведем на новой
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал1");
		
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал2");
		
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал3");
		
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал4");
		
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал5");
		
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
		// Подписи
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал6");
	    ОбластьПодвал.Параметры.Отпустил 	= ПараметрыСеанса.ТекущийПользователь;
		//ОбластьПодвал.Параметры.Получил 	= Выборка.ДоверенноеЛицо;
				
		Если не ТабДок.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЕсли;
КонецПроцедуры
Процедура Печать_Акт(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("Акт");
	
	// Определим области
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьПоставщик 		= Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель 		= Макет.ПолучитьОбласть("Покупатель");
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС 		= Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьСуммаПрописью 	= Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписи 			= Макет.ПолучитьОбласть("Подписи");
	
	Выборка = ПолучитьПараметрыПечати(Ссылка);
	
	Если Выборка.Следующий() Тогда
		
		// Шапка
		
		Если НЕ ЗначениеЗаполнено(Выборка.Дата) Тогда
			Сообщить("Дата документа не может быть получена, т.к. задача ""Предупредить клиента"" не выполнена");
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Акт выполненных работ №" + Выборка.Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ?(Ссылка.Организация.Пустая(), Справочники.Организации.НайтиПоКоду("000000002"), Ссылка.Организация);
		ТабДок.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель.Параметры.ПредставлениеПолучателя = Выборка.ЗаказЧик;
		ТабДок.Вывести(ОбластьПокупатель);
		
		// Товары
		
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		СуммаНДС 	= 0;
		Сумма		= 0;
		СуммаВсего	= 0;
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			СуммаНДС 	= СуммаНДС + ВыборкаТовары.СуммаНДС;
			Сумма		= Сумма + ВыборкаТовары.Сумма;
			СуммаВсего 	= СуммаВсего + ВыборкаТовары.Сумма + ?(Выборка.СуммаВключаетНДС, 0, ВыборкаТовары.СуммаНДС);
			
		КонецЦикла;
		
		Строка = ОбластьСтрока.Параметры;
		Строка.НомерСтроки 		= 1;
		Строка.Товар			= "Услуги по ремонту";
		Строка.Количество 		= 1;
		Строка.ЕдиницаИзмерения = "усл.";
		Строка.Цена 			= Сумма;
		Строка.Сумма 			= СуммаВсего;
		
		ТабДок.Вывести(ОбластьСтрока);
		
		// Итоги
		
		ОбластьИтого.Параметры.Всего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтого);
		
		ОбластьИтогоНДС.Параметры.НДС 		= ?(Выборка.СуммаВключаетНДС, " в том числе НДС:", "НДС:");
		ОбластьИтогоНДС.Параметры.ВсегоНДС 	= СуммаНДС;
		ТабДок.Вывести(ОбластьИтогоНДС);
		
		ОбластьСуммаПрописью.Параметры.итоговаяСтрока = "Всего по заказ наряду №" + Выборка.Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ОбластьСуммаПрописью.Параметры.СуммаПрописью 	= ЧислоПрописью(СуммаВсего, "Л = ru_RU; ДП = Ложь", Выборка.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьСуммаПрописью);
		
		// Подписи
		
		ОбластьПодписи.Параметры.Отпустил 	= ПараметрыСеанса.ТекущийПользователь;
		ОбластьПодписи.Параметры.Получил 	= Выборка.ДоверенноеЛицо;
		ТабДок.Вывести(ОбластьПодписи);
		
	КонецЕсли;
	
КонецПроцедуры
Процедура Печать_АктВыездной(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("АктВыездной");
	ТабДок.Вывести(Макет);
	
КонецПроцедуры
Процедура Печать_Деффектовку(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("Дефектация");
	
	// Определим области
	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПустаяСтрока		= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал	 		= Макет.ПолучитьОбласть("Подвал");
	
	// Запрос
	
	Запрос 	= Новый Запрос("
	
	// Шапка
	
	|ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Дата,
	|	Док.Контрагент,
	|	Док.Валюта.ПараметрыПрописиНаРусском КАК ПараметрыПрописиНаРусском
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// Товары
	
	|ВЫБРАТЬ
	|	НомерСтроки КАК Номер,
	|	Номенклатура,
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.Производитель КАК Производитель
	|ИЗ
	|	Документ.ЗаказНаряд.Товары КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;

	// работы
	
	|ВЫБРАТЬ
	|	Номенклатура,
	|	ИндексСтрокиНоменклатуры,
	|	Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Работы КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// Запчасти
	
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Количество,
	|	Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|");
	
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаШапки 		= Пакет[0].Выбрать();
	ВыборкаТоваров 		= Пакет[1].Выбрать();
	ТаблицаРабот 		= Пакет[2].Выгрузить();
	ТаблицаЗапчастей 	= Пакет[3].Выгрузить();
	
	Итог = 0;
	
	// Шапка
	
	Если ВыборкаШапки.Следующий() Тогда
	
		ОбластьШапка.Параметры.Заполнить(ВыборкаШапки);
		ТабДок.Вывести(ОбластьШапка);
		
		ИндТов = -1;
		Пока ВыборкаТоваров.Следующий() Цикл ИндТов = ИндТов + 1;
			
			ОбластьВыводаТовара = Новый ТабличныйДокумент;
			
			// Заполним 
			
			ОбластьШапкаТаблицы.Параметры.Заполнить(ВыборкаТоваров);
			ОбластьВыводаТовара.Вывести(ОбластьШапкаТаблицы);
			
			СтрокиРабот = ТаблицаРабот.НайтиСтроки(Новый Структура("ИндексСтрокиНоменклатуры", ИндТов));
			СтрокиРабот = ТаблицаРабот.НайтиСтроки(Новый Структура("ИндексСтрокиНоменклатуры", ИндТов));
			
			КолРабот 		= ТаблицаРабот.Количество();
			КолЗапчастей 	= ТаблицаЗапчастей.Количество();
			
			СуммаРабот 		= 0;
			СуммаЗапчастей 	= 0;
			
			КолСтрок = Макс(КолРабот, КолЗапчастей);
			Для Инд = 0 По КолСтрок - 1 Цикл
				
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				
				// Подчистаем работы
				
				Если Инд < КолРабот - 2 Тогда
					
					Строка = ТаблицаРабот[Инд];
					
					ОбластьСтрока.Параметры.Работа 		= Строка.Номенклатура;
					ОбластьСтрока.Параметры.СуммаРаботы = Строка.Сумма;
					
					СуммаРабот = СуммаРабот + Строка.Сумма;
					
				КонецЕсли;
				
				// Подсчитаем запчасти
				
				Если Инд < КолЗапчастей - 2 Тогда
					
					Строка = ТаблицаЗапчастей[Инд];
					
					ОбластьСтрока.Параметры.Запчасть 		= Строка.Номенклатура;
					ОбластьСтрока.Параметры.Количество 		= Строка.Количество;
					ОбластьСтрока.Параметры.СуммаЗапчасти	= Строка.Сумма;
					
					СуммаЗапчастей = СуммаЗапчастей + Строка.Сумма;
					
				КонецЕсли;
				
				// Выведем строку 
			                            
				ОбластьВыводаТовара.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			// Подвал
			
			ОбластьПодвалТаблицы.Параметры.ВсегоЗапчасти = СуммаЗапчастей;
			ОбластьПодвалТаблицы.Параметры.ВсегоРаботы	 = СуммаРабот;
			ОбластьПодвалТаблицы.Параметры.Итог			 = СуммаРабот + СуммаЗапчастей;
			ОбластьВыводаТовара.Вывести(ОбластьПодвалТаблицы);
			
			Итог = Итог + СуммаРабот + СуммаЗапчастей;
			
			Если ТабДок.ПроверитьВывод(ОбластьВыводаТовара) Тогда
				ТабДок.Вывести(ОбластьПустаяСтрока);
			Иначе
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьВыводаТовара);
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Итог = "Всего на сумму " + ЧислоПрописью(Итог, ВыборкаШапки.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЕсли;

	
КонецПроцедуры
Процедура Печать_Деффектовку_Новый(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("ДефектацияНовый");
	
	// Определим области
	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьРабота			= Макет.ПолучитьОбласть("СтрокиРабота");
	ОбластьРаботаШапка		= Макет.ПолучитьОбласть("ШапкаРабота");
	ОбластьЗапчастиШапка    = Макет.ПолучитьОбласть("ШапкаЗапчасти");
	ОбластьЗапчасти			= Макет.ПолучитьОбласть("СтрокиЗапчасти");
	ОбластьИтогоТовар		= Макет.ПолучитьОбласть("ИтогоПоТовару");
	ОбластьВсегоРаботы      = Макет.ПолучитьОбласть("ВсегоРаботы");
	ОбластьВсегоЗапчасти    = Макет.ПолучитьОбласть("ВсегоМатериалы");
	ОбластьКомментарий		= Макет.ПолучитьОбласть("КомментарийПоТовару");
	ОбластьИтогоДефектация	= Макет.ПолучитьОбласть("ИтогоПоДефектации");
	ОбластьИтогоНДС 		= Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьВсегоНаСумму		= Макет.ПолучитьОбласть("ВсегоНаСумму");
	ОбластьПодвал	 		= Макет.ПолучитьОбласть("Подвал");
	
	// Запрос
	
	Запрос 	= Новый Запрос("
	
	// Шапка
	
	|ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Дата,
	|	Док.Контрагент,
	|	Док.СуммаВключаетНДС,
	|	Док.УчитыватьНДС,
	|	Док.Услуга,
	|	Док.Валюта.ПараметрыПрописиНаРусском КАК ПараметрыПрописиНаРусском
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// Товары
	
	|ВЫБРАТЬ
	|	НомерСтроки КАК Номер,
	|	Номенклатура,
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.Производитель КАК Производитель,
	|	Комментарий,
	|	СуммаНДС,
	|	Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Товары КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;

	// работы
	
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.Артикул КАК Артикул,
	|	ИндексСтрокиНоменклатуры,
	|	Количество,
	|	Цена,
	|	Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Работы КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	
	// Запчасти
	
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.Артикул КАК Артикул,
	|	ИндексСтрокиНоменклатуры,
	|	Количество,
	|	Цена,
	|	Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Запчасти КАК Док
	|ГДЕ
	|	Ссылка = &Ссылка
	|");
	
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаШапки 		= Пакет[0].Выбрать();
	ВыборкаТоваров 		= Пакет[1].Выбрать();
	ТаблицаРабот 		= Пакет[2].Выгрузить();
	ТаблицаЗапчастей 	= Пакет[3].Выгрузить();
	
	Итог = 0;
	
	// Шапка
	
	Если ВыборкаШапки.Следующий() Тогда
	
		ОбластьШапка.Параметры.Заполнить(ВыборкаШапки);
		ТабДок.Вывести(ОбластьШапка);
		
		СуммаНДС 	= 0;
		Сумма		= 0;
		СуммаВсего	= 0;
		ИтогоСуммаРаботы = 0;
		ИтогоСуммаЗапчасти = 0;

		СтавкаНДС = ВыборкаШапки.Услуга.СтавкаНДС;
		
		ИндТов = 0;
		СчетчикТовара = 1;
		Пока ВыборкаТоваров.Следующий() Цикл
			
			// Заполним 
			
			ОбластьШапкаТаблицы.Параметры.Заполнить(ВыборкаТоваров);
			ОбластьШапкаТаблицы.Параметры.СчетчикТовара = СчетчикТовара;
			ТабДок.Вывести(ОбластьШапкаТаблицы);
				
			СуммаНДС 	= СуммаНДС + ВыборкаТоваров.СуммаНДС;
			Сумма		= Сумма + ВыборкаТоваров.Сумма;
			СуммаВсего 	= СуммаВсего + ВыборкаТоваров.Сумма + ?(ВыборкаШапки.СуммаВключаетНДС, 0, ВыборкаТоваров.СуммаНДС);
			
			СтрокиРабот 	= ТаблицаРабот.НайтиСтроки(Новый Структура("ИндексСтрокиНоменклатуры", ИндТов));
			СтрокиЗапчастей = ТаблицаЗапчастей.НайтиСтроки(Новый Структура("ИндексСтрокиНоменклатуры", ИндТов));
			
			КолРабот 		= СтрокиРабот.Количество();
			КолЗапчастей 	= СтрокиЗапчастей.Количество();
			
			СуммаРабот 		= 0;
			СуммаЗапчастей 	= 0;

			Если КолРабот <> 0 Тогда  // Выводим необходимые работы
				ТабДок.Вывести(ОбластьРаботаШапка);
				Для Каждого ЭлементРабот из СтрокиРабот Цикл
					
				ОбластьРабота.Параметры.Заполнить(ЭлементРабот);
				ТабДок.Вывести(ОбластьРабота);
				
				СуммаРабот = СуммаРабот + ЭлементРабот.Сумма;
				ИтогоСуммаРаботы = ИтогоСуммаРаботы + ЭлементРабот.Сумма;
				КонецЦикла;
			КонецЕсли;
			
			Если СуммаРабот <> 0 Тогда
				ОбластьВсегоРаботы.Параметры.ВсегоРаботы = СуммаРабот;
				ТабДок.Вывести(ОбластьВсегоРаботы);	
			КонецЕсли;	
			
			
			Если КолЗапчастей <> 0 Тогда // Выводим необходимые запчасти и материалы
				ТабДок.Вывести(ОбластьЗапчастиШапка);
				Для Каждого ЭлементЗапчастей из СтрокиЗапчастей Цикл
					
				ОбластьЗапчасти.Параметры.Заполнить(ЭлементЗапчастей);
				ТабДок.Вывести(ОбластьЗапчасти);	
				
				СуммаЗапчастей = СуммаЗапчастей + ЭлементЗапчастей.Сумма;
				ИтогоСуммаЗапчасти = ИтогоСуммаЗапчасти + ЭлементЗапчастей.Сумма;
				КонецЦикла;
			КонецЕсли;
			
			Если СуммаЗапчастей <> 0 Тогда
				ОбластьВсегоЗапчасти.Параметры.ВсегоМатериалы = СуммаЗапчастей;
				ТабДок.Вывести(ОбластьВсегоЗапчасти);	
			КонецЕсли;
			
			ОбластьИтогоТовар.Параметры.ИтогоПоТовару = ВыборкаТоваров.Сумма;
			ТабДок.Вывести(ОбластьИтогоТовар);
			ОбластьКомментарий.Параметры.Комментарий  = СокрЛП(ВыборкаТоваров.Комментарий);
			ТабДок.Вывести(ОбластьКомментарий);
			
			ИндТов = ИндТов + 1;
			СчетчикТовара = СчетчикТовара + 1;
		КонецЦикла;
		
		
		// Подвал
		
		ОбластьИтогоДефектация.Параметры.ВсегоПоРаботам = ИтогоСуммаРаботы;
		ОбластьИтогоДефектация.Параметры.ВсегоПоЗапчастям = ИтогоСуммаЗапчасти;
		ОбластьИтогоДефектация.Параметры.Всего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтогоДефектация);
		
		Если ВыборкаШапки.УчитыватьНДС Тогда
			ОбластьИтогоНДС.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, ВыборкаШапки.СуммаВключаетНДС);
		Иначе
			ОбластьИтогоНДС.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		ОбластьИтогоНДС.Параметры.ВсегоНДС 	= СуммаНДС;
		ТабДок.Вывести(ОбластьИтогоНДС);
		 		
		ОбластьВсегоНаСумму.Параметры.ВсегоКОплате = СуммаВсего;
		ТабДок.Вывести(ОбластьВсегоНаСумму);
	 		
		ОбластьПодвал.Параметры.СуммаПрописью 	= ЧислоПрописью(СуммаВсего, "Л = ru_RU; ДП = Ложь", ВыборкаШапки.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЕсли;
КонецПроцедуры
Процедура Печать_ЗаказНарядВыездной(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("Выездной");
	ТабДок.Вывести(Макет);
	
КонецПроцедуры

Функция ПолучитьФИО(СтрокаФИО)
	
		
	ПолноеИмя=Строка(СтрокаФИО);
    
    ПолноеИмя=СокрЛП(ПолноеИмя);
    
    ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
    
    Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
    Фамилия=СокрЛП(Фамилия);
	ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
    ИмяОтчество = СокрЛП(ИмяОтчество);
    ПозицияТочки=Найти(ИмяОтчество,".");
    Если ПозицияТочки>0 Тогда //если введены инициалы
        Имя=Сред(ИмяОтчество,1,ПозицияТочки);
        Отчество=Сред(ИмяОтчество,ПозицияТочки+1);
        Отчество=СокрЛ(Отчество);
    Иначе
        ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
        Имя = Сред(ИмяОтчество,1, ПозицияВторогоПробела-1);
        Имя=СокрЛП(Имя);
        Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
        Отчество = СокрЛП(Отчество);
    КонецЕсли;
	
	ФИО = Новый Структура("Фамилия, Имя, Отчество", Фамилия, Имя, Отчество);

	Возврат ФИО;
	
КонецФункции

Процедура Печать_Счет(ТабДок, Ссылка, ПечатьОрг = "") Экспорт
	
	Запрос 	= Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Рем.Номер, Док.Номер) Номер,
	|	ЕСТЬNULL(Зад.Дата, ДатаВремя(1,1,1,0,0,0)) 		Дата,
	|	Док.Организация									Организация,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	//|	Выбор КОГДА Док.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	//|		ЕСТЬNULL(Контр.Ссылка, Док.Контрагент)
	//|	ИНАЧЕ
	//|		Док.Контрагент
	//|	КОНЕЦ 											Заказчик,
	|		Док.Контрагент  Заказчик,
	
	//|	ВЫБОР КОГДА Док.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//|	      ТОГДА Док.Организация
	//|	      ИНАЧЕ Док.Грузоотправитель КОНЕЦ 			Грузоотправитель,
	//|	ВЫБОР КОГДА Док.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//|	      ТОГДА Док.Контрагент
	//|	      ИНАЧЕ Док.Грузополучатель КОНЕЦ 			Грузополучатель,
	|	ВЫБОР КОГДА БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ТОГДА
	|		&БанковскийСчетПоУмолчанию
	|	ИНАЧЕ
	|		БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчет,
	|	БанковскийСчетОрганизации.ТекстКорреспондента           КАК БанковскийСчетТекстКорреспондента,
	|	Док.ДоверенноеЛицо,
	|	Док.Сумма,
	|	Док.Услуга,
	|	Док.Валюта.ПараметрыПрописиНаРусском 			ПараметрыПрописиНаРусском,
	|	Док.СуммаВключаетНДС,
	|	Док.УчитыватьНДС,
	|	Док.Ответственный,
	|	Док.Товары.(
	|		Выработка,
	|       ЦенаЗаЧас,
	|		Сумма,
	|		СтавкаНДС,	
	|		СуммаНДС,
	|		Гарантия
	|	),
	|	Док.Работы.(
	|		Количество,
	|		Цена,
	|		Сумма
	|	),
	|	Док.Запчасти.(
	|		Номенклатура Товар,
	|		Номенклатура.ЕдиницаИзмерения				ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БизнесПроцесс.РемонтИнструмента Рем
	|	По
	|		Док.Ссылка = Рем.ЗаказНаряд
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	
	|		(ВЫБРАТЬ БизнесПроцесс, Дата ИЗ Задача.ЗадачаПользователю
	|			ГДЕ
	|				ТочкаМаршрута = &ПредупредитьКлиента И
	|				Выполнена
	|		) Зад ПО
	|				Зад.БизнесПроцесс = Рем.Ссылка
	|	
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|		Зап.Номенклатура Товар,
	|	    Зап.Номенклатура.ЕдиницаИзмерения ЕдиницаИзмерения,
	|		Зап.Цена,
	|		Тов.СтавкаНДС,
	|		СУММА(Зап.Количество)	Количество,
	|		СУММА(Зап.Сумма)		Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Товары Тов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаказНаряд.Запчасти Зап
	|	ПО
	|	(Тов.НомерСтроки-1) = Зап.ИндексСтрокиНоменклатуры 
	|	ГДЕ Тов.Ссылка = &Ссылка И Зап.Ссылка = &Ссылка И НЕ Тов.Гарантия
	|	СГРУППИРОВАТЬ ПО Зап.Номенклатура, Тов.СтавкаНДС, Зап.Цена
	|");
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("Контрагент", Ссылка.Контрагент);
	Запрос.Параметры.Вставить("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.Параметры.Вставить("ПредупредитьКлиента", БизнесПроцессы.РемонтИнструмента.ТочкиМаршрута.ПредупредитьКлиента);
	Запрос.УстановитьПараметр("БанковскийСчетПоУмолчанию", Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(Ссылка.Организация));

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[0].Выбрать();
	
	// макет
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("Счет");
	
	// области
	
	ОбластьЗаголовокСчета 	= Макет.ПолучитьОбласть("ЗаголовокСчета");
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьПоставщик 		= Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель 		= Макет.ПолучитьОбласть("Покупатель");
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС 		= Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьВсегоКОплате 	= Макет.ПолучитьОбласть("ВсегоКОплате");
	ОбластьСуммаПрописью 	= Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодвалСчета 		= Макет.ПолучитьОбласть("ПодвалСчета"+ПечатьОрг);
	
	//Выборка = ПолучитьПараметрыПечати(Ссылка);
	
	Если Выборка.Следующий() Тогда
		
		// Заголовок счета
		
		Если НЕ ЗначениеЗаполнено(Выборка.Дата) Тогда
			Сообщить("Дата документа не может быть получена, т.к. задача ""Предупредить клиента"" не выполнена");
		КонецЕсли;
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
 		ОбластьЗаголовокСчета.Параметры.ИНН 									= СведенияОПоставщике.ИНН;
		ОбластьЗаголовокСчета.Параметры.КПП 									= СведенияОПоставщике.КПП;
		
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		Если ЗначениеЗаполнено(Выборка.БанковскийСчет) Тогда
			
			Банк = ?(ЗначениеЗаполнено(Выборка.БанковскийСчет.БанкДляРасчетов),
				Выборка.БанковскийСчет.БанкДляРасчетов,
				Выборка.БанковскийСчет.Банк
			);
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ?(ЗначениеЗаполнено(Выборка.БанковскийСчет.БанкДляРасчетов),
				Выборка.БанковскийСчет.Банк.КоррСчет,
				Выборка.БанковскийСчет.НомерСчета
			);
			
			ОбластьЗаголовокСчета.Параметры.БИКБанкаПолучателя               = БИК;
			ОбластьЗаголовокСчета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) + " " + ГородБанка;
			ОбластьЗаголовокСчета.Параметры.СчетБанкаПолучателяПредставление = КоррСчет;
			ОбластьЗаголовокСчета.Параметры.СчетПолучателяПредставление      = НомерСчета;
			ПредставлениеПоставщикаДляПлатПоручения                 		 = Выборка.БанковскийСчетТекстКорреспондента;
			
		КонецЕсли;
		
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		
		ОбластьЗаголовокСчета.Параметры.ПредставлениеПоставщикаДляПлатПоручения = ПредставлениеПоставщикаДляПлатПоручения;
		
		ТабДок.Вывести(ОбластьЗаголовокСчета);
				            
		// Заголовок        
		Номер   = СокрЛП(Выборка.Номер);
		Пока Лев(Номер, 1)="0" Цикл     // удаление ведущих нулей
			Номер = Сред(Номер, 2);
		КонецЦикла;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Счет на оплату № " + Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьПоставщик.Параметры.ТекстПоставщик = "Поставщик:";
		ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабДок.Вывести(ОбластьПоставщик);
		
		//ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
		//ОбластьМакета.Параметры.Грузоотправитель	=  ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузоотправитель, Выборка.Дата), "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");
		//ТабДок.Вывести(ОбластьМакета);
		
		//ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
		//ОбластьМакета.Параметры.Грузополучатель		= ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузополучатель, Выборка.Дата), "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");	
		//ТабДок.Вывести(ОбластьМакета);
		
		ОбластьПокупатель.Параметры.ТекстПокупатель = "Покупатель:";
		ОбластьПокупатель.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Заказчик, Выборка.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабДок.Вывести(ОбластьПокупатель);
				
		ТабДок.Вывести(ОбластьШапкаТаблицы);
	
		// ИТОГОВЫЕ СУММЫ
		
		СуммаНДС 	= 0;
		Сумма		= 0;
		СуммаВсего	= 0;
		
		СтавкаНДС = Выборка.Услуга.СтавкаНДС;
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			Если Не ВыборкаТовары.Гарантия Тогда
				
				СтавкаНДС = ВыборкаТовары.СтавкаНДС;

				СуммаНДС 	= СуммаНДС + ВыборкаТовары.СуммаНДС;
				Сумма		= Сумма + ВыборкаТовары.Сумма;
				СуммаВсего 	= СуммаВсего + ВыборкаТовары.Сумма + ?(Выборка.СуммаВключаетНДС, 0, ВыборкаТовары.СуммаНДС);
			КонецЕсли;
			
			Часов = ВыборкаТовары.Выработка;
			
		КонецЦикла;

		
		// ЗАПЧАСТИ
		
		ВыборкаЗапчасти = РезультатЗапроса[1].Выбрать();
		НомерСтроки = 0;
		СуммаЗапчасти = 0;
		СуммаНДСЗапчасти = 0;
		СуммаВсегоЗапчасти = 0;
		
		Пока ВыборкаЗапчасти.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаЗапчасти);
			
			ЧислоСтавкиНДС = КэшируемыеФункции.ПолучитьЧислоСтавкиНДС(ВыборкаЗапчасти.СтавкаНДС);
   						
			Если Выборка.СуммаВключаетНДС Тогда	
				ТекСуммаНДС = ЧислоСтавкиНДС * ВыборкаЗапчасти.Сумма / (ЧислоСтавкиНДС + 100);
 			Иначе
				ТекСуммаНДС = ЧислоСтавкиНДС * ВыборкаЗапчасти.Сумма / 100;
			КонецЕсли;	
			
			СуммаЗапчасти	 	= СуммаЗапчасти + ВыборкаЗапчасти.Сумма;
			СуммаНДСЗапчасти 	= СуммаНДСЗапчасти + ТекСуммаНДС;
			СуммаВсегоЗапчасти 	= СуммаВсегоЗапчасти + ВыборкаЗапчасти.Сумма + ?(Выборка.СуммаВключаетНДС, 0, ТекСуммаНДС);
			
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		// УСЛУГА
		
		Если СуммаВсего - СуммаВсегоЗапчасти > 0 Тогда
			
			Строка = ОбластьСтрока.Параметры;
			Строка.НомерСтроки 		= НомерСтроки + 1;
		
			Услуга = Выборка.Услуга;
			Строка.Товар = ?(ПустаяСтрока(Услуга.НаименованиеПолное), Услуга.Наименование, Услуга.НаименованиеПолное);
		
			Строка.Количество 		= 1;
			Строка.ЕдиницаИзмерения = "усл.";
			Строка.Цена 			= Сумма - СуммаЗапчасти;
			Строка.Сумма 			= СуммаВсего - СуммаВсегоЗапчасти;
		
			ТабДок.Вывести(ОбластьСтрока);
		КонецЕсли;
		
		// Итоги
		
		ОбластьИтого.Параметры.Всего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтого);
		
		Если Выборка.УчитыватьНДС Тогда
		
			ОбластьИтогоНДС.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, Выборка.СуммаВключаетНДС);
			
		Иначе
			ОбластьИтогоНДС.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		
		//ОбластьИтогоНДС.Параметры.НДС 		= ?(Выборка.СуммаВключаетНДС, " в том числе НДС:", "НДС:");
		ОбластьИтогоНДС.Параметры.ВсегоНДС 	= СуммаНДС;
		ТабДок.Вывести(ОбластьИтогоНДС);
		
		ОбластьВсегоКОплате.Параметры.ВсегоКОплате = СуммаВсего; // пока так
		ТабДок.Вывести(ОбластьВсегоКОплате);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего по заказ наряду № " + Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ОбластьСуммаПрописью.Параметры.СуммаПрописью 	= ЧислоПрописью(СуммаВсего, "Л = ru_RU; ДП = Ложь", Выборка.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьСуммаПрописью);
				
		// Подвал счета
		
		ОбластьПодвалСчета.Параметры.ДолжностьРуководителя = "Ген. директор";
		
		ОбластьПодвалСчета.Параметры.ФИОРуководителя = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Руководитель);
		ОбластьПодвалСчета.Параметры.ФИОБухгалтера   = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.ГлавныйБухгалтер);
		
		//ОбластьПодвалСчета.Параметры.ФИОРуководителя = "Кукушкина О.В.";
		//ОбластьПодвалСчета.Параметры.ФИОБухгалтера = "Крисько И.А.";
		
		ФИО = ПолучитьФИО(Выборка.Ответственный);
		ОбластьПодвалСчета.Параметры.ФИООтветственный = ФИО.Фамилия + " " + Лев(ФИО.Имя, 1) + "." + Лев(ФИО.Отчество, 1) + ".";
		ТабДок.Вывести(ОбластьПодвалСчета);

	КонецЕсли;

КонецПроцедуры
Процедура Печать_Счет_Новый(ТабДок, Ссылка, ПечатьОрг = "") Экспорт
	
	Запрос 	= Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Рем.Номер, Док.Номер) Номер,
	|	ЕСТЬNULL(Зад.Дата, ДатаВремя(1,1,1,0,0,0)) 		Дата,
	|	Док.Организация									Организация,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|		Док.Контрагент  Заказчик,
	|	ВЫБОР КОГДА БанковскийСчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ТОГДА
	|		&БанковскийСчетПоУмолчанию
	|	ИНАЧЕ
	|		БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчет,
	|	БанковскийСчетОрганизации.ТекстКорреспондента           КАК БанковскийСчетТекстКорреспондента,
	|	Док.ДоверенноеЛицо,
	|	Док.Номер КАК НомерЗаказНаряда,
	|	Док.Дата КАК ДатаЗаказНаряда,
	|	Док.Сумма,
	|	Док.Услуга,
	|	Док.Валюта.ПараметрыПрописиНаРусском 			ПараметрыПрописиНаРусском,
	|	Док.СуммаВключаетНДС,
	|	Док.УчитыватьНДС,
	|	Док.Ответственный,
	|	Док.Товары.(
	|		Выработка,
	|       ЦенаЗаЧас,
	|		Сумма,
	|		СтавкаНДС,	
	|		СуммаНДС,
	|		Гарантия
	|	),
	|	Док.Работы.(
	|       Номенклатура Работа,
	|		Номенклатура.Артикул КАК РаботаАртикул,
	|		Количество,
	|		Цена,
	|		Сумма
	|	),
	|	Док.Запчасти.(
	|		Номенклатура Товар,
	|		Номенклатура.Артикул КАК ЗапчастиАртикул,
	|		Номенклатура.ЕдиницаИзмерения				ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ЗаказНаряд КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БизнесПроцесс.РемонтИнструмента Рем
	|	По
	|		Док.Ссылка = Рем.ЗаказНаряд
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	
	|		(ВЫБРАТЬ БизнесПроцесс, Дата ИЗ Задача.ЗадачаПользователю
	|			ГДЕ
	|				ТочкаМаршрута = &ПредупредитьКлиента И
	|				Выполнена
	|		) Зад ПО
	|				Зад.БизнесПроцесс = Рем.Ссылка
	|	
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|		Зап.Номенклатура Товар,
	|	    Зап.Номенклатура.ЕдиницаИзмерения ЕдиницаИзмерения,
	|		Зап.Цена,
	|		Тов.СтавкаНДС,
	|		СУММА(Зап.Количество)	Количество,
	|		СУММА(Зап.Сумма)		Сумма
	|ИЗ
	|	Документ.ЗаказНаряд.Товары Тов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаказНаряд.Запчасти Зап
	|	ПО
	|	(Тов.НомерСтроки-1) = Зап.ИндексСтрокиНоменклатуры 
	|	ГДЕ Тов.Ссылка = &Ссылка И Зап.Ссылка = &Ссылка И НЕ Тов.Гарантия
	|	СГРУППИРОВАТЬ ПО Зап.Номенклатура, Тов.СтавкаНДС, Зап.Цена
	|");

	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("Контрагент", Ссылка.Контрагент);
	Запрос.Параметры.Вставить("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.Параметры.Вставить("ПредупредитьКлиента", БизнесПроцессы.РемонтИнструмента.ТочкиМаршрута.ПредупредитьКлиента);
	Запрос.УстановитьПараметр("БанковскийСчетПоУмолчанию", Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(Ссылка.Организация));

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[0].Выбрать();
	
	// макет
	
	Макет = Документы.ЗаказНаряд.ПолучитьМакет("СчетНовый");
	
	// области
	
	ОбластьЗаголовокСчета 		= Макет.ПолучитьОбласть("ЗаголовокСчета");
	ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
	ОбластьПоставщик 			= Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель 			= Макет.ПолучитьОбласть("Покупатель");
	ОбластьШапкаТаблицыРаботы 	= Макет.ПолучитьОбласть("ШапкаТаблицыРаботы");
	ОбластьСтрокаРаботы 		= Макет.ПолучитьОбласть("СтрокаРаботы");
	ОбластьИтогоРаботы 			= Макет.ПолучитьОбласть("ИтогоПоРаботам");
	ОбластьШапкаТаблицыЗапчасти	= Макет.ПолучитьОбласть("ШапкаТаблицыЗапчасти");
	ОбластьСтрокаЗапчасти 		= Макет.ПолучитьОбласть("СтрокаЗапчасти");
	ОбластьИтогоЗапчасти		= Макет.ПолучитьОбласть("ИтогоПоЗапчастям");
	ОбластьИтогоПоСчету 		= Макет.ПолучитьОбласть("ИтогоПоСчету");
	ОбластьИтогоНДС 			= Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьВсегоКОплате 		= Макет.ПолучитьОбласть("ВсегоКОплате");
	ОбластьСуммаПрописью 		= Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодвалСчета 			= Макет.ПолучитьОбласть("ПодвалСчета"+ПечатьОрг);
	
	Если Выборка.Следующий() Тогда
		
		
		// Заголовок счета
		
		Если НЕ ЗначениеЗаполнено(Выборка.Дата) Тогда
			Сообщить("Дата документа не может быть получена, т.к. задача ""Предупредить клиента"" не выполнена");
		КонецЕсли;
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
 		ОбластьЗаголовокСчета.Параметры.ИНН 									= СведенияОПоставщике.ИНН;
		ОбластьЗаголовокСчета.Параметры.КПП 									= СведенияОПоставщике.КПП;
		
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		Если ЗначениеЗаполнено(Выборка.БанковскийСчет) Тогда
			
			Банк = ?(ЗначениеЗаполнено(Выборка.БанковскийСчет.БанкДляРасчетов),
				Выборка.БанковскийСчет.БанкДляРасчетов,
				Выборка.БанковскийСчет.Банк
			);
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ?(ЗначениеЗаполнено(Выборка.БанковскийСчет.БанкДляРасчетов),
				Выборка.БанковскийСчет.Банк.КоррСчет,
				Выборка.БанковскийСчет.НомерСчета
			);
			
			ОбластьЗаголовокСчета.Параметры.БИКБанкаПолучателя               = БИК;
			ОбластьЗаголовокСчета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) + " " + ГородБанка;
			ОбластьЗаголовокСчета.Параметры.СчетБанкаПолучателяПредставление = КоррСчет;
			ОбластьЗаголовокСчета.Параметры.СчетПолучателяПредставление      = НомерСчета;
			ПредставлениеПоставщикаДляПлатПоручения                 		 = Выборка.БанковскийСчетТекстКорреспондента;
			
		КонецЕсли;
		
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		
		ОбластьЗаголовокСчета.Параметры.ПредставлениеПоставщикаДляПлатПоручения = ПредставлениеПоставщикаДляПлатПоручения;
		
		ТабДок.Вывести(ОбластьЗаголовокСчета);
		
		
		// Заголовок  
		
		Номер   = СокрЛП(Выборка.Номер);
		Пока Лев(Номер, 1)="0" Цикл     // удаление ведущих нулей
			Номер = Сред(Номер, 2);
		КонецЦикла;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Счет на оплату № " + Номер + " от " + Формат(Выборка.Дата, "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.ПоДокументу = "по заказу-наряду №" + Выборка.НомерЗаказНаряда + " от " + Формат(Выборка.ДатаЗаказНаряда, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьПоставщик.Параметры.ТекстПоставщик = "Поставщик:";
		ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабДок.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель.Параметры.ТекстПокупатель = "Покупатель:";
		ОбластьПокупатель.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Заказчик, Выборка.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабДок.Вывести(ОбластьПокупатель);
				
		
		// Товары
		
		СуммаНДС 	= 0;
		Сумма		= 0;
		СуммаВсего	= 0;
		
		СуммаРаботы = 0;
		СуммаЗапчасти = 0;
		
		СтавкаНДС = Выборка.Услуга.СтавкаНДС;
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			СуммаНДС 	= СуммаНДС + ВыборкаТовары.СуммаНДС;
			Сумма		= Сумма + ВыборкаТовары.Сумма;
			СуммаВсего 	= СуммаВсего + ВыборкаТовары.Сумма + ?(Выборка.СуммаВключаетНДС, 0, ВыборкаТовары.СуммаНДС);
			
		КонецЦикла;
		
		
		// Работы
		
		НомерСтрокиРаботы = 1;
		ВыборкаРаботы = Выборка.Работы.Выбрать();
		Если ВыборкаРаботы.Количество() <> 0 Тогда // Есть работы
			
			ТабДок.Вывести(ОбластьШапкаТаблицыРаботы);

			Пока ВыборкаРаботы.Следующий() Цикл
				
				Строка 					= ОбластьСтрокаРаботы.Параметры;
				Строка.НомерСтроки 		= НомерСтрокиРаботы;
				Строка.Товар			= ВыборкаРаботы.Работа;
				Строка.Артикул			= ВыборкаРаботы.РаботаАртикул;
				Строка.НормоЧас			= ВыборкаРаботы.Количество;
				Строка.Количество 		= 1;
				Строка.Цена 			= ВыборкаРаботы.Сумма;
				Строка.Сумма 			= ВыборкаРаботы.Сумма;
				
				ТабДок.Вывести(ОбластьСтрокаРаботы);
				
				СуммаРаботы = СуммаРаботы + ВыборкаРаботы.Сумма;
				НомерСтрокиРаботы = НомерСтрокиРаботы + 1;
			КонецЦикла;	
			
			// Итого по работам
			
			ОбластьИтогоРаботы.Параметры.ВсегоПоРаботам = СуммаРаботы;
			ТабДок.Вывести(ОбластьИтогоРаботы);
		КонецЕсли;
	
		
		// Запчасти
		
		НомерСтрокиЗапчасти = 1;
		ВыборкаЗапчасти = Выборка.Запчасти.Выбрать();
		Если ВыборкаЗапчасти.Количество() <> 0 Тогда // Есть запчасти
			
			ТабДок.Вывести(ОбластьШапкаТаблицыЗапчасти);
			
			Пока ВыборкаЗапчасти.Следующий() Цикл
				
				Строка 					= ОбластьСтрокаЗапчасти.Параметры;
				Строка.НомерСтроки 		= НомерСтрокиЗапчасти;
				Строка.Товар			= ВыборкаЗапчасти.Товар;
				Строка.Артикул			= ВыборкаЗапчасти.ЗапчастиАртикул;
				Строка.Количество 		= ВыборкаЗапчасти.Количество;
				Строка.Цена 			= ВыборкаЗапчасти.Цена;
				Строка.Сумма 			= ВыборкаЗапчасти.Сумма;
				
				ТабДок.Вывести(ОбластьСтрокаЗапчасти);
				
				СуммаЗапчасти = СуммаЗапчасти + ВыборкаЗапчасти.Сумма;
				НомерСтрокиЗапчасти = НомерСтрокиЗапчасти + 1;
			КонецЦикла;
			
			// Итого по запчастям
			
			ОбластьИтогоЗапчасти.Параметры.ВсегоПоЗапчастям = СуммаЗапчасти;
			ТабДок.Вывести(ОбластьИтогоЗапчасти);
		КонецЕсли;	
		
		
		// Итоги
		
		ОбластьИтогоПоСчету.Параметры.ВсегоПоРаботам = СуммаРаботы;
		ОбластьИтогоПоСчету.Параметры.ВсегоПоЗапчастям = СуммаЗапчасти;
		ОбластьИтогоПоСчету.Параметры.Всего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтогоПоСчету);
		
		Если Выборка.УчитыватьНДС Тогда
			ОбластьИтогоНДС.Параметры.НДС = ФормированиеПечатныхФорм.ТекстНДСПоСтавке(СтавкаНДС, Выборка.СуммаВключаетНДС);
		Иначе
			ОбластьИтогоНДС.Параметры.НДС = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		ОбластьИтогоНДС.Параметры.ВсегоНДС 	= СуммаНДС;
		ТабДок.Вывести(ОбластьИтогоНДС);
		 		
		ОбластьВсегоКОплате.Параметры.ВсегоКОплате = СуммаВсего; // пока так
		ТабДок.Вывести(ОбластьВсегоКОплате);
			
		ОбластьСуммаПрописью.Параметры.СуммаПрописью 	= ЧислоПрописью(СуммаВсего, "Л = ru_RU; ДП = Ложь", Выборка.ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьСуммаПрописью);
				
		// Подвал счета
		
		ОбластьПодвалСчета.Параметры.ДолжностьРуководителя = "Ген. директор";
		
		ОбластьПодвалСчета.Параметры.ФИОРуководителя = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.Руководитель);
		ОбластьПодвалСчета.Параметры.ФИОБухгалтера   = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(Выборка.ГлавныйБухгалтер);
		
		//ОбластьПодвалСчета.Параметры.ФИОРуководителя = "Кукушкина О.В.";
		//ОбластьПодвалСчета.Параметры.ФИОБухгалтера = "Крисько И.А.";
		
		ФИО = ПолучитьФИО(Выборка.Ответственный);
		ОбластьПодвалСчета.Параметры.ФИООтветственный = ФИО.Фамилия + " " + Лев(ФИО.Имя, 1) + "." + Лев(ФИО.Отчество, 1) + ".";
		
		//Хардкодим подписи Перевезенцева и Савина
		Если (ПечатьОрг="1" ИЛИ ПечатьОрг="2") И ОбластьПодвалСчета.Параметры.ФИООтветственный = "Перевезенцев О.Е." Тогда ОбластьПодвалСчета.Рисунки.D4.Картинка = БиблиотекаКартинок.ПодписьПеревезенцев;
		ИначеЕсли (ПечатьОрг="1" ИЛИ ПечатьОрг="2") И ОбластьПодвалСчета.Параметры.ФИООтветственный = "Савин А.А." Тогда ОбластьПодвалСчета.Рисунки.D4.Картинка = БиблиотекаКартинок.ПодписьСавин;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьПодвалСчета);

	КонецЕсли;

КонецПроцедуры




Функция БизнесПроцесс(ЗаказСсылка) Экспорт
	
	// Возвращает ссылку на текущий БП
	
	Запрос = Новый Запрос("ВЫБРАТЬ Первые 1 Ссылка ИЗ БизнесПроцесс.РемонтИнструмента ГДЕ ЗаказНаряд = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ЗаказСсылка);
	
	Выполнение = Запрос.Выполнить();
	Если Выполнение.Пустой() Тогда
		
		Возврат БизнесПроцессы.РемонтИнструмента.ПустаяСсылка();
		
	Иначе
		
		Выборка = Выполнение.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
    	
КонецФункции
