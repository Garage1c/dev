&НаКлиенте
Перем СтруктураКолонокТовары Экспорт;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары,,, "Заказы",,,);
КонецПроцедуры

&НаКлиенте
Процедура ОбщиеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
КонецПроцедуры

#Область Информация // о товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Товары", "Объект.Товары");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Товары", "Объект.Товары");
КонецПроцедуры

#КонецОбласти


&НаСервере
Процедура ЗаполнитьПоСкладуНаСервере(ВыбСклад)
	
	Запрос = Новый Запрос(СтрШаблон("
	
	// Вытащим сборки
	
	|ВЫБРАТЬ 	Заказ, Номенклатура, ЕСТЬNULL(СкладЯчейка.Владелец, СкладЯчейка) Размещение
	|ПОМЕСТИТЬ 	ТаблСборок
	|ИЗ			РегистрНакопления.СборкаЗаказа.Остатки(%1,);
	
	// Вытащим резервы по старому алгоритму
	
	|ВЫБРАТЬ 	ДокументРезерва Заказ, Номенклатура, Размещение
	|ПОМЕСТИТЬ 	ТаблСтРезерв
	|ИЗ			РегистрНакопления.ТоварыВРезерве.Остатки(%1, Размещение = &Склад И НЕ ДокументРезерва.СпособРазмещенияБезЗаказа);
	
	// Вытащим резервы для снятия
	
	|ВЫБРАТЬ Заказчик, Заказ, ДатаЗаказа, Номенклатура, Цена, Упаковка, Размещение, ПроцентРучнойСкидки, ПроцентАвтоматическойСкидки, СтавкаНДС, Акция, Количество, Сумма
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|(
	|	ВЫБРАТЬ 	null Заказчик, ЗаказПокупателя Заказ, ЗаказПокупателя.Дата ДатаЗаказа, Номенклатура, Цена, Упаковка, Размещение, ПроцентРучнойСкидки, ПроцентАвтоматическойСкидки, СтавкаНДС, Акция, КоличествоОстаток Количество, СуммаОстаток Сумма
	|	ИЗ 		РегистрНакопления.ЗаказыПокупателей.Остатки(%1,Размещение = &Склад И НЕ ЗаказПокупателя.СпособРазмещенияБезЗаказа)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ 	null, ИнтернетЗаказ, ИнтернетЗаказ.Дата, Номенклатура, Цена, Упаковка, Размещение, ПроцентРучнойСкидки, ПроцентАвтоматическойСкидки, СтавкаНДС, Акция, КоличествоОстаток Количество, СуммаОстаток Сумма
	|	ИЗ 		РегистрНакопления.ИнтернетЗаказПокупателя.Остатки(%1,Размещение = &Склад И НЕ ИнтернетЗаказ.СпособРазмещенияБезЗаказа)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ 	Заказчик, ВнутреннийЗаказ, ВнутреннийЗаказ.Дата, Номенклатура, 0, Упаковка, Размещение, null, null, null, null, КоличествоОстаток, null
	|	ИЗ 		РегистрНакопления.ВнутренниеЗаказы.Остатки(%1,Размещение = &Склад И НЕ ВнутреннийЗаказ.СпособРазмещенияБезЗаказа)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ null, ДокументРезерва, ДокументРезерва.Дата, Номенклатура, null, null, Размещение, null, null, null, null, КоличествоОстаток, null
	|	ИЗ 		РегистрНакопления.ТоварыВРезерве.Остатки(%1, Размещение = &Склад И (ДокументРезерва.СпособРазмещенияБезЗаказа ИЛИ ДокументРезерва ССЫЛКА Документ.ЗаказНаряд))
	|) Запрос;
	
	// Теперь вытащим все что без упоминания сборок и где есть резерв
	
	|ВЫБРАТЬ * ИЗ Таблица Таб
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 	ТаблСборок Сбор
	|ПО					Таб.Заказ = Сбор.Заказ И Таб.Номенклатура = Сбор.Номенклатура И Таб.Размещение = Сбор.Размещение
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 	ТаблСтРезерв Рез
	|ПО					Таб.Заказ = Рез.Заказ И Таб.Номенклатура = Рез.Номенклатура И Таб.Размещение = Рез.Размещение
	|
	|ГДЕ Сбор.Номенклатура ЕСТЬ NULL И (НЕ Рез.Номенклатура ЕСТЬ NULL ИЛИ Таб.Заказ.СпособРазмещенияБезЗаказа) " + ?(ЗначениеЗаполнено(Период.ДатаНачала)," И Таб.ДатаЗаказа >= &НачалоПериода","") + ?(ЗначениеЗаполнено(Период.ДатаОкончания), " И Таб.ДатаЗаказа <= &КонецПериода", "") + "
	|",
	?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), "", "&Дата")));
	
	Запрос.УстановитьПараметр("Склад", 	ВыбСклад);
	Запрос.УстановитьПараметр("Дата", 	Объект.Дата);
	Запрос.УстановитьПараметр("НачалоПериода", 	Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", 	Период.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл ЗаполнитьЗначенияСвойств(Объект.Товары.Добавить(), Выборка) КонецЦикла;
	
КонецПроцедуры
&НаКлиенте
Процедура ВыбранСкладДляЗаполнения(ВыбСклад, ДопПараметры) Экспорт
	
	Если ВыбСклад <> Неопределено Тогда
		ЗаполнитьПоСкладуНаСервере(ВыбСклад); КонецЕсли;
	
	
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьПоСкладу(Команда)
	
	ОткрытьФорму("Справочник.Склады.ФормаВыбора",,ЭтаФорма,,,,Новый ОписаниеОповещения("ВыбранСкладДляЗаполнения", ЭтаФорма));
	
КонецПроцедуры


// КОРЗИНА
#Если Не ВебКлиент Тогда
&НаСервере
Процедура ДобавитьИзКорзиныНаСервере(ИмяКомпа, СтруктураКолонокТовары, КолСтрок)
	
	МодульКорзины.ПолучитьТоварИзКорзины(Элементы.Товары, Объект.Товары, СтруктураКолонокТовары, ИмяКомпа, КолСтрок,,, Ложь);
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ВставитьИзКорзины(Команда)
	
	КолСтрок = 0;
	ДобавитьИзКорзиныНаСервере(ИмяКомпьютера(), СтруктураКолонокТовары, КолСтрок);
	
	Если КолСтрок Тогда
		
		МодульКорзины.ОповеститьОВставкеТовараВДокумент(КолСтрок, Объект.Товары.Количество());
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
		
	КонецЕсли;
	

КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаСервере
Функция ПоложитьВКорзинуНаСервере(ВыделенныеИндексы, ИмяКомпа, КолВКорзине)
	
	Возврат МодульКорзины.ПоложитьТоварВКорзину(Объект.Товары, ВыделенныеИндексы, ИмяКомпа, КолВКорзине);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
	
	ВыделенныеИндексы 	= МодульКорзины.ПолучитьВыделенныеСтрокиТоваров(Элементы.Товары, Объект.Товары);
	КолВКорзине 		= 0;
	КолТовара			= ВыделенныеИндексы.Количество();
	
	
	Если КолТовара Тогда
		
		Если ПоложитьВКорзинуНаСервере(ВыделенныеИндексы, ИмяКомпьютера(), КолВКорзине) Тогда
			МодульКорзины.ОповеститьОПомещенииТовара(КолТовара, КолВКорзине);
		КонецЕсли;
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
				
	КонецЕсли;

КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура РедактироватьТоварВКорзине(Команда)
	
	ОткрытьФорму("РегистрСведений.Корзина.Форма.Форма");
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаСервере
Функция ОчиститьНаСервере(ИмяКомпа)
	
	Возврат МодульКорзины.ОчиститьКорзину(ИмяКомпа);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Если ОчиститьНаСервере(ИмяКомпьютера()) Тогда
		
		МодульКорзины.ОповеститьЧтоКорзинаОчищена();
		
	КонецЕсли;

КонецПроцедуры
#КонецЕсли
