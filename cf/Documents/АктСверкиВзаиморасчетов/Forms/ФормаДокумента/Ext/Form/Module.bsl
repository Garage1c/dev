
&НаКлиенте
Процедура УправлениеВидимостьюДоступностью()
	
	Элементы.ГруппаШапка.ТолькоПросмотр = Объект.СверкаСогласована;
	Элементы.Страницы.ТолькоПросмотр = Объект.СверкаСогласована;
	
КонецПроцедуры

// ТИПОВЫЕ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ФункцииФормДокументов.ЗаполнитьЗначенияПоУмолчанию(
					Объект,
					ФункцииФормДокументов.ПолучитьРеквизитыДокумента(Документы.АктСверкиВзаиморасчетов.ПустаяСсылка())
					);
		
	КонецЕсли;
	
	ДолгПарнера = ДенежныеСредства.ПолучитьДолгПартнера(Объект.Контрагент, Объект.Организация);
	
							
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

// ШАПКА

&НаКлиенте
Процедура СверкаСогласованаПриИзменении(Элемент)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

//&НаСервере
//Процедура УстановитьФильтрПоПартнеру()
//	
//	Если Объект.Партнер.Пустая() Тогда
//		
//		НовыйМассив = Новый Массив();
//		Элементы.Контрагент.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
//		
//	Иначе
//		
//		НовыйМассив = Новый Массив();
//		НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Партнер", "Объект.Партнер"));
//		Элементы.Контрагент.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
//		
//	КонецЕсли;
//	
//КонецПроцедуры
//&НаСервере
//Процедура ПартнерПриИзмененииНаСервере()
//	
//	ФункцииФормДокументов.ПартнерПриИзменении(Объект);
//	УстановитьФильтрПоПартнеру();
//	
//	ДолгПарнера = ДенежныеСредства.ПолучитьДолгПартнера(Объект.Партнер, Объект.Организация);
//	
//КонецПроцедуры
&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	ФункцииФормДокументов.КонтрагентПриИзменении(Объект);
	
	//УстановитьФильтрПоПартнеру();
	ДолгПарнера = ДенежныеСредства.ПолучитьДолгПартнера(Объект.Контрагент, Объект.Организация);
	
КонецПроцедуры
&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	ФункцииФормДокументов.ОрганизацияПриИзменении(Объект);
	
	ДолгПарнера = ДенежныеСредства.ПолучитьДолгПартнера(Объект.Контрагент, Объект.Организация);
	
КонецПроцедуры


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры
//&НаКлиенте
//Процедура ПартнерПриИзменении(Элемент)
//	
//	ПартнерПриИзмененииНаСервере();
//	
//КонецПроцедуры
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

// ЗАПОЛНЕНИЕ

&НаСервере
Процедура ЗаполнитьТаблицуПоВзаиморасчетам()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ СуммаНачальныйОстаток ОстатокНаНачало
	|ИЗ
	|	РегистрНакопления.Взаиморасчеты.ОстаткиИОбороты(
	|			&ДатаНач, 
	|			&ДатаКон,,, 
	|		Организация 	= &Организация И
	|		Контрагент 		= &Контрагент)
	|;
	|ВЫБРАТЬ
	|	Регистратор ДокументРегистратор,
	|	ПРЕДСТАВЛЕНИЕ(Регистратор) Представление,
	|	Регистратор.Дата 		Дата,
	|	СуммаПриход				Дебет,
	|	СуммаРасход				Кредит
	|ИЗ
	|	РегистрНакопления.Взаиморасчеты.ОстаткиИОбороты(
	|			&ДатаНач, 
	|			&ДатаКон, 
	|			Регистратор, , 
	|		Организация 	= &Организация И
	|		Контрагент 		= &Контрагент 
	|	)
	|ГДЕ 
	|" + ?(Объект.Организация.ИНН = "781601216373", "", " ВЫБОР КОГДА Регистратор ССЫЛКА Документ.ВозвратОтПокупателя ТОГДА Регистратор.ОтражатьВБУ ИНАЧЕ ИСТИНА КОНЕЦ И ") + "
	|	ВЫБОР КОГДА Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее ТОГДА Регистратор.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику) ИНАЧЕ ИСТИНА КОНЕЦ
	|	И НЕ ТИПЗНАЧЕНИЯ(Регистратор) В (&ТипыИсключения)
	|");
	
	// Акты строим только для партнеров как клиентов
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ВзаиморасчетыСПоставщиком"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваров"));
	
	Запрос.УстановитьПараметр("ДатаНач", 		Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", 	Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент", 	Объект.Контрагент);
	Запрос.УстановитьПараметр("ТипыИсключения", МассивТипов);
	
	УстановитьПривилегированныйРежим(Истина);	
	Пакет = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);	

	ТаблицаЗапроса = Пакет[1].Выгрузить();
	
	Объект.ОстатокНаНачало = Пакет[0].Выгрузить().Итог("ОстатокНаНачало");
	Объект.ПоДаннымОрганизации.Загрузить(ТаблицаЗапроса);
	
	ТаблицаЗапроса.Колонки.Дебет.Имя 		= "ПочтиКредит";
	ТаблицаЗапроса.Колонки.Кредит.Имя		= "Дебет";
	ТаблицаЗапроса.Колонки.ПочтиКредит.Имя 	= "Кредит";
	
	Объект.ПоДаннымКонтрагента.Загрузить(ТаблицаЗапроса);
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьСвои(Команда)
	
	
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьЧужие(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ДолгПарнераНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", 
	 							Новый Структура("Контрагент", 
											Объект.Контрагент),,
								Истина);
								
	ОткрытьФорму("Отчет.ВзаиморасчетыПоПартнеру.ФормаОбъекта", ПараметрыФормы); 

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьТаблицуПоВзаиморасчетам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Объект.ДатаНачала 		= Период.ДатаНачала;
	Объект.ДатаОкончания 	= Период.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Период.ДатаНачала 		= ТекущийОбъект.ДатаНачала;
	Период.ДатаОкончания 	= ТекущийОбъект.ДатаОкончания;
	
КонецПроцедуры

