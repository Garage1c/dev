

&НаСервере
Процедура Печать(ТабДок, Ссылка, Контрагент, Номер)
	
	Контрагент 	= Ссылка.Контрагент;
	Номер 		= Ссылка.Номер;
	
	Макет = Документы.АктСверкиВзаиморасчетов.ПолучитьМакет("АктСверки");

	ОбластьЗаголовок        = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы     = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки       = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьОбороты          = Макет.ПолучитьОбласть("Обороты");
	ОбластьОборотыИтог      = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки       = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалПодписи    = Макет.ПолучитьОбласть("ПодвалПодписи");
	ОбластьПечатьТулс       = Макет.ПолучитьОбласть("Тулс");
	ОбластьПечатьИнструмент = Макет.ПолучитьОбласть("Инструмент");
	ОбластьПечатьМП         = макет.ПолучитьОбласть("МП");
	
	НазваниеОрганизации = Ссылка.Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = Ссылка.Организация;
	КонецЕсли;
	
	НаименованиеКонтрагента = Ссылка.Контрагент.НаименованиеПолное;
	Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
		НаименованиеКонтрагента = Ссылка.Контрагент;
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
	ИмяПредставителяОрганизации = Ссылка.ПредставительОрганизации;
	ИмяПредсатвителяКонтрагента = Ссылка.ПредставительКонтрагента;
	
		ДолжностьПредставителяОрганизации = "";
		ДолжностьПредставителяКонтрагента = "";
	//ДолжностьПредставителяКонтрагента = ?(НЕ ЗначениеЗаполнено(ПредставительКонтрагента),"",СокрЛП(представительКонтрагента.Должность));
	
	Если НЕ ЗначениеЗаполнено(Ссылка.ДатаНачала) Тогда
		Если Ссылка.ПоДаннымОрганизации.Количество()>0 Тогда
			ДатаНачалаПериода = Ссылка.ПоДаннымОрганизации[0].Дата;
		Иначе
			ДатаНачалаПериода = Ссылка.ДатаНачала;
		КонецЕсли;
	Иначе
		ДатаНачалаПериода = Ссылка.ДатаНачала;
	КонецЕсли;		

	ТекстЗаголовка = "взаимных расчетов за период с " + Формат(ДатаНачалаПериода, "ДФ=dd.MM.yyyy") + " по " + Формат(Ссылка.ДатаОкончания, "ДФ=dd.MM.yyyy") + Символы.ПС
					+ "между " + НазваниеОрганизации + Символы.ПС + "и " + НаименованиеКонтрагента;
	//Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
	//	ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору " + СокрЛП(ДоговорКонтрагента);
	//КонецЕсли;
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	//ДанныеПредставителяОрганизации = ДанныеФизЛица(Организация, ПредставительОрганизации, ДатаОкончания);
	//ФИОПредставителя = ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
	//				+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
	//				+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
	//ФИОПредставителя = "" ;//+ ПредставительОрганизации;
	ФИОДолжностьГлБ = ПолучитьФИОГлавногоБухгалтера(Ссылка.Организация);
    ДолжностьПредставителяОрганизации = ФИОДолжностьГлБ.Должность; 
	ФИОПредставителя = ФИОДолжностьГлБ.ФИО;
	
	СтрЗаголовокТаблицаНачало = "";
	Если Найти(НазваниеОрганизации, "Индивидуальный предприниматель") <> 0 Тогда
		СтрЗаголовокТаблицаНачало = "Мы, нижеподписавшиеся, "
		+ НазваниеОрганизации 
		+ ", с одной стороны, ";
	Иначе
		СтрЗаголовокТаблицаНачало = "Мы, нижеподписавшиеся, "
		+ ?(ДолжностьПредставителяОрганизации<>"",ДолжностьПредставителяОрганизации,"_______________________")+" "
		+ НазваниеОрганизации 
		+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"__________________________________________") + ", с одной стороны, ";
		
	КонецЕсли;
	
	СтрЗаголовокТаблица = СтрЗаголовокТаблицаНачало
	+ "и " + ?(ДолжностьПредставителяКонтрагента<>"",ДолжностьПредставителяКонтрагента,"___________________________") 
	+ " " + НаименованиеКонтрагента + " " 
	+ ?(НЕ ЗначениеЗаполнено(Ссылка.ПредставительКонтрагента),"_____________________________________________",Ссылка.ПредставительКонтрагента) + ", с другой стороны, "
	+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";

		
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
	ОбластьЗаголовок.Параметры.ВалютаДокумента = Ссылка.Валюта;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтСуммаОборотДт      = 0;
	ИтСуммаОборотКт      = 0;
	ИтСуммаОборотДтКонтр = 0;
	ИтСуммаОборотКтКонтр = 0;
	
	НачОстДебет  = ?(Ссылка.ОстатокНаНачало > 0, Ссылка.ОстатокНаНачало, 0);
	НачОстКредит = ?(Ссылка.ОстатокНаНачало < 0, -Ссылка.ОстатокНаНачало, 0);
	
	ОстатокНаКонец = Ссылка.ОстатокНаНачало + Ссылка.ПоДаннымОрганизации.Итог("Дебет") -  Ссылка.ПоДаннымОрганизации.Итог("Кредит");
	
	КонОстДебет  = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
	КонОстКредит = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
	
	ОстатокНаКонецК = -Ссылка.ОстатокНаНачало + Ссылка.ПоДаннымКонтрагента.Итог("Дебет") -  Ссылка.ПоДаннымКонтрагента.Итог("Кредит");
	
	КонОстДебетК  = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
	КонОстКредитК = ?(ОстатокНаКонецК < 0, -ОстатокНаКонецК, 0);
	
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = НачОстДебет;
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = НачОстКредит;
	ТабДок.Вывести(ОбластьНачОстатки);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	МаксИндекс = Макс(Ссылка.ПоДаннымОрганизации.Количество(), Ссылка.ПоДаннымКонтрагента.Количество()) - 1;
	Для Инд = 0 По МаксИндекс Цикл
		Если Инд < Ссылка.ПоДаннымОрганизации.Количество() Тогда
			СтрокаОрганизации = Ссылка.ПоДаннымОрганизации[Инд];
			Регистратор = 	СтрокаОрганизации.Представление;
			СуммаОборотДт = СтрокаОрганизации.Дебет;
			СуммаОборотКт = СтрокаОрганизации.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДт = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКт = СуммаОборотКт;
			ИтСуммаОборотДт = ИтСуммаОборотДт + СуммаОборотДт;
			ИтСуммаОборотКт = ИтСуммаОборотКт + СуммаОборотКт;
			ОбластьОбороты.Параметры.РегистраторПредставление = СтрокаОрганизации.Представление;
			ОбластьОбороты.Параметры.Регистратор = СтрокаОрганизации.ДокументРегистратор;
			ОбластьОбороты.Параметры.ДатаДокумента = Формат(СтрокаОрганизации.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДт = "";
			ОбластьОбороты.Параметры.СуммаОборотКт = "";
			ОбластьОбороты.Параметры.РегистраторПредставление = "";
			ОбластьОбороты.Параметры.Регистратор = "";
			ОбластьОбороты.Параметры.ДатаДокумента = "";
		КонецЕсли;
		Если Инд < Ссылка.ПоДаннымКонтрагента.Количество() Тогда
			СтрокаОрганизации = Ссылка.ПоДаннымКонтрагента[Инд];
			Регистратор = 	СтрокаОрганизации.Представление;
			СуммаОборотДт = СтрокаОрганизации.Дебет;
			СуммаОборотКт = СтрокаОрганизации.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = СуммаОборотКт;
			ИтСуммаОборотДтКонтр = ИтСуммаОборотДтКонтр + СуммаОборотДт;
			ИтСуммаОборотКтКонтр = ИтСуммаОборотКтКонтр + СуммаОборотКт;
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = СтрокаОрганизации.Представление;
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = Формат(СтрокаОрганизации.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = "";
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = "";
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = "";
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = "";
		КонецЕсли;
		ТабДок.Вывести(ОбластьОбороты);
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьОборотыИтог.Параметры.СуммаОборотДт      = ИтСуммаОборотДт;
	ОбластьОборотыИтог.Параметры.СуммаОборотКт      = ИтСуммаОборотКт;
	Если Ссылка.СверкаСогласована тогда
		ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ИтСуммаОборотДтКонтр;
		ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ИтСуммаОборотКтКонтр;
	КонецЕсли;
	ТабДок.Вывести(ОбластьОборотыИтог);
	
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = КонОстДебет;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = КонОстКредит;
	
	Если Ссылка.СверкаСогласована тогда
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = КонОстДебетК;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = КонОстКредитК;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьКонОстатки);
	
	// Результаты сверки
	
   	Если Ссылка.ПоДаннымОрганизации.Количество() = 0 и Ссылка.ОстатокНаНачало = 0 Тогда
   	    РезультатыСверки = "<сверка не проведена>";
  	ИначеЕсли НЕ ЗначениеЗаполнено(Ссылка.ДатаОкончания) Тогда
   	    РезультатыСверки = "<не указана дата сверки>";
   	ИначеЕсли НЕ ЗначениеЗаполнено(Ссылка.Контрагент) Тогда
   	    РезультатыСверки = "<не указан контрагент>";
   	Иначе
		РезультатыСверки = "на " + Формат(Ссылка.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
			
	   	Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(Ссылка.Валюта);
	
	   	ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(Ссылка.Валюта);
	
	   	Иначе
	   		РезультатыСверки = РезультатыСверки + "отсутствует.";
	   	КонецЕсли;
	КонецЕсли;
	ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
	
	Если Ссылка.СверкаСогласована тогда
		ОбластьПодвал.Параметры.ПоДаннымКонтрагента = "По данным " + СокрЛП(НаименованиеКонтрагента);
		
	   	Если Ссылка.ПоДаннымКонтрагента.Количество() = 0 и Ссылка.ОстатокНаНачало = 0 Тогда
	   	    РезультатыСверки = "<сверка не проведена>";
	  	ИначеЕсли НЕ ЗначениеЗаполнено(Ссылка.ДатаОкончания) Тогда
	   	    РезультатыСверки = "<не указана дата сверки>";
	   	ИначеЕсли НЕ ЗначениеЗаполнено(Ссылка.Контрагент) Тогда
	   	    РезультатыСверки = "<не указан контрагент>";
	   	Иначе
			РезультатыСверки = "на " + Формат(Ссылка.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
				
		   	Если ОстатокНаКонецК < 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(-ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + строка(Ссылка.Валюта);
		
		   	ИначеЕсли ОстатокНаКонецК > 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + строка(Ссылка.Валюта);
		
		   	Иначе
		   		РезультатыСверки = РезультатыСверки + "отсутствует.";
		   	КонецЕсли;
	   	КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
		
		Если ОстатокНаКонец+ОстатокНаКонецК<>0 Тогда
			 ИтогСверки = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере "+Формат(?(ОстатокНаКонец+ОстатокНаКонецК>0,1,-1)*(ОстатокНаКонец+ОстатокНаКонецК), "ЧЦ=21; ЧДЦ=2") +" "+ Строка(Ссылка.Валюта);
			 ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС+ ИтогСверки+Символы.ПС+" ";
		КонецЕсли; 
	КонецЕсли;
	
	ОбластьПодвал.Параметры.НазваниеОрганизации = СокрЛП(НазваниеОрганизации);
	ОбластьПодвал.Параметры.НаименованиеКонтрагента = СокрЛП(НаименованиеКонтрагента);
	
	ОбластьПодвал.Параметры.Должность = ДолжностьПредставителяОрганизации; 
	ОбластьПодвал.Параметры.ДолжностьК ="________________";
	ТабДок.Вывести(ОбластьПодвал);
	
	ОбластьПодвалПодписи.Параметры.ФИОПредставителя  = "("+ ФИОПредставителя +")";
	ОбластьПодвалПодписи.Параметры.ФИОПредставителяК = "("+?(НЕ ЗначениеЗаполнено(Ссылка.ПредставительКонтрагента),"_______________________",Ссылка.ПредставительКонтрагента)+")";
	
        КартинкаПодписиГлБ  = ОбластьПодвалПодписи.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		КартинкаПодписиГлБ.Верх   = 0;
		КартинкаПодписиГлБ.Высота = 10;
		КартинкаПодписиГлБ.Ширина = 30;
		КартинкаПодписиГлБ.Лево   = 25;
		КартинкаПодписиГлБ.ГраницаСверху  = Ложь;
		КартинкаПодписиГлБ.ГраницаСлева   = Ложь;
		КартинкаПодписиГлБ.ГраницаСправа  = Ложь;
		КартинкаПодписиГлБ.ГраницаСнизу   = Ложь;
		КартинкаПодписиГлБ.РазмерКартинки = РазмерКартинки.Пропорционально;
		КартинкаПодписиГлБ.ЦветФона = Новый Цвет();
		
					
	Если ФИОПредставителя = "Ильина Анастасия Юрьевна" Тогда 
		КартинкаПодписиГлБ.Картинка = БиблиотекаКартинок.ПодписьГлБух;

	ИначеЕсли ФИОПредставителя = "Кукушкина Ольга Валентиновна" Тогда
		КартинкаПодписиГлБ.Картинка = БиблиотекаКартинок.ПодписьРуководитель;
	КонецЕсли;	 
	
	ТабДок.Вывести(ОбластьПодвалПодписи);
	
	//////Потом переписать чтоб было красиво
	Если Ссылка.Организация.Код = "000000003" Тогда
		ТабДок.Вывести(ОбластьПечатьИнструмент);
	ИначеЕсли Ссылка.Организация.Код = "000000004" Тогда
		ТабДок.Вывести(ОбластьПечатьТулс);
	ИначеЕсли Ссылка.Организация.Код = "000000002" Тогда
		КартинкаПечатьОрганизации  = ОбластьПечатьМП.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		КартинкаПечатьОрганизации.Верх = 0;
		КартинкаПечатьОрганизации.Высота = 50;
		КартинкаПечатьОрганизации.Ширина = 50;
		КартинкаПечатьОрганизации.Лево = 10;
		КартинкаПечатьОрганизации.ГраницаСверху = Ложь;
		КартинкаПечатьОрганизации.ГраницаСлева  = Ложь;
		КартинкаПечатьОрганизации.ГраницаСправа = Ложь;
		КартинкаПечатьОрганизации.ГраницаСнизу  = Ложь;
		КартинкаПечатьОрганизации.РазмерКартинки = РазмерКартинки.Пропорционально;
		КартинкаПечатьОрганизации.Картинка = БиблиотекаКартинок.ПечатьКукушкина;
		ТабДок.Вывести(ОбластьПечатьМП);
	Иначе
		ТабДок.Вывести(ОбластьПечатьМП);
	КонецЕсли;	
	////////
	//ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьФИОГлавногоБухгалтера(Организация)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо КАК ФИО,
	               |	ОтветственныеЛицаОрганизацииСрезПоследних.Должность
	               |ИЗ
	               |	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
	               |			,
	               |			Организация = &Организация
	               |				И ОтветственноеЛицо = &ОтветственноеЛицо) КАК ОтветственныеЛицаОрганизацииСрезПоследних";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	РезультатЗапроса.Следующий();
	ДанныеГлавногоБухгалтера = Новый Структура;
	ДанныеГлавногоБухгалтера.Вставить("ФИО", Строка(РезультатЗапроса.ФИО));
	ДанныеГлавногоБухгалтера.Вставить("Должность", Строка(РезультатЗапроса.Должность));
	Возврат ДанныеГлавногоБухгалтера;	
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ТабДок 		= Новый ТабличныйДокумент;
	СтрНомера 	= "";
	
	Для Каждого Ссылка Из ПараметрКоманды Цикл
		
		Контрагент = Неопределено; Номер = Неопределено;
		Печать(ТабДок, Ссылка, Контрагент, Номер); 
		ДопПараметры = Новый Массив;
		ДопПараметры.Добавить(Новый Структура("Контрагент", Контрагент));
		
		ОткрытьФорму("ОбщаяФорма.ТабличныйДокумент", 
						Новый Структура("ТабличныйДокумент, ИмяФайла, ДополнительныеПараметры", 
								ТабДок, 
								Номер, 
								ДопПараметры), 
						ПараметрыВыполненияКоманды.Источник, 
						Новый УникальныйИдентификатор,
						Новый ОкноКлиентскогоПриложения); КонецЦикла;
	
	//ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	//ТабДок.АвтоМасштаб = Истина;
	//ТабДок.Показать();

КонецПроцедуры
