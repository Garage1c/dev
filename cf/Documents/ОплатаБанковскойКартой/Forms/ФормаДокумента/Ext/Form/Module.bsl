&НаКлиенте
Процедура ОбщиеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Объект.Ссылка.Пустая() И НЕ ЗначениеЗаполнено(Параметры.Основание) Тогда
	
		Объект.Процесс 		= Параметры.Процесс;
		Объект.Касса 		= Параметры.Касса;
		Объект.СтатьяДДС	= Параметры.СтатьяДДС;
		
		Если НЕ Объект.Касса.Пустая() Тогда
			Объект.Организация	= Объект.Касса.Организация;
			Объект.Валюта		= Объект.Касса.ТипЦен.Валюта;
		КонецЕсли;
	
	КонецЕсли;
	ВидОперацииВидимость();
	
	УправлениеВидимостю();
	
	УстановитьВидимостьККТ();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение ИЛИ  ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Оповестить(СобытияСистемы.Событие_ИзмениласьНаличность(), , ЭтаФорма);
	КонецЕсли;

КонецПроцедуры


// ЗАПОЛНИТЬ

&НаСервере
Процедура ЗаполнитьНаСервере(ЗаполняемаяСумма = 0)
	
	Заказы.ЗаполнитьТаблицуДокументаОплаты(Объект, ЗаполняемаяСумма);
			
КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьПоСумме(Команда)
	
	Сумма = Объект.Сумма;
	
	Если ВвестиЧисло(Сумма, "Сумма заполнения:", 15,2) Тогда
		
		ЗаполнитьНаСервере(Сумма);
		
	КонецЕсли;
	
КонецПроцедуры



#Область ПодобратьЗаказы

&НаКлиенте
Процедура ПодобратьЗаказы(Команда)
	
	ЭтоВозвратОплаты=?(Объект.ВидОперации=ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат"),Истина,Ложь);
	
	АдресРасшифровкиСуммы=ПоместитьТЧвВХ();
	стрВозврТабл = ОткрытьФорму("ОбщаяФорма.ПодборЗаказовДляДокументовОплаты", 
			Новый Структура("Контрагент, Сумма, ТекущийДокумент, АдресРасшифровкиСуммы,ЭтоВозвратОплаты", 
					Объект.Контрагент, 
					Объект.Сумма,
					Объект.Ссылка,
					АдресРасшифровкиСуммы,
					ЭтоВозвратОплаты),,,,,Новый ОписаниеОповещения("ОбработкаПодбораЗаказов",ЭтаФОрма,));

КонецПроцедуры

&НаСервере
Функция ПоместитьТЧвВХ(); 
	Возврат ПоместитьВоВременноеХранилище(Объект.РасшифровкаСуммы.Выгрузить());
КонецФункции	

&НаКлиенте
Процедура ОбработкаПодбораЗаказов(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		ЗаполнитьПодобранныеЗаказы(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодобранныеЗаказы(стрВозврТабл)
	
	ТЗ= ЗначениеИзСтрокиВнутр(стрВозврТабл);
	Модифицированность = Истина;
	Объект.РасшифровкаСуммы.Очистить();
	Объект.РасшифровкаСуммы.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаказыАвтоматом(Команда)
	
	ОтветРобота = ЗаполнитьЗаказыАвтоматомНаСервере();
	ПоказатьОповещениеПользователя(ОтветРобота,,,БиблиотекаКартинок.Робот);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьЗаказыАвтоматомНаСервере()
	
	Парам=Новый Структура("Контрагент,Ссылка,Сумма,НазначениеПлатежа,ВидДокумента",Объект.Контрагент,Объект.Ссылка,Объект.Сумма,Объект.Комментарий,Объект.Ссылка.Метаданные().Имя);
	Рез=ВзаиморасчетыСервер.ПолучитьЗаказыДляПлатежки(Парам);
	ТЗ=Рез.ТабЗаказов;
	ОтветРобота=Рез.ОтветРобота;
	Если ТЗ.Количество() Тогда
		
		Объект.РасшифровкаСуммы.Очистить();
		Объект.РасшифровкаСуммы.Загрузить(ТЗ);
		
		
	КонецЕсли;	
	
	Возврат ОтветРобота;
	
КонецФункции


#КонецОбласти



&НаКлиенте
Процедура АнализОплат(Команда)
	
	ОткрытьФорму("Обработка.ДолгиПоОплате_Управление.Форма.Управление", 
			Новый Структура("Организация, Партнер", 
						Объект.Организация, 
						Объект.Партнер));
КонецПроцедуры

// ПРИ Изменении

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ФункцииФормДокументов.ОрганизацияПриИзменении(Объект);
	
КонецПроцедуры
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

//&НаСервере
//Процедура ПартнерПриИзмененииНаСервере()
//	
//	ФункцииФормДокументов.ПартнерПриИзменении(Объект);
//	
//КонецПроцедуры
//&НаКлиенте
//Процедура ПартнерПриИзменении(Элемент)
//	
//	ПартнерПриИзмененииНаСервере();
//	
//КонецПроцедуры


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	Объект.Партнер = Объект.Контрагент.Партнер;
	ФункцииФормДокументов.КонтрагентПриИзменении(Объект);
КонецПроцедуры


&НаКлиенте
Процедура ЗаНеучтенныйТоварПриИзменении(Элемент)
	
	НеУчет = НЕ Объект.ЗаНеучтенныйТовар;
	
	Элементы.Партнер.АвтоОтметкаНезаполненного = НеУчет; 
	
	Элементы.Партнер.Видимость = НеУчет; 
	Элементы.Контрагент.Видимость = НеУчет; 
    Элементы.РасшифровкаСуммы.Видимость = НеУчет;

КонецПроцедуры


&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ВидОперацииВидимость();
	ЗаполнитьСтатьиДДС();
	
	//+ККТ
	Если ОбщегоНазначения.НужноПробитиеПоКассе(Объект.Касса) Тогда
		ПоказатьПредупреждение(,"Для пробития по ККТ обязательно заполните реквизит ""Документ отгрузки"" и сумма документа должна совпадать с суммой документов отгрузки!");
	КонецЕсли;
	//-ККТ
КонецПроцедуры

&НаСервере
Процедура ВидОперацииВидимость()
	Элементы.Основание.Видимость = Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат;
КонецПроцедуры

#Область СтатьяДДС

&НаСервере
Процедура ЗаполнитьСтатьиДДС()
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа ТОГДА
		Объект.СтатьяДДС = КэшируемыеФункции.ПолучитьСтатьюОплатаПокупателя();
	ИначеЕсли
		Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат ТОГДА
		Объект.СтатьяДДС = КэшируемыеФункции.ПолучитьСтатьюВозвратПокупателю();
	КонецЕсли;
	
	СтатьяДДСПриИзмененииНаСервере(Объект.СтатьяДДС, Объект.СтатьяДДСБух);

КонецПроцедуры
&НаСервере
Процедура СтатьяДДСПриИзмененииНаСервере(Ст1, Ст2)
	
	ФункцииФормДокументов.ПриИзмененииСтатьиДДС(Ст1, Ст2);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДДСПриИзменении(Элемент)
	
	СтатьяДДСПриИзмененииНаСервере(Объект.СтатьяДДС, Объект.СтатьяДДСБух);
		
КонецПроцедуры
&НаКлиенте
Процедура СтатьяДДСБухПриИзменении(Элемент)
	
	//ФункцииФормДокументов.ПриИзмененииСтатьиДДС(Объект.СтатьяДДСБух, Объект.СтатьяДДС);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УправлениеВидимостю()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Сумма.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти") ,Истина, Ложь); 
		//Элементы.СтатьяДДС.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		//Элементы.СтатьяДДСБух.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер"),Истина, Ложь); 
		Элементы.ВидОперации.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		//Элементы.Партнер.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Контрагент.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Организация.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Подразделение.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Отдел.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Касса.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.Валюта.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь); 
		Элементы.ОбщиеРеквизиты.Доступность = ?(РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Бухгалтер") ИЛИ РольДоступна("ПолныеПраваВОбласти"),Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗапретРедактирования.УстановитьРежимТолькоПросмотрПоДатеЗапрета(ЭтаФорма);
		
КонецПроцедуры


#Область ККТ

&НаКлиенте
Процедура ККТПровести(Команда)
	Если Модифицированность Тогда
		ПоказатьПредупреждение(,"Перед пробитием по ККТ необходимо записать документ!");
		Возврат;
	КонецЕсли;
	ПробитьЧекПоКассе();
КонецПроцедуры

&НаКлиенте
Процедура ПробитьЧекПоКассе()
	Если НЕ ОбщегоНазначения.НужноПробитиеПоКассе(Объект.Касса) Тогда
		//ПоказатьПредупреждение(,"Не установлен признак необходимости проведения по кассе");
		Возврат;
	КонецЕсли;
	Если Объект.ПроведеноПоККТ Тогда
		ПоказатьПредупреждение(,"Документ уже был проведен по кассе");
		Возврат;
	КонецЕсли;
	Если НЕ Объект.Проведен Тогда
		ПоказатьПредупреждение(,"Для проведения документа по кассе он должен быть проведён в системе");
		Возврат;
	КонецЕсли;
	Ошибка = "";
	ОбщиеПараметры = ПолучитьШаблонЧека(Ошибка);
	Если ОбщиеПараметры = Неопределено Тогда
		ПоказатьПредупреждение(,"Невозможно напечатать чек! Возникла ошибка: "+Ошибка);
		Возврат;
	КонецЕсли;
	ЭтаФорма.Доступность = Ложь; //При необходимости можно заблокировать интерфейс пользователя.
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПечатьЧекаЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ОбщиеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧекаЗавершение(РезультатВыполнения, Параметры) Экспорт
 
	ЭтаФорма.Доступность = Истина; //При необходимости разблокируем интерфейс пользователя.

	Если НЕ РезультатВыполнения.Результат Тогда
		ПоказатьПредупреждение(,"Не удалось пробить чек! Устраните проблему и нажмите кнопку ""ККТ Пробить"", находящуюся наверху."+Символы.ПС+Символы.ПС+"Техническая информация: "+РезультатВыполнения.ОписаниеОшибки);
	Иначе
		ОбщегоНазначения.УстановитьРеквизитПроведеноПоККТ(Объект.Ссылка);
		СобытияСистемы.ОповеститьОПробитииЧека(Объект.Ссылка);
		УстановитьВидимостьККТ();
		Если ЭтаФорма.Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьШаблонЧека(Ошибка)
	//Товары = ПолучитьНоменклатуруПоЗаказам();
	
	
	// Общие параметры чека
	ОбщиеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека();

	// Параметры установлены по умолчанию.
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
		ОбщиеПараметры.ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств"); // Перечисление "ТипыРасчетаДенежнымиСредствами"
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
		ОбщиеПараметры.ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств"); // Перечисление "ТипыРасчетаДенежнымиСредствами"
	Иначе
		Ошибка = "Неизвестный вид операции "+Объект.ВидОперации;
		Возврат Неопределено;
	КонецЕсли;
	ОбщиеПараметры.Электронно = Ложь; // Если Электронно = Истина, то чек будет предоставлен в элетронной форме, без печати.
	ОбщиеПараметры.Отправляет1СSMS   = Ложь; // SMS отправляет средствами 1C.
	ОбщиеПараметры.Отправляет1СEmail = Ложь; // Email отправляет средствами 1C.
	ОбщиеПараметры.ПокупательEmail = Неопределено;
	ОбщиеПараметры.ПокупательНомер = Неопределено;

	// Параметры необходимые для чека ЕНВД на принтере чеков
	ОбщиеПараметры.Кассир = Строка(Объект.Ответственный);
	//ОбщиеПараметры.ОрганизацияНазвание = "ООО ""1C-СОФТ""";
	//ОбщиеПараметры.ОрганизацияИНН = "7709860400";
	//ОбщиеПараметры.ОрганизацияКПП = "770901001";
	//ОбщиеПараметры.НомерКассы = "00001";
	//ОбщиеПараметры.НомерЧека = "1";
	//ОбщиеПараметры.НомерСмены = "1";
	КодСистемы = ОбщегоНазначения.ПолучитьКодСистемыНалогообложения(Объект.Касса,Ошибка);
	Если КодСистемы = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	ОбщиеПараметры.КодСистемыНалогообложения = КодСистемы;

	Если Объект.РасшифровкаСуммы.Количество() = 0 Тогда
		Ошибка = "Нет расшифровки суммы";
		Возврат Неопределено;
	КонецЕсли;
	
	СуммаПоДокументам = ОбщегоНазначения.ККТЗаполнитьНоменклатуру(Объект.Ссылка,ОбщиеПараметры,Ошибка);
	Если ЗначениеЗаполнено(Ошибка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Если СуммаПоДокументам<>Объект.Сумма Тогда
		Ошибка = "Сумма по оплате не соответствует сумме по реализациям или реализации не заполнены. Невозможно разнести суммы в чеке.";
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("Сумма", Объект.Сумма);
	СтрокаОплаты.Вставить("Наименование", "Платежная оплата");
	СтрокаОплаты.Вставить("ТипОплаты", 1); 
	ОбщиеПараметры.ТаблицаОплат.Добавить(СтрокаОплаты);

	Возврат ОбщиеПараметры;

КонецФункции

&НаСервере
Процедура УстановитьВидимостьККТ()
	Если Не Объект.Ссылка.Пустая() И Объект.Касса.ПродажаПоККТ И НЕ Объект.ПроведеноПоККТ Тогда
		Элементы.ФормаККТПровести.Видимость = Истина;
	Иначе
		Элементы.ФормаККТПровести.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


