Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	
	// ПАРАМЕТРЫ СИСТЕМЫ
	
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	// ШАПКА

	|ВЫБРАТЬ
	|	Процесс
	|ИЗ
	|	Документ.ОплатаБанковскойКартой
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|" + 
	РаботаСКурсамиВалют.ПолучитьТекстЗапросаКурсыВалют() + "
	|;
	
	// ВЗАИМОРАСЧЕТЫ
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	ВЫБОР 
	|		КОГДА ВидОперации = &Возврат
	|		ТОГДА &ВидДвиженияПриход
	|		ИНАЧЕ &ВидДвиженияРасход
	|	КОНЕЦ	 				ВидДвижения,
	|	Док.Организация			Организация,
	|	Док.Партнер				Партнер,
	|	Док.Контрагент			Контрагент,
	|   ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) ФормаОтношений,
	|   Док.Сумма 				Сумма,
	|" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " СуммаУпр
	|ИЗ
	|	Документ.ОплатаБанковскойКартой Док  
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка И Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|;
		
	
	// ОБОРОТЫ ДЕНЕЖНЫХ СРЕДСТВ	
	
	|ВЫБРАТЬ
	|	&Период								КАК Период,
	|	Док.Касса							КАК КассаСчет,
	|	Док.СтатьяДДС						КАК СтатьяДДС,
	|	Док.Контрагент						КАК ФизЛицоПартнер,
	|	Подразделение, 
	|   Отдел,
	|   Отдел КАК ЦФУ,
	|	ВЫБОР 
	|		КОГДА ВидОперации = &Возврат
	|		ТОГДА -Док.Сумма	
	|		ИНАЧЕ  Док.Сумма
	|	КОНЕЦ  	Сумма,
	|	ВЫБОР 
	|		КОГДА ВидОперации = &Возврат
	|		ТОГДА " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("-Док.Сумма") + "
	|       ИНАЧЕ " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + "
	|	КОНЕЦ 	СуммаУпр
	|ИЗ
	|	Документ.ОплатаБанковскойКартой Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка
	|;	

	// ОплатыПоБанковскимКартам
	
	|ВЫБРАТЬ
	|	&Период				Период,
	//|	&ВидДвиженияПриход 	ВидДвижения,
	|	ВЫБОР КОГДА Док.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ)  // если возврат был в тот же день, сторнируем документ оплаты
	|		ТОГДА Док.Основание  
	|		ИНАЧЕ Док.Ссылка 					КОНЕЦ ДокументОплаты,
	|	ВЫБОР КОГДА Док.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) // если возврат был в тот же день, сторнируем документ оплаты
	|		ТОГДА &Продажа              
	|		ИНАЧЕ Док.Ссылка.ВидОперации		КОНЕЦ ВидОперации,	
	|	ВЫБОР
	|		КОГДА Док.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) // если возврат был в тот же день, сторнируем документ оплаты
	|		ТОГДА	-Док.Сумма     	
	|		ИНАЧЕ	 Док.Сумма			КОНЕЦ Сумма
	|ИЗ
	|	Документ.ОплатаБанковскойКартой Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|                            НачалоУчетаПодтвержденийОперацийПоБК
	|                        ИЗ
	|                            Константы) Конст
	|	ПО ИСТИНА
	|
	|ГДЕ
	|	Ссылка = &Ссылка И
	|	Конст.НачалоУчетаПодтвержденийОперацийПоБК <= &Период 
	//|	И ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|;
	
	//// ОПЛАТЫ
	//
	//|ВЫБРАТЬ
	//|	&Период		Период,
	//|	Ссылка 		ДокументОплаты,
	//|	Заказ,
	//|	Ссылка.Партнер,
	//|	Ссылка.Организация,
	//|	ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат
	//|		ТОГДА -СУММА(Сумма)
	//|		ИНАЧЕ  СУММА(Сумма)
	//|		КОНЕЦ  Сумма
	//|ИЗ
	//|	Документ.ОплатаБанковскойКартой.РасшифровкаСуммы
	//|ГДЕ
	//|	Ссылка = &Ссылка И Заказ <> Неопределено
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка,
	//|	Заказ
	//|;
	//
	//// АВАНСЫ
	//
	//|ВЫБРАТЬ
	//|	&Период				Период,
	//|	&ВидДвиженияПриход 	ВидДвижения,
	//|	Ссылка.Организация	Организация,
	//|	Ссылка.Партнер		Партнер,
	//|	Ссылка 				ДокументОплаты,
	//|	ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат
	//|		ТОГДА -СУММА(Сумма)
	//|		ИНАЧЕ  СУММА(Сумма)
	//|		КОНЕЦ  Сумма
	//|ИЗ
	//|	Документ.ОплатаБанковскойКартой.РасшифровкаСуммы
	//|ГДЕ
	//|	Ссылка = &Ссылка И Заказ = Неопределено
	//|СГРУППИРОВАТЬ ПО Ссылка
	//|;
	
	// ДОЛГИ КОНТРАГЕНТОВ
	
	//|ВЫБРАТЬ 
	//|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//|	ЕСТЬNULL(СуммаУпрОстаток, 0) - " + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " Сумма
	////|	ЕСТЬNULL(СуммаУпрОстаток, 0) СуммаВзаиморасчеты
	//|ИЗ
	//|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//|
	//|ПРАВОЕ СОЕДИНЕНИЕ
	//|	(ВЫБРАТЬ Дата, Организация, Контрагент, Ссылка, Сумма ИЗ Документ.ОплатаБанковскойКартой ГДЕ Ссылка = &Ссылка) Док
	//|ПО ИСТИНА
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	//|;
	
	
	|// ДОЛГИ ПО ОТГРУЗКАМ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация КАК Организация,
	|	Док.Партнер КАК Партнер,
	|	Док.Контрагент КАК Контрагент,
	|	Расшифровка.Заказ КАК Заказ,
	|	Расшифровка.ДокументОтгрузки	КАК ДокументОтгрузки,
	|	Выбор когда Ссылка.ВидОперации=&Продажа Тогда ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) Иначе -ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) Конец КАК Сумма
	|ИЗ
	|	Документ.ОплатаБанковскойКартой КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.ДокументОтгрузки КАК ДокументОтгрузки,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.ОплатаБанковскойКартой.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|;
	
	|	// Долги по заказам
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	&ВидДвиженияРасход 	ВидДвижения,
	|	Док.Организация 				КАК Организация,
	|	Док.Партнер 					КАК Партнер,
	|	&Менеджер					 	КАК Менеджер,
	|	Док.Контрагент 					КАК Контрагент,
	|	Расшифровка.Заказ 				КАК Заказ,
	|	Выбор когда Ссылка.ВидОперации=&Продажа Тогда ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) Иначе -ЕСТЬNULL(Расшифровка.Сумма, Док.Сумма) Конец КАК Сумма
	|ИЗ
	|	Документ.ОплатаБанковскойКартой КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расшифровка.Заказ КАК Заказ,
	|			Расшифровка.Сумма КАК Сумма
	|		ИЗ
	|			Документ.ОплатаБанковскойКартой.РасшифровкаСуммы КАК Расшифровка
	|		ГДЕ
	|			Расшифровка.Ссылка = &Ссылка) КАК Расшифровка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &Ссылка и док.Контрагент<>Значение(Справочник.Контрагенты.ПустаяСсылка)
	|");
	
	
	

	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Валюта", 			Ссылка.Валюта);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Возврат", 			Перечисления.ВидыОперацийЧекККМ.Возврат);
	Запрос.УстановитьПараметр("Продажа", 			Перечисления.ВидыОперацийЧекККМ.Продажа);
	Запрос.УстановитьПараметр("Менеджер", 			Справочники.Контрагенты.ПолучитьОсновногоМенеджераПартнера(Ссылка.Дата, Ссылка.Контрагент));
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Оплата);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Клиент);
		
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	ДополнительныеСвойства.Вставить("Взаиморасчеты", 	Пакет[3].Выгрузить());
	
	//ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",	Пакет[4].Выгрузить());
 
    ДополнительныеСвойства.Вставить("ОборотыДенежныхСредств", Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ОплатыПоБанковскимКартам",		Пакет[5].Выгрузить());
	
	//ДополнительныеСвойства.Вставить("Оплаты", Пакет[6].Выгрузить());
	//ДополнительныеСвойства.Вставить("Авансы", Пакет[7].Выгрузить());
	
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов", Пакет[8].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",	Пакет[6].Выгрузить());
	ДополнительныеСвойства.Вставить("ДолгиПоЗаказам", Пакет[7].Выгрузить());

КонецПроцедуры


