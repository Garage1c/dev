Функция ПолучитьКассуСписания()Экспорт Возврат Касса КонецФункции
Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ЧекККМ.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции


// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	Если Не Отказ Тогда
		ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	// Запись
	
	Движения.Записать();
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//// Контроль
	//
	////avdonin {{21.09.2010#
	////
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//Иначе
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//КонецЕсли;
	////}}avdonin
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	////}}avdonin
	//
	//КонтрольПроведения.ПроверитьПодтверждениеОплатПоБК(ЭтотОбъект.Ссылка, Отказ, Заголовок = "")
	
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Отдел.Пустая() Тогда Отдел = Касса.Отдел; КонецЕсли;
	
	Если Подразделение.Пустая() Тогда Подразделение = Отдел.Подразделение; КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Сумма = Товары.Итог("Сумма") + ?(СуммаВключаетНДС,0,Товары.Итог("СуммаНДС"));;
	
	Если Ссылка.Пустая() Тогда
		СтатьяДДС = ?(ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат, 
			Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("000000014"), 
			Константы.СтатьяУчетаДенежныхСредствПоЧекамККМ.Получить()); 
			
		ФункцииФормДокументов.ПриИзмененииСтатьиДДС(СтатьяДДС, СтатьяДДСБух);КонецЕсли;
		
	УстановитьПривилегированныйРежим(Ложь);
	
    Если Не ПроверитьЗаполнение() Тогда  	
		Отказ = Истина;                         	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЧекККМ") И ДанныеЗаполнения.Проведен Тогда
		
		Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда Возврат КонецЕсли;
		
		ТекущаяСмена = БизнесПроцессы.ПродажаВРозницу.ПолучитьТекущуюСмену(ДанныеЗаполнения.Касса);
		Если ТекущаяСмена = Неопределено Тогда Возврат КонецЕсли;
			
		ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат;
		Основание	= ДанныеЗаполнения;
		Процесс = ТекущаяСмена;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Дата, Номер, Ссылка, ПометкаУдаления, Проведен, Автор, Ответственный, ВидОперации, Основание, Процесс, НомерСменыККТ, НомерЧекаККТ, ПроведеноПоККТ");
		
		Товары.Загрузить(ДанныеЗаполнения.Товары.Выгрузить());
		Оплаты.Загрузить(ДанныеЗаполнения.Оплаты.Выгрузить());
		ПодарочныеКарты.Загрузить(ДанныеЗаполнения.ПодарочныеКарты.Выгрузить()); КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Перем НеПроверятьСтатьюДДС;
	
	// Удалим проверку в ценах и в сумме
	стЦена 	= ПроверяемыеРеквизиты.Найти("Товары.Цена"); Если стЦена <> Неопределено Тогда ПроверяемыеРеквизиты.Удалить(стЦена) КонецЕсли;
	стСумма = ПроверяемыеРеквизиты.Найти("Товары.Сумма"); Если стСумма <> Неопределено Тогда ПроверяемыеРеквизиты.Удалить(стСумма) КонецЕсли;
	стСумма = ПроверяемыеРеквизиты.Найти("Оплаты.Сумма"); Если стСумма <> Неопределено Тогда ПроверяемыеРеквизиты.Удалить(стСумма) КонецЕсли;
	
	Если ОбменДанными.Загрузка Или ДополнительныеСвойства.Свойство("НеПроверятьСтатьюДДС", НеПроверятьСтатьюДДС) Тогда
		
		Если НеПроверятьСтатьюДДС  = ИСТИНА Тогда
			инд = ПроверяемыеРеквизиты.Найти("СтатьяДДС");
			Если инд <> Неопределено Тогда
				ПроверяемыеРеквизиты.Удалить(инд) КонецЕсли; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	СтатьяДДС    = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	СтатьяДДСБух = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
КонецПроцедуры


