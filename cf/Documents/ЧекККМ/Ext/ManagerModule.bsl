
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	
	Запрос = Новый Запрос(
			 
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	// ШАПКА
	
	|ВЫБРАТЬ
	|	Склад, Касса
	|ИЗ
	|	Документ.ЧекККМ
	|ГДЕ
	|	Ссылка = &Ссылка
	|;
	|" + 
	РаботаСКурсамиВалют.ПолучитьТекстЗапросаКурсыВалют() + "
	|;
	
	// ТОВАРЫ НА СКЛАДАХ
		
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	ВЫБОР
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА &ВидДвиженияПриход	
	|		ИНАЧЕ &ВидДвиженияРасход КОНЕЦ ВидДвижения,
	|	Номенклатура,
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад ИНАЧЕ Склад КОНЕЦ Склад,
	|	ВЫБОР 
	|		КОГДА Упаковка = &ПустаяУпаковка 
	|		ТОГДА СУММА(Количество)
	|		ИНАЧЕ СУММА(Количество*Упаковка.Коэффициент) КОНЕЦ Количество
 	|ИЗ
	|	Документ.ЧекККМ.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.НеучтенныйТовар)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад	ИНАЧЕ Склад КОНЕЦ,
	|	Номенклатура,
	|	Упаковка
	|;
	
	// ПРОДАЖИ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	Ссылка.Процесс		Смена, 
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад	ИНАЧЕ Склад КОНЕЦ КАК Склад,
	|	Ссылка.Подразделение Подразделение,
	|	Ссылка.Отдел 		Отдел,
	|	Ссылка.Контрагент		Контрагент,
	|	Номенклатура,
	|	Упаковка,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА Ссылка.Основание 
	|		ИНАЧЕ Ссылка КОНЕЦ ДокументПродажи,
	|	Акция,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА -СУММА(Количество) 
	|		ИНАЧЕ  СУММА(Количество) КОНЕЦ Количество,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА -СУММА(СуммаПартии) 
	|		ИНАЧЕ  СУММА(СуммаПартии) КОНЕЦ Себестоимость,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат
	|		ТОГДА -СУММА(Сумма)
	|		ИНАЧЕ  СУММА(Сумма) 	 КОНЕЦ Сумма
	|ИЗ
	|	Документ.ЧекККМ.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,	
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад	ИНАЧЕ Склад КОНЕЦ,
	|	Номенклатура,
	|	Упаковка,
	|	Акция
	|;
	
	// ПРОДАЖИ В РОЗНИЦУ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	Ссылка 				Чек, 
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад	ИНАЧЕ Склад КОНЕЦ КАК Склад,
	|	Ссылка.Подразделение 	Подразделение,
	|	Ссылка.Отдел	Отдел,
	|	Ссылка.Продавец	Продавец,
	|	Номенклатура,
	|	Упаковка,
	|	Акция,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА -СУММА(Количество) 
	|		ИНАЧЕ  СУММА(Количество) КОНЕЦ Количество,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат
	|		ТОГДА -СУММА(Сумма)
	|		ИНАЧЕ  СУММА(Сумма) 	 КОНЕЦ Сумма
	|ИЗ
	|	Документ.ЧекККМ.Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,	
	|	ВЫБОР КОГДА Склад = &ПустойСклад ТОГДА Ссылка.Склад	ИНАЧЕ Склад КОНЕЦ,
	|	Номенклатура,
	|	Упаковка,
	|	Акция
	|;
	
	// ДЕНЕЖНЫЕ СРЕДСТВА
	
	|ВЫБРАТЬ
	|	&Период				КАК Период,
	|	ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА &ВидДвиженияРасход
	|		ИНАЧЕ &ВидДвиженияПриход КОНЕЦ ВидДвижения,
	|	Ссылка.Касса		КАК Касса,
    |	СУММА(Сумма)		КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплаты
	|
	|ГДЕ
	|	Ссылка 		= &Ссылка И
	|	ТипОплаты 	= &ТипОплатыНаличные
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|;
	
	// Продажи по дисконтным картам
	
	|ВЫБРАТЬ
	|	&Период									Период,
	|	Ссылка.ДисконтнаяКарта 					ИнформационнаяКарта,
	|	Ссылка.ДисконтнаяКарта.ВладелецКарты  	ВладелецКарты,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА -СУММА(Сумма)		
	|		ИНАЧЕ  СУММА(Сумма) КОНЕЦ Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплаты
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.ДисконтнаяКарта <> &ПустаяДисконтнаяКарта
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|;
	// Взвиморасчеты
	
	|ВЫБРАТЬ
	|	&Период							КАК Период,
	|	&ВидДвиженияПриход				КАК ВидДвижения,
	|	Док.Ссылка.Контрагент			КАК Контрагент,
	|	Док.Ссылка.Касса.Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,			
	|	СУММА(Док.Сумма)				КАК Сумма,
	|   СУММА(Док.Сумма) * (ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалЦенКурс), 1) * ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалУпрКратность), 1)) / (ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалУпрКурс), 1) * ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалЦенКратность), 1)) КАК СуммаУпр	
	|
	|ИЗ
	|	Документ.ЧекККМ.Оплаты Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Контрагент <> &ПустойКонтрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период							КАК Период,
	|	&ВидДвиженияРасход				КАК ВидДвижения,
	|	Док.Ссылка.Контрагент			КАК Контрагент,
	|	&Организация					КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,		
	|	СУММА(Док.Сумма)				КАК Сумма,
	|   СУММА(Док.Сумма) * (ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалЦенКурс), 1) * ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалУпрКратность), 1)) / (ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалУпрКурс), 1) * ЕСТЬNULL(МАКСИМУМ(КурсыВалют.ВалЦенКратность), 1)) КАК СуммаУпр	
	|ИЗ
	|	Документ.ЧекККМ.Оплаты Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Контрагент <> &ПустойКонтрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка
	|;
	
	// РОЗНИЧНЫЕ ПРОДАЖИ
	
	|ВЫБРАТЬ
	|	&Период				Период,
	|	Ссылка.Процесс 		Смена,
	|	ТипОплаты			ТипОплаты,
	|	ВЫБОР 
	|		КОГДА Ссылка.ВидОперации = &Возврат 
	|		ТОГДА -СУММА(Сумма)
	|		ИНАЧЕ  СУММА(Сумма) КОНЕЦ Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплаты
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,	ТипОплаты
	|;
	
	//ПодтвержениеОплатПоБанковскимКартам
	
	|ВЫБРАТЬ
	|	&Период						Период,
	//|	&ВидДвиженияПриход 			ВидДвижения,
	|	ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Ссылка.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Ссылка.Дата, ДЕНЬ) // если возврат был в тот же день, сторнируем чек-продажи
	|		ТОГДА Док.Ссылка.Основание 
	|		ИНАЧЕ Док.Ссылка 					КОНЕЦ ДокументОплаты,
	|	ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Ссылка.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Ссылка.Дата, ДЕНЬ) // если возврат был в тот же день, сторнируем чек-продажи
	|		ТОГДА &Продажа
	|		ИНАЧЕ Док.Ссылка.ВидОперации		КОНЕЦ ВидОперации,	
	|	ВЫБОР
	|		КОГДА Ссылка.ВидОперации = &Возврат И НАЧАЛОПЕРИОДА(Док.Ссылка.Основание.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(Док.Ссылка.Дата, ДЕНЬ)   // если возврат был в тот же день, сторнируем чек-продажи
	|		ТОГДА	-СУММА(Док.Сумма)         	
	|		ИНАЧЕ	 СУММА(Док.Сумма)			КОНЕЦ Сумма
	|			
	|ИЗ
	|	Документ.ЧекККМ.Оплаты Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ НачалоУчетаПодтвержденийОперацийПоБК ИЗ Константы
	|		) Конст ПО ИСТИНА
	|ГДЕ
	|	Ссылка = &Ссылка И
	//|	Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа) И
	|	ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипОплаты.БанковскаяКарта) И
	|	Конст.НачалоУчетаПодтвержденийОперацийПоБК <= &Период 
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка, ТипОплаты
	|;
	
	// ОБОРОТЫ ДЕНЕЖНЫХ СРЕДСТВ	
	
	|ВЫБРАТЬ
	|	&Период					Период,
	|	Док.КассаСчет 			КассаСчет,
	|	Док.СтатьяДДС 			СтатьяДДС,
	|	Док.ФизЛицоПартнер 		ФизЛицоПартнер,
	|	Подразделение, 
	|   Отдел,
	|   Отдел КАК ЦФУ,
	|   Док.Сумма 				Сумма,
	|	" + РаботаСКурсамиВалют.ПолучитьСуммуУпрВЗапросе("Док.Сумма") + " СуммаУпр 
	|ИЗ
	|	(ВЫБРАТЬ
	|		Ссылка.Касса				КассаСчет,
	|		Ссылка.СтатьяДДС			СтатьяДДС,
	|		Ссылка.Контрагент			ФизЛицоПартнер,
	|		Ссылка.Валюта				Валюта,
	|		Ссылка.ВидОперации          ВидОперации,
	|		Ссылка.Подразделение, Ссылка.Отдел,
	|		ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат
	|			ТОГДА	-СУММА(Сумма)
	|			ИНАЧЕ	 СУММА(Сумма) КОНЕЦ Сумма
	|		ИЗ			
	|			Документ.ЧекККМ.Оплаты
	|		ГДЕ
	|			Ссылка = &Ссылка И ТипОплаты = &ТипОплатыНаличные
	|		СГРУППИРОВАТЬ ПО Ссылка, ТипОплаты 	
	|	) Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют ПО ИСТИНА
	|	
	|;
	// СЧЕТЧИК КУПОНОВ
	//
	//|ВЫБРАТЬ
	//|	&Период 			Период,
	//|	&ВидДвиженияРасход 	ВидДвижения,
	//|	Купон,
	//|	1					Количество
	//|ИЗ
	//|	Документ.ЧекККМ.Купоны
	//|ГДЕ
	//|	Ссылка = &Ссылка
	//|;
	
	// ДОЛГИ КОНТРАГЕНТОВ
	
	//|ВЫБРАТЬ 
	//|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//|	ЕСТЬNULL(СуммаУпрОстаток, 0) + Док.Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК Сумма
	//|ИЗ
	//|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//|
	//|ПРАВОЕ СОЕДИНЕНИЕ
	//|	(	ВЫБРАТЬ Дата, &Организация Организация, Контрагент, Ссылка, Сумма ИЗ Документ.ЧекККМ ГДЕ Ссылка = &Ссылка
	//|		И Контрагент <> &ПустойКонтрагент) Док
	//|ПО ИСТИНА
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ 
	//|	РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
	//|	ПО	Ссылка.Валюта = ВалЦен.Валюта
	//|ЛЕВОЕ СОЕДИНЕНИЕ 
	//|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
	//|	ПО	ИСТИНА
	//|;
	
	// ПАРТИИ ТОВАРОВ
	//|ВЫБРАТЬ неопределено ГДЕ Истина=Ложь;
	//|ВЫБРАТЬ
	//|	&Период				КАК Период,
	//|		ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат
	//|		ТОГДА &ВидДвиженияПриход	
	//|		ИНАЧЕ &ВидДвиженияРасход КОНЕЦ ВидДвижения,
	//|	Ссылка.Склад, Партия, Номенклатура,
	//|	СУММА(ВЫБОР 
	//|		КОГДА Упаковка = &ПустаяУпаковка 
	//|		ТОГДА Количество
	//|		ИНАЧЕ Количество*Упаковка.Коэффициент КОНЕЦ) Количество,
	//|		СУММА(СуммаПартии) Сумма
	////|	СУММА(ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат ТОГДА -СуммаПартии ИНАЧЕ СуммаПартии КОНЕЦ) Сумма,
	////|	СУММА(ВЫБОР КОГДА Ссылка.ВидОперации = &Возврат ТОГДА -Количество ИНАЧЕ Количество КОНЕЦ * ВЫБОР КОГДА Упаковка = &ПустаяУпаковка ТОГДА 1 ИНАЧЕ Упаковка.Коэффициент КОНЕЦ ) Количество
	//|ИЗ
	//|	Документ.ЧекККМ.Товары
	//|ГДЕ
	//|	Ссылка = &Ссылка И СуммаПартии <> 0
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Ссылка, Партия, Номенклатура, Упаковка
	
	
	// ДолгиПоОтгрузкам
	|ВЫБРАТЬ
	|	&Период							КАК Период,
	|	&ВидДвиженияПриход				КАК ВидДвижения,
	|	Док.Контрагент			КАК Контрагент,
	|	Док.Касса.Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,			
	|	Док.Сумма				КАК Сумма
	|
	|ИЗ
	|	Документ.ЧекККМ Док
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Контрагент <> &ПустойКонтрагент
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период							КАК Период,
	|	&ВидДвиженияРасход				КАК ВидДвижения,
	|	Док.Контрагент			КАК Контрагент,
	|	&Организация					КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Клиент) 	ФормаОтношений,		
	|	Док.Сумма				КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ Док
	|
	|ГДЕ
	|	Ссылка = &Ссылка И Ссылка.Контрагент <> &ПустойКонтрагент
	|
	|
	|");
	
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("Валюта", 			Ссылка.Валюта);

	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ТипОплатыНаличные", 	Перечисления.ТипОплаты.Наличные);
	Запрос.УстановитьПараметр("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент", 		Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДисконтнаяКарта", 	Справочники.ИнформационныеКарты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка", 		Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Возврат", 			Перечисления.ВидыОперацийЧекККМ.Возврат);
	Запрос.УстановитьПараметр("Продажа", 			Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Касса.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Отгрузка);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Клиент);
	Запрос.УстановитьПараметр("ПустойКонтрагент", 	Справочники.Контрагенты.ПустаяСсылка());
	

	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 	Пакет[3].Выгрузить());
	ДополнительныеСвойства.Вставить("Продажи", 			Пакет[4].Выгрузить());
	ДополнительныеСвойства.Вставить("ПродажиВРозницу", 	Пакет[5].Выгрузить());
	
	ДополнительныеСвойства.Вставить("ДенежныеСредства", 		Пакет[6].Выгрузить());
	ДополнительныеСвойства.Вставить("ПродажиПоДисконтнымКартам", Пакет[7].Выгрузить());
	ДополнительныеСвойства.Вставить("Взаиморасчеты",			Пакет[8].Выгрузить());
	ДополнительныеСвойства.Вставить("РозничныеПродажи",			Пакет[9].Выгрузить());
	ДополнительныеСвойства.Вставить("ОплатыПоБанковскимКартам",	Пакет[10].Выгрузить());
    ДополнительныеСвойства.Вставить("ОборотыДенежныхСредств",	Пакет[11].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов",		Пакет[13].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПартииТоваров",			Пакет[14].Выгрузить());
    ДополнительныеСвойства.Вставить("ДолгиПоОтгрузкам",			Пакет[12].Выгрузить());
                       
КонецПроцедуры


Процедура Печать_ТоварныйЧек(ТабДокумент, Ссылка) Экспорт
	
	
	Макет = Документы.РеализацияТоваров.ПолучитьМакет("ТоварныйЧек");
		
	//ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	//|	Док.КассаККМ                  КАК КассаККМ,
	|	Док.Валюта                    КАК Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	ВЫБОР КОГДА Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ Покупатель,
	//|	Док.Кассир.Представление      КАК ОтветственныйПредставление,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Касса.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ						  КАК ОтветственныйПредставление,
	|	Док.Касса.Организация               КАК Организация,
	|	Док.Касса.Организация.Наименование  КАК Поставщик,
	|	Док.Сумма			          КАК СуммаДокумента,
	|	Док.Товары.(
	|		НомерСтроки                       КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                  КАК Код,
	|		Номенклатура.Артикул              КАК Артикул,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	//|		Док.Товары.Количество * Док.Товары.Цена - Док.Товары.Сумма КАК Скидка, // + ПроцентРучнойСкидки  ???
	|		СуммаАвтоматическойСкидки + СуммаРучнойСкидки Скидка,
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Если Не ПервыйДокумент Тогда
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		//
		//ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Выборка, НСтр("ru = 'Товарный чек'"));
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//ДопКолонка = ""; //Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		//ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			//ВыводитьКоды = Истина;
			//Колонка = "Код";
		//Иначе
		//	ВыводитьКоды = Ложь;
		//КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидки Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("СуммаБезСкидки").ШиринаКолонки
			                                  + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка         = ВыборкаСтрокТовары.Скидка;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
				ТабДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				ТабДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаСНДС = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				СуммаСНДС = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
			ТабДокумент.Присоединить(ОбластьСуммы);
			
			ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокТовары.Скидка;
			ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
			
		КонецЦикла;
		
		Товары = Выборка.Товары.Выгрузить();
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		
		СуммаНДС = Товары.Итог("СуммаНДС");
		Сумма    = Товары.Итог("Сумма");
		
		Если ЕстьНДС Тогда
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		Если Не Выборка.ЦенаВключаетНДС Тогда
			СуммаДокумента = Сумма + СуммаНДС;
		Иначе
			СуммаДокумента = Сумма;
		КонецЕсли;
		
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести Сумму прописью.
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ВыборкаСтрокТовары.Количество()
		                                       + ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(Выборка.СуммаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Выборка.СуммаДокумента, Выборка.Валюта);
		ТабДокумент.Вывести(ОбластьМакета);
	
		// Вывести подписи.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	
	
КонецПроцедуры


Процедура Печать_АктПриемПередачаТМЦ(ТабДокумент, Ссылка) Экспорт
		
	
	Макет = Документы.ЧекККМ.ПолучитьМакет("АктПриемПередачаТМЦ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                     КАК Номер,
	|	Док.Дата                      КАК Дата,
	|	Док.Ссылка                    КАК Ссылка,
	//|	Док.КассаККМ                  КАК КассаККМ,
	|	Док.Валюта                    КАК Валюта,
	|	Док.СуммаВключаетНДС          КАК ЦенаВключаетНДС,
	|	ВЫБОР КОГДА Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ Покупатель,
	//|	Док.Кассир.Представление      КАК ОтветственныйПредставление,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Касса.Организация
	|	ТОГДА
	|		Док.Ответственный.Наименование						         
	|	ИНАЧЕ
	|		"""" 
	|	КОНЕЦ						  КАК ОтветственныйПредставление,
	|	Док.Касса.Организация               КАК Организация,
	|	Док.Касса.Организация.Наименование  КАК Поставщик,
	|	Док.Сумма			          КАК СуммаДокумента,
	|	Док.Товары.(
	|		НомерСтроки                       КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                  КАК Код,
	|		Номенклатура.Артикул              КАК Артикул,
	|		Количество			              КАК Количество,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Упаковка)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	//|		Док.Товары.Количество * Док.Товары.Цена - Док.Товары.Сумма КАК Скидка, // + ПроцентРучнойСкидки  ???
	|		СуммаАвтоматическойСкидки + СуммаРучнойСкидки Скидка,
	|		Сумма    КАК Сумма,
	|		СуммаНДС КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Акт приема - передачи ТМЦ №"+Ссылка.Номер+" от "+Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПоставщикПокупатель");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		//////
		Если ЗначениеЗаполнено(Выборка.Покупатель) Тогда
			ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Покупатель, Выборка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыводитьКоды = Истина;
		Колонка = "Артикул";


		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСуммыБезНДС   = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаБезНДС");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
				
		Если ЕстьНДС Тогда
			ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСуммыБезНДС   = Макет.ПолучитьОбласть("Строка|СуммаБезНДС");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры);
			
			ТабДокумент.Присоединить(ОбластьДанных);
			//////
			
			//Если ЕстьНДС Тогда
			//	ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
			//	ТабДокумент.Присоединить(ОбластьСуммыНДС);
			//КонецЕсли;
			Если ЕстьНДС Тогда 
				СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;			
				Если Не Выборка.ЦенаВключаетНДС Тогда
					Сумма = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма;
				Иначе
					Сумма = ВыборкаСтрокТовары.Сумма; //с ндс
					СуммаБезНДС = ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
				КонецЕсли;
				ОбластьСуммыБезНДС.Параметры.СуммаБезНДС = СуммаБезНДС;
				ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
				///
				ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
				ТабДокумент.Присоединить(ОбластьСуммыНДС);
			Иначе
				СуммаБезНДС = 0;
				СуммаНДС = 0;
				Сумма = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			////////
			ОбластьСуммы.Параметры.Сумма = Сумма;
			ТабДокумент.Присоединить(ОбластьСуммы);				
		КонецЦикла;
		
		Товары = Выборка.Товары.Выгрузить();
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыБезНДС = Макет.ПолучитьОбласть("Итого|СуммаБезНДС");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		///////////
		Сумма    = Товары.Итог("Сумма");
		Если ЕстьНДС Тогда
			СуммаНДС = Товары.Итог("СуммаНДС");	
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаДокумента = Сумма + СуммаНДС;
				СуммаБезНДС = Сумма;
			Иначе
				СуммаДокумента = Сумма;
				СуммаБезНДС = Сумма - СуммаНДС;
			КонецЕсли;
			ОбластьСуммыБезНДС.Параметры.СуммаБезНДС = СуммаБезНДС;
			ТабДокумент.Присоединить(ОбластьСуммыБезНДС);
			
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабДокумент.Присоединить(ОбластьСуммыНДС);
		Иначе
			СуммаНДС = 0;
			СуммаБезНдс = 0;
			СуммаДокумента = Сумма;
		КонецЕсли;	
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабДокумент.вывести(ОбластьМакета);
			
	КонецЦикла;
	
КонецПроцедуры