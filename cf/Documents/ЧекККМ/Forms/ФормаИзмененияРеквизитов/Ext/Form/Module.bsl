
 &НаСервере
Функция ПровестиДокумент()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Чек = Ссылка.ПолучитьОбъект();
	
	Чек.Оплаты.Загрузить(Оплаты.Выгрузить());
	Чек.Процесс = Смена;
	
	Попытка
		
		Чек.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		
	Исключение
		
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при проведении чека
								|" + стрОшибки);
		Возврат Неопределено;
		
	КонецПопытки;
		
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат Чек.ССылка;
	
КонецФункции

&НаСервере
Функция ЭтоОплатаПоБанковскойКарте(ТипОплаты)
	
	 Возврат ТипОплаты = Перечисления.ТипОплаты.БанковскаяКарта;
	
КонецФункции

&НаКлиенте
Функция КонтрольВнесенияНомераБанковскойОперации(ВсякоРазно = Ложь)
	
	//делаем тупо
	ном = 0;
	Для Каждого Строка Из Оплаты Цикл ном = ном + 1;
		
		Если ЭтоОплатаПоБанковскойКарте(Строка.ТипОплаты) И ПустаяСтрока(Строка.НомерБанковскойОперации) Тогда
			
			// пальцем тычем
			
			Если ВсякоРазно Тогда
				ОбщиеФункции.СообщитьТекст("Не заполнен номер банковской операции",  "Оплаты[" + (Ном - 1) + "].НомерБанковскойОперации");
			Иначе
				ОбщиеФункции.СообщитьТекст("Не заполнен номер банковской операции", "НомерБанковскойОперации");
			КонецЕсли;
			
			Возврат Ложь;
       КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции



&НаКлиенте
Функция ВыполнитьЗаписьДанных()
	
	//Если НЕ КонтрольВнесенияНомераБанковскойОперации(Истина) Тогда
	//	Возврат Ложь;
	//КонецЕсли;

	
	// Проведем документ и закроем
				
	СсылкаЧека = ПровестиДокумент();
		
	Если СсылкаЧека <> Неопределено Тогда
			
		СобытияСистемы.ОповеститьОПробитииЧека(СсылкаЧека);
		Модифицированность = Ложь;
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	// данные записаны, сообщаем об этом
	Если ВыполнитьЗаписьДанных() Тогда
		ПоказатьПредупреждение(,"Данные успешно записаны",,"Предупреждение");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	// данные записаны корректно, закрываем форму
	Если ВыполнитьЗаписьДанных() Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОплаты(Знач Таблица)
	Оплаты.Загрузить(Таблица.Выгрузить());
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Ссылка = ВладелецФормы.Объект.Ссылка;
	Смена = ВладелецФормы.Объект.Процесс; 
	
	
	
	ЗаполнитьОплаты(ВладелецФормы.Объект.Оплаты);
	
КонецПроцедуры

///Жесткий BDSM от разработчиков платформы в виде отказа от модальности
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)	
	//Если Модифицированность Тогда
	//	
	//	Ответ = Вопрос("Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
	//	
	//	Если 	Ответ = КодВозвратаДиалога.Да Тогда
	//			Отказ = НЕ ВыполнитьЗаписьДанных();
	//		
	//	ИначеЕсли	
	//			Ответ = КодВозвратаДиалога.Отмена Тогда
	//			Отказ = Истина;
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//ВладелецФормы.Закрыть();
		
	Отказ = Истина;
		 
	Если Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаОтвета", ЭтаФорма),"Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
	иначе
		Отказ = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтвета(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполнитьЗаписьДанных();
		ЭтаФорма.Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры
///Конец
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Смена.Видимость = РольДоступна("ПолныеПрава") Или РольДоступна("ПолныеПраваВОбласти");
КонецПроцедуры

