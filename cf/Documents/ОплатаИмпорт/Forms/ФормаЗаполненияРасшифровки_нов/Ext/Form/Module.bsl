
&НаСервере
Функция ПолучитьТаблицуЗначенийСтрокой()
	
	НовТабл = ТабИнвойсы.Выгрузить();
	НовТабл.Очистить();
	
	СтрокиОплат = ТабИнвойсы.НайтиСтроки(Новый Структура("Оплатить", Истина));
	
	Для Каждого Строка Из СтрокиОплат Цикл
		ЗаполнитьЗначенияСвойств(НовТабл.Добавить(), Строка);
	КонецЦикла;
	
	Возврат ЗначениеВСтрокуВнутр(НовТабл);
	
КонецФункции
&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ПолучитьТаблицуЗначенийСтрокой());
	
КонецПроцедуры


Процедура ЗаполнитьТаблицу()
	
	Если Вид = 0 Тогда
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ Таб.ЗаказПоставщику, Таб.Сумма КАК Сумма ПОМЕСТИТЬ ТаблицаРасшифровка ИЗ &Таблица КАК Таб
	|;
	|ВЫБРАТЬ ЗаказПоставщику, Сумма(СуммаЗаказа) КАК СуммаЗаказа, СУММА(ДолгПоОплате) КАК ДолгПоОплате, СУММА(Сумма) КАК Сумма, МАКСИМУМ(Оплатить) КАК Оплатить
	|ИЗ
	|(ВЫБРАТЬ  ЗаказПоставщику, СуммаПриход КАК СуммаЗаказа, 0 КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоЗаказамПоставщику.Обороты(,,,Контрагент = &Контрагент)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ  ЗаказПоставщику, 0 КАК СуммаЗаказа, СуммаОстаток КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоЗаказамПоставщику.Остатки(,Контрагент = &Контрагент) Рег 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ЗаказПоставщику, 0 КАК СуммаЗаказа, Сумма КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоЗаказамПоставщику ГДЕ Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ЗаказПоставщику, 0 КАК СуммаЗаказа, 0 КАК ДолгПоОплате, Сумма КАК Сумма, ИСТИНА Оплатить ИЗ ТаблицаРасшифровка) Влож
	|СГРУППИРОВАТЬ ПО ЗаказПоставщику
	|ИМЕЮЩИЕ СУММА(ДолгПоОплате) >0
	|УПОРЯДОЧИТЬ ПО ЗаказПоставщику.Дата 
	|");
	Иначе
		Запрос = Новый Запрос("
		|ВЫБРАТЬ Таб.ЗаказПоставщику, Таб.Инвойс, Таб.Сумма КАК Сумма ПОМЕСТИТЬ ТаблицаРасшифровка ИЗ &Таблица КАК Таб
		|;
		|ВЫБРАТЬ ЗаказПоставщику, Инвойс, Сумма(СуммаЗаказа) КАК СуммаИнвойса, СУММА(ДолгПоОплате) КАК ДолгПоОплате, СУММА(Сумма) КАК Сумма, МАКСИМУМ(Оплатить) КАК Оплатить
		|ИЗ
		|(ВЫБРАТЬ  ЗаказПоставщику, Инвойс, СуммаПриход КАК СуммаЗаказа, 0 КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоИнвойсам.Обороты(,,,Контрагент = &Контрагент)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ  ЗаказПоставщику, Инвойс, 0 КАК СуммаЗаказа, СуммаОстаток КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоИнвойсам.Остатки(,Контрагент = &Контрагент) Рег 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ЗаказПоставщику, Инвойс, 0 КАК СуммаЗаказа, Сумма КАК ДолгПоОплате, 0 КАК Сумма, ЛОЖЬ Оплатить ИЗ РегистрНакопления.ДолгиПоИнвойсам ГДЕ Регистратор = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ЗаказПоставщику, Инвойс, 0 КАК СуммаЗаказа, 0 КАК ДолгПоОплате, Сумма КАК Сумма, ИСТИНА Оплатить ИЗ ТаблицаРасшифровка) Влож
		|СГРУППИРОВАТЬ ПО ЗаказПоставщику, Инвойс
		|ИМЕЮЩИЕ СУММА(ДолгПоОплате) >0
		|УПОРЯДОЧИТЬ ПО Инвойс.Дата 
		|");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", 	ДокументОплаты);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Таблица", 	ТабДокумента.Выгрузить());

	//Запрос.УстановитьПараметр("КонецПериода", ДокументОплаты.Дата);
	ТабИнвойсы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДокументОплаты = Параметры.ДокументОплаты;
	Контрагент = Параметры.Контрагент;
	Сумма = Параметры.Сумма;
	
	ТабДокумента.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы));
	ЗаполнитьТаблицу();
	
	ПересчитатьШапку();

КонецПроцедуры



&НаСервере
Процедура ПересчитатьШапку()
	
	СуммаРаспределить = Сумма -  ТабИнвойсы.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТабИнвойсыОплатитьПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабИнвойсы.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если НЕ СуммаРаспределить Тогда
			ТекДанные.Оплатить = Ложь; КонецЕсли;
		ТекДанные.Сумма = ?(ТекДанные.Оплатить, Мин(СуммаРаспределить, ТекДанные.ДолгПоОплате), 0); 
		ПересчитатьШапку();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	Элементы.ТабИнвойсыГруппа.Видимость = Вид=1;
	ЗаполнитьТаблицу();
КонецПроцедуры
