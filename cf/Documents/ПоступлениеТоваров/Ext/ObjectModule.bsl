Функция ПолучитьСкладСписания() Экспорт Возврат Склад КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары
	|ГДЕ
	|	Ссылка = &ДокументСсылка
	|";
	
КонецФункции
Функция ПолучитьТекстЗапросаПолученияСпискаРезервируемыхТоваров() Экспорт
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура
	|ИЗ
	|	Документ.ПоступлениеТоваров.Резервы
	|ГДЕ
	|	Ссылка = &ДокументСсылка И
	|	Размещение <> НЕОПРЕДЕЛЕНО
	|";
	
КонецФункции

// ПРЕДОПРЕДЕЛЕННЫЕ ФУНКЦИИ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Проверка возможности проведения
	//ТЗ=Товары.Выгрузить();
	//ТЗ.Свернуть("Инвойс");
	//Для Каждого Стр из ТЗ Цикл
	//	Если ЗначениеЗаполнено(Стр.Инвойс) Тогда
	//		Если Стр.Инвойс.Склад<>Склад Тогда
	//			Отказ=Истина;
	//			Сообщить("Табличная часть ""Товары"": склад в инвойсе "+Стр.Инвойс.Номер+" не совпадает со складом в документе!");
	//		КонецЕсли;
	//	КонецЕсли;	
	//КонецЦикла;
	//Если Отказ Тогда Возврат; КонецЕсли;
	
	// + neti Муталлапова 26.05.2017
	//Отказ = Документы.ПоступлениеТоваров.ПроверкаЗаполненияВесаОбъема(Ссылка);
	
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;
	// - neti Муталлапова 26.05.2017
	
	// Подготовка
	
	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриПроведенииДокумента(Ссылка);
	
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	                            
	// Последовательности
	
	//avdonin {{12.09.2010#
	//
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	//}}avdonin
	
	// Проведение
	
	ПроведенияДокументов.ПровестиПоВсемРегистрам(Метаданные().Движения, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись
	Движения.ТоварыВРезерве.ДополнительныеСвойства.Вставить("НеРегистрироватьДляВыгрузкиНаСайт",Истина);
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьЗаказыПоставщикам(ЭтотОбъект, Отказ, Заголовок);
	//КонтрольПроведения.ПроверитьТоварыПоставщиковВПути(ЭтотОбъект, Отказ, Заголовок);

	//КонтрольПроведения.ПроверитьРазмещениеЗаказов(ЭтотОбъект, Отказ, Заголовок);
	//КонтрольПроведения.ПроверитьТоварыВРезерве(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{21.09.2010#
	////
	//Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
	//	КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//Иначе
	//	КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок);
	//КонецЕсли;
	////}}avdonin
	
	// Установим статусы заказов
	
	Если 	Не Отказ И
			Не Заказы.УстановитьСостояниеЗаказовПоставщикуПриПроведении(Товары) Тогда
		Отказ = Истина; КонецЕсли;
	
	// Номера ГТД
	
	Если Не Отказ Тогда
		СохранитьНомераГТД(Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьНомераГТД(Отказ, Заголовок)
	
	// тупо переписывает реквизиты справочника номенклатура
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Док.Номенклатура,
	|	МАКСИМУМ(ВЫБОР КОГДА Док.НомерГТД = &ПустойНомерГТД ТОГДА Спр.НомерГТД ИНАЧЕ Док.НомерГТД КОНЕЦ) КАК НомерГТД,
	|	МАКСИМУМ(ВЫБОР КОГДА Док.СтранаПроисхождения = &ПустаяСтранаПроисхождения ТОГДА Спр.СтранаПроисхождения ИНАЧЕ Док.СтранаПроисхождения КОНЕЦ) КАК СтранаПроисхождения
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Док
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	(	ВЫБРАТЬ Ссылка, НомерГТД, СтранаПроисхождения
	|		ИЗ 		Справочник.Номенклатура 
	|		ГДЕ 	ДатаУстановкиНомераГТД < &Дата И
	|				Ссылка В(	ВЫБРАТЬ Номенклатура 
	|							ИЗ 		Документ.ПоступлениеТоваров.Товары 
	|							ГДЕ 	Ссылка = &Ссылка)
	|	) КАК Спр
	|ПО
	|	Спр.Ссылка = Док.Номенклатура
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР КОГДА Док.НомерГТД = &ПустойНомерГТД ТОГДА Спр.НомерГТД ИНАЧЕ Док.НомерГТД КОНЕЦ) 												<> МАКСИМУМ(Спр.НомерГТД) Или
	|	МАКСИМУМ(ВЫБОР КОГДА Док.СтранаПроисхождения = &ПустаяСтранаПроисхождения ТОГДА Спр.СтранаПроисхождения ИНАЧЕ Док.СтранаПроисхождения КОНЕЦ) 	<> МАКСИМУМ(Спр.СтранаПроисхождения)
	|");
	
	Запрос.УстановитьПараметр("Дата", 						Дата);
	Запрос.УстановитьПараметр("Ссылка", 					Ссылка);
	Запрос.УстановитьПараметр("ПустойНомерГТД", 			Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтранаПроисхождения", 	Справочники.Страны.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Номенклатура.ПолучитьОбъект();
		СправочникОбъект.НомерГТД 				= Выборка.НомерГТД;
		СправочникОбъект.СтранаПроисхождения 	= Выборка.СтранаПроисхождения;
		
		Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(СправочникОбъект) Тогда
			Отказ = Истина;
			Прервать; КонецЕсли; КонецЦикла;
		
		//ОбщиеФункции.СообщитьТекст("Обновлен номер ГТД справочника номенклатуры " + Выборка.Номенклатура); КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка

	Заголовок = КонтрольПроведения.ПолучитьСтандарнтыйЗаголовокПриОтменеПроведенияДокумента(Ссылка);
	
	//avdonin {{12.09.2010#
	// надо опять инициализировать доп. свойства для контроля остатка (чтобы тянуть информацию только по тем остаткам, которые изменялись)
	// в контроле по идее имеет смысл указывать, что это отмена проведения или передавать движения
	Документы[Метаданные().Имя].ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//}}avdonin
	
	// Последовательности
	
	//avdonin {{12.09.2010#
	// последний параметр - признак отмены проведения
	ПроведенияДокументов.ПоследовательностьОстаткиТоваров(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ, Истина);
	//}}avdonin
	
	// Запись
	
	Движения.ТоварыНаСкладах.Очистить();
	Движения.Записать();
	
	// Контроль
	
	КонтрольПроведения.ПроверитьПоВсемРегистрам(ЭтотОбъект, Отказ, Заголовок);
	
	//КонтрольПроведения.ПроверитьЗаказыПоставщикам(ЭтотОбъект, Отказ, Заголовок);
	//КонтрольПроведения.ПроверитьТоварыПоставщиковВПути(ЭтотОбъект, Отказ, Заголовок);

	//КонтрольПроведения.ПроверитьТоварыНаСкладах(ЭтотОбъект, Склад, Отказ, Заголовок);
	//КонтрольПроведения.ПроверитьТоварыВРезерве(ЭтотОбъект, Склад, Отказ, Заголовок);
	//
	////avdonin {{22.09.2010#
	//// выше правда делается оперативный контроль
	//КонтрольПроведения.ПроверитьТоварыНаСкладахНЕОперативно(ЭтотОбъект, Отказ, Заголовок, Истина);
	//}}avdonin
	
	Контролировать =  Константы.КонтрольОстатков.Получить();
	
	Анализ =  Обработки.АнализВлиянияОтменыПроведенияНаРегистрыНакопления.Создать();
		
	Анализ.Документ = ЭтотОбъект.Ссылка;
	Анализ.ЗаполнитьЗависимости();
		
	Если Анализ.ЗависимыеДокументы.Количество() Тогда
		
		Если Контролировать Тогда Отказ = Истина; КонецЕсли;
		
		Сообщить("Обнаружены зависимые документы" + Символы.ПС);
		Для Каждого Строка ИЗ Анализ.ЗависимыеДокументы Цикл
				
			Сообщить(Строка(Строка.Документ) + "
					|Регистр: " + Строка.ИмяРегистра + " Измерения: " + Строка.Измерения + " Ресурсы: " + Строка.Ресурсы);
						
		КонецЦикла;
	КонецЕсли;
	
	// Установим статусы заказов
	
	Если 	Не Отказ И
			Не Заказы.УстановитьСостояниеЗаказовПоставщикуПриПроведении(Товары) Тогда
		Отказ = Истина; КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Посчитаем сумму
	
	Сумма = Товары.Итог("Сумма") + ?(СуммаВключаетНДС,0,Товары.Итог("СуммаНДС"));
	
	// если документ-основание не заполнен, заполним сами
	Если Инвойс.Пустая() И Товары.Количество() Тогда Инвойс = Товары[0].Инвойс; КонецЕсли;	
	
	Если Курс=0 тогда Курс=1; КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипЗнч = ТипЗнч(ДанныеЗаполнения);
	
	//Если ТипЗнч = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипЗнч =  Тогда
		
		
	Если ТипЗнч = Тип("ДокументСсылка.ЗаказПоставщику") Тогда	
		
		// шапка
		
		Запрос = Новый Запрос("
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Организация, Партнер, Контрагент, Склад, ТипЦен, Валюта, УчитыватьНДС, СуммаВключаетНДС
			|ИЗ
			|	Документ.ЗаказПоставщику
			|ГДЕ
			|	Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		ВыборкаШапки = Запрос.Выполнить().Выбрать();
		Если ВыборкаШапки.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
		КонецЕсли;
		
		// товары
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ЗаказыПоставщикамОстатки.Номенклатура,
		                      |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК Заказ,
		                      |	ЗаказыПоставщикамОстатки.Упаковка,
		                      |	ЕСТЬNULL(ИнвойсТовары.Цена, ЗаказыПоставщикамОстатки.Цена) КАК Цена,
							  |" + Заказы.ПолучитьСуммуНДСВЗапросе("ЗаказыПоставщикамОстатки", "Остаток", "ЗаказПоставщику") + " СуммаНДС,
		                      |	ЗаказыПоставщикамОстатки.СтавкаНДС,
		                      |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК Количество,
		                      |	ЗаказыПоставщикамОстатки.СуммаОстаток КАК Сумма,
		                      |	ЕСТЬNULL(ИнвойсТовары.Количество, ЗаказПоставщикуТовары.Количество) КАК КоличествоПоДокументам
		                      |ИЗ
		                      |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику = &Ссылка) КАК ЗаказыПоставщикамОстатки
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		                      |		ПО ЗаказыПоставщикамОстатки.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
		                      |			И ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Инвойс.Товары КАК ИнвойсТовары
		                      |		ПО (ЗаказыПоставщикамОстатки.Номенклатура = ИнвойсТовары.Номенклатура
		                      |				И НЕ ИнвойсТовары.Ссылка.ПометкаУдаления)
		                      |			И (ЗаказыПоставщикамОстатки.ЗаказПоставщику = ИнвойсТовары.ЗаказПоставщику
		                      |				И НЕ ИнвойсТовары.Ссылка.ПометкаУдаления)");

		Запрос.Параметры.Вставить("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.Выполнить(); 
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ЭтотОбъект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;
		
		// резервы
		//ДатаСреза = Неопределено;
		//
		//Запрос = Новый Запрос("
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	Номенклатура,
		//|	Размещение,
		//|	Упаковка,
		//|	КоличествоОстаток	Количество
		//|ПОМЕСТИТЬ ОжидающиеЗаказы
		//|ИЗ
		//|	РегистрНакопления.РазмещениеЗаказовВПути.Остатки(, ЗаказПоставщику = &Ссылка)
		//|;
		//|	
		//|ВЫБРАТЬ
		//|	ЗаказПокупателя Заказ,
		//|	Номенклатура,
		//|	Упаковка,
		//|	ЕСТЬNULL(Упаковка.Коэффициент, 1) Коэффициент,
		//|	Размещение,
		//|	Цена,
		//|	Акция,
		//|	ПроцентРучнойСкидки,
		//|	ПроцентАвтоматическойСкидки,
		//|	СтавкаНДС,
		//|	Неопределено 		Заказчик,
		//|	КоличествоОстаток 	Количество,
		//|	СуммаОстаток Сумма
		//|ПОМЕСТИТЬ Заказы
		//|ИЗ
		//|	РегистрНакопления.ЗаказыПокупателей.Остатки(" + ?(ДатаСреза = Неопределено,"","&Дата") + ",
		//|                          	ЗаказПокупателя В(ВЫБРАТЬ Размещение ИЗ ОжидающиеЗаказы) И
		//|								Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ОжидающиеЗаказы))
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	ИнтернетЗаказ Заказ,
		//|	Номенклатура,
		//|	Упаковка,
		//|	ЕСТЬNULL(Упаковка.Коэффициент, 1) Коэффициент,
		//|	Размещение,
		//|	Цена,
		//|	Акция,
		//|	ПроцентРучнойСкидки,
		//|	ПроцентАвтоматическойСкидки,
		//|	СтавкаНДС,
		//|	Неопределено 		Заказчик,
		//|	КоличествоОстаток 	Количество,
		//|	СуммаОстаток 		Сумма
		//|ИЗ
		//|	РегистрНакопления.ИнтернетЗаказПокупателя.Остатки(" + ?(ДатаСреза = Неопределено,"","&Дата") + ",
		//|                           	ИнтернетЗаказ В(ВЫБРАТЬ Размещение ИЗ ОжидающиеЗаказы) И
		//|								Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ОжидающиеЗаказы))
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	ВнутреннийЗаказ Заказ,
		//|	Номенклатура,
		//|	Упаковка,
		//|	ЕСТЬNULL(Упаковка.Коэффициент, 1) Коэффициент,
		//|	Размещение,
		//|	0 					Цена,
		//|	Неопределено 		Акция,
		//|	0 					ПроцентРучнойСкидки,
		//|	0 					ПроцентАвтоматическойСкидки,
		//|	Неопределено		СтавкаНДС,
		//|	Заказчик	 		Заказчик,
		//|	КоличествоОстаток 	Количество,
		//|	0			 		Сумма
		//|ИЗ
		//|	РегистрНакопления.ВнутренниеЗаказы.Остатки(" + ?(ДатаСреза = Неопределено,"","&Дата") + ",
		//|                         ВнутреннийЗаказ В(ВЫБРАТЬ Размещение ИЗ ОжидающиеЗаказы) И
		//|							Номенклатура В(ВЫБРАТЬ Номенклатура ИЗ ОжидающиеЗаказы))
		//|;
		//|ВЫБРАТЬ
		//|	Разм.Номенклатура,
		//|	Разм.Упаковка,
		//|	Разм.Размещение,
		//|	Разм.Количество,
		//|	Зак.Цена,
		//|	Зак.СтавкаНДС,
		//|	Зак.Акция,
		//|	Зак.ПроцентРучнойСкидки,
		//|	Зак.ПроцентАвтоматическойСкидки,
		//|	Зак.Заказчик,
		//|	&Ссылка ЗаказПоставщику
		//|
		//|ИЗ
		//|	ОжидающиеЗаказы  Разм
		//|	ЛЕВОЕ СОЕДИНЕНИЕ
		//|		Заказы   Зак
		//|   ПО Разм.Размещение = Зак.Заказ И Разм.Номенклатура = Зак.Номенклатура И Разм.Упаковка = Зак.Упаковка
		//|");
		//
		//Запрос.Параметры.Вставить("Ссылка", ДанныеЗаполнения);
		//
		//РезультатЗапроса = Запрос.Выполнить(); 
		//Если НЕ РезультатЗапроса.Пустой() Тогда
		//	ЭтотОбъект.Резервы.Загрузить(РезультатЗапроса.Выгрузить());
		//КонецЕсли;
		
	ИначеЕсли ТипЗнч = Тип("ДокументСсылка.Инвойс") Тогда
		
		// шапка
		
		Запрос = Новый Запрос("
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Ссылка Инвойс, Организация, Партнер, Контрагент, Склад, ТипЦен, Валюта, УчитыватьНДС, СуммаВключаетНДС
			|ИЗ
			|	Документ.Инвойс
			|ГДЕ
			|	Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		ВыборкаШапки = Запрос.Выполнить().Выбрать();
		Если ВыборкаШапки.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
		КонецЕсли;
		
		// товары
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	Тов.Номенклатура,
		                      |	Тов.ЗаказПоставщику КАК Заказ,
		                      |	Тов.Инвойс,
		                      |	Тов.Упаковка,
		                      |	Тов.Цена,
		                      |	Тов.СтавкаНДС,
		                      |	Тов.КоличествоОстаток КАК Количество,
		                      |	Тов.СуммаОстаток КАК Сумма,
		                      |	Себ.СебестоимостьУпр * Тов.КоличествоОстаток КАК СуммаПартии,
		                      |	ИнвойсТовары.Количество КАК КоличествоПоДокументам
		                      |ИЗ
		                      |	РегистрНакопления.ТоварыПоставщиковВПути.Остатки(, Инвойс = &Ссылка) КАК Тов
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетСебестоимости.СрезПоследних(, Инвойс = &Ссылка) КАК Себ
		                      |		ПО Тов.Номенклатура = Себ.Номенклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Инвойс.Товары КАК ИнвойсТовары
		                      |		ПО Тов.Номенклатура = ИнвойсТовары.Номенклатура
		                      |			И Тов.Инвойс = ИнвойсТовары.Ссылка");
		Запрос.Параметры.Вставить("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.Выполнить(); 
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ЭтотОбъект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;
		
	ИначеЕсли ТипЗнч = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		// Шапка
		
		СуммаВключаетНДС 	= ДанныеЗаполнения.СуммаВключаетНДС;
		Организация			= ДанныеЗаполнения.Организация;
		ТипЦен				= Справочники.ТипыЦен.НайтиПоКоду("000000007");
		Валюта				= ТипЦен.Валюта;
		
		// Таблица
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Номенклатура,
		|	Количество,
		|	Цена,
		|	Сумма,
		|	Упаковка,
		|	СтавкаНДС
		|ИЗ
		|	Документ.РеализацияТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Выборка = Запрос.Выполнить().Выбрать();
		
		// Пересчет
		
		Пока Выборка.Следующий() Цикл
			
			НовСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
			
			ЗакЦена = РаботаСНоменклатурой.ПолучитьЦену(Выборка.Номенклатура, ТипЦен);
			
			Если ЗакЦена Тогда
				
				НовСтрока.Цена 		= ЗакЦена;
				//НовСтрока.Сумма 	= ЗакЦена * НовСтрока.Количество;
				//НовСтрока.СуммаНДС 	= КэшируемыеФункции.ПолучитьЧислоСтавкиНДС(НовСтрока.СтавкаНДС) * НовСтрока.Сумма * 0.01;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// + neti Муталлапова 02.06.2017
	Статус = Перечисления.СтатусыПоступленияТоваров.Создано;
	// - neti Муталлапова 02.06.2017
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Склад.Ячеестый Тогда
		
		ПроверяемыеРеквизиты.Добавить("Товары.Ячейка");
			
	КонецЕсли;
	
КонецПроцедуры

// + neti 29.05.2017 Муталлапова

Процедура УстановитьСтатусыДокументов(СтатусЗаказа, ЭтоПроведение)

	Запрос = Новый Запрос;
	
	Если Не ЭтоПроведение Тогда 
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеТоваровТовары.Заказ
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|ГДЕ
		|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
		|	И ПоступлениеТоваровТовары.Заказ.Статус <> &Статус";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Статус", СтатусЗаказа);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			ЗаказОбъект = Выборка.Заказ.ПолучитьОбъект();
			ЗаказОбъект.Статус = СтатусЗаказа;
			ЗаказОбъект.Записать();
		КонецЦикла;
		
	ИначеЕсли Документы.ПоступлениеТоваров.ЕстьРасхожденияПоКоличествуВДокументе(Ссылка) Тогда
		
		Статус = Перечисления.СтатусыПоступленияТоваров.Претензия;
		
	ИначеЕсли Не Документы.ПоступлениеТоваров.ЕстьИнвойс(Ссылка) Тогда  
		
		Статус = Перечисления.СтатусыПоступленияТоваров.Оприходовано;					
		
	ИначеЕсли Документы.ПоступлениеТоваров.ЕстьРасхожденияПоКоличествуВПоступленииИИнвойсе(Ссылка) Тогда
		
		Статус = Перечисления.СтатусыПоступленияТоваров.Претензия;
		ОтправитьПисьма();
		
	Иначе 
		
		Статус = Перечисления.СтатусыПоступленияТоваров.Оприходовано;
		
	КонецЕсли;
	
	Если ЭтоПроведение Тогда
		УстановитьСтатусыЗаказов();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьСтатусыЗаказов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Заказ КАК Заказ,
	|	МАКСИМУМ(ЗаказПоставщикуТовары.Количество <> ПоступлениеТоваровТовары.Количество) КАК ЕстьРасхождения
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО ПоступлениеТоваровТовары.Заказ = ЗаказПоставщикуТовары.Ссылка
	|			И ПоступлениеТоваровТовары.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Заказ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		ЗаказОбъект = Выборка.Заказ.ПолучитьОбъект();
		СтатусЗаказа = ?(Выборка.ЕстьРасхождения, Перечисления.СтатусыЗаказаПоставщику.ЧастичноеПоступление, Перечисления.СтатусыЗаказаПоставщику.Оприходован);
		ЗаказОбъект.Статус = СтатусЗаказа;
		ЗаказОбъект.Записать();		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьПисьма()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ПоступлениеТоваровТовары.КоличествоПоДокументам - ЕСТЬNULL(ИнвойсТовары.Количество, 0) КАК Разница,
	|	ПоступлениеТоваровТовары.Номенклатура.КатегорияТовара,
	|	ПоступлениеТоваровТовары.Номенклатура.Поставщик.МенеджерЗакупок,
	|	ПоступлениеТоваровТовары.Номенклатура.Поставщик.МенеджерЗакупок.Почта,
	|	ПоступлениеТоваровТовары.НомерСтроки
	|ПОМЕСТИТЬ РасхожденияНоменклатуры
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Инвойс.Товары КАК ИнвойсТовары
	|		ПО ПоступлениеТоваровТовары.Заказ = ИнвойсТовары.ЗаказПоставщику
	|			И ПоступлениеТоваровТовары.Номенклатура = ИнвойсТовары.Номенклатура
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|	И ПоступлениеТоваровТовары.КоличествоПоДокументам <> ЕСТЬNULL(ИнвойсТовары.Количество, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КатегорииТоваров.КатегорийныйМенеджер,
	|	КатегорииТоваров.Ссылка КАК КатегорияТовара,
	|	КатегорииТоваров.КатегорийныйМенеджер.Почта
	|ПОМЕСТИТЬ КатегорийныеМенеджеры
	|ИЗ
	|	Справочник.КатегорииТоваров КАК КатегорииТоваров
	|ГДЕ
	|	КатегорииТоваров.Ссылка В
	|			(ВЫБРАТЬ
	|				РасхожденияНоменклатуры.НоменклатураКатегорияТовара
	|			ИЗ
	|				РасхожденияНоменклатуры КАК РасхожденияНоменклатуры)
	|	И НЕ КатегорииТоваров.ПометкаУдаления
	|	И КатегорииТоваров.КатегорийныйМенеджер <> ЗНАЧЕНИЕ(Справочник.КатегорииТоваров.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасхожденияНоменклатуры.Номенклатура,
	|	РасхожденияНоменклатуры.Разница,
	|	РасхожденияНоменклатуры.НоменклатураПоставщикМенеджерЗакупок КАК Закупщик,
	|	КатегорийныеМенеджеры.КатегорийныйМенеджер,
	|	КатегорийныеМенеджеры.КатегорийныйМенеджерПочта,
	|	РасхожденияНоменклатуры.НоменклатураПоставщикМенеджерЗакупокПочта КАК ЗакупщикПочта,
	|	РасхожденияНоменклатуры.НомерСтроки
	|ПОМЕСТИТЬ Предварительныя
	|ИЗ
	|	РасхожденияНоменклатуры КАК РасхожденияНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КатегорийныеМенеджеры КАК КатегорийныеМенеджеры
	|		ПО РасхожденияНоменклатуры.НоменклатураКатегорияТовара = КатегорийныеМенеджеры.КатегорияТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Предварительныя.Номенклатура),
	|	Предварительныя.Разница,
	|	Предварительныя.Закупщик КАК Закупщик,
	|	Предварительныя.ЗакупщикПочта,
	|	Предварительныя.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Предварительныя КАК Предварительныя
	|ГДЕ
	|	Предварительныя.Закупщик <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Закупщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Предварительныя.Номенклатура),
	|	Предварительныя.Разница,
	|	Предварительныя.КатегорийныйМенеджер КАК КатегорийныйМенеджер,
	|	Предварительныя.КатегорийныйМенеджерПочта,
	|	Предварительныя.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Предварительныя КАК Предварительныя
	|ГДЕ
	|	Предварительныя.КатегорийныйМенеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	КатегорийныйМенеджер";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результаты = Запрос.ВыполнитьПакет();
	ВыборкаМенеджер = Результаты[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаМенеджер.Следующий() Цикл 
		
		ОтправитьПисьмоОРасхожденииКоличества(ВыборкаМенеджер.Закупщик, ВыборкаМенеджер);
		
	КонецЦикла;
	
	ВыборкаМенеджер = Результаты[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаМенеджер.Следующий() Цикл 
		
		ОтправитьПисьмоОРасхожденииКоличества(ВыборкаМенеджер.КатегорийныйМенеджер, ВыборкаМенеджер);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьПисьмоОРасхожденииКоличества(Получатель, ВыборкаМенеджер)
	
	Кому = Получатель.Почта;
	Менеджер = Получатель;

	Копия = "";
	ТемаПисьма = "Оповещение о расхождении количества товара в документах";
	
	ТекстПисьмаТело = 
	"<HTML><HEAD>
	|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
	|<META name=GENERATOR content=""MSHTML 11.00.9600.18538""></HEAD>
	|<BODY>
	|<P>Добрый день!</P>
	|<P>В документе Поступление товаров №" + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + " г. есть расхождения по количеству</P>";
	
	ВыборкаДетали = ВыборкаМенеджер.Выбрать();
	
	Пока ВыборкаДетали.Следующий() Цикл 
		
		ТекстПисьмаТело = ТекстПисьмаТело + 			
		"
		|<P>В строке №" + Формат(ВыборкаДетали.НомерСтроки, "") + " г. есть расхождения по количеству по номенклатуре " + ВыборкаДетали.НоменклатураПредставление + " расхождение с инвойсом в " + Формат(ВыборкаДетали, "") + "</P>";
		
	КонецЦикла;

	ТекстПисьма = ТекстПисьмаТело;		
	
	Письмо = ОбщиеФункции.ОповеститьПоПочте(Кому, ТемаПисьма, ТекстПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML, , , , Копия);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = Перечисления.СтатусыПоступленияТоваров.Создано;
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	// + neti 29.05.2017 Муталлапова	
	СтатусЗаказа = Перечисления.СтатусыЗаказаПоставщику.ПустаяСсылка();
	
	Если ПометкаУдаления Тогда
		СтатусЗаказа = Перечисления.СтатусыЗаказаПоставщику.Создан; 
	ИначеЕсли Не Проведен Тогда
		СтатусЗаказа = Перечисления.СтатусыЗаказаПоставщику.НаПриемке;
	КонецЕсли;
	                                     
	УстановитьСтатусыДокументов(СтатусЗаказа, Проведен);
	// - neti 29.05.2017 Муталлапова
	
КонецПроцедуры
// - neti 29.05.2017 Муталлапова
