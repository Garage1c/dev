
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	//ТекстВычисленияЦеныБезНДС = РаботаСНоменклатурой.ПолучитьТекстЗапросаДляВычисленияЦеныБезНДС(Ссылка.ТипЦен);
	
	ИменаРегистров = Новый Массив;
	ПоВсем=Ложь;
	Если Не ДополнительныеСвойства.Свойство("ИменаРегистров",ИменаРегистров) Тогда
		ПоВсем=Истина;
		ИменаРегистров = Новый Массив;
	КонецЕсли;	
	
	
	ТекстЗапроса=КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() +Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	
	"ВЫБРАТЬ
	|	Склад, Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваров
	|ГДЕ
	|	Ссылка = &Ссылка";
	
	
	Нтаб=Новый Структура;
	ТекНомер=1;	
	
	Если ИменаРегистров.Найти("ТоварыНаСкладах")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыНаСкладах",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	
		
		// ТОВАРЫ НА СКЛАДАХ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход	КАК ВидДвижения,
		|	Ссылка.Склад		КАК Склад,
		|	Номенклатура,
		|	Цена,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка 
		|		ТОГДА СУММА(Количество)
		|		ИНАЧЕ СУММА(Количество*Упаковка.Коэффициент) КОНЕЦ Количество,
		|	СУММА(Сумма)		КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|   И НЕ Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|	И (НЕ Ссылка.Склад.Ячеестый ИЛИ НЕ Ячейка.ЭтоЗонаПриемки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Номенклатура,
		|	Упаковка,
		|	Цена"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("Взаиморасчеты")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Взаиморасчеты",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ВЗАИМОРАСЧЕТЫ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход	КАК ВидДвижения,
		|   Организация	КАК Организация,
		|	Контрагент	КАК Контрагент,
		|	ЗНАЧЕНИЕ(Перечисление.ФормаОтношений.Поставщик) 	ФормаОтношений,			
		|	Сумма		КАК Сумма,
		|   Сумма * Курс КАК СуммаУпр
		|ИЗ
		|	Документ.ПоступлениеТоваров
		|ГДЕ
		|	Ссылка = &Ссылка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ТоварыВЯчейках")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВЯчейках",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ЯЧЕЙКИ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход	КАК ВидДвижения,
		|	Ячейка,
		|	Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка 
		|		ТОГДА СУММА(Количество)
		|		ИНАЧЕ СУММА(Количество*Упаковка.Коэффициент) КОНЕЦ Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка И Ячейка.Владелец = Ссылка.Склад
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		//	|	Ячейка <> &ПустаяЯчейка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ячейка,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ЗаказыПоставщикам")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ЗаказыПоставщикам",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ЗАКАЗЫ ПОСТАВЩИКАМ
		
		"ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияРасход	ВидДвижения,
		|	Заказ 				ЗаказПоставщику,
		|	Номенклатура,
		|	Упаковка,
		|	Цена,
		|	СтавкаНДС,
		|	СУММА(Количество)	КАК Количество,
		|	СУММА(Сумма)		КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка И 
		|	Инвойс = ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяСсылка) И
		|	Заказ ССЫЛКА Документ.ЗаказПоставщику И Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Заказ,
		|	Инвойс,
		|	Номенклатура,
		|	Упаковка,
		|	Цена,
		|	СтавкаНДС"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ТоварыПоставщиковВПути")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыПоставщиковВПути",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ТОВАРЫ ПОСТАВЩИКОВ В ПУТИ
		
		"ВЫБРАТЬ
		|	&Период				Период,
		|	&ВидДвиженияРасход	ВидДвижения,
		|	Заказ 				ЗаказПоставщику,
		|	Инвойс,
		|	Номенклатура,
		|	Упаковка,
		|   Цена,
		|	СтавкаНДС,
		|	СУММА(Количество)	КАК Количество,
		|	СУММА(Сумма)		КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка И Инвойс <> ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяСсылка)
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	Заказ,
		|	Инвойс,
		|	Номенклатура,
		|	Упаковка,
		|	Цена,
		|	СтавкаНДС"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("РазмещениеЗаказов")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("РазмещениеЗаказов",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// РАЗМЕЩЕНИЕ ЗАКАЗОВ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход  КАК ВидДвижения,
		|	Очередь 			КАК Очередь,
		|	Размещение			КАК Заказ,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество)	Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	Очередь <> 0 И
		|	Размещение <> Неопределено И ЗаказПоставщику = &ПустойЗаказПоставщику
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	Размещение,
		|	Очередь,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ТоварыВРезерве")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ТоварыВРезерве",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ТОВАРЫ В РЕЗЕРВЕ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход  КАК ВидДвижения,
		|	Размещение			КАК ДокументРезерва,
		|	Ссылка.Склад		КАК Размещение,
		|	Номенклатура		КАК Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка 
		|		ТОГДА СУММА(Количество)
		|		ИНАЧЕ СУММА(Количество*Упаковка.Коэффициент) КОНЕЦ Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы
		|
		|ГДЕ
		|	Ссылка = &Ссылка 
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		//|	И Очередь <> 0 
		//|	И Размещение <> Неопределено
		|
		|СГРУППИРОВАТЬ ПО
		|	Ссылка,
		|	Размещение,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ЗаказыПокупателей")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ЗаказыПокупателей",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ЗАКАЗЫ ПОКУПАТЕЛЕЙ
		
		"ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход			  		КАК ВидДвижения,
		|	Док.Размещение						КАК ЗаказПокупателя,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Очередь							КАК Размещение,
		|	Док.Цена							КАК Цена,
		|	Док.Акция							КАК Акция,
		|	Док.ПроцентРучнойСкидки				КАК ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки		КАК ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС						КАК СтавкаНДС,
		|	-СУММА(Док.Количество)				КАК Количество,
		|	-СУММА(Док.Сумма)					КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка И
		|	НЕ Док.СпособРазмещенияБезЗаказа И
		|	Док.Размещение ССЫЛКА Документ.ЗаказПокупателя
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка,
		|	Док.Очередь,
		|	Док.Цена,
		|	Док.Акция,
		|	Док.ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход				  	КАК ВидДвижения,
		|	Док.Размещение						КАК ЗаказПокупателя,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Ссылка.Склад					КАК Размещение,
		|	Док.Цена							КАК Цена,
		|	Док.Акция                           КАК Акция,
		|	Док.ПроцентРучнойСкидки				КАК ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки		КАК ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС						КАК СтавкаНДС,
		|	СУММА(Док.Количество)				КАК Количество,
		|	СУММА(Док.Сумма)					КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка И
		|	НЕ Док.СпособРазмещенияБезЗаказа И
		|	Док.Размещение ССЫЛКА Документ.ЗаказПокупателя
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка,
		|	Док.Ссылка.Склад,
		|	Док.Цена,
		|	Док.Акция,
		|	Док.ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ИнтернетЗаказПокупателя")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ИнтернетЗаказПокупателя",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ИНТЕРНЕТ ЗАКАЗЫ ПОКУПАТЕЛЕЙ
		
		"ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход			  		КАК ВидДвижения,
		|	Док.Размещение						КАК ИнтернетЗаказ,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Очередь							КАК Размещение,
		|	Док.Цена							КАК Цена,
		|	Док.Акция							КАК Акция,
		|	Док.ПроцентРучнойСкидки				КАК ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки		КАК ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС						КАК СтавкаНДС,
		|	-СУММА(Док.Количество)				КАК Количество,
		|	-СУММА(Док.Сумма)					КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка И
		|	НЕ Док.СпособРазмещенияБезЗаказа И
		|	Док.Размещение ССЫЛКА Документ.ИнтернетЗаказПокупателя
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка,
		|	Док.Очередь,
		|	Док.Цена,
		|	Док.Акция,
		|	Док.ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход				  	КАК ВидДвижения,
		|	Док.Размещение						КАК ИнтернетЗаказ,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Ссылка.Склад					КАК Размещение,
		|	Док.Цена							КАК Цена,
		|	Док.Акция							КАК Акция,
		|	Док.ПроцентРучнойСкидки				КАК ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки		КАК ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС						КАК СтавкаНДС,
		|	СУММА(Док.Количество)				КАК Количество,
		|	СУММА(Док.Сумма)					КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка И
		|	НЕ Док.СпособРазмещенияБезЗаказа И
		|	Док.Размещение ССЫЛКА Документ.ИнтернетЗаказПокупателя
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка,
		|	Док.Ссылка.Склад,
		|	Док.Цена,
		|	Док.Акция,
		|	Док.ПроцентРучнойСкидки,
		|	Док.ПроцентАвтоматическойСкидки,
		|	Док.СтавкаНДС"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("Поставщики")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Поставщики",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ПОСТАВЩИКИ
		
		"ВЫБРАТЬ
		|	&Период					Период,
		|	Док.Номенклатура		Номенклатура,
		|	Док.Ссылка.Контрагент		Поставщик,
		|	Док.Ссылка.Контрагент	Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка 	
		|	СГРУППИРОВАТЬ ПО Ссылка, Номенклатура"
		
	КонецЕсли;	
	
	//Если ИменаРегистров.Найти("ДолгиКонтрагентов")<>Неопределено ИЛИ ПоВсем Тогда
	//	ТекНомер=ТекНомер+1;
	//	Нтаб.Вставить("ДолгиКонтрагентов",ТекНомер);
	//	
	//	ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
	//	
	//	// ДОЛГИ КОНТРАГЕНТОВ
	//	
	//	"ВЫБРАТЬ 
	//	|	&ВидОперацииОплата ВидОперации, &ФормаОтношений ФормаОтношений, Док.Организация, Док.Контрагент, Ссылка Документ, Док.Дата Дата, Док.Дата Период,
	//	|	ЕСТЬNULL(СуммаУпрОстаток, 0) - Док.Сумма * (ЕСТЬNULL(ВалЦен.Курс, 1) * ЕСТЬNULL(ВалУпр.Кратность, 1)) / (ЕСТЬNULL(ВалУпр.Курс, 1) * ЕСТЬNULL(ВалЦен.Кратность, 1)) КАК Сумма
	//	|ИЗ
	//	|	РегистрНакопления.Взаиморасчеты.Остатки(&Период, Организация = &Организация И Контрагент = &Контрагент)
	//	|
	//	|ПРАВОЕ СОЕДИНЕНИЕ
	//	|	(ВЫБРАТЬ Дата, Организация, Контрагент, Ссылка, Сумма ИЗ Документ.ПоступлениеТоваров ГДЕ Ссылка = &Ссылка) Док
	//	|ПО ИСТИНА
	//	|
	//	|ЛЕВОЕ СОЕДИНЕНИЕ 
	//	|	РегистрСведений.КурсыВалют.СрезПоследних(, ) ВалЦен
	//	|	ПО	Ссылка.Валюта = ВалЦен.Валюта
	//	|ЛЕВОЕ СОЕДИНЕНИЕ 
	//	|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ Значение ИЗ Константа.ВалютаУправленческогоУчета)) ВалУпр
	//	|	ПО	ИСТИНА"
	//	
	//КонецЕсли;	
	
	Если ИменаРегистров.Найти("Закупки")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("Закупки",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ЗАКУПКИ
		
		"ВЫБРАТЬ
		|	&Период				Период,
		|	Ссылка				ДокументПоступления,
		|	Ссылка.Контрагент		Поставщик,
		|	Ссылка.Контрагент	Контрагент,
		|	Номенклатура		Номенклатура,
		|	Упаковка			Упаковка,
		|	Цена				Цена,
		|	Ссылка.Валюта		Валюта,	
		|	СУММА(Количество)	Количество,
		|	СУММА(Сумма)		Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|ГДЕ
		|	Ссылка = &Ссылка 	
		|	СГРУППИРОВАТЬ ПО Ссылка, Номенклатура, Упаковка, Цена"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ПартииТоваров")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ПартииТоваров",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// ПАРТИИ ТОВАРОВ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияПриход	КАК ВидДвижения,
		|	Выбор Когда Инвойс<>Значение(Документ.Инвойс.ПустаяСсылка) Тогда Инвойс Иначе Ссылка Конец КАК Партия, 
		|	Выбор Когда Инвойс<>Значение(Документ.Инвойс.ПустаяСсылка) Тогда Инвойс.Дата Иначе Ссылка.Дата Конец КАК ДатаПартии, 
		|   Выбор Когда Инвойс<>Значение(Документ.Инвойс.ПустаяСсылка) Тогда Инвойс.Контрагент Иначе Ссылка.Контрагент Конец КАК Поставщик,
		|	Номенклатура,
		|	ВЫБОР КОГДА Упаковка = &ПустаяУпаковка 
		|		ТОГДА СУММА(Количество)
		|		ИНАЧЕ СУММА(Количество * Упаковка.Коэффициент) КОНЕЦ Количество,
		|   Выбор когда Ссылка.СуммаВключаетНДС Тогда СУММА(Сумма)*Ссылка.Курс Иначе (Сумма(Сумма)+Сумма(СуммаНДС))*Ссылка.Курс Конец	КАК Сумма,
		|	Выбор Когда Сумма(Сумма)=0 Тогда Значение(Перечисление.ВидыОшибокПартионногоУчета.ПоступлениеБезЦены) Иначе Значение(Перечисление.ВидыОшибокПартионногоУчета.ПустаяСсылка) Конец ОписаниеОшибки
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары
		|
		|ГДЕ
		|	Ссылка = &Ссылка
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	Инвойс,Ссылка, Номенклатура, Упаковка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("ВнутренниеЗаказы")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("ВнутренниеЗаказы",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		"ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход			  		КАК ВидДвижения,
		|	Док.Размещение						КАК ВнутреннийЗаказ,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Очередь							КАК Размещение,
		|	Док.Заказчик						КАК Заказчик,
		|	-СУММА(Док.Количество)				КАК Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка 
		|	И Док.Размещение ССЫЛКА Документ.ВнутреннийЗаказ
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Заказчик,
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка,
		|	Док.Очередь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период								КАК Период,
		|	&ВидДвиженияПриход				  	КАК ВидДвижения,
		|	Док.Размещение						КАК ВнутреннийЗаказ,
		|	Док.Номенклатура					КАК Номенклатура,
		|	Док.Упаковка						КАК Упаковка,
		|	Док.Ссылка.Склад					КАК Размещение,
		|	Док.Заказчик						КАК Заказчик,
		|	СУММА(Док.Количество)				КАК Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы Док
		|
		|ГДЕ
		|	Док.Ссылка = &Ссылка 
		|	И Док.Размещение ССЫЛКА Документ.ВнутреннийЗаказ
		|
		|СГРУППИРОВАТЬ ПО
		|	Док.Ссылка,
		|	Док.Заказчик,
		|	Док.Размещение,
		|	Док.Номенклатура,
		|	Док.Упаковка"
		
	КонецЕсли;	
	
	Если ИменаРегистров.Найти("РазмещениеЗаказовВПути")<>Неопределено ИЛИ ПоВсем Тогда
		ТекНомер=ТекНомер+1;
		Нтаб.Вставить("РазмещениеЗаказовВПути",ТекНомер);
		
		ТекстЗапроса=ТекстЗапроса+Символы.ПС+";"+Символы.ПС+"/////////////////////////////////////////"+Символы.ПС+
		
		// РАЗМЕЩЕНИЕ ЗАКАЗОВ В ПУТИ
		
		"ВЫБРАТЬ
		|	&Период				КАК Период,
		|	&ВидДвиженияРасход  КАК ВидДвижения,
		|	ЗаказПоставщику		КАК ЗаказПоставщику,
		|	Очередь				КАК Очередь,
		|	Размещение			КАК Размещение,
		|	Номенклатура,
		|	Упаковка,
		|	СУММА(Количество)	Количество
		|ИЗ
		|	Документ.ПоступлениеТоваров.Резервы
		|
		|ГДЕ
		|	Ссылка = &Ссылка И
		|	ЗаказПоставщику <> &ПустойЗаказПоставщику И
		|	Размещение <> Неопределено
		|   И НЕ Номенклатура.ТипНоменклатуры=Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	Размещение,
		|	Очередь,
		|	ЗаказПоставщику,
		|	Номенклатура,
		|	Упаковка"
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	
	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Период", 			Ссылка.Дата);
	Запрос.УстановитьПараметр("ПустаяЯчейка", 		Справочники.Ячейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяУпаковка", 	Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Ссылка.Контрагент);
	Запрос.УстановитьПараметр("ВидОперацииОплата", 	Перечисления.ВидыОперацийВзаиморасчетов.Отгрузка);
	Запрос.УстановитьПараметр("ФормаОтношений", 	Перечисления.ФормаОтношений.Поставщик);
	Запрос.УстановитьПараметр("ПустойЗаказПоставщику", Документы.ЗаказПоставщику.ПустаяСсылка());

	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 			КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	
	//ДополнительныеСвойства.Вставить("ТоварыНаСкладах", 			Пакет[2].Выгрузить());
	//ДополнительныеСвойства.Вставить("Взаиморасчеты", 			Пакет[3].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыВЯчейках", 			Пакет[4].Выгрузить());
	//ДополнительныеСвойства.Вставить("ЗаказыПоставщикам",		Пакет[5].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыПоставщиковВПути",	Пакет[6].Выгрузить());
	//
	//ДополнительныеСвойства.Вставить("РазмещениеЗаказов",		Пакет[7].Выгрузить());
	//ДополнительныеСвойства.Вставить("ТоварыВРезерве",			Пакет[8].Выгрузить());
	//ДополнительныеСвойства.Вставить("ЗаказыПокупателей",		Пакет[9].Выгрузить());
	//ДополнительныеСвойства.Вставить("ИнтернетЗаказПокупателя",	Пакет[10].Выгрузить());
	//ДополнительныеСвойства.Вставить("Поставщики",				Пакет[11].Выгрузить());
	//ДополнительныеСвойства.Вставить("ДолгиКонтрагентов",		Пакет[12].Выгрузить());
	//ДополнительныеСвойства.Вставить("Закупки",					Пакет[13].Выгрузить());
	//ДополнительныеСвойства.Вставить("ПартииТоваров",			Пакет[14].Выгрузить());
	//ДополнительныеСвойства.Вставить("ВнутренниеЗаказы",			Пакет[15].Выгрузить());
	//ДополнительныеСвойства.Вставить("РазмещениеЗаказовВПути",	Пакет[16].Выгрузить());
	
	Для Каждого Элем Из Нтаб Цикл
		ДополнительныеСвойства.Вставить(Элем.Ключ,Пакет[Элем.Значение].Выгрузить());
	КонецЦикла;	
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет 	= Документы.ПоступлениеТоваров.ПолучитьМакет("Печать");
	Запрос 	= Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Валюта,
	|	Дата,
	|	Комментарий,
	|	Контрагент,
	|	Склад КАК МестоХранения,
	|	Номер,
	|	ВЫБОР КОГДА
	|		Док.Ответственный.Организация = Док.Организация
	|	ТОГДА
	|		Док.Ответственный						         
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) 
	|	КОНЕЦ											 КАК Ответственный,
	|	Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма
	|			)
	|ИЗ
	|	Документ.ПоступлениеТоваров
	|ГДЕ
	|	Ссылка В (&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	ОбластьТовары1Шапка = Макет.ПолучитьОбласть("Товары1Шапка");
	ОбластьТовары1 = Макет.ПолучитьОбласть("Товары1");
	ОбластьТовары2Шапка = Макет.ПолучитьОбласть("Товары2Шапка");
	ОбластьТовары2 = Макет.ПолучитьОбласть("Товары2");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета");
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) КАК Дата,
		|	Док.Валюта КАК Валюта
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК Док
		|ГДЕ
		|	Док.Ссылка В(&МассивДокументов)
		|	И Док.Валюта <> &ВалютаРегламентированногоУчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта,
		|	Дата
		|");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = ОбщиеФункции.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ПолучитьТаблицуКурсовВалют()
Функция ПолучитьДанныеДляТОРГ12(ТабличныйДокумент, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	КолонкаКодов = ""; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|   ЕСТЬNULL(НоменклатураДокументов.ЕстьУслуги, Ложь)						   КАК ЕстьУслуги,
	|   ЕСТЬNULL(НоменклатураДокументов.ЕстьТовары, Ложь)						   КАК ЕстьТовары,
	|	Док.Ссылка                  КАК Ссылка,
	|	Док.Номер                   КАК Номер,
	|	Док.Дата                    КАК Дата,
	|	Док.Контрагент              КАК Организация,
	|	Док.Организация             КАК Контрагент,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)                              КАК Кладовщик,
	|	""""                                     									  КАК ДолжностьКладовщика, 
	|	""""																		  КАК Основание,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	Док.БанковскийСчетОрганизации                             КАК БанковскийСчетОрганизации,
	|	Док.БанковскийСчетПартнера                            	 КАК БанковскийСчетКонтрагента,
	|	Док.БанковскийСчетГрузоотправителя                        КАК БанковскийСчетГрузоотправителя,
	|	Док.БанковскийСчетГрузополучателя                         КАК БанковскийСчетГрузополучателя,
	|	""""								                                         КАК АдресДоставки,
	|	Неопределено                                                                 КАК Подразделение,
	|
	//|	// При взаиморасчетах в иностранной валюте в обработку передаем суммы в валюте регл. учета.
	//|	ВЫБОР КОГДА РеализацияТоваровУслуг.Ссылка В (&МассивДокументовВВалютеРегл) ТОГДА
	//|		&ВалютаРегламентированногоУчета
	//|	ИНАЧЕ
	|		Док.Валюта                                            КАК Валюта,
	//|	КОНЕЦ						                                                 КАК Валюта,
	|
	|	Док.СуммаВключаетНДС                                     КАК ЦенаВключаетНДС,
	|	""""                                     									КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0)                                    					КАК ДоверенностьДата,
	|	""""                                   										КАК ДоверенностьВыдана,
	|	""""                                     									КАК ДоверенностьЛицо,
	|	ВЫБОР КОГДА НЕ Док.Плательщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	ТОГДА Док.Плательщик		
	|	ИНАЧЕ 	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	|	            ТОГДА	Док.Контрагент
	|	            ИНАЧЕ 	Док.Грузополучатель
	|	КОНЕЦ КОНЕЦ	                                               Плательщик
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	Товары.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК БазоваяЕдиницаКодПоОКЕИ, 														 
	//|	Товары.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	""""												              КАК ВидУпаковки,
	|   0                                                                 КАК КоличествоВОдномМесте,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	Товары.Количество                                                 КАК Количество,
	|	0                                								  КАК КоличествоМест,
	|	Товары.Сумма                									  КАК Сумма,
	|	Товары.СуммаНДС          										  КАК СуммаНДС,
	|	Товары.НомерСтроки                                                КАК НомерСтроки,
	|	0							                                      КАК МассаБрутто,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.ПоступлениеТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");                                 
		
	//ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов);
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Дата", 				Ссылка.Дата);
    Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);

	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции
Функция ПолучитьДанныеДляСчетФактура(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА НоменклатураДокументов
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка                  КАК Ссылка,
	|	Док.Номер   		        КАК Номер,
	|	Док.Дата	        	    КАК Дата,
	|	Док.Контрагент                                  КАК Контрагент,
	|	Док.Организация                                 КАК Организация,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	ЕСТЬNULL(Рук.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК Руководитель,
	|	ЕСТЬNULL(Рук.Должность, """")                                                                         КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(Бух.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))           КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА Док.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Контрагент
	|	ИНАЧЕ
	|		Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА Док.Грузоотправитель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка)) ТОГДА
	|		Док.Организация
	|	ИНАЧЕ
	|		Док.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	"""" КАК АдресДоставки,
	|   Док.Валюта					  КАК Валюта,
	|	Док.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	Док.Валюта.Код				  КАК ВалютаКод,
	|
	|	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|
	|	НоменклатураДокументов.ЕстьУслуги КАК ЕстьУслуги,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК Док
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер)) Бух
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Организация = &Организация И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) Рук
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		Док.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СчетФактуры КАК СчетФактура
	|	ПО
	|		Док.Ссылка = СчетФактура.Основание
	//|		И Док.Организация = СчетФактура.Организация
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                     КАК Ссылка,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Наименование    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения.Код    
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ 														  	  КАК ЕдиницаИзмеренияКод, 														 
	|	ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ЕдиницаИзмерения    
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|	КОНЕЦ  														  	  КАК ЕдиницаИзмерения,
	|	Товары.Номенклатура.НомерГТД 									  КАК НомерГТД,
	|	Товары.Номенклатура.СтранаПроисхождения 						  КАК СтранаПроисхождения,
	|	Товары.Цена                                                       КАК Цена,																	   
	|	Товары.Количество                                                 КАК Количество,
	|	0                                								  КАК КоличествоМест,
	|	Товары.СтавкаНДС          										  КАК СтавкаНДС,
	|	Товары.Сумма                									  КАК Сумма,
	|	Товары.СуммаНДС          										  КАК СуммаНДС,
	|	Товары.НомерСтроки                                                КАК НомерСтроки,
	|	ВЫБОР КОГДА Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ                                                             КАК ЭтоУслуга,
	|	Ложь                                                              КАК ЭтоВозвратнаяТара
	|ИЗ
	|		Документ.ПоступлениеТоваров.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка  = &Ссылка //И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	//	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, Истина);
	//Иначе
	//	ТаблицаВВалютеРегл = ИнициализироватьТаблицуКорректировок();
	//КонецЕсли;
	//МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",				ТаблицаВВалютеРегл);
	//Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл", 	МассивДокументовВВалютеРегл);
	//Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "Таблица корректировок"
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции // СформироватьПечатнуюФормуСчетФактура()

Процедура Печать_Накладная(ТабличныйДокумент, Ссылка) Экспорт
	
	КолонкаКодов = "Артикул"; // ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	//ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Док.Ссылка КАК Ссылка,
	                      |	Док.Номер КАК Номер,
	                      |	Док.Дата КАК Дата,
	                      |	Док.Контрагент КАК Поставщик,
	                      |	Док.Организация КАК Организация,
	                      |	Док.Валюта КАК Валюта,
	                      |	Док.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	                      |	ВЫБОР
	                      |		КОГДА Док.Ответственный.Организация = Док.Организация
	                      |			ТОГДА Док.Ответственный.Наименование
	                      |		ИНАЧЕ """"
	                      |	КОНЕЦ КАК ПолучениеПроизвел,
	                      |	Док.УчитыватьНДС КАК УчитыватьНДС
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваров КАК Док
	                      |ГДЕ
	                      |	Док.Ссылка = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.Ссылка КАК Ссылка,
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	                      |	Товары.Номенклатура.Код КАК Код,
	                      |	Товары.Номенклатура.Артикул КАК Артикул,
	                      |	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаЦены,
	                      |	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                      |	Товары.СтавкаНДС КАК СтавкаНДС,
	                      |	Товары.Цена КАК Цена,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |			ТОГДА Товары.Количество
	                      |		ИНАЧЕ Товары.Количество * Товары.Упаковка.Коэффициент
	                      |	КОНЕЦ КАК Количество,
	                      |	Товары.Сумма КАК Сумма,
	                      |	Товары.СуммаНДС КАК СуммаНДС,
	                      |	0 КАК СуммаСкидки,
	                      |	Товары.Сумма КАК СуммаБезСкидки,
	                      |	Товары.НомерСтроки КАК НомерСтроки,
	                      |	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	                      |	ВЫБОР
	                      |		КОГДА Товары.Номенклатура.Вес = 0
	                      |				ИЛИ Товары.Номенклатура.Объем = 0
	                      |			ТОГДА ""Да""
	                      |		ИНАЧЕ ""Нет""
	                      |	КОНЕЦ КАК ТребуетсяИзмерить,
	                      |	ПРЕДСТАВЛЕНИЕ(Товары.Ячейка) КАК Ячейка
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваров.Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |	И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки
	                      |ИТОГИ
	                      |	СУММА(СуммаСкидки)
	                      |ПО
	                      |	Ссылка");

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	//ТабличныйДокумент = Новый ТабличныйДокумент;
	//ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Накладная";
	
	//ТабличныйДокумент = Новый ТабличныйДокумент;
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		//СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		//НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если ВыборкаПоДокументам.Следующий() Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			ЕстьСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоТоварам);
			ВыборкаПоТоварам.Сбросить();
		КонецЕсли;	
		
		// Если в накладной только услуги - перейдем к следующему документу
		
		//Если НайденСледующий Тогда
		//	ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		//	ЕстьСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоТоварам, ИспользоватьРучныеСкидки);
		//	ВыборкаПоТоварам.Сбросить();
		//Иначе
		//	Продолжить;
		//КонецЕсли;
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = Документы.ПоступлениеТоваров.ПолучитьМакет("ПоступлениеТоваров1");
		
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		//ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка = ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Поступление товаров'"),,Истина);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Поставщик;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
		Если ЕстьСкидки Тогда
			ОбластьКолонкаТовар = Макет.Область("ТоварСоСкидкой");
		Иначе
			ОбластьКолонкаТовар = Макет.Область("Товар");
		КонецЕсли;
			
		Если Не ВыводитьКоды Тогда
			
			Если ЕстьСкидки Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.35;
			Иначе
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		КонецЕсли;
			
		Сумма          = 0;
		СуммаНДС       = 0;
		ВсегоСкидок    = 0;
		НомерСтроки    = 0;
		ВсегоБезСкидок = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			
			СтрокаСЯчейками = "";
			Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 6 ТоварыВЯчейкахОстатки.Ячейка,	ТоварыВЯчейкахОстатки.КоличествоОстаток ИЗ РегистрНакопления.ТоварыВЯчейках.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыВЯчейкахОстатки ГДЕ НЕ ТоварыВЯчейкахОстатки.Ячейка.Ссылка ЕСТЬ NULL И ТоварыВЯчейкахОстатки.Ячейка.Владелец = &Склад УПОРЯДОЧИТЬ ПО КоличествоОстаток УБЫВ");
			Запрос.УстановитьПараметр("Номенклатура", ВыборкаПоТоварам.Номенклатура);
			Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
			Результат = Запрос.Выполнить().Выбрать();
			Если Результат.Количество() Тогда
				Пока Результат.Следующий() Цикл
					СтрокаСЯчейками = СтрокаСЯчейками + Строка(Результат.Ячейка.Наименование) + " - " + Строка(Результат.КоличествоОстаток) + Символы.ПС;
				КонецЦикла;	
			КонецЕсли;
			ОбластьТовар.Параметры.ЯчейкиСОстатком = СтрокаСЯчейками;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			ОбластьТовар.Параметры.Товар = ФормированиеПечатныхФорм.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименованиеПолное)
				+ ?(ВыборкаПоТоварам.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
				
			ТабличныйДокумент.Присоединить(ОбластьТовар);

			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);

			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
			СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
			
			Если ЕстьСкидки Тогда
				ВсегоСкидок    = ВсегоСкидок    + ВыборкаПоТоварам.СуммаСкидки;
				ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаПоТоварам.СуммаБезСкидки;
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		Если ЕстьСкидки Тогда
			
			ОбластьДанных.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьДанных.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			
		КонецЕсли;
		
		//ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			Если ЕстьСкидки Тогда
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ТоварСоСкидкой");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ДанныеСоСкидкой");
				
			Иначе
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			//ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
			//ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
		
		// Выводим Сумму прописью
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		
		ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента% '");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		Если ЗначениеЗаполнено(ДанныеПечати.ПолучениеПроизвел) Тогда
			ОбластьМакета.Параметры.ПолучениеПроизвел = ФормированиеПечатныхФорм.ФамилияИнициалыФизЛица(ДанныеПечати.ПолучениеПроизвел);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	//ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	//Возврат ТабличныйДокумент;
	
КонецПроцедуры

// + neti Муталлапова 26.05.2017
Функция ПроверкаЗаполненияВесаОбъема(СсылкаНаДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.НомерСтроки,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровТовары.Номенклатура),
	|	ПоступлениеТоваровТовары.Номенклатура.Вес = 0 КАК НеУказанВес,
	|	ПоступлениеТоваровТовары.Номенклатура.Объем = 0 КАК НеУказанОбъем
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	(ПоступлениеТоваровТовары.Номенклатура.Вес = 0
	|			ИЛИ ПоступлениеТоваровТовары.Номенклатура.Объем = 0)
	|	И ПоступлениеТоваровТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Результат = Запрос.Выполнить();
	
	Отказ = Не Результат.Пустой();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Сообщить("У номенклатуры " 
			+ Выборка.НоменклатураПредставление 
			+ " не указан " 
			+ ?(Выборка.НеУказанВес И Выборка.НеУказанОбъем, "вес и объем", ?(Выборка.НеУказанВес, "вес", "объем")));	
			
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

Функция ЕстьИнвойс(Ссылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Заказ
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Инвойс.Товары КАК ИнвойсТовары
	|		ПО ПоступлениеТоваровТовары.Заказ = ИнвойсТовары.ЗаказПоставщику
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой(); 
	
КонецФункции

Процедура УстановитьСтатусыЗаказовПоставщику(Ссылка, ДокументыТаблица) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровТовары.Заказ КАК Заказ,
	|	ПоступлениеТоваровТовары.Инвойс КАК Инвойс
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|	И ПоступлениеТоваровТовары.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Заказ,
	|	ПоступлениеТоваровТовары.Инвойс
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ,
	|	Инвойс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРасхождения
	|ПОМЕСТИТЬ ЗаказыБезИнвойсов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				ЗаказПоставщику В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.Заказ
	|					ИЗ
	|						ТаблицаТоваров КАК ТаблицаТоваров)) КАК ЗаказыПоставщикамОстатки
	|		ПО ТаблицаТоваров.Заказ = ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоставщиковВПутиОстатки.КоличествоОстаток, 0) = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРасхождения
	|ПОМЕСТИТЬ ЗаказаСИнвойсами
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПоставщиковВПути.Остатки(
	|				,
	|				(ЗаказПоставщику, Инвойс) В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.Заказ,
	|						ТаблицаТоваров.Инвойс
	|					ИЗ
	|						ТаблицаТоваров КАК ТаблицаТоваров
	|					ГДЕ
	|						ТаблицаТоваров.Инвойс <> ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяСсылка))) КАК ТоварыПоставщиковВПутиОстатки
	|		ПО ТаблицаТоваров.Инвойс = ТоварыПоставщиковВПутиОстатки.Инвойс
	|			И ТаблицаТоваров.Заказ = ТоварыПоставщиковВПутиОстатки.ЗаказПоставщику
	|ГДЕ
	|	ТаблицаТоваров.Инвойс <> ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяССылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыБезИнвойсов.Заказ КАК Документ,
	|	ЗаказыБезИнвойсов.ЕстьРасхождения КАК ЕстьРасхождения
	|ПОМЕСТИТЬ ЗаказыЕстьИзменения
	|ИЗ
	|	ЗаказыБезИнвойсов КАК ЗаказыБезИнвойсов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказаСИнвойсами.Заказ,
	|	ЗаказаСИнвойсами.ЕстьРасхождения
	|ИЗ
	|	ЗаказаСИнвойсами КАК ЗаказаСИнвойсами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыЕстьИзменения.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ЗаказыЕстьИзменения.ЕстьРасхождения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаПоставщику.ЧастичноеПоступление)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаПоставщику.Оприходован)
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	ЗаказыЕстьИзменения КАК ЗаказыЕстьИзменения
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыЕстьИзменения.Документ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Заказы.ДокументВТаблицуСоответствий(ДокументыТаблица, ВыборкаДетальныеЗаписи.Документ, ВыборкаДетальныеЗаписи.Статус);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьРасхожденияПоКоличествуВДокументе(ПоступлениеСсылка) Экспорт
	// + neti Леконцев 19.06.2017 Изменен запрос, добавлены группировки.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	СУММА(ПоступлениеТоваровТовары.Количество) КАК Количество,
	|	СУММА(ПоступлениеТоваровТовары.КоличествоПоДокументам) КАК КоличествоПоДокументам
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Ссылка,
	|	ПоступлениеТоваровТовары.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПоступлениеТоваровТовары.Количество) <> СУММА(ПоступлениеТоваровТовары.КоличествоПоДокументам)";
	// - neti Леконцев 19.06.2017
	Запрос.УстановитьПараметр("Ссылка", ПоступлениеСсылка);
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой(); 
	
КонецФункции

//Нэти-изменение Гашников Александр 30.06.2017 наряд 108, добавлен третий параметр	
Процедура УстановитьСтатусыДокументов(Ссылка, ЭтаФорма, ТекущийОбъект = Неопределено) Экспорт
	
	ДокументыНаИзменение = Заказы.ПолучитьТаблицуСоответствий();
		
	Если Не Ссылка.Проведен Тогда
		//если документ записывается без проведения, всем заказы в ТЧ Товары устанавливается статус "На приемке"
	    Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПоступлениеТоваровТовары.Заказ КАК Документ,
		|	&СтатусДокумента КАК Статус
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|ГДЕ
		|	ПоступлениеТоваровТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СтатусДокумента", Перечисления.СтатусыЗаказаПоставщику.НаПриемке);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Заказы.ДокументВТаблицуСоответствий(ДокументыНаИзменение, Выборка.Документ, Выборка.Статус);
		КонецЦикла;		
		
	ИначеЕсли Документы.ПоступлениеТоваров.ЕстьРасхожденияПоКоличествуВДокументе(Ссылка) Тогда
		//Если есть разхождение между количеством и количеством по документу - Статус "Претензия".
		Заказы.ДокументВТаблицуСоответствий(ДокументыНаИзменение, Ссылка, Перечисления.СтатусыЗаказаПоставщику.Претензия);
		ЭтаФорма.СтатусДокумента = Перечисления.СтатусыЗаказаПоставщику.Претензия;
		
		//Отправляем письма о расхождении и отмечаем отправку.
		//Нэти-Начало Гашников Александр 30.06.2017	наряд 108
		//ПисьмаУжеОтправлены = ЭтаФорма.Объект.ПисьмоОРасхожденияхОтправлено;
		ПисьмаУжеОтправлены = ТекущийОбъект.ПисьмоОРасхожденияхОтправлено;
		//Нэти-Конец                                                        		
		Если НЕ ПисьмаУжеОтправлены Тогда
			ОтправитьПисьма(Ссылка);
			//Нэти-Начало Гашников Александр 30.06.2017	наряд 108
			//ЭтаФорма.Объект.ПисьмоОРасхожденияхОтправлено = НЕ ПисьмаУжеОтправлены;
			ТекущийОбъект.ПисьмоОРасхожденияхОтправлено = НЕ ПисьмаУжеОтправлены;
			//Нэти-Конец
		КонецЕсли;
				
	Иначе 
		//Документ проведен, расхождения отсутствуют - статус "Оприходован"
		Заказы.ДокументВТаблицуСоответствий(ДокументыНаИзменение, Ссылка, Перечисления.СтатусыЗаказаПоставщику.Оприходован);
		ЭтаФорма.СтатусДокумента = Перечисления.СтатусыЗаказаПоставщику.Оприходован;
	КонецЕсли;
	
	УстановитьСтатусыЗаказовПоставщику(Ссылка, ДокументыНаИзменение);
		
	Заказы.НовыеСтатусыДокументов(ДокументыНаИзменение, ТекущаяДата());
		
КонецПроцедуры

Процедура ОтправитьПисьма(Ссылка)
	
	//Нэти-Начало Гашников Александр 30.06.2017 наряд 108	
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ПоступлениеТоваровТовары.Номенклатура,
	//|	ПоступлениеТоваровТовары.КоличествоПоДокументам - ЕСТЬNULL(ИнвойсТовары.Количество, 0) КАК Разница,
	//|	ПоступлениеТоваровТовары.Номенклатура.КатегорияТовара,
	//|	ПоступлениеТоваровТовары.Номенклатура.Поставщик.МенеджерЗакупок,
	//|	ПоступлениеТоваровТовары.Номенклатура.Поставщик.МенеджерЗакупок.Почта,
	//|	ПоступлениеТоваровТовары.НомерСтроки
	//|ПОМЕСТИТЬ РасхожденияНоменклатуры
	//|ИЗ
	//|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Инвойс.Товары КАК ИнвойсТовары
	//|		ПО ПоступлениеТоваровТовары.Заказ = ИнвойсТовары.ЗаказПоставщику
	//|			И ПоступлениеТоваровТовары.Номенклатура = ИнвойсТовары.Номенклатура
	//|ГДЕ
	//|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	//|	И ПоступлениеТоваровТовары.КоличествоПоДокументам <> ЕСТЬNULL(ИнвойсТовары.Количество, 0)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	КатегорииТоваров.КатегорийныйМенеджер,
	//|	КатегорииТоваров.Ссылка КАК КатегорияТовара,
	//|	КатегорииТоваров.КатегорийныйМенеджер.Почта
	//|ПОМЕСТИТЬ КатегорийныеМенеджеры
	//|ИЗ
	//|	Справочник.КатегорииТоваров КАК КатегорииТоваров
	//|ГДЕ
	//|	КатегорииТоваров.Ссылка В
	//|			(ВЫБРАТЬ
	//|				РасхожденияНоменклатуры.НоменклатураКатегорияТовара
	//|			ИЗ
	//|				РасхожденияНоменклатуры КАК РасхожденияНоменклатуры)
	//|	И НЕ КатегорииТоваров.ПометкаУдаления
	//|	И КатегорииТоваров.КатегорийныйМенеджер <> ЗНАЧЕНИЕ(Справочник.КатегорииТоваров.ПустаяСсылка)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РасхожденияНоменклатуры.Номенклатура,
	//|	РасхожденияНоменклатуры.Разница,
	//|	РасхожденияНоменклатуры.НоменклатураПоставщикМенеджерЗакупок КАК Закупщик,
	//|	КатегорийныеМенеджеры.КатегорийныйМенеджер,
	//|	КатегорийныеМенеджеры.КатегорийныйМенеджерПочта,
	//|	РасхожденияНоменклатуры.НоменклатураПоставщикМенеджерЗакупокПочта КАК ЗакупщикПочта,
	//|	РасхожденияНоменклатуры.НомерСтроки
	//|ПОМЕСТИТЬ Предварительныя
	//|ИЗ
	//|	РасхожденияНоменклатуры КАК РасхожденияНоменклатуры
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КатегорийныеМенеджеры КАК КатегорийныеМенеджеры
	//|		ПО РасхожденияНоменклатуры.НоменклатураКатегорияТовара = КатегорийныеМенеджеры.КатегорияТовара
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ПРЕДСТАВЛЕНИЕ(Предварительныя.Номенклатура),
	//|	Предварительныя.Разница,
	//|	Предварительныя.Закупщик КАК Закупщик,
	//|	Предварительныя.ЗакупщикПочта,
	//|	Предварительныя.НомерСтроки КАК НомерСтроки
	//|ИЗ
	//|	Предварительныя КАК Предварительныя
	//|ГДЕ
	//|	Предварительныя.Закупщик <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерСтроки
	//|ИТОГИ ПО
	//|	Закупщик
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ПРЕДСТАВЛЕНИЕ(Предварительныя.Номенклатура),
	//|	Предварительныя.Разница,
	//|	Предварительныя.КатегорийныйМенеджер КАК КатегорийныйМенеджер,
	//|	Предварительныя.КатегорийныйМенеджерПочта,
	//|	Предварительныя.НомерСтроки КАК НомерСтроки
	//|ИЗ
	//|	Предварительныя КАК Предварительныя
	//|ГДЕ
	//|	Предварительныя.КатегорийныйМенеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерСтроки
	//|ИТОГИ ПО
	//|	КатегорийныйМенеджер";
	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);		
	
	//Результаты = Запрос.ВыполнитьПакет();
	//ВыборкаМенеджер = Результаты[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//Пока ВыборкаМенеджер.Следующий() Цикл 
	//	
	//	ОтправитьПисьмоОРасхожденииКоличества(ВыборкаМенеджер.Закупщик, ВыборкаМенеджер, Ссылка);
	//	
	//КонецЦикла;
	//
	//ВыборкаМенеджер = Результаты[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//Пока ВыборкаМенеджер.Следующий() Цикл 
	//	
	//	ОтправитьПисьмоОРасхожденииКоличества(ВыборкаМенеджер.КатегорийныйМенеджер, ВыборкаМенеджер, Ссылка);
	//	
	//КонецЦикла;
	//Нэти-Конец
	
	//Нэти-Начало Гашников Александр 30.06.2017	наряд 108
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	|	ПоступлениеТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровТовары.Номенклатура.Поставщик.МенеджерЗакупок.Почта КАК МенеджерЗакупок,
	|	ПоступлениеТоваровТовары.Номенклатура.КатегорияТовара.КатегорийныйМенеджер.Почта КАК КатегорийныйМенеджер,
	|	ПоступлениеТоваровТовары.Количество КАК Количество,
	|	ПоступлениеТоваровТовары.КоличествоПоДокументам КАК КоличествоПоДокументам,
	|	ПоступлениеТоваровТовары.Количество - ПоступлениеТоваровТовары.КоличествоПоДокументам КАК Расхождение
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|	И ПоступлениеТоваровТовары.Количество - ПоступлениеТоваровТовары.КоличествоПоДокументам <> 0"; 
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Формируем получателей. Отправлять будем одно письмо всем получателям по всем товарам
	Кому = ""; 	
	Пока Выборка.Следующий() Цикл 
		
		Если ЗначениеЗаполнено(Выборка.МенеджерЗакупок) Тогда 
			Если СтрНайти(Кому, Выборка.МенеджерЗакупок, НаправлениеПоиска.СНачала, 1) = 0 Тогда 
				Кому = Кому + Выборка.МенеджерЗакупок + ";";
			КонецЕсли;
		КонецЕсли;

		Если ЗначениеЗаполнено(Выборка.КатегорийныйМенеджер) Тогда 
			Если СтрНайти(Кому, Выборка.КатегорийныйМенеджер, НаправлениеПоиска.СНачала, 1) = 0 Тогда 
				Кому = Кому + Выборка.КатегорийныйМенеджер + ";";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
	// убриаем последнюю ";"
	Кому = Сред(Кому, 1, СтрДлина(Кому) - 1);
	
	Выборка.Сбросить();	
	ОтправитьПисьмоОРасхожденииКоличества(Кому, Выборка, Ссылка)
	//Нэти-Конец
	
КонецПроцедуры

Процедура ОтправитьПисьмоОРасхожденииКоличества(Получатель, ВыборкаМенеджер, Документ)
	
	//Нэти-Начало Гашников Александр 30.06.2017	наряд 108
	//Кому = Получатель.Почта;
	//Менеджер = Получатель;

	//Копия = "";
	//ТемаПисьма = "Оповещение о расхождении количества товара в документах";
	//
	//ТекстПисьмаТело = 
	//"<HTML><HEAD>
	//|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
	//|<META name=GENERATOR content=""MSHTML 11.00.9600.18538""></HEAD>
	//|<BODY>
	//|<P>Добрый день!</P>
	//|<P>В документе Поступление товаров №" + Документ.Номер + " от " + Формат(Документ.Дата, "ДФ=dd.MM.yyyy") + " г. есть расхождения по количеству</P>";
	//
	//ВыборкаДетали = ВыборкаМенеджер.Выбрать();
	//
	//Пока ВыборкаДетали.Следующий() Цикл 
	//	
	//	ТекстПисьмаТело = ТекстПисьмаТело + 			
	//	"
	//	|<P>В строке №" + Формат(ВыборкаДетали.НомерСтроки, "") + " г. есть расхождения по количеству по номенклатуре " + ВыборкаДетали.НоменклатураПредставление + " расхождение с инвойсом в " + Формат(ВыборкаДетали, "") + "</P>";
	//			
	//КонецЦикла;

	//ТекстПисьма = ТекстПисьмаТело;		
	//
	//Письмо = ОбщиеФункции.ОповеститьПоПочте(Кому, ТемаПисьма, ТекстПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML, , , , Копия);
	//Нэти-Конец
	
	//Нэти-Начало Гашников Александр 30.06.2017	наряд 108
	ТемаПисьма = "Оповещение о расхождении количества товара в документах";
	ТекстПисьмаЗаголовок = "Добрый день!" + "<BR><BR> Спешим сообщить Вам, что в документе Поступление товаров № " + Документ.Номер + " от " + Формат(Документ.Дата, "ДФ=dd.MM.yyyy") + " г. есть расхождения по количеству." + ":<BR><BR>";	
	ТекстПисьмаТело = "";
	
	ТекстПисьмаТело = 
	"
	|<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"">
	|<tr>
	|<td align=""center"" valign=""top"">
	|<table width=""640"" cellspacing=""0"" cellpadding=""0"" border=""0"">
	|<tr>
	|<td align=""center"" style=""width:138px;"" ><a href="""" /></a></td>
	|<td align=""center"" style=""width:295px;""></td>		
	|</tr>                                                                
	|<tr>
	|<td colspan=""3"" bgcolor=""#008000"" align=""center"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#008000;"">.</td> 
	|</tr>
	|<tr>
	|<td align=""left"" colspan=""3"" style=""font-family: Verdana,Geneva,sans-serif;font-size:14px;color:#333333;padding:10px 0;"">	 
	|" + ТекстПисьмаЗаголовок + "<BR></P></td>
	|</tr>		
	|</table>
	|<table width=""800"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:10px 0 0"">
	|<thead>
	|<th style=""background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;width: 50px;"">№</th>
	|<th style=""background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;width: 110px;"">Артикул</th>
	|<th style=""background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;"">Наименование</th>
	|<th style=""width:100px;background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;"">Количество (факт.)</th>
	|<th style=""width:100px;background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;"">Количество (док.)</th>
	|<th style=""width:100px;background-color:#333333; text-align:center;color:#fff;font-weight:400;line-height:30px;font-family: Verdana,Geneva,sans-serif;font-size:11px;border-bottom:1px solid #bbbbbb;"">Расхождение</th>
	|</tr>
	|</thead>
	|<tbody>";
	
	Пока ВыборкаМенеджер.Следующий() Цикл 
		
		ТекстПисьмаТело = ТекстПисьмаТело + 			
		"
		|<tr>
		|<td align=""center"" valign=""top"" style=""padding:10px 5px;font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#333333;border-bottom:1px solid #bbbbbb;"">" + ВыборкаМенеджер.НомерСтроки + "</td>
		|<td align=""center"" valign=""top"" style=""padding:10px 5px;font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#333333;border-bottom:1px solid #bbbbbb;"">" + ВыборкаМенеджер.Артикул + "</td>
		|<td align=""left"" valign=""top"" style=""padding: 10px 5px;border-bottom:1px solid #bbbbbb;"">
		|<a style=""font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#333333;"" href="""" title=""Товар"">" + ВыборкаМенеджер.Номенклатура + "</a></td>
		|<td align=""center"" valign=""top"" style=""padding: 10px 5px;font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#333333;border-bottom:1px solid #bbbbbb;"">" + ВыборкаМенеджер.Количество + "</td>
		|<td align=""center"" valign=""top"" style=""padding: 10px 5px;font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#333333;border-bottom:1px solid #bbbbbb;"">" + ВыборкаМенеджер.КоличествоПоДокументам +"</td>
		|<td align=""center"" valign=""top"" style=""padding: 10px 5px;font-family: Verdana,Geneva,sans-serif;font-size:12px;color:#006644;border-bottom:1px solid #bbbbbb;"">" + ВыборкаМенеджер.Расхождение + "</td>
		|</tr>";
		
	КонецЦикла;
	
	ТекстПисьма = ТекстПисьмаТело;		
	Кому = Получатель;
	Копия = "";
	Письмо = ОбщиеФункции.ОповеститьПоПочте(Кому, ТемаПисьма, ТекстПисьма, Ложь, Перечисления.ТипыТекстовЭлектронныхПисем.HTML, , , , Копия);	
	//Нэти-Конец
	
КонецПроцедуры
// - neti Муталлапова 26.05.2017
