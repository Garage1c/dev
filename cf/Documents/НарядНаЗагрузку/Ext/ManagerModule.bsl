
Процедура ИницилизироватьДополнительныеДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	         
	КэшируемыеФункции.ТектЗапросаПолученияПараметровСистемы() + "
	|;
	
	// ШАПКА
	
	|ВЫБРАТЬ ТранспортноеСредство, Водитель, ЗаказыОтправлены, ДатаПроведения ИЗ Документ.НарядНаЗагрузку ГДЕ Ссылка = &Ссылка
	|;
	
	//// ОТПРАВКА ЗАКАЗОВ
	//
	//|ВЫБРАТЬ Заказ, Истина Отправлен ИЗ Документ.НарядНаЗагрузку.ТабЗаказов ГДЕ Ссылка = &Ссылка
	//|;
	//
	//// ОТГРУЖЕННЫЕ ЗАКАЗЫ
	//
	//|ВЫБРАТЬ &Период Период, Заказ, ДокументОтгрузки, ВесОтгружено, ОбъемОтгружено ИЗ Документ.НарядНаЗагрузку.ТабЗаказов ГДЕ Ссылка = &Ссылка И Ссылка.ЗаказыОтправлены = Истина
	//|
	|");

	//Запрос.УстановитьПараметр("Область", 			ПараметрыСеанса.ТекущаяОбласть);
	Запрос.УстановитьПараметр("Период",	Ссылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.Вставить("ПараметрыСистемы", 	КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[0].Выгрузить()));
	ДополнительныеСвойства.Вставить("Шапка", 				КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[1].Выгрузить()));
	//ДополнительныеСвойства.Вставить("ОтправкаЗаказов", 		Пакет[2].Выгрузить());
	//ДополнительныеСвойства.Вставить("ОтгруженныеЗаказы", 	Пакет[3].Выгрузить());
	                   
КонецПроцедуры

#Область Печать

Функция ПолучитьДанныеДляПечатиНаряда(Ссылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Запрос = Новый Запрос("
	//    |ВЫБРАТЬ Номер НомерЗагрузки, Дата ДатаЗагрузки, ТранспортноеСредство Автомобиль, Водитель, ПОДСТРОКА(Комментарий, 1, 500) Комментарий ИЗ Документ.НарядНаЗагрузку ГДЕ Ссылка = &Ссылка
	//	|;
	//	|ВЫБРАТЬ
	//	|	Зак.Партнер 			Партнер,
	//	|	Рез.Размещение.Код	 	Склад,
	//	|	Зак.Заказ				Заказ,
	//	|	Зак.Заказ.Номер			НомерЗаказа,
	//    |   Зак.Грузополучатель 	Грузополучатель,
	//	|	МАКСИМУМ(Зак.НомерСтроки) НомерСтроки,
	//	|	МАКСИМУМ(Зак.Места)	 	КоличествоМест,
	//	|	МАКСИМУМ(Зак.Вес)		Вес,
	//	|	МАКСИМУМ(Сбор.Сборщик)	Сборщик,			
	//	|	МАКСИМУМ(Зак.ТранспортнаяКомпания)	Транспортная,
	//    |	ЕСТЬNULL(МАКСИМУМ(ПОДСТРОКА(Инф.Представление, 1, 255)), МАКСИМУМ(ПОДСТРОКА(ИнфПартнер.Представление, 1, 255))) Адрес
	//	|ИЗ 
	//	|	(ВЫБРАТЬ
	//	|		Заказ,
	//	|		НомерСтроки,
	//	|		Места,
	//	|		Вес,
	//	|		ТранспортнаяКомпания,
	//	|		Заказ.Партнер Партнер,
	//	|		ВЫБОР 
	//	|			КОГДА Заказ.Грузополучатель В (Неопределено,ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),Значение(Справочник.Грузополучатели.ПустаяСсылка))
	//	|			ТОГДА Заказ.Контрагент 
	//	|			ИНАЧЕ Заказ.Грузополучатель 
	//	|			КОНЕЦ Грузополучатель
	//	|		ИЗ
	//	|		Документ.НарядНаЗагрузку.ТабЗаказов ГДЕ Ссылка = &Ссылка) Зак
	//    |ЛЕВОЕ СОЕДИНЕНИЕ
	//	|	РегистрНакопления.ТоварыВРезерве.Обороты() Рез
	//	|	ПО 
	//	|   Рез.ДокументРезерва = Зак.Заказ
	//	|ЛЕВОЕ СОЕДИНЕНИЕ
	//	|	РегистрНакопления.СборщикЗаказа.Обороты() Сбор
	//	|	ПО 
	//	|	Сбор.Заказ = Зак.Заказ И Сбор.Склад = Рез.Размещение
	//	|ЛЕВОЕ СОЕДИНЕНИЕ
	//	|	РегистрСведений.ПредставлениеКонтактнойИнформации Инф 
	//	|	ПО 
	//	|	Инф.Объект = Зак.Грузополучатель И Инф.Вид В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресФактический))
	//	|ЛЕВОЕ СОЕДИНЕНИЕ
	//	|	РегистрСведений.ПредставлениеКонтактнойИнформации  ИнфПартнер 
	//	|	ПО 
	//	|	ИнфПартнер.Объект = Зак.Партнер И ИнфПартнер.Вид В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресФактический))
	//	|СГРУППИРОВАТЬ ПО Зак.Заказ, Зак.Грузополучатель, Зак.Партнер, Рез.Размещение
	//	|УПОРЯДОЧИТЬ ПО НомерСтроки, Заказ
	//	|");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НарядНаЗагрузку.ТранспортноеСредство,
	                      |	НарядНаЗагрузку.Водитель,
	                      |	НарядНаЗагрузку.Номер,
	                      |	НарядНаЗагрузку.Дата,
	                      |	НарядНаЗагрузку.Отгрузил,
	                      |	НарядНаЗагрузку.Ответственный,
	                      |	НарядНаЗагрузку.ТранспортноеСредство.ГосНомер КАК ГосНомер
	                      |ИЗ
	                      |	Документ.НарядНаЗагрузку КАК НарядНаЗагрузку
	                      |ГДЕ
	                      |	НарядНаЗагрузку.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НарядНаЗагрузкуТабЗаказов.НомерСтроки,
	                      |	НарядНаЗагрузкуТабЗаказов.Грузоперевозчик,
	                      |	НарядНаЗагрузкуТабЗаказов.Заказ.Номер КАК НомерЗаказа,
	                      |	НарядНаЗагрузкуТабЗаказов.Контрагент,
	                      |	НарядНаЗагрузкуТабЗаказов.АдресДоставки,
	                      |	НарядНаЗагрузкуТабЗаказов.КонтактноеЛицо,
	                      |	НарядНаЗагрузкуТабЗаказов.ТелефонКонтактногоЛица,
	                      |	НарядНаЗагрузкуТабЗаказов.ВариантДоставки,
	                      |	НарядНаЗагрузкуТабЗаказов.ЗаЧейСчетДоставка,
	                      |	НарядНаЗагрузкуТабЗаказов.Места,
	                      |	НарядНаЗагрузкуТабЗаказов.Вес,
	                      |	НарядНаЗагрузкуТабЗаказов.Комментарий,
	                      |	НарядНаЗагрузкуТабЗаказов.ЯчейкаХраненияЗаказа,
	                      |	НарядНаЗагрузкуТабЗаказов.НомерМеста
	                      |ИЗ
	                      |	Документ.НарядНаЗагрузку.ТабЗаказов КАК НарядНаЗагрузкуТабЗаказов
	                      |ГДЕ
	                      |	НарядНаЗагрузкуТабЗаказов.Ссылка = &Ссылка");
	
	//Если НЕ ПараметрыПечати.ПечатьВВалюте Тогда
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
		
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
												   РезультатПоШапке, РезультатПоТабличнойЧасти);
												   
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
												   
	Возврат СтруктураДанныхДляПечати;

КонецФункции

Процедура ЗаполнитьТабличныйДокумент(ТабличныйДокумент, ДанныеДляПечати, ТипНаряда)
	
	Если ТипНаряда = 1 Тогда
		Макет = Документы.НарядНаЗагрузку.ПолучитьМакет("НарядНаЗагрузкуВодителя");
	Иначе
		Макет = Документы.НарядНаЗагрузку.ПолучитьМакет("НарядНаЗагрузкуСклада");
	КонецЕсли;
	ОбластьШапка  		= Макет.ПолучитьОбласть("Шапка");
	//ОбластьКоммент 		= Макет.ПолучитьОбласть("Комментарий");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 		= Макет.ПолучитьОбласть("Строка");
	//ОбластьИтого		= Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	
	Пока ДанныеПечати.Следующий() Цикл
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.ТекущаяДата = ТекущаяДата();
		//ОбластьШапка.Параметры.НомерЗагрузки = ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(ДанныеПечати.НомерЗагрузки);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		//Если НЕ ПустаяСтрока(ДанныеПечати.Комментарий) Тогда
		//	ОбластьКоммент.Параметры.Комментарий = ДанныеПечати.Комментарий;
		//	ТабличныйДокумент.Вывести(ОбластьКоммент); КонецЕсли;
		
		Если НЕ ДанныеДляПечати.РезультатПоТабличнойЧасти.Пустой() Тогда
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			ТаблицаЗаказы = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать();
			
			//ВсегоМест 	= 0;
			//ВсегоВес	= 0;
			//
			//НомерСтроки = 0;
			//ТекущийЗаказ = Неопределено;
			//Склады = "";
			Пока ТаблицаЗаказы.Следующий() Цикл
				
				ОбластьСтрока.Параметры.Заполнить(ТаблицаЗаказы);
				Если ТипНаряда = 1 Тогда
					ОбластьСтрока.Параметры.КонтактноеЛицо = Строка(ТаблицаЗаказы.КонтактноеЛицо) + ТаблицаЗаказы.ТелефонКонтактногоЛица;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				//Если ТекущийЗаказ <> ТаблицаЗаказы.Заказ Тогда
				//	
				//	Если НомерСтроки >= 1 Тогда ОбластьСтрока.Параметры.Склад = Склады; ТабличныйДокумент.Вывести(ОбластьСтрока); КонецЕсли;
				//		                					
				//	Склады = Строка(ТаблицаЗаказы.Склад);
				
				//	ТекущийЗаказ = ТаблицаЗаказы.Заказ; 	
				//	
				//	НомерСтроки = НомерСтроки + 1;
				//	ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
				//
				//	ВсегоМест 	= ВсегоМест + ТаблицаЗаказы.КоличествоМест;
				//	ВсегоВес	= ВсегоВес + ТаблицаЗаказы.Вес;
				//
				//	ОбластьСтрока.Параметры.Заполнить(ТаблицаЗаказы);
				
				//Иначе
				//	Склады = Склады + Символы.ПС + Строка(ТаблицаЗаказы.Склад);
				//КонецЕсли;
				
				
				
			КонецЦикла;
			
			//ОбластьСтрока.Параметры.Склад = Склады;
			//ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			//ОбластьИтого.Параметры.Заполнить(Новый Структура("ВсегоМест, ВсегоВес", ВсегоМест, ВсегоВес));
			//ТабличныйДокумент.Вывести(ОбластьИтого);
			
		КонецЕсли;
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		Если НЕ ЗначениеЗаполнено(ОбластьПодвал.Параметры.Отгрузил) Тогда
			ОбластьПодвал.Параметры.Отгрузил = "_________________________________";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	
КонецПроцедуры

Процедура Печать_НарядНаЗагрузку(ТабличныйДокумент, Ссылка, ТипНаряда) Экспорт
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатиНаряда(Ссылка);
	
	ЗаполнитьТабличныйДокумент(ТабличныйДокумент, ДанныеДляПечати, ТипНаряда);
	
КонецПроцедуры

#КонецОбласти
