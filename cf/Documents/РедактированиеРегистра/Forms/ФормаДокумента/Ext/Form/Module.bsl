
&НаСервере
Процедура ЗаполнитьРазницуИз81РезервНаСервере()
	
	// Получим остатки из 8.1
	
	СтрОшибки 		= "";
	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
	
	Если Connector = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
			|ВЫБРАТЬ 
			|	ДокументРезерва,
			|	Склад,
			|	Номенклатура,
			|	КоличествоОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&ДатаДокумента)",,
			Новый Структура("ДатаДокумента", ДатаЗаполнения),
			СтрОшибки,
			Connector);
		
	Если РезультатЗапроса81 = Неопределено Тогда
		
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
		
	КонецЕсли;
	
	// Переформатируем в данные 8.2
	
	ТаблицаДанных81 = Новый ТаблицаЗначений;
	ТаблицаДанных81.Колонки.Добавить("ДокументРезерва", Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя"));
	ТаблицаДанных81.Колонки.Добавить("Склад", 			Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДанных81.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных81.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
	
	Выборка81 = РезультатЗапроса81.Выбрать();
	Пока Выборка81.Следующий() Цикл
		
		НовСтрока = ТаблицаДанных81.Добавить();
		НовСтрока.ДокументРезерва 	= Документы.ЗаказПокупателя.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.ДокументРезерва.УникальныйИдентификатор())));
		НовСтрока.Номенклатура 		= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Номенклатура.УникальныйИдентификатор())));
		НовСтрока.Склад 			= Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Склад.УникальныйИдентификатор())));
		НовСтрока.Количество		= Выборка81.Количество;
		
	КонецЦикла;
	
	// Теперь загрузим в SQL
	 
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица81.ДокументРезерва,
	|	Таблица81.Склад,
	|	Таблица81.Номенклатура,
	|	Таблица81.Количество
	|ПОМЕСТИТЬ
	|	Таблица81
	|ИЗ
	|	&Таблица81 КАК Таблица81
	|");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
	Запрос.Выполнить();
	
	// Сравним остатки 8.1 с остатками 8.2
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА 														КАК Активность,
	|	&ДатаДокумента		 										КАК Период,
	|	ЕСТЬNULL(Ост.ДокументРезерва, Таблица81.ДокументРезерва)	КАК ДокументРезерва,
	|	ЕСТЬNULL(Ост.Размещение, Таблица81.Склад)		 			КАК Размещение,
	|	ЕСТЬNULL(Ост.Номенклатура, Таблица81.Номенклатура)		 	КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) - ЕСТЬNULL(Таблица81.Количество,0) 
	|		ИНАЧЕ ЕСТЬNULL(Таблица81.Количество,0) - ЕСТЬNULL(Ост.КоличествоОстаток,0) 
	|	КОНЕЦ 												КАК Количество,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА &ВидДвиженияРасход 
	|		ИНАЧЕ &ВидДвиженияПриход 
	|	КОНЕЦ 												КАК ВидДвижения
	|ИЗ
	|	Таблица81 КАК Таблица81
	|
	|ПОЛНОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(&ДатаДокумента) КАК Ост
	|ПО
	|	Таблица81.ДокументРезерва 	= Ост.ДокументРезерва И
	|	Таблица81.Склад 			= Ост.Размещение И
	|	Таблица81.Номенклатура 		= Ост.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(Ост.КоличествоОстаток,0) <> ЕСТЬNULL(Таблица81.Количество,0)
	|";

	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	
 	// Заполним движения
	
	Движения = Объект.Движения.ТоварыВРезерве;
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьРазницуИз81ОстаткиНаСервере()
	
	// Получим остатки из 8.1
	
	СтрОшибки 		= "";
	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
	
	Если Connector = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
			|ВЫБРАТЬ 
			|	Склад,
			|	Номенклатура,
			|	КоличествоОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента)",,
			Новый Структура("ДатаДокумента", ДатаЗаполнения),
			СтрОшибки,
			Connector);
		
	Если РезультатЗапроса81 = Неопределено Тогда
		
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
		
	КонецЕсли;
	
	// Переформатируем в данные 8.2
	
	ТаблицаДанных81 = Новый ТаблицаЗначений;
	ТаблицаДанных81.Колонки.Добавить("Склад", 			Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДанных81.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных81.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
	
	Выборка81 = РезультатЗапроса81.Выбрать();
	Пока Выборка81.Следующий() Цикл
		
		НовСтрока = ТаблицаДанных81.Добавить();
		НовСтрока.Номенклатура 		= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Номенклатура.УникальныйИдентификатор())));
		НовСтрока.Склад 			= Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Склад.УникальныйИдентификатор())));
		НовСтрока.Количество		= Выборка81.Количество;
		
	КонецЦикла;
	
	// Теперь загрузим в SQL
	 
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица81.Склад,
	|	Таблица81.Номенклатура,
	|	Таблица81.Количество
	|ПОМЕСТИТЬ
	|	Таблица81
	|ИЗ
	|	&Таблица81 КАК Таблица81
	|");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
	Запрос.Выполнить();
	
	// Сравним остатки 8.1 с остатками 8.2
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА 												КАК Активность,
	|	&ДатаДокумента 										КАК Период,
	|	ЕСТЬNULL(Ост.Склад, Таблица81.Склад) 				КАК Склад,
	|	ЕСТЬNULL(Ост.Номенклатура, Таблица81.Номенклатура) 	КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) - ЕСТЬNULL(Таблица81.Количество,0) 
	|		ИНАЧЕ ЕСТЬNULL(Таблица81.Количество,0) - ЕСТЬNULL(Ост.КоличествоОстаток,0) 
	|	КОНЕЦ 												КАК Количество,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА &ВидДвиженияРасход 
	|		ИНАЧЕ &ВидДвиженияПриход 
	|	КОНЕЦ 												КАК ВидДвижения
	|ИЗ
	|	Таблица81 КАК Таблица81
	|
	|ПОЛНОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента) КАК Ост
	|ПО
	|	Таблица81.Склад 		= Ост.Склад И
	|	Таблица81.Номенклатура 	= Ост.Номенклатура
	|
	|ГДЕ
	|	ЕСТЬNULL(Ост.КоличествоОстаток,0) <> ЕСТЬNULL(Таблица81.Количество,0)
	|";

	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	
 	// Заполним движения
	
	Движения = Объект.Движения.ТоварыНаСкладах;
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьРазницуИз81ВзаиморасчетыНаСервере()
	
	// Получим остатки из 8.1
	
	СтрОшибки 		= "";
	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
	
	Если Connector = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
			|ВЫБРАТЬ 
			|	Контрагент,
			|	Организация,
			|	СуммаВзаиморасчетовОстаток  КАК Сумма,
			|	СуммаУпрОстаток				КАК СуммаУпр
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаДокумента)",,
			Новый Структура("ДатаДокумента", ДатаЗаполнения),
			СтрОшибки,
			Connector);
		
	Если РезультатЗапроса81 = Неопределено Тогда
		
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
		
	КонецЕсли;
	
	// Переформатируем в данные 8.2
	
	ТаблицаДанных81 = Новый ТаблицаЗначений;
	ТаблицаДанных81.Колонки.Добавить("Контрагент", 		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДанных81.Колонки.Добавить("Организация", 	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДанных81.Колонки.Добавить("Сумма", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных81.Колонки.Добавить("СуммаУпр", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	Выборка81 = РезультатЗапроса81.Выбрать();
	Пока Выборка81.Следующий() Цикл
		
		НовСтрока = ТаблицаДанных81.Добавить();
		НовСтрока.Контрагент 		= Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Контрагент.УникальныйИдентификатор())));
		НовСтрока.Организация 		= Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Организация.УникальныйИдентификатор())));
		НовСтрока.Сумма				= Выборка81.Сумма;
		НовСтрока.СуммаУпр			= Выборка81.СуммаУпр;

	КонецЦикла;
	
	// Теперь загрузим в SQL
	 
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица81.Контрагент,
	|	Таблица81.Организация,
	|	Таблица81.Сумма,
	|	Таблица81.СуммаУпр
	|ПОМЕСТИТЬ
	|	Таблица81
	|ИЗ
	|	&Таблица81 КАК Таблица81
	|");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
	Запрос.Выполнить();
	
	// Сравним остатки 8.1 с остатками 8.2
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА 												КАК Активность,
	|	&ДатаДокумента 										КАК Период,
	|	ЕСТЬNULL(Ост.Организация, Таблица81.Организация)	КАК Организация,
	|	ЕСТЬNULL(Ост.Контрагент, Таблица81.Контрагент)	 	КАК Контрагент,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) > ЕСТЬNULL(Таблица81.Сумма,0) 
	|		ТОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) - ЕСТЬNULL(Таблица81.Сумма,0) 
	|		ИНАЧЕ ЕСТЬNULL(Таблица81.Сумма,0) - ЕСТЬNULL(Ост.СуммаОстаток,0) 
	|	КОНЕЦ 												КАК Сумма,
	|	ВЫБОР  
	|		КОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) > ЕСТЬNULL(Таблица81.Сумма,0) 
	|		ТОГДА ЕСТЬNULL(Ост.СуммаУпрОстаток,0) - ЕСТЬNULL(Таблица81.СуммаУпр,0)  
	|		ИНАЧЕ ЕСТЬNULL(Таблица81.СуммаУпр,0) - ЕСТЬNULL(Ост.СуммаУпрОстаток,0)
	|	КОНЕЦ 												КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) > ЕСТЬNULL(Таблица81.Сумма,0)
	|		ТОГДА &ВидДвиженияРасход 
	|		ИНАЧЕ &ВидДвиженияПриход
	|	
	|	КОНЕЦ 												КАК ВидДвижения
	|ИЗ
	|	Таблица81 КАК Таблица81
	|
	|ПОЛНОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.Взаиморасчеты.Остатки(&ДатаДокумента) КАК Ост
	|ПО
	|	Таблица81.Организация 	= Ост.Организация И
	|	Таблица81.Контрагент 	= Ост.Контрагент
	|
	|ГДЕ
	|	ЕСТЬNULL(Ост.СуммаОстаток,0) <> ЕСТЬNULL(Таблица81.Сумма,0) ИЛИ ЕСТЬNULL(Ост.СуммаУпрОстаток,0) <> ЕСТЬNULL(Таблица81.СуммаУпр,0)
	|";

	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	
 	// Заполним движения
	
	Движения = Объект.Движения.Взаиморасчеты;
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьРазницуИз81Взаиморасчеты(Команда)
	ЗаполнитьРазницуИз81ВзаиморасчетыНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДополнительныеРеквизиты(Команда)
	
	ФункцииФормДокументов.ОткрытьОбщиеРеквизиты(ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ОткрытьСравнениеДвиженийС81(Команда)
	
	ОткрытьФорму("Обработка.СравнениеДвиженийС81.ФормаОбъекта",,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазницуИз81Резерв(Команда)
	
	ЗаполнитьРазницуИз81РезервНаСервере();
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьРазницуИз81Остатки(Команда)
	
	ЗаполнитьРазницуИз81ОстаткиНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура ТоварыВЯчейкахНаСервере()
	
	// Получим остатки из 8.1
	
	СтрОшибки 		= "";
	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
	
	Если Connector = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
			|ВЫБРАТЬ 
			|	Ячейка,
			|	Номенклатура,
			|	КоличествоОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ОстаткиЯчеек.Остатки(&ДатаДокумента)",,
			Новый Структура("ДатаДокумента", ДатаЗаполнения),
			СтрОшибки,
			Connector);
		
	Если РезультатЗапроса81 = Неопределено Тогда
		
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
		
	КонецЕсли;
	
	// Переформатируем в данные 8.2
	
	ТаблицаДанных81 = Новый ТаблицаЗначений;
	ТаблицаДанных81.Колонки.Добавить("Ячейка", 			Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	ТаблицаДанных81.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных81.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
	
	Выборка81 = РезультатЗапроса81.Выбрать();
	Пока Выборка81.Следующий() Цикл
		
		НовСтрока = ТаблицаДанных81.Добавить();
		НовСтрока.Номенклатура 		= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Номенклатура.УникальныйИдентификатор())));
		НовСтрока.Ячейка 			= Справочники.Ячейки.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Ячейка.УникальныйИдентификатор())));
		НовСтрока.Количество		= Выборка81.Количество;
		
	КонецЦикла;
	
	// Теперь загрузим в SQL
	 
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица81.Ячейка,
	|	Таблица81.Номенклатура,
	|	Таблица81.Количество
	|ПОМЕСТИТЬ
	|	Таблица81
	|ИЗ
	|	&Таблица81 КАК Таблица81
	|");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
	Запрос.Выполнить();
	
	// Сравним остатки 8.1 с остатками 8.2                    \
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА 												КАК Активность,
	|	&ДатаДокумента 										КАК Период,
	|	ЕСТЬNULL(Ост.Ячейка, Таблица81.Ячейка) 				КАК Ячейка,
	|	ЕСТЬNULL(Ост.Номенклатура, Таблица81.Номенклатура) 	КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) - ЕСТЬNULL(Таблица81.Количество,0) 
	|		ИНАЧЕ ЕСТЬNULL(Таблица81.Количество,0) - ЕСТЬNULL(Ост.КоличествоОстаток,0) 
	|	КОНЕЦ 												КАК Количество,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|		ТОГДА &ВидДвиженияРасход 
	|		ИНАЧЕ &ВидДвиженияПриход 
	|	КОНЕЦ 												КАК ВидДвижения
	|ИЗ
	|	Таблица81 КАК Таблица81
	|
	|ПОЛНОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВЯчейках.Остатки(&ДатаДокумента) КАК Ост
	|ПО
	|	Таблица81.Ячейка 		= Ост.Ячейка И
	|	Таблица81.Номенклатура 	= Ост.Номенклатура
	|
	|ГДЕ
	|	ЕСТЬNULL(Ост.КоличествоОстаток,0) <> ЕСТЬNULL(Таблица81.Количество,0)
	|";

	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	
 	// Заполним движения
	
	Движения = Объект.Движения.ТоварыВЯчейках;
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьРазницуТоварыВЯчейках(Команда)
	
	ТоварыВЯчейкахНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаказыПоставщикамНаСервере()
	
	// Получим остатки из 8.1
	
	СтрОшибки 		= "";
	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
	
	Если Connector = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
			|ВЫБРАТЬ 
			|	ЗаказПоставщику,
			|	Номенклатура,
			|  	Цена,
			|	СтавкаНДС,
			|	КоличествоОстаток			Количество,
			|	СуммаВзаиморасчетовОстаток  Сумма
			|ИЗ
			|	РегистрНакопления.аиЗаказыПоставщикам.Остатки(&ДатаДокумента)",,
			Новый Структура("ДатаДокумента", ДатаЗаполнения),
			СтрОшибки,
			Connector);
		
	Если РезультатЗапроса81 = Неопределено Тогда
		
		ОбщиеФункции.СообщитьТекст(СтрОшибки);
		Возврат;
		
	КонецЕсли;
	
	// Переформатируем в данные 8.2
	
	ТаблицаДанных81 = Новый ТаблицаЗначений;                                 
	ТаблицаДанных81.Колонки.Добавить("ЗаказПоставщику", Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику"));
	ТаблицаДанных81.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных81.Колонки.Добавить("Цена", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,2)));
	ТаблицаДанных81.Колонки.Добавить("СтавкаНДС", 		Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	
	ТаблицаДанных81.Колонки.Добавить("Сумма", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных81.Колонки.Добавить("Количество", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));

	
	Выборка81 = РезультатЗапроса81.Выбрать();
	Пока Выборка81.Следующий() Цикл
		
		НовСтрока = ТаблицаДанных81.Добавить();
		НовСтрока.ЗаказПоставщику	= Документы.ЗаказПоставщику.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.ЗаказПоставщику.УникальныйИдентификатор())));
		НовСтрока.Номенклатура 		= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.Номенклатура.УникальныйИдентификатор())));
		НовСтрока.СтавкаНДС			= Перечисления.СтавкиНДС.Получить(Connector.Перечисления.СтавкиНДС.Индекс(Выборка81.СтавкаНДС));
		
		НовСтрока.Цена 				= Выборка81.Цена;
		НовСтрока.Сумма 			= Выборка81.Сумма;
		НовСтрока.Количество		= Выборка81.Количество;		
		
	КонецЦикла;
	
	// Теперь загрузим в SQL
	 
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица81.ЗаказПоставщику,
	|	Таблица81.Номенклатура,
	|	Таблица81.Цена,
	|	Таблица81.СтавкаНДС,
	|	Таблица81.Количество,
	|	Таблица81.Сумма
	|ПОМЕСТИТЬ
	|	Таблица81
	|ИЗ
	|	&Таблица81 КАК Таблица81
	|");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
	Запрос.Выполнить();
	
	// Сравним остатки 8.1 с остатками 8.2
	
	Запрос.Текст = "
	
	|ВЫБРАТЬ
	|	ИСТИНА 												КАК Активность,
	|	&ДатаДокумента 										КАК Период,
	|	ЕСТЬNULL(Кол.ЗаказПоставщику, Сум.ЗаказПоставщику) 				КАК ЗаказПоставщику,
	|	ЕСТЬNULL(Кол.Номенклатура, Сум.Номенклатура) 					КАК Номенклатура,
	|	ЕСТЬNULL(Кол.Цена, Сум.Цена) 									КАК Цена,
	|	ЕСТЬNULL(Кол.СтавкаНДС, Сум.СтавкаНДС) 							КАК СтавкаНДС,
	|	ЕСТЬNULL(Кол.ВидДвижения, Сум.ВидДвижения) 						КАК ВидДвижения,
	|	ЕСТЬNULL(Кол.Сумма, 0) + ЕСТЬNULL(Кол.Сумма, 0)                 КАК Сумма,
	|	ЕСТЬNULL(Кол.Количество, 0) + ЕСТЬNULL(Кол.Количество, 0)       КАК Количество
	|ИЗ
	|(	ВЫБРАТЬ
	|		ЕСТЬNULL(Ост.ЗаказПоставщику, Таблица81.ЗаказПоставщику) 				КАК ЗаказПоставщику,
	|		ЕСТЬNULL(Ост.Номенклатура, Таблица81.Номенклатура) 						КАК Номенклатура,
	|		ЕСТЬNULL(Ост.Цена, Таблица81.Цена) 										КАК Цена,
	|		ЕСТЬNULL(Ост.СтавкаНДС, Таблица81.СтавкаНДС) 							КАК СтавкаНДС,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|			ТОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) - ЕСТЬNULL(Таблица81.Количество,0) 
	|			ИНАЧЕ ЕСТЬNULL(Таблица81.Количество,0) - ЕСТЬNULL(Ост.КоличествоОстаток,0) 
	|		КОНЕЦ 	КАК Количество,
	|		0	КАК Сумма,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(Ост.КоличествоОстаток,0) > ЕСТЬNULL(Таблица81.Количество,0) 
	|			ТОГДА &ВидДвиженияРасход 
	|			ИНАЧЕ &ВидДвиженияПриход 
	|		КОНЕЦ 												КАК ВидДвижения
	|	ИЗ
	|		Таблица81 КАК Таблица81
	|
	|	ПОЛНОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаДокумента) КАК Ост
	|	ПО
	|		Таблица81.ЗаказПоставщику = Ост.ЗаказПоставщику И
	|		Таблица81.Номенклатура 	= Ост.Номенклатура И
	|		Таблица81.Цена = Ост.Цена И
	|		Таблица81.СтавкаНДС = Ост.СтавкаНДС
	|
	|	ГДЕ
	|		ЕСТЬNULL(Ост.КоличествоОстаток,0) <> ЕСТЬNULL(Таблица81.Количество,0)
	|)	Кол
	|ПОЛНОЕ СОЕДИНЕНИЕ
	|
	|(	ВЫБРАТЬ
	|		ЕСТЬNULL(Ост.ЗаказПоставщику, Таблица81.ЗаказПоставщику) 				КАК ЗаказПоставщику,
	|		ЕСТЬNULL(Ост.Номенклатура, Таблица81.Номенклатура) 						КАК Номенклатура,
	|		ЕСТЬNULL(Ост.Цена, Таблица81.Цена) 										КАК Цена,
	|		ЕСТЬNULL(Ост.СтавкаНДС, Таблица81.СтавкаНДС) 							КАК СтавкаНДС,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) > ЕСТЬNULL(Таблица81.Сумма,0) 
	|			ТОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) - ЕСТЬNULL(Таблица81.Сумма,0) 
	|			ИНАЧЕ ЕСТЬNULL(Таблица81.Сумма,0) - ЕСТЬNULL(Ост.СуммаОстаток,0) 
	|		КОНЕЦ 	КАК Сумма,
	|		0	КАК Количество,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(Ост.СуммаОстаток,0) > ЕСТЬNULL(Таблица81.Сумма,0) 
	|			ТОГДА &ВидДвиженияРасход 
	|			ИНАЧЕ &ВидДвиженияПриход 
	|		КОНЕЦ 												КАК ВидДвижения
	|	ИЗ
	|		Таблица81 КАК Таблица81
	|
	|	ПОЛНОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаДокумента) КАК Ост
	|	ПО
	|		Таблица81.ЗаказПоставщику = Ост.ЗаказПоставщику И
	|		Таблица81.Номенклатура 	= Ост.Номенклатура И
	|		Таблица81.Цена = Ост.Цена И
	|		Таблица81.СтавкаНДС = Ост.СтавкаНДС
	|
	|	ГДЕ
	|		ЕСТЬNULL(Ост.СуммаОстаток,0) <> ЕСТЬNULL(Таблица81.Сумма,0)
	|)	Сум
	|ПО
	|	Кол.ЗаказПоставщику = Сум.ЗаказПоставщику И
	|	Кол.Номенклатура 	= Сум.Номенклатура И
	|	Кол.Цена = Сум.Цена И
	|	Кол.СтавкаНДС = Сум.СтавкаНДС И
    |	Кол.ВидДвижения = Сум.ВидДвижения
	|";

	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	
	 // Заполним движения
	
	Движения = Объект.Движения.ЗаказыПоставщикам;
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазницуИз81ЗаказыПоставщикам(Команда)
	ЗаказыПоставщикамНаСервере();
КонецПроцедуры

// КОРЗИНА
#Если Не ВебКлиент Тогда
&НаСервере
Процедура ДобавитьИзКорзиныНаСервере(ИмяКомпа, СтруктураКолонокТовары = Неопределено, КолСтрок, КолВДок)
	
	ИмяТаблицы = Элементы.Регистры.ТекущаяСтраница.Имя; 
	
	Попытка
		НаборДвижений = Объект.Движения[ИмяТаблицы];
	Исключение
		Возврат;
	КонецПопытки;
	
	МодульКорзины.ПолучитьТоварИзКорзиныКакЕсть(НаборДвижений, ИмяКомпа, КолСтрок);
	
	КолВДок = НаборДвижений.Количество();
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ВставитьИзКорзины(Команда)
	
	КолСтрок = 0;
	КолВДок = 0;
	
	ДобавитьИзКорзиныНаСервере(ИмяКомпьютера(), , КолСтрок, КолВДок);
	
	Если КолСтрок Тогда
		
		МодульКорзины.ОповеститьОВставкеТовараВДокумент(КолСтрок, КолВДок);
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
		
	КонецЕсли;
	

КонецПроцедуры
#КонецЕсли

&НаСервере
Процедура СкопироватьИзВзаиморасчетовНаСервере()
	ТЗ=Объект.Движения.Взаиморасчеты.Выгрузить();
	Дл=ТЗ.СкопироватьКолонки();
	Для Каждого Стр из ТЗ Цикл
		Если Стр.ФормаОтношений=Перечисления.ФормаОтношений.Клиент Тогда
			Нов=Дл.Добавить();
			ЗаполнитьЗначенияСвойств(Нов,Стр);
			Нов.Сумма=Стр.СуммаУпр;
		КонецЕсли	
	КонецЦикла;
	Объект.Движения.ДолгиПоОтгрузкам.Загрузить(Дл);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьИзВзаиморасчетов(Команда)
	СкопироватьИзВзаиморасчетовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВзаиморасчетыВДолгиПоЗаказамНаСервере()
	ТЗ=Объект.Движения.Взаиморасчеты.Выгрузить();
	Дл=ТЗ.СкопироватьКолонки();
	Для Каждого Стр из ТЗ Цикл
		Если Стр.ФормаОтношений=Перечисления.ФормаОтношений.Клиент Тогда
			Нов=Дл.Добавить();
			ЗаполнитьЗначенияСвойств(Нов,Стр);
			Нов.Сумма=Стр.СуммаУпр;
		КонецЕсли	
	КонецЦикла;
	Объект.Движения.ДолгиПоЗаказам.Загрузить(Дл);
КонецПроцедуры

&НаКлиенте
Процедура ВзаиморасчетыВДолгиПоЗаказам(Команда)
	ВзаиморасчетыВДолгиПоЗаказамНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АктивностьПриИзменении(Элемент)
	АктивностьПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура АктивностьПриИзмененииНаСервере()
	//
	//Для Каждого НЗ из Объект.Движения Цикл
	//	Для Каждого Стр из НЗ Цикл
	//		Стр.Активность = Объект.Активность;
	//	КонецЦикла;
	//КонецЦикла;
	//
КонецПроцедуры


//&НаСервере
//Процедура ПродажиПоДисконтнымКартамНаСервере()
//	
//	// Получим остатки из 8.1
//	
//	СтрОшибки 		= "";
//	Connector 		= КэшируемыеФункции.ИницилизироватьCOMConnector81(,СтрОшибки);
//	ДатаЗаполнения 	= ?(Объект.Дата = '00010101', ТекущаяДата(), Объект.Дата);
//	
//	Если Connector = Неопределено Тогда
//		ОбщиеФункции.СообщитьТекст(СтрОшибки);
//		Возврат;
//	КонецЕсли;
//	
//	РезультатЗапроса81 = COMServer.ПолучитьВыполнениеЗапроса81("
//			|ВЫБРАТЬ 
//			|	ДисконтнаяКарта			ИнформационнаяКарта,
//			|	ВладелецДисконтнойКарты ВладелецКарты,
//			|	СуммаОборот Сумма
//			|ИЗ
//			|	РегистрНакопления.ПродажиПоДисконтнымКартам.Обороты(,&КонецПериода)",,
//			Новый Структура("КонецПериода", ДатаЗаполнения),
//			СтрОшибки,
//			Connector);
//		
//	Если РезультатЗапроса81 = Неопределено Тогда
//		
//		ОбщиеФункции.СообщитьТекст(СтрОшибки);
//		Возврат;
//		
//	КонецЕсли;
//	
//	// Переформатируем в данные 8.2
//	
//	ТаблицаДанных81 = Новый ТаблицаЗначений;
//	ТаблицаДанных81.Колонки.Добавить("ИнформационнаяКарта", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
//	ТаблицаДанных81.Колонки.Добавить("ВладелецКарты", 		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
//	ТаблицаДанных81.Колонки.Добавить("Сумма", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
//	
//	Выборка81 = РезультатЗапроса81.Выбрать();
//	Пока Выборка81.Следующий() Цикл
//		
//		НовСтрока = ТаблицаДанных81.Добавить();
//		НовСтрока.ИнформационнаяКарта 		= Справочники.ИнформационныеКарты.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.ИнформационнаяКарта.УникальныйИдентификатор())));
//		НовСтрока.ВладелецКарты     = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(Connector.String(Выборка81.ВладелецКарты.УникальныйИдентификатор())));
//		НовСтрока.Сумма				= Выборка81.Сумма;
//		
//	КонецЦикла;
//	
//	// Теперь загрузим в SQL
//	 
//	Запрос = Новый Запрос("
//	|ВЫБРАТЬ
//	|	Таблица81.ИнформационнаяКарта,
//	|   Таблица81.ВладелецКарты,
//	|	Таблица81.Сумма
//	|ПОМЕСТИТЬ
//	|	Таблица81
//	|ИЗ
//	|	&Таблица81 КАК Таблица81
//	|");
//	
//	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
//	Запрос.УстановитьПараметр("Таблица81", ТаблицаДанных81);
//	Запрос.Выполнить();
//	
//	// Сравним остатки 8.1 с остатками 8.2
//	
//	Запрос.Текст = "
//	|ВЫБРАТЬ
//	|	ИСТИНА 												КАК Активность,
//	|	&ДатаДокумента 										КАК Период,
//	|	ЕСТЬNULL(Ост.ИнформационнаяКарта, Таблица81.ИнформационнаяКарта) 	КАК ИнформационнаяКарта,
//	|	ЕСТЬNULL(Ост.ВладелецКарты, Таблица81.ВладелецКарты)                КАК ВладелецКарты,
//	|   ЕСТЬNULL(Таблица81.Сумма,0) - ЕСТЬNULL(Ост.СуммаОборот,0) КАК Сумма
//	|ИЗ
//	|	Таблица81 КАК Таблица81
//	|
//	|ПОЛНОЕ СОЕДИНЕНИЕ
//	|	РегистрНакопления.ПродажиПоДисконтнымКартам.Обороты(,&ДатаДокумента) КАК Ост
//	|ПО
//	|	Таблица81.ИнформационнаяКарта 		= Ост.ИнформационнаяКарта И
//	|	Таблица81.ВладелецКарты				= Ост.ВладелецКарты
//	|
//	|ГДЕ
//	|	ЕСТЬNULL(Ост.СуммаОборот,0) <> ЕСТЬNULL(Таблица81.Сумма,0)
//	|";

//	Запрос.УстановитьПараметр("ДатаДокумента", 		ДатаЗаполнения);
//	
// 	// Заполним движения
//	
//	Движения = Объект.Движения.ПродажиПоДисконтнымКартам;
//	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
//	
//КонецПроцедуры
//&НаКлиенте
//Процедура ЗагрузитьРазницуИз81ПродажиПоДисконтнымКартам(Команда)
//	
//	  ПродажиПоДисконтнымКартамНаСервере();
//	
//КонецПроцедуры

