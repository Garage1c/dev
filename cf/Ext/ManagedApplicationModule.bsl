// ПодключаемоеОборудование
Перем глПодключаемоеОборудование Экспорт; // для кэширования на клиенте
// Конец ПодключаемоеОборудование

Перем глВнешнееОборудование Экспорт; // для кэширования на клиенте
Перем глВыгонялкаУстановлена Экспорт; // значит обработчики ожидания готовы

Перем мПоследняяДатаВыполнения Экспорт;

Перем глПаролиНаПочту Экспорт; // соответствие паролей профилям (ключ - профиль, значение - пароль)

Перем глCOMСоединения Экспорт;

Перем глНастройкаМашины Экспорт;

Перем глСтавкаНДС_БезНДС Экспорт;

Перем глЗамерВремени Экспорт;  // временные переменные клиента для замера производительности

Перем глПараметрыПакетнойПечати Экспорт; // в ней хранятся настройка печати для пакетных документов

Перем глТекущийПользователь Экспорт;

Перем глАдресТекущихСообщений Экспорт; 		// адрес для мгновенных сообщений
Перем глСтДатаЗапускаМгновСообщений Экспорт;// нужен для определения датаы последнего запуска робота, чтобы знать запускать нового или нет

Процедура ПриНачалеРаботыСистемы()
	
	глCOMСоединения			= Новый Соответствие;
	глВнешнееОборудование 	= Новый Соответствие;
	глПаролиНаПочту			= Новый Соответствие;
	глЗамерВремени			= Новый Соответствие;
	
	// Заголовок
	
	УстановитьЗаголовокПриложения(КэшируемыеФункции.ПолучитьТекстЗаголовкаПриложения());
	
	// Установим контрорль ыговыгонялку
	
	ВключитьОбработчикКонтроляРаботы();
	
	// Подключим напоминалку
	
	НапоминатьКаждые = КэшируемыеФункции.ПолучитьЗначениеЗначениеНастройкиПользователя("ПериодОпроса");
	
	Если Не ЗначениеЗаполнено(НапоминатьКаждые) Тогда
		НапоминатьКаждые = 0;
	КонецЕсли;
	
	Если НапоминатьКаждые Тогда
		ПодключитьОбработчикОжидания("ПроверкаНапоминаний", НапоминатьКаждые);
	КонецЕсли;
	
	// Подключим сканер штрих кода на все время работы программы
	
	ВнешнееОборудование.УстановитьСканерШтрихКодаВРежимОжиданияЕслиОнЕсть();
	
	// Установим параметры пакетной печати
	
	глПараметрыПакетнойПечати = ПечатьНаСервере.ПолучитьПараметрыПакетнойПечатиПользователя();
	
	// Откроем ленту новостей
	
	Если ОбщегоНазначения.ПоказатьНовостиПриОткрытии() = Истина Тогда
		ОткрытьФорму("ОбщаяФорма.Новости", Новый Структура("ЗакрыватьЕслиНетНовостей", Истина)); КонецЕсли;
	
	// Проверим на изменение пароль
	ПодключитьОбработчикОжидания("ПроверитьТребованиеСменитьПароль", 1, Истина);
	
	глТекущийПользователь = НастройкиПользователя.ТекущийПользователь();
	
	// Считаем настройку машины
	
	#Если ВебКлиент Тогда
		
		глНастройкаМашины = ВнешнееОборудованиеСервер.ПолучитьНастройкиМашины("глВебКлиент");
		
	#Иначе
	
		глНастройкаМашины = ВнешнееОборудованиеСервер.ПолучитьНастройкиМашины(ИмяКомпьютера());
	
	#КонецЕсли
	
	глСтавкаНДС_БезНДС = РаботаСНоменклатурой.ПолучитьСтавкуНДС_БезНДС();
	
	// Сообщения по событиям
	//СобытияКлиент.Иницилизировать(глАдресТекущихСообщений);
	СобытияКлиент.Иницилизировать();
		
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПриНачалеРаботыСистемы();
	// Конец ПодключаемоеОборудование
КонецПроцедуры

Процедура ПередНачаломРаботыСистемы(Отказ) Экспорт
	
	// Если при запуске стоит ключ /cEnterAdmin то тогда такого запустим влюбом случае (это наш он пришел спасти этот мир)
	
	Если Не Найти(ВРЕГ(ПараметрЗапуска), Врег("EnterAdmin")) Тогда
		
		ТекстПричины = "";
		Если Не МожноРаботать(ТекстПричины) Тогда
			
			ОбщиеФункции.СообщитьТекстВБраузере(ТекстПричины, Истина);
			Отказ = Истина; 
			Возврат; КонецЕсли; КонецЕсли;
	
	// Проверим обновление
	
	стрОшибки = "";
	Если Не ПользователиПолныеПрава.ОбновлениеИБУспешно(стрОшибки) Тогда
		ОбщиеФункции.СообщитьТекстВБраузере("Ошибка обновления: " + стрОшибки, Истина);
		Отказ = Истина; 
		Возврат; КонецЕсли;
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.БПО_ПередНачаломРаботыСистемы();
	// Конец ПодключаемоеОборудование
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)
	
	Если Событие = "ПолученШтрихкод" Тогда
		//ОбщиеФункции.СообщитьТекст(Данные);
		Оповестить(Событие, СокрЛП(Данные), Источник); КонецЕсли;

	// ПодключаемоеОборудование
	// Подготовить данные
	
	ОписаниеСобытия = Новый Структура();
	ОписаниеОшибки  = "";
	
	ОписаниеСобытия.Вставить("Источник", Источник);
	ОписаниеСобытия.Вставить("Событие",  Событие);
	ОписаниеСобытия.Вставить("Данные",   Данные);
	
	// Передать на обработку данные.
	Результат = МенеджерОборудованияКлиент.ОбработатьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
	Если Не Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='При обработке внешнего события от устройства произошла ошибка.'")
		                                                 + Символы.ПС + ОписаниеОшибки);
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
	
	Отказ = Истина;
	ТекстПредупреждения = НСтр("ru = 'Закрыть программу?'; de = 'Schließen Sie das Programm?'");
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПередЗавершениемРаботыСистемы();
	// Конец ПодключаемоеОборудование
КонецПроцедуры
