
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Запрос = Новый Запрос;
	               ///////Цены по типу "Себестоимость"
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЧИСЛО(15, 2)) КАК ЦенаСебестоимость
	               |ПОМЕСТИТЬ ТипЦенСебестоимость
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодЦен, ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	               |;
	               ///Цены по типу ""Закупочная руб""
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
				   |	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупочная
				   |ПОМЕСТИТЬ ТипЦенЗакупочныйРуб
				   |ИЗ
				   |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодЦен, ТипЦен = &ТипЦен1) КАК ЦеныНоменклатурыСрезПоследних
				   |;
				   ///Теперь срастим их 
				   |ВЫБРАТЬ
				   |	ТипЦенСебестоимость.Номенклатура КАК Номенклатура,
				   |	ТипЦенСебестоимость.ЦенаСебестоимость КАК ЦенаСебестоимость,
				   |	0 КАК ЦенаЗакупочная
				   |ПОМЕСТИТЬ ЦеныСебестоимостьВР
				   |ИЗ
				   |	ТипЦенСебестоимость
				   |
				   |ОБЪЕДИНИТЬ
				   |
				   |ВЫБРАТЬ
				   |	ТипЦенЗакупочныйРуб.Номенклатура КАК Номенклатура,
				   |	0,
				   |	ТипЦенЗакупочныйРуб.ЦенаЗакупочная
				   |ИЗ
				   |	ТипЦенЗакупочныйРуб
				   |;
				   |
				   |ВЫБРАТЬ
				   |	ЦеныСебестоимостьВР.Номенклатура КАК Номенклатура,
				   |ВЫБОР КОГДА ЦеныСебестоимостьВР.ЦенаСебестоимость = 0 ТОГДА ЦеныСебестоимостьВР.ЦенаЗакупочная ИНАЧЕ ЦеныСебестоимостьВР.ЦенаСебестоимость КОНЕЦ КАК Цена
				   |ПОМЕСТИТЬ ЦеныСебестоимость
				   |ИЗ
				   |	ЦеныСебестоимостьВР
				   |;
				   ///все, что написанно выше, можно сделать проще. Как придумаю как, обязательно сделаю.
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.Номенклатура,
	               |	ВЫРАЗИТЬ(ПродажиОбороты.СуммаОборот КАК ЧИСЛО(15, 2)) КАК СуммаОборот,
	               |	ВЫРАЗИТЬ(ПродажиОбороты.КоличествоОборот КАК ЧИСЛО(15, 2)) КАК КоличествоОборот
	               |ПОМЕСТИТЬ Продажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Период, ) КАК ПродажиОбороты
	               |ГДЕ
	               |	ПродажиОбороты.СуммаОборот > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Продажи.Номенклатура,
	               |	Продажи.КоличествоОборот * ЕСТЬNULL(ЦеныСебестоимость.Цена, 0) КАК Себестоимость,
	               |	Продажи.СуммаОборот,
	               |	ВЫБОР
	               |		КОГДА Продажи.СуммаОборот - Продажи.КоличествоОборот * ЕСТЬNULL(ЦеныСебестоимость.Цена, 0) <= 0
	               |			ТОГДА 0
	               |		ИНАЧЕ Продажи.СуммаОборот - Продажи.КоличествоОборот * ЕСТЬNULL(ЦеныСебестоимость.Цена, 0)
	               |	КОНЕЦ КАК Выручка
	               |ПОМЕСТИТЬ ВрТаб
	               |ИЗ
	               |	Продажи КАК Продажи
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныСебестоимость КАК ЦеныСебестоимость
	               |		ПО Продажи.Номенклатура = ЦеныСебестоимость.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВРТаб.Выручка) КАК ВыручкаИтог
	               |ПОМЕСТИТЬ ИтогОбщ
	               |ИЗ
	               |	ВрТаб КАК ВРТаб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВрТаб.Номенклатура КАК Номенклатура,
	               |	ВрТаб.Себестоимость КАК Себестоимость,
	               |	ВрТаб.СуммаОборот КАК Продажи,
	               |	ВрТаб.Выручка КАК Выручка,
	               |	&КатегорияА,
	               |	&КатегорияВ,
	               |	&КатегорияС,
	               |	ВрТаб.Выручка / ИтогОбщ.ВыручкаИтог * 100 КАК УДВес
	               |ИЗ
	               |	ВрТаб КАК ВрТаб
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ИтогОбщ КАК ИтогОбщ
	               |		ПО (ИСТИНА)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	УДВес УБЫВ";
	Запрос.УстановитьПараметр("КатегорияА", КатегорияА);
	Запрос.УстановитьПараметр("КатегорияВ", КатегорияВ);
	Запрос.УстановитьПараметр("КатегорияС", КатегорияС);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодСт.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ПериодСт.ДатаОкончания);
	Запрос.УстановитьПараметр("ПериодЦен", ?(ЗначениеЗаполнено(ПериодСт.ДатаОкончания),ПериодСт.ДатаОкончания, КонецДня(ТекущаяДата())));
	//ПараметрТипыЦен = Новый Массив;
	//ПараметрТипыЦен.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию("Себестоимость"));
	//ПараметрТипыЦен.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию());
	Запрос.УстановитьПараметр("ТипЦен", Справочники.ТипыЦен.НайтиПоНаименованию("Себестоимость"));
	Запрос.УстановитьПараметр("ТипЦен1", Справочники.ТипыЦен.НайтиПоНаименованию("Закупочная руб"));
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	////
	//Для Каждого Стр Из ТаблицаДанных Цикл
	//	
	//КонецЦикла;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаНабораДанных", ТаблицаДанных);
	
	Настройки = КомпоновщикНастроек.Настройки;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);//,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"),,);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры


