
&НаСервере
Функция ПолучитьЗначениеНоменклатуры(Расшифровка)
	
	КоллекцияРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	ПолеТовар = КоллекцияРасшифровки.Элементы[Расшифровка].ПолучитьПоля().Найти("Номенклатура");
    	
	Если ПолеТовар = Неопределено Тогда
	
		ИдентификаторПоляТовар = КоллекцияРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].Идентификатор;
		ПолеТовар = КоллекцияРасшифровки.Элементы[ИдентификаторПоляТовар].ПолучитьПоля().Найти("Номенклатура");
	
		Если ПолеТовар <> Неопределено Тогда
			Возврат ПолеТовар.Значение;
		КонецЕсли;
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат ПолеТовар.Значение;
	
КонецФункции

&НаСервере
Функция ПолучитьПолеРасшифровки(Расшифровка)
	
	КоллекцияРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	КоллекцияПолей = КоллекцияРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
    
  //  КоллекцияРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
    Если КоллекцияПолей.Количество() > 0 Тогда 
    	Возврат  КоллекцияПолей[0].Поле;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

                
&НаСервере
Функция ПолучитьURLСхемы()
	
	ОсновнаяСхемаКомпоновкиДанных = Отчеты.УниверсальныйОтчетДляКМ.ПолучитьМакет("СхемаОстатковСМагазинами1");
    Возврат ПоместитьВоВременноеХранилище(ОсновнаяСхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	
КонецФункции
 &НаСервере
Функция ПолучитьURLСхемыРасшифровки()
	
	ОсновнаяСхемаКомпоновкиДанных = Отчеты.Продажи.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
    Возврат ПоместитьВоВременноеХранилище(ОсновнаяСхемаКомпоновкиДанных, Новый УникальныйИдентификатор);
	
КонецФункции
           
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ДействиеРасшифровки; 
	Перем ПараметрДействияРасшифровки;     
	
	ЗначениеТовар = ПолучитьЗначениеНоменклатуры(Расшифровка);
	ПолеРасшифровки = ПолучитьПолеРасшифровки(Расшифровка);

	Если  ЗначениеТовар = Неопределено ИЛИ ПолеРасшифровки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	
	НачалоПериода = Неопределено;
	КонецПериода = Неопределено;	
	
	СписокЭлементов = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого Элемент из СписокЭлементов Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И Элемент.Использование Тогда
			
			Если 
				Элемент.Параметр = Новый ПараметрКомпоновкиДанных("НачалоПериода") Тогда
			    НачалоПериода = ?(ТипЗнч(Элемент.Значение) = Тип("Дата"), Элемент.Значение, Элемент.Значение.Дата);
			ИначеЕсли
				Элемент.Параметр = Новый ПараметрКомпоновкиДанных("КонецПериода") Тогда
               	КонецПериода = ?(ТипЗнч(Элемент.Значение) = Тип("Дата"), Элемент.Значение, Элемент.Значение.Дата);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	Если ПолеРасшифровки = "Номенклатура" Тогда
		
		ОткрытьЗначение(ЗначениеТовар);
		
		//Источник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПолучитьURLСхемы());
		//ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки,Источник);

		//ДоступныеДействия = Новый Массив; 
		//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение); 
		
		//ДопПункты = Новый СписокЗначений;
		//ДопПункты.Добавить("Расшифровать", "Расшифровать по поступлениям"); 
		
		//ОбработкаРасшифровки.ВыбратьДействие(Расшифровка, ДействиеРасшифровки, ПараметрДействияРасшифровки, ДоступныеДействия, ДопПункты); 

		//Если ДействиеРасшифровки = "Расшифровать" Тогда 
		//   
		//		Отбор = Новый Структура;
		//		Отбор.Вставить("Номенклатура", ЗначениеТовар);
		//		
		//		СписокЭлементов = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
		//	
		//		Для Каждого Элемент из СписокЭлементов Цикл
		//			Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И Элемент.Использование И
		//				Элемент.Параметр = Новый ПараметрКомпоновкиДанных("НачалоПериода") Тогда
		//				
		//				Отбор.Вставить("НачалоПериода", ?(ТипЗнч(Элемент.Значение) = Тип("Дата"), Элемент.Значение, Элемент.Значение.Дата));
		//				Прервать;
		//				
		//			КонецЕсли;
		//		КонецЦикла;
		//				
		//		ОткрытьФорму("Отчет.ПродажиЗакупки.Форма.ФормаРасшифровки", Отбор, ЭтаФорма);
		//   
		//ИначеЕсли ДействиеРасшифровки = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда 

		//	ОткрытьЗначение(ПараметрДействияРасшифровки); 
		//КонецЕсли;
		
	ИначеЕсли 
		ПолеРасшифровки = "Поступило" Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", ЗначениеТовар);
		Если НачалоПериода <> Неопределено Тогда
			Отбор.Вставить("НачалоПериода", НачалоПериода);
		КонецЕсли;
		
		ОткрытьФорму("Отчет.УниверсальныйОтчетДляКМ.Форма.ФормаРасшифровки", Отбор, ЭтаФорма);
		
	ИначеЕсли 
		ПолеРасшифровки = "ВПути" Тогда
		
		ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Номенклатура", ЗначениеТовар, Ложь), , Истина);
		ОткрытьФорму("Отчет.ТоварыПоставщикаВПути.ФормаОбъекта", ПараметрыФормы);	
	ИначеЕсли 
		ПолеРасшифровки = "ВРезерве" Тогда
		
		ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Ссылка, ВыбранСклад", ЗначениеТовар, Ложь), , Истина);
		ОткрытьФорму("Отчет.ТоварыВРезерве.ФормаОбъекта", ПараметрыФормы);	
	ИначеЕсли
		ПолеРасшифровки = "Заказано" Тогда
		
		ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Номенклатура", ЗначениеТовар), , Истина);
		ОткрытьФорму("Отчет.ЗаказыПоставщикам.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли
		ПолеРасшифровки = "ЕстьПотребность" Тогда
		
		ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Номенклатура", ЗначениеТовар), , Истина);
		ОткрытьФорму("Отчет.ПотребностьВТоваре.ФормаОбъекта", ПараметрыФормы);
	ИначеЕсли
		ПолеРасшифровки = "Продано" Тогда
		
		ПараметрыФормы = Новый Структура("Отбор, ПользовательскиеНастройки, СформироватьПриОткрытии", Новый Структура("Номенклатура", ЗначениеТовар),, Истина);
        ПараметрыФормы.ПользовательскиеНастройки = ПолучитьПользовательскиеНастройкиОтчета("Продажи");
		
    	УстановитьЗначениеПользовательскойНастройки(ПараметрыФормы.ПользовательскиеНастройки,	"НачалоПериода", НачалоПериода, НачалоПериода <> Неопределено);
    	УстановитьЗначениеПользовательскойНастройки(ПараметрыФормы.ПользовательскиеНастройки,	"КонецПериода",	 КонецПериода,  КонецПериода  <> Неопределено);		
		
		ОткрытьФорму("Отчет.Продажи.ФормаОбъекта", ПараметрыФормы);
		
		//Форма = ПолучитьФорму("Отчет.Продажи.Форма.ФормаОтчета");
		//
		//РезультатРасшифровки = Форма.Результат;
		//ОтчетРасшифровки = Форма.Отчет;  
		//
		//ЭлементыОтбора = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы;
		//
		//  ЭлементОтбораДанных = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбораДанных.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("Номенклатура");
		//ЭлементОтбораДанных.ПравоеЗначение 	= ЗначениеТовар;
		//ЭлементОтбораДанных.Использование 	= Истина;
		//
		//Форма.Результат = СформироватьРезультатРасшифровки(РезультатРасшифровки, ОтчетРасшифровки);
		//Форма.Результат.ПоказатьУровеньГруппировокСтрок(0);
		//Форма.Открыть();
		//
	//ИначеЕсли
	//	ПолеРасшифровки = "Остатки" Тогда
	//	
	//	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", Новый Структура("Номенклатура, ТипЦен", ЗначениеТовар, ПолучитьТипЦенРозница()), Истина);
	//	ОткрытьФорму("Отчет.ОстаткиТоваров.ФормаОбъекта", ПараметрыФормы);
	Иначе
		СтандартнаяОбработка = Истина;

	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПользовательскойНастройки(Настройки, Имя, Значение, Использование = Истина)
    Для Каждого Элемент Из Настройки.Элементы Цикл
        Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
            Если Строка(Элемент.Параметр) = Имя Тогда
                Элемент.Значение = Значение;
                Элемент.Использование = Использование;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьПользовательскиеНастройкиОтчета(ИмяОтчета)
    Возврат Отчеты[ИмяОтчета].Создать().КомпоновщикНастроек.ПользовательскиеНастройки;
КонецФункции

Функция ПолучитьТипЦенРозница()
	Возврат ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница");
КонецФункции

Функция СформироватьРезультатРасшифровки(РезультатРасшифровки, ОтчетРасшифровки)
	
	ОтчетОбъект = ДанныеФормыВЗначение(ОтчетРасшифровки, Тип("ОтчетОбъект.Продажи"));
	ОтчетОбъект.СкомпоноватьРезультат(РезультатРасшифровки);
	
	Возврат РезультатРасшифровки;
	
КонецФункции
