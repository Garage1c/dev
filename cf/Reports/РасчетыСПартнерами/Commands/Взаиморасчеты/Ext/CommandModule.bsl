
&НаСервере
// Функция проверяет является ли Контрагент группой.
//
// Параметры:
//	Контрагент - СправочникСсылка.Контрагент - Контрагент
//
// Возвращаемое значение:
//	Булево - Признак что Контрагент является группой
//
Функция ЭтоГруппаПартнеров(Контрагент)
	
	//Возврат Контрагент.ЭтоГруппа;
	
КонецФункции // ЭтоГруппаКонтрагентов

&НаСервере
Функция ПолучитьПартнераИзСсылки(Ссылка)
	
	МетаДок = Ссылка.Метаданные();
	
	Запрос = Новый Запрос("ВЫБРАТЬ Контрагент ИЗ Документ." + МетаДок.Имя + " ГДЕ Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Контрагент;
		
	Иначе
		
		Возврат Справочники.Контрагенты.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции
&НаКлиенте
// Процедура - обработчик события "ОбработкаКоманды".
//
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	//Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Контрагент = ПолучитьПартнераИзСсылки(ПараметрКоманды);
	//КонецЕсли;
	
	ОткрытьФорму(	"ОбщаяФорма.НастроенныйОтчет",
					Новый Структура("ИмяОтчета, ИмяМакета, Отборы, ЗаголовокОкна",
						"РасчетыСПартнерами",
						"ОсновнаяСхемаКомпоновкиДанных",
						Новый Структура("Контрагент", 
											Контрагент),
						"Движения товара"),
					ПараметрыВыполненияКоманды.Источник,
					ПараметрыВыполненияКоманды.Уникальность,
					ПараметрыВыполненияКоманды.Окно);
	
	
КонецПроцедуры // ОбработкаКоманды()
