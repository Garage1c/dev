
&НаКлиенте
Процедура ПечатьТТН(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	Печать(ТабДок, Команда.Имя);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();

КонецПроцедуры

&НаСервере
Процедура Печать(ТабДок, Имя, МассивСсылок = Неопределено)
	//|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетЗаказчикаПеревозок,
	//-------------|	Док.Контрагент КАК ЗаказчикПеревозок,
	//--------------|	Док.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	//--------------|	Док.Перевозчик КАК Перевозчик,
	//--------------|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК Водитель,
	//--------------||	"""" 					КАК ВидПеревозки,
	//--------------||	"""" 					КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	//--------------||	"""" 					КАК ЛицензионнаяКарточкаСерия,
	//--------------||	"""" 					КАК ЛицензионнаяКарточкаНомер,
	//--------------||	"""" 					КАК ЛицензионнаяКарточкаВид,
	//--------------|	"""" КАК МаркаАвтомобиля,
	//--------------||	"""" КАК ГосНомерАвтомобиля,
	//--------------||	"""" КАК Прицеп,
	//--------------||	"""" КАК ГосНомерПрицепа,
	//--------------||	СкладыКонтактнаяОтправитель.Представление КАК ПунктПогрузки,
	//--------------||	Док.АдресДоставки КАК ПунктРазгрузки,
	//--------------||	Док.СрокДоставки КАК СрокДоставки,
	      			
	Если МассивСсылок = Неопределено Тогда
		МассивСсылок = ДокументыОснования.Выгрузить().ВыгрузитьКолонку("Основание");
	КонецЕсли;
	  	 
	ПараметрыПечати = Новый Структура("СрокДоставки, ВидПеревозки, ЛицензионнаяКарточкаРегистрационныйНомер, ЛицензионнаяКарточкаСерия, ЛицензионнаяКарточкаНомер,
	|ПунктПогрузки, ПунктРазгрузки, ПредставлениеПеревозчика, ПеревозчикЮрЛицо, ПредставлениеЗаказчикаПеревозок, ЗаказчикЮрЛицо, ПредставлениеВодителя, ВодительскоеУдостоверение, 
	|МаркаАвтомобиля, ГосНомерАвтомобиля, Прицеп, ГосНомерПрицепа, ЛицензионнаяКарточкаВид,_Грузоотправитель, _Грузополучатель,_Организация", 
	СрокДоставки, ВидПеревозки, "", "", "", ПунктПогрузки, ПунктРазгрузки, Перевозчик, ПеревозчикЮрЛицо, Заказчик, ЗаказчикЮрЛицо, Водитель, ВодительУдостоверение, АвтомобильМарка, АвтомобильГосНомер, АвтомобильМаркаПрицепа, АвтомобильГосНомерПрицепа, ЛицензионнаяКарточка, _Грузоотправитель, _Грузополучатель, _Организация);	
	
	Выполнить("Обработки.ПечатьОбщихФорм." + Строка(Имя) + "(ТабДок, МассивСсылок, ПараметрыПечати)");

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	МассивСсылок = Параметры.Основание;
	Основание = МассивСсылок[0]; 
	Для Каждого Строка ИЗ МассивСсылок Цикл 
		НоваяСтрока = ДокументыОснования.Добавить();
		НоваяСтрока.Основание = Строка;
	КонецЦикла;
	//Основание 	= Параметры.Основание;
	//Заказчик	= Параметры.Заказчик;
	
	//ФункцииФормДокументовСервер.УстановитьСвязиГрузополучателя(Объект,Элементы,Новый Структура("_Грузополучатель,_Грузоотправитель","Организация","Объект.Организация"));
	ПустойПартнераКонтрагент = Справочники[?(ПолучитьФункциональнуюОпцию("НемецкийУчет"), "Контрагенты", "Грузополучатели")].ПустаяСсылка();
	Если НЕ ЗначениеЗаполнено(_Грузоотправитель) Тогда _Грузоотправитель	= ПустойПартнераКонтрагент КонецЕсли;
	Если НЕ ЗначениеЗаполнено(_Грузополучатель)  Тогда _Грузополучатель	= ПустойПартнераКонтрагент КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТранспортнаяНакладная(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	Печать(ТабДок, Команда.Имя, Основание);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();

КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПриИзменении(Элемент)
	Основание = ДокументыОснования[0].Основание; 
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеАвтомобиля()
	АвтомобильМарка = Автомобиль.Марка;
	АвтомобильГосНомер = Автомобиль.ГосНомер;
	Водитель = Автомобиль.ОсновнойВодитель;
	ЗаполнитьДанныеВодителя();	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортноеСредствоПриИзменении(Элемент)
	ЗаполнитьДанныеАвтомобиля();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеВодителя()
	ВодительУдостоверение = Водитель.ВодительскоеУдостоверение;		
КонецПроцедуры

&НаКлиенте
Процедура ВодительПриИзменении(Элемент)
	ЗаполнитьДанныеВодителя();
КонецПроцедуры

&НаКлиенте
Процедура ПунктРазгрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьСписокАдресовРазгрузкиДляПодбора(Текст);

	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокАдресовРазгрузкиДляПодбора(Текст)
	
	 Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПредставлениеКонтактнойИнформации.Представление Как Адрес
	               |ИЗ
	               |	РегистрСведений.ПредставлениеКонтактнойИнформации КАК ПредставлениеКонтактнойИнформации
	               |ГДЕ
	               |	ПредставлениеКонтактнойИнформации.Объект = &Объект
	               |	И ПредставлениеКонтактнойИнформации.Вид В ИЕРАРХИИ(&Вид)
	               |	И ПредставлениеКонтактнойИнформации.Представление ПОДОБНО ""%"" + &Адрес + ""%""
	               |	И НЕ ПредставлениеКонтактнойИнформации.Представление ПОДОБНО """"" ;
	
	
	Запрос.УстановитьПараметр("Адрес",Текст);
	Запрос.УстановитьПараметр("Объект", ?(ЗначениеЗаполнено(_Грузополучатель), _Грузополучатель, ?(Основание.Метаданные().Реквизиты.Найти("Грузополучатель")<> Неопределено, Основание.Грузополучатель,Справочники.Контрагенты.ПустаяСсылка())));
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.Адрес);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Адрес"));
	
	Возврат Список;

	КонецФункции

&НаКлиенте
Процедура Печать_СводнаяТТН(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	Печать(ТабДок, Команда.Имя);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();

КонецПроцедуры

&НаКлиенте
Процедура ПунктПогрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьСписокАдресовПогрузкиДляПодбора(Текст);
   
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокАдресовПогрузкиДляПодбора(Текст)
	
	 Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Адрес,
	               |	Склады.Ссылка
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	Склады.Адрес ПОДОБНО ""%"" + &Адрес + ""%""
	               |	И НЕ Склады.Адрес ПОДОБНО """"" ;
	
	
	Запрос.УстановитьПараметр("Адрес",Текст);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Адрес"));
	
	Возврат Список;

	КонецФункции


&НаКлиенте
Процедура ВидПеревозкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьСписокВидовПеревозкиДляПодбора(Текст);

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВидовПеревозкиДляПодбора(Текст)
	СписокВидовПеревозок = Обработки.ПечатьОбщихФорм.ПолучитьСписокПовторногоВвода("ВидПеревозки");
	Возврат СписокВидовПеревозок;

	КонецФункции

		
	&НаСервере
	Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
		
	Если Настройки.Получить("Видперевозки")<> ВидПеревозки Тогда
		Обработки.ПечатьОбщихФорм.СохранитьЭлементПовторногоВвода("ВидПеревозки", ВидПеревозки);
	КонецЕсли;
	
	КонецПроцедуры



