
&НаСервере
Процедура ВыполнитьНаСервере(МассивТоваров)
	
	Менеджер = Справочники.Номенклатура;
 	Таблица	 = Новый ТаблицаЗначений;
	
	ТипНоменклатура = Новый Массив;
	ТипНоменклатура.Добавить(Тип("СправочникСсылка.Номенклатура"));
	
	ТипЧисло = Новый Массив;
	ТипЧисло.Добавить(Тип("Число"));
	
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов(ТипНоменклатура));
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов(ТипЧисло, Новый КвалификаторыЧисла(12, 3, ДопустимыйЗнак.Неотрицательный)));

	Таблица.Очистить();
	
	Для Каждого ИД Из МассивТоваров Цикл
	
		Спр = ?(ИД.Колонка = "Код", Менеджер.НайтиПоКоду(ИД.Значение), Менеджер.НайтиПоРеквизиту(ИД.Колонка, ИД.Значение));

		Если НЕ Спр.Пустая() Тогда
				
			НоваяСтрока = Таблица.Добавить();
			НоваяСтрока.Номенклатура = Спр;
			НоваяСтрока.Количество 	 = ИД.Количество;
				
		КонецЕсли;
	КонецЦикла;

	НовыйДок = Документы.РедактированиеРегистра.СоздатьДокумент();
	
	ДокСсылка = Документы.РедактированиеРегистра.ПолучитьСсылку(Новый УникальныйИдентификатор);
	НовыйДок.УстановитьСсылкуНового(ДокСсылка);
	
	НовыйДок.Дата = ТекущаяДата();
	
	Таблица.Свернуть("Номенклатура", "Количество");
	
	Если Таблица.Количество() > 0 Тогда
	
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос("	ВЫБРАТЬ РАЗЛИЧНЫЕ
								|	Таб.Номенклатура Номенклатура,
								|	Таб.Количество	Количество
								|ПОМЕСТИТЬ
								|	ТаблицаТоваров
								|ИЗ
								|	&ТаблицаТоваров Таб
								|");
								
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ТаблицаТоваров", Таблица);
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ
						|	Таб.Номенклатура 	Номенклатура,
						|	&Склад 				Склад,
						|	&Регистратор		Регистратор,
						|	&Период				Период,
						|	ВЫБОР 
						|		КОГДА ЕСТЬNULL(Рег.КоличествоОстаток, 0) - ЕСТЬNULL(Таб.Количество, 0) > 0 
						|		ТОГДА &ВидДвиженияРасход ИНАЧЕ &ВидДвиженияПриход
						|	КОНЕЦ ВидДвижения,
						|	ВЫБОР
						|		КОГДА ЕСТЬNULL(Рег.КоличествоОстаток, 0) > ЕСТЬNULL(Таб.Количество, 0)
						|		ТОГДА ЕСТЬNULL(Рег.КоличествоОстаток, 0) - ЕСТЬNULL(Таб.Количество, 0)
						|       ИНАЧЕ ЕСТЬNULL(Таб.Количество, 0) - ЕСТЬNULL(Рег.КоличествоОстаток, 0) 
						|   КОНЕЦ Количество
						|
						|ИЗ
						|	ТаблицаТоваров Таб
 						|	ЛЕВОЕ СОЕДИНЕНИЕ
						|		РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &Склад) Рег							
						|	ПО
						|		Рег.Номенклатура = Таб.Номенклатура
						|ГДЕ
						|	ЕСТЬNULL(Рег.КоличествоОстаток, 0) - ЕСТЬNULL(Таб.Количество, 0) <> 0 
						|";
						
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("Регистратор", НовыйДок.ПолучитьСсылкуНового());
		Запрос.УстановитьПараметр("Период", НовыйДок.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выгрузить();
			
			НаборЗаписей = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(НовыйДок.ПолучитьСсылкуНового());
			НаборЗаписей.Загрузить(Выборка);
			Попытка
				НаборЗаписей.Записать();
			Исключение
				ОбщиеФункции.СообщитьТекст("Не удалось записать объект " + НаборЗаписей + ": " + ОписаниеОшибки());
				Возврат;
			КонецПопытки;
			
			НовыйДок.Записать();
			
		КонецЕсли;
	КонецЕсли;
                                          
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Эксель)
	
	Лист = Эксель.Worksheets(1);
    КолВоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
    МассивТоваров = Новый Массив;
	Ключ = "Значение, Колонка, Количество";
	
	Для Сч = 1 По КолВоСтрок Цикл
		
		Артикул = СокрЛП(Лист.Cells(Сч, 1).Value);
		Код		= СокрЛП(Лист.Cells(Сч, 2).Value);
		Количество = Лист.Cells(Сч, 3).Value;
		
		ИД = ?(ЗначениеЗаполнено(Артикул), Новый Структура(Ключ, Артикул, "Артикул", Количество) , ?(ЗначениеЗаполнено(Код), Новый Структура(Ключ, Код, "Код", Количество), Новый Структура));
		
		Если ЗначениеЗаполнено(ИД) Тогда
			МассивТоваров.Добавить(ИД);
		КонецЕсли;

	КонецЦикла;
	
	ВыполнитьНаСервере(МассивТоваров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	
	Если ПустаяСтрока(Объект.ИмяФайла) Тогда
		ОбщиеФункции.СообщитьТекст("Не выбран файл", "ИмяФайла", Объект);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		ОбщиеФункции.СообщитьТекст("НеЗаданСклад", "Склад", Объект);
	КонецЕсли;
	
	// Получим эксель
	стрОшибки = "";	         
	Эксель = COMФункцииДиалогов.ОткрытьФайлЭкселя(Объект.ИмяФайла, стрОшибки);
	
	Если Эксель = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(стрОшибки);
		Возврат;
	КонецЕсли;
	
	Выгрузить(Эксель);
	
	COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
	ОбщиеФункции.СообщитьТекст("Данные загружены.");
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Эксель (*.xls)|*.xls*";
	
	Если ДВ.Выбрать() Тогда
		
		Объект.ИмяФайла = ДВ.ПолноеИмяФайла;
		
	КонецЕсли;

КонецПроцедуры
