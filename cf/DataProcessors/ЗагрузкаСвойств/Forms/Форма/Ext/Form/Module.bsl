
&НаСервере
Функция ЗагрузитьНаСервере(ДанныЭкселя, НачалоСообщОбОшибке)
	
	НачалоТекстоОшибки = НачалоСообщОбОшибке + "В строке № " + ДанныЭкселя.НомерСтроки + " "; 
	
	// Проверим корректность
	
	Ош = Ложь;
	
	Если ПустаяСтрока(ДанныЭкселя.Код) Тогда
		Ош = Истина;
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + " не заполнен код номенклатуры!");
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныЭкселя.Свойство) Тогда
		
		Ош = Истина;
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + " не заполнено свойство!");
		
	Иначе
		
		Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоНаименованию(ДанныЭкселя.Свойство);
		Если Свойство.Пустая() Тогда
			ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + " не найдено свойство - " + ДанныЭкселя.Свойство);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныЭкселя.Значение) Тогда
		Ош = Истина;
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + " не заполнено значение!");
	КонецЕсли;

	Если ПустаяСтрока(ДанныЭкселя.Производитель) Тогда
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + " не заполнен производитель.");
		ВыбПроизводитель = Справочники.Производители.ПустаяСсылка();
	Иначе
		ВыбПроизводитель = Справочники.Производители.НайтиПоНаименованию(ДанныЭкселя.Производитель);
	КонецЕсли;

	
	Если Ош Тогда
		ОбщиеФункции.СообщитьТекст("Строка пропущена");
		Возврат Истина; // пропустим но не будем вылетать
	КонецЕсли;
	
	// Найдем номенклатуру
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Ссылка ИЗ Справочник.Номенклатура ГДЕ ЭтоГруппа = ЛОЖЬ и Код = """ + ДанныЭкселя.Код + """");
	
	Выборка 	= Запрос.Выполнить().Выбрать();
	КолТоваров 	= Выборка.Количество();
	
	Если Не КолТоваров Тогда
		
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "по коду " + ДанныЭкселя.Код + " товар не найден, строка пропущена");
		Возврат Истина;
		
	ИначеЕсли КолТоваров > 1 Тогда
		
		ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "по коду " + ДанныЭкселя.Код + " найдено " + КолТоваров + "поз. товаров, всем им установлены одинаковые свойства");
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ВыбПроизводитель.Пустая() И Выборка.Ссылка.Производитель <> ВыбПроизводитель Тогда 
			ОбъектНоменклатура = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектНоменклатура.Производитель = ВыбПроизводитель;
			Попытка
				ОбъектНоменклатура.Записать();
			Исключение
				опОшибки = ОписаниеОшибки();
				ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "не удалось записать элемент справочника Номенклатура: " + опОшибки);
			КонецПопытки;	
		КонецЕсли;
		
		// Найдем значение свойства
	
		ТипыЗначений 	= Свойство.ТипЗначения.Типы();
		ТипЗн 			= ТипыЗначений[0];
		МетаДанное 		= Метаданные.НайтиПоТипу(ТипЗн);
	
		Если ТипЗн = Тип("Строка") Тогда
		
			Значение = ДанныЭкселя.Значение;
			
		ИначеЕсли ТипЗн = Тип("Число") Тогда
			
			Попытка
				Значение = Число(ДанныЭкселя.Значение);
			Исключение
				ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "не удалось преобразовать к числу """ + ДанныЭкселя.Значение + """, строка пропущена");
				Прервать;
			КонецПопытки;
		
		ИначеЕсли Метаданные.Справочники.Содержит(МетаДанное) Тогда
			
			//ОбщиеФункции.СообщитьТекст("Справочник." + МетаДанное.Имя);
			
			ИмяСправочник 		= МетаДанное.Имя;
			ВладелецСправочника = Неопределено;
			
			Если ИмяСправочник = "ЗначенияДополнительныхРеквизитовНоменклатуры" Тогда
				
				ВладелецСправочника = Свойство;
				Значение 			= Справочники[ИмяСправочник].НайтиПоНаименованию(ДанныЭкселя.Значение,,,Свойство);
				
			Иначе
				
				Значение = Справочники[ИмяСправочник].НайтиПоНаименованию(ДанныЭкселя.Значение);
				
			КонецЕсли;
				
			Если Значение.Пустая() Тогда
				
				// Создадим новое значение
				
				ЗначениеОбъект = Справочники[ИмяСправочник].СоздатьЭлемент();
				ЗначениеОбъект.Наименование = ДанныЭкселя.Значение;
				
				Если ВладелецСправочника <> Неопределено Тогда
					ЗначениеОбъект.Владелец 	= ВладелецСправочника;
				КонецЕсли;
				
				Попытка
					ЗначениеОбъект.Записать();
				Исключение
					опОшибки = ОписаниеОшибки();
					ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "не удалось записать значение справочника " + ИмяСправочник + ", значение - " + ДанныЭкселя.Значение + "
									|" + опОшибки);
					Возврат Ложь;
				КонецПопытки;
				
				Значение = ЗначениеОбъект.Ссылка;
				
			КонецЕсли;
		
		Иначе
			
			ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "не определен тип свойства " + ТипЗн + ", нужно прописать определение типа в обработчике, обратитесь в IT");
			Возврат Ложь;
		
		КонецЕсли;
		
		// Проверим свойство
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ 	ИСТИНА 
		|ИЗ 		РегистрСведений.ЗначенияДополнительныхРеквизитовНоменклатуры 
		|ГДЕ 		Номенклатура = &Номенклатура И Свойство = &Свойство И Значение = &Значение");
		
		Запрос.УстановитьПараметр("Номенклатура", 	Выборка.Ссылка);
		Запрос.УстановитьПараметр("Свойство", 		Свойство);
		Запрос.УстановитьПараметр("Значение", 		Значение);
		
		Если Запрос.Выполнить().Пустой() Тогда  // раз нет значит внесем
		
			// Запишем свойство
			
			НовЗапись = РегистрыСведений.ЗначенияДополнительныхРеквизитовНоменклатуры.СоздатьМенеджерЗаписи();
			НовЗапись.Номенклатура 	= Выборка.Ссылка;
			НовЗапись.Свойство 		= Свойство;
			НовЗапись.Значение 		= Значение;
			НовЗапись.Владелец 		= Выборка.Ссылка;
			
			Попытка
				НовЗапись.Записать();
			Исключение
				опОшибки = ОписаниеОшибки();
				ОбщиеФункции.СообщитьТекст(НачалоТекстоОшибки + "не удалось записать значение в регистр
										|" + опОшибки);
				Возврат Ложь;
			КонецПопытки;
			
			// Все загруженные свойства обновяться на сайте
		
			Если Объект.ОбновлятьНаСайте Тогда
			
				//Если Не HTTP.ДатьЗаданиеНаИзменениеСайту(
				//			Выборка.Ссылка, 
				//			Перечисления.КомандыHTTP.POST, 
				//			"/api/products.json",
				//			"",
				//			Ложь) Тогда
				//	Возврат Ложь;
				//КонецЕсли;
			КонецЕсли;
 		
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина
		
КонецФункции

&НаКлиенте
Функция ВыгрузитьДанные(Лист, НачалоСообщОбОшибке)
	
	стрОшибки = "";
	
	КолВоКолонок 	= Лист.Cells(1,1).SpecialCells(11).Column;
	КолВоСтрок 		= Лист.Cells(1,1).SpecialCells(11).Row;
	
	НачальнаяСтрока = 2;
	
	Для Ном = НачальнаяСтрока По КолВоСтрок Цикл
		
		// передадим серваку на обработку
		
		Если Не ЗагрузитьНаСервере(
					Новый Структура("НомерСтроки, Код, Свойство, Значение, Производитель",
								Ном,
								СокрЛП(Лист.Cells(Ном, 1).Value),
								СокрЛП(Лист.Cells(Ном, 5).Value),
								СокрЛП(Лист.Cells(Ном, 6).Value),
								СокрЛП(Лист.Cells(Ном, 4).Value)), НачалоСообщОбОшибке) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// отобразим ход загрузки
		
		//Всего 		= КолВоСтрок - НачальнаяСтрока;
		//ПорНомер 	= Ном - НачальнаяСтрока;
		//Состояние("Загрузка свойст из экселя", ПорНомер / (КолВоСтрок - НачальнаяСтрока) * 100, "" + ПорНомер + " из " + Всего);
		//
		//ОбработкаПрерыванияПользователя();
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)
	
	стрОшибки = "";
	
	// Проверим файл
	
	Если ПустаяСтрока(Объект.ИмяФайла) Тогда
		ОбщиеФункции.СообщитьТекст("Не выбран файл", "ИмяФайла", Объект);
		Возврат;
	КонецЕсли;
	
	// Получим эксель
	
	Эксель = COMФункцииДиалогов.ОткрытьФайлЭкселя(Объект.ИмяФайла, стрОшибки);
	
	Если Эксель = Неопределено Тогда
		ОбщиеФункции.СообщитьТекст(стрОшибки);
		Возврат;
	КонецЕсли;
	
	// Подготовим таблицу для считывания
	
	Если Объект.ВыгрузитьВсеЛисты Тогда
		
		КолВоЛистов = Эксель.Sheets.Count;
		
		Для Счетчик = 1 По КолВоЛистов Цикл
			
			Попытка
				Лист = Эксель.Sheets(Счетчик);
			Исключение
				COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
				Возврат;
			КонецПопытки;
			
			НачалоСообщОбОшибке = "Лист №" + Счетчик + ". ";
			
			ВыгрузитьДанные(Лист, НачалоСообщОбОшибке);
			
		КонецЦикла;
		
	Иначе 
		
		Попытка
			Лист = Эксель.Sheets(СокрЛП(Объект.ЛистЭкселя));
		Исключение
			ОбщиеФункции.СообщитьТекст("Не найден лист экселя по имени """ + Объект.ЛистЭкселя + """");
			COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
			Возврат;
		КонецПопытки;
		
		НачалоСообщОбОшибке = "";
		
		ВыгрузитьДанные(Лист, НачалоСообщОбОшибке);
		
	КонецЕсли;
	
	COMФункцииДиалогов.ЗакрытьЭксель(Эксель);
				
	ОбщиеФункции.СообщитьТекст("Свойства загружены.");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Эксель (*.xls)|*.xls*";
	
	Если ДВ.Выбрать() Тогда
		
		Объект.ИмяФайла = ДВ.ПолноеИмяФайла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Если Объект.ВыгрузитьВсеЛисты Тогда
		Элементы.ЛистЭкселя.Видимость = Ложь;
	Иначе
		Элементы.ЛистЭкселя.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВсеЛистыПриИзменении(Элемент)
	УстановитьВидимость();	
КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

