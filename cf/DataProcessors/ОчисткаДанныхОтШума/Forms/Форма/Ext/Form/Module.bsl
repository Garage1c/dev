// На клиенте
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Объект.Период.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата()) - 1);
	Объект.Период.ДатаОкончания = НачалоМесяца(ТекущаяДата()) - 1;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	
	Если ЗаТекущийПериодУжеЕстьДанные(Объект.Период.ДатаНачала, Объект.Номенклатура) Тогда
		
		Объект.УжеЕстьДанныеЗаПериод = Истина;
		Элементы.Сообщение.Заголовок = "За текущий период уже есть данные!";
		
	Иначе
		
		Объект.УжеЕстьДанныеЗаПериод = Ложь;
		Элементы.Сообщение.Заголовок = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	Если Объект.УжеЕстьДанныеЗаПериод Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьЗаписатьДанные", ЭтаФорма, Параметры);
		ПоказатьВопрос(ОписаниеОповещения, "За текущий период уже есть данные! Перезаписать?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
	Иначе
		
		ЗаписатьДанныеНаСервере();
	
		ПоказатьПредупреждение(, "Данные записаны!");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеЗаТекПериод(Команда)
	
	ОчиститьДанныеВРегистреЗаТекПериод(Объект.Период.ДатаНачала);
	
	ПоказатьПредупреждение(, "Данные за текущий период очищены!");
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьЗаписатьДанные(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено
		ИЛИ Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьДанныеВРегистреЗаТекПериод(Объект.Период.ДатаНачала, Объект.Номенклатура);
	
	ЗаписатьДанныеНаСервере();
	
	ПоказатьПредупреждение(, "Данные перезаписаны!");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВТабличныйДокумент(Команда)
	
	ТабДок = ВыгрузитьВТабличныйДокументНаСервере();
	Если НЕ ТабДок = Неопределено Тогда
		
		ТабДок.Показать("Данные продаж");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДанныеПродаж(Команда)
	
	ТекущаяСтрока = Элементы.ДанныеПродаж.ТекущиеДанные;
	
	ТабДок = ПолучитьДанныеПоПродажам(ТекущаяСтрока.Номенклатура, Объект.Период, Объект.СписокСкладов, Объект.УчитыватьПраздничныеДни);
	Если НЕ ТабДок = Неопределено Тогда
		
		ТабДок.Показать("Данные продаж");
		
	КонецЕсли; 
	
КонецПроцедуры

// На сервере
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	
	Объект.СписокИсключаемыхКонтрагентов.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Склады"));
	
	Объект.СписокСкладов.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.ДанныеПродаж.Очистить();
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	|	Календарь.Дата,
	|	Календарь.Выходной
	|ПОМЕСТИТЬ втДни
	|ИЗ
	|	РегистрСведений.РабочиеДни КАК Календарь
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &НачДата И &КонДата
	|	" + ?(Объект.УчитыватьПраздничныеДни, "	И НЕ Календарь.Выходной", "") + "
	|ИНДЕКСИРОВАТЬ ПО
	|	Календарь.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиОбороты.Период,
	|	ПродажиОбороты.Склад,
	|	ПродажиОбороты.Номенклатура,
	|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			День,
	|			Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ЗапЧасть))
	|				И ВЫБОР
	|					КОГДА Заказ ССЫЛКА Документ.ЗаказПокупателя
	|						ТОГДА НЕ Заказ.Контрагент В (&СписокИсключаемыхКонтрагентов)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				" + ?(Объект.СписокСкладов.Количество() > 0, "	И Склад В (&СписокСкладов)" , "") + "
	|				" + ?(Объект.Номенклатура = Справочники.Номенклатура.ПустаяСсылка(), "", "	И Номенклатура = &Номенклатура") + ") КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Период,
	|	ПродажиОбороты.Склад,
	|	ПродажиОбороты.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПродажиОбороты.КоличествоОборот) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПродажиОбороты.Период,
	|	ПродажиОбороты.Склад,
	|	ПродажиОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДни.Дата КАК Период,
	|	Остатки.Номенклатура,
	|	Остатки.Склад,
	|	СУММА(ВЫБОР
	|			КОГДА Остатки.Период = &НачДата
	|				ТОГДА Остатки.КоличествоКонечныйОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Остатки.Период <= втДни.Дата
	|						ТОГДА Остатки.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК Остаток
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	втДни КАК втДни,
	|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	|			&НачДата,
	|			&КонДата,
	|			День,
	|			,
	|			Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ЗапЧасть))
	|			" + ?(Объект.СписокСкладов.Количество() > 0, "	И Склад В (&СписокСкладов)" , "") + "
	|			" + ?(Объект.Номенклатура = Справочники.Номенклатура.ПустаяСсылка(), "", "	И Номенклатура = &Номенклатура") + ") КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбороты КАК втОбороты
	|		ПО Остатки.Номенклатура = втОбороты.Номенклатура
	|		И Остатки.Склад = втОбороты.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	втДни.Дата,
	|	Остатки.Склад,
	|	Остатки.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Остатки.Склад,
	|	Остатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втДни
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Период КАК Период,
	|	втОстатки.Склад,
	|	втОстатки.Номенклатура,
	|	втОстатки.Остаток КАК Остаток,
	|	втОбороты.Количество,
	|	ВЫБОР
	|		КОГДА втОбороты.Период ЕСТЬ NULL 
	|				И втОстатки.Остаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КолДней
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	втОстатки КАК втОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК втОбороты
	|		ПО втОстатки.Период = втОбороты.Период
	|			И втОстатки.Склад = втОбороты.Склад
	|			И втОстатки.Номенклатура = втОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Склад,
	|	втДанные.Номенклатура,
	|	втДанные.Номенклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(втДанные.Номенклатура.ДатаСоздания, &КонДата, ДЕНЬ) < 180
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Новый,
	|	СУММА(втДанные.Количество) КАК Количество,
	|	СУММА(втДанные.КолДней) КАК КоличествоДнейПродаж,
	|	СУММА(втДанные.Количество) / СУММА(втДанные.КолДней) КАК СреднееКоличествоПродаж
	|ИЗ
	|	втДанные КАК втДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанные.Склад,
	|	втДанные.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	втДанные.Склад,
	|	втДанные.Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("НачДата", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонДата", Объект.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", Объект.СписокИсключаемыхКонтрагентов);
	Запрос.УстановитьПараметр("СписокСкладов", Объект.СписокСкладов);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НСтр = Объект.ДанныеПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(НСтр, Выборка);
		НСтр.Период = Объект.Период.ДатаНачала;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	НабЗап = РегистрыСведений.ДанныеПродаж.СоздатьНаборЗаписей();
	НабЗап.Отбор.Период.Установить(Объект.Период.ДатаНачала);
	
	Если НЕ Объект.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
		НабЗап.Отбор.Номенклатура.Установить(Объект.Номенклатура);
	КонецЕсли; 
	
	НабЗап.Загрузить(Объект.ДанныеПродаж.Выгрузить());
	НабЗап.Записать();	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаТекущийПериодУжеЕстьДанные(ТекПериод, ТекНоменклатура)
	
	ДанныеЕсть = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПродаж.Номенклатура), 0) КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ДанныеПродаж КАК ДанныеПродаж
	|ГДЕ
	|	ДанныеПродаж.Период = &Период
	|   " + ?(ТекНоменклатура = Справочники.Номенклатура.ПустаяСсылка(), "", "	И ДанныеПродаж.Номенклатура = &Номенклатура") + "
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПродаж.Номенклатура), 0) > 0";
	Запрос.УстановитьПараметр("Период", ТекПериод);
	Запрос.УстановитьПараметр("Номенклатура", ТекНоменклатура);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДанныеЕсть = Истина;
	КонецЕсли;
	
	Возврат ДанныеЕсть;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОчиститьДанныеВРегистреЗаТекПериод(ТекПериод, ТекНоменклатура = Неопределено)
		
	НабЗап = РегистрыСведений.ДанныеПродаж.СоздатьНаборЗаписей();
	НабЗап.Отбор.Период.Установить(ТекПериод);
	
	Если НЕ ТекНоменклатура = Неопределено Тогда
		НабЗап.Отбор.Номенклатура.Установить(ТекНоменклатура);
	КонецЕсли;
	
	НабЗап.Записать();
	
КонецФункции

&НаСервере
Функция ВыгрузитьВТабличныйДокументНаСервере()
	
	ТабДок = Новый ТабличныйДокумент;
			
	Макет = Обработки.ОчисткаДанныхОтШума.ПолучитьМакет("МакетОбщий");
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Вывести(ОблШапка);
	
	Для Каждого Стр из Объект.ДанныеПродаж Цикл
		
		ОблСтрока.Параметры.Заполнить(Стр);
		ТабДок.Вывести(ОблСтрока);
		
	КонецЦикла;
		
	Возврат ТабДок;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоПродажам(ТекНоменклатура, ТекПериод, ТекСписокСкладов, УчитыватьПраздники)
	
	ТабДок = Новый ТабличныйДокумент;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Календарь.Дата,
	|	Календарь.Выходной
	|ПОМЕСТИТЬ втДни
	|ИЗ
	|	РегистрСведений.РабочиеДни КАК Календарь
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &НачДата И &КонДата
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Календарь.Дата
	|;
	|
	|ВЫБРАТЬ
	|	ПродажиОбороты.Период,
	|	ПродажиОбороты.Склад,
	|	ПродажиОбороты.ДокументПродажи КАК ДокументПродажи,
	|	ПродажиОбороты.ДокументПродажи.Контрагент КАК Клиент,
	|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&НачДата, &КонДата, День, Номенклатура = &Номенклатура
	|									" + ?(ТекСписокСкладов.Количество() > 0, "	И Склад В (&СписокСкладов)" , "") + ") КАК ПродажиОбороты
	|	ЛЕВОЕ СОЕДИНЕНИЕ втДни КАК втДни
	|	ПО ПродажиОбороты.Период = втДни.Дата
	|
	|ГДЕ
	|	" + ?(УчитыватьПраздники, "	НЕ втДни.Выходной", "ИСТИНА") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Период,
	|	ПродажиОбороты.Склад,
	|	ПродажиОбороты.ДокументПродажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродажиОбороты.ДокументПродажи.Дата";
	Запрос.УстановитьПараметр("Номенклатура", ТекНоменклатура);
	Запрос.УстановитьПараметр("НачДата", ТекПериод.ДатаНачала);
	Запрос.УстановитьПараметр("КонДата", ТекПериод.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокСкладов", ТекСписокСкладов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Макет = Обработки.ОчисткаДанныхОтШума.ПолучитьМакет("Макет");
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Вывести(ОблШапка);
	
	Пока Выборка.Следующий() Цикл
		
		ОблСтрока.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОблСтрока);
		
	КонецЦикла;
		
	Возврат ТабДок;
	
КонецФункции
