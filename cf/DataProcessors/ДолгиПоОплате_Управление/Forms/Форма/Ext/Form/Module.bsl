
&НаКлиенте
Перем АнтиЗацикливание;

&НаСервере
Процедура ОбновитьДокументы()
	
	ДокументыКонтрагентов.Очистить();
	текДокумент = Неопределено;
	текПериод 	= '00010101';
	
	Если текКонтрагент <> Неопределено Тогда
	
		
		
		Запрос = Новый Запрос("выбрать * из (ВЫБРАТЬ
		|		Представление(Контрагент) Контрагент,
		|		Представление(Организация) Организация,
		|		Истина Проведен,
		|		Ложь ПометкаУдаления,
		|		Период Дата,
		|		Представление(Регистратор) прДокумент,
		|		Регистратор Документ
		|	ИЗ
		|		РегистрНакопления.ДолгиПоОтгрузкам  
		|	ГДЕ
		|	    Контрагент = &Контрагент
		|	    И Период > &ДатаНачала
		|
		|объединить все
		|
		|ВЫБРАТЬ
		|		Представление(Контрагент) Контрагент,
		|		Представление(Организация) Организация,
		|		Истина Проведен,
		|		Ложь ПометкаУдаления,
		|		Период Дата,
		|		Представление(Регистратор) прДокумент,
		|		Регистратор Документ
		|	ИЗ
		|		РегистрНакопления.ДолгиПоЗаказам  
		|	ГДЕ
		|	    Контрагент = &Контрагент
		|	    И Период > &ДатаНачала
		|	    и ВидДвижения = Значение(ВидДвиженияНакопления.Приход)
		|	 ) как вт
		|	Упорядочить по Дата 
		|	    ");
		
		
		
		Запрос.УстановитьПараметр("Контрагент", ТекКонтрагент);
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		ДокументыКонтрагентов.Загрузить(ТЗ);
		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьДвижения()
	
	ДолгиПоОтгрузкам.Очистить();
	
	Если текДокумент <> Неопределено Тогда
	
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Период,
		|	Регистратор,
		|	ВидДвижения,
		|	Организация,
		|	Контрагент,
		|	Заказ,
		|	ДокументОтгрузки,
		|	Сумма
		|ИЗ
		|	РегистрНакопления.ДолгиПоОтгрузкам
		|	
		|ГДЕ
		|	Регистратор = &Регистратор
		|");
		
		Запрос.УстановитьПараметр("Регистратор", текДокумент);
		
		ДолгиПоОтгрузкам.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьОстатки()
	
	ОстаткиПоДолгам.Очистить();
	
	Если ТекКонтрагент <> Неопределено Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Организация,
		|	Контрагент,
		|	Заказ,
		|	ДокументОтгрузки,
		|	СуммаОстаток Сумма
		|ИЗ
		|	РегистрНакопления.ДолгиПоОтгрузкам.Остатки(" + ?(Не ЗначениеЗаполнено(текПериод),"","&Период") + ", Контрагент = &Контрагент)
		|");
		
		Запрос.УстановитьПараметр("Контрагент", 	ТекКонтрагент);
		Запрос.УстановитьПараметр("Период", 	текПериод + 1);
		
		ОстаткиПоДолгам.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	Отработало = Истина;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПартнерыПриАктивизацииСтроки(Элемент)
	
	Если АнтиЗацикливание = Истина Тогда
		Возврат;
	КонецЕсли;
	
	АнтиЗацикливание = Истина;
	
	текКонтрагент = Элементы.Контрагенты.ТекущаяСтрока;
	ОбновитьДокументы();
	ОбновитьДвижения();
	ОбновитьОстатки();
	
	АнтиЗацикливание = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПартнеровПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ДокументыКонтрагентов.ТекущиеДанные;
	текДокумент = ?(ТекДанные = Неопределено, Неопределено, ТекДанные.Документ);
	текПериод 	= ?(ТекДанные = Неопределено, '00010101', 	ТекДанные.Дата);
	ОбновитьДвижения();
	ОбновитьОстатки();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Контрагент.Пустая() Тогда
		
		Элементы.Контрагенты.ТекущаяСтрока = Параметры.Контрагент;
		
	КонецЕсли;
	
	ДатаНачала = ДобавитьМесяц(ТекущаяДата(),-12);
	
КонецПроцедуры


&НаСервере
Процедура ПровестиНаСервере(ДокСсылка = Неопределено)
	
	Если ДокСсылка = Неопределено Тогда
		ДокСсылка = текДокумент;
	КонецЕсли;
	
	Если ДокСсылка <> Неопределено Тогда
		
		Обработки.ДолгиПоОплате_Управление.ПровестиНаСервере(ДокСсылка);
		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПолучитьСписокПартнеровДляПроведения()
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ СПравочник.Контрагенты ГДЕ НЕ ПометкаУдаления");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции
&НаКлиенте
Процедура Провести(Команда)
	
	ПровестиНаСервере();
	ОбновитьДвижения();
	ОбновитьОстатки();
	
КонецПроцедуры
Функция ПолучитьСписокДокументовДляПроведения(Контрагент = Неопределено)
	
	Если Контрагент = Неопределено Тогда
		Контрагент = текКонтрагент;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка Документ
	|ИЗ
	|	ЖурналДокументов.ДокументыПартнераСКорректировками
	|
	|ГДЕ
	|	ЕСТЬNULL(Ссылка.Контрагент, Ссылка.Заказ.Контрагент) = &Контрагент И
	|	Проведен
	|");
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Документ");
	
КонецФункции
&НаКлиенте
Процедура ПровестиВсе(Команда)
	
	ДокументПров 	= ПолучитьСписокДокументовДляПроведения();
	КолВсего		= ДокументПров.Количество();
	Ном				= 0;
	
	Для Каждого ДокПров Из ДокументПров Цикл Ном = Ном + 1;
		
		ОбработкаПрерыванияПользователя();
		Состояние("Проводим документ", ном / КолВсего * 100, ДокПров);
		ПровестиНаСервере(ДокПров);
		
	КонецЦикла;
	
КонецПроцедуры
&НаКлиенте
Процедура МегаПровестиВсе(Команда)
	
	Если Вопрос("Будут проведени все документы по всем Контрагентам,
				|Продолжить?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
		ОбщиеФункции.СообщитьТекст("Запуск обработки " + ТекущаяДата());
				
		СписокКонтрагентов	= ПолучитьСписокПартнеровДляПроведения();
		КолВсего		= СписокКонтрагентов.Количество();
		Ном				= 0;
	
		Для Каждого Контрагент Из СписокКонтрагентов Цикл Ном = Ном + 1;
			
			ОбработкаПрерыванияПользователя();
			ДокументПров = ПолучитьСписокДокументовДляПроведения(Контрагент);
			
			Для Каждого ДокПров Из ДокументПров Цикл
				
				ОбработкаПрерыванияПользователя();
				Состояние("Проводим " + Контрагент, ном / КолВсего * 100,  ДокПров);
				ПровестиНаСервере(ДокПров);
				
			КонецЦикла;
		КонецЦикла;
		
		ОбщиеФункции.СообщитьТекст("Завершение обработки " + ТекущаяДата());
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДокументы();
	ОбновитьДвижения();
	ОбновитьОстатки();
	
КонецПроцедуры


&НаСервере
Функция ИмяДокумента(ДокСсылка)
	
	Возврат ДокСсылка.Метаданные().Имя;
	
КонецФункции
&НаКлиенте
Процедура ДокументыПартнеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элемент.ТекущиеДанные;
	ОткрытьФорму("Документ." + ИмяДокумента(ТекДанные.Документ) + ".Форма.ФормаДокумента", Новый Структура("Ключ", ТекДанные.Документ), ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ОрганизацияТекДокумента()
	
	Возврат текДокумент.Организация;
	
КонецФункции
&НаКлиенте
Процедура Управление(Команда)
	
	ОткрытьФорму("Обработка.ДолгиПоОплате_Управление.Форма.Управление", Новый Структура("Организация, Контрагент", ОрганизацияТекДокумента(), текКонтрагент), ЭтаФорма);
	
КонецПроцедуры




