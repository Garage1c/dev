
&НаСервере
Процедура ПрочитатьТаблицу()
	
	Запрос = Новый Запрос("
	
	// Заказы
	
	|ВЫБРАТЬ
	|	Жур.Ссылка 			Заказ,
	|	ЕСТЬNULL(ЕСТЬNULL(РегПок.СуммаПриход, РегИнт.СуммаПриход), Жур.Ссылка.Сумма) 	Сумма,
	|	Жур.Дата
	|ИЗ
	|	ЖурналДокументов.ЖурналЗаказов Жур
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПокупателей.Обороты РегПок
	|ПО
	|	Жур.Ссылка = РегПок.ЗаказПокупателя
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ИнтернетЗаказПокупателя.Обороты РегИнт
	|ПО
	|	Жур.Ссылка = РегИнт.ИнтернетЗаказ
	|
	|ГДЕ
	|	Проведен И
	|	Ссылка.Организация 	= &Организация И
	|	Ссылка.Партнер 		= &Партнер
	|;
	
	// Отгрузки
	
	|ВЫБРАТЬ
	|	Регистратор ДокументОтгрузки,
	|	Регистратор.Заказ Заказ,
	|	Период Дата,
	|	СУММА(СуммаОборот) Сумма
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(,,Регистратор)
	|ГДЕ
	|	Регистратор.Организация 	= &Организация И
	|	Регистратор.Партнер 		= &Партнер	
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистратор,
	|	Регистратор.Заказ,
	|	Период	
	|;
	
	// Оплаты
	
	|ВЫБРАТЬ
	|	Регистратор ДокументОплаты,
	|	Период Дата,
	|	СУММА(-СуммаОборот) Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Обороты(,,Регистратор)
	|ГДЕ
	|	СуммаОборот > 0 И
	|	Регистратор.Организация 	= &Организация И
	|	Регистратор.Партнер 		= &Партнер	
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистратор,
	|	Период
	|;
	
	// Долги по отгрузкам (оплаченные только)
	
	|ВЫБРАТЬ
	|	Истина Связано,
	|	Регистратор ДокументОплаты,
	|	ЕСТЬNULL(Заказ.Дата, ДокументОтгрузки.Дата) Дата,
	|	Заказ,
	|	ДокументОтгрузки,
	|	СуммаРасход Сумма
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам.ОстаткиИОбороты(,,Регистратор,,Организация = &Организация И Партнер = &Партнер)
	|ГДЕ
	|	СуммаРасход > 0 И (Заказ <> Неопределено ИЛИ ДокументОтгрузки <> Неопределено)
	|");
	
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Партнер", 		Партнер);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаЗаказов 	= Пакет[0].Выбрать();
	ВыборкаОтгрузок = Пакет[1].Выбрать();
	ВыборкаОплат 	= Пакет[2].Выбрать();
	
	Движения.Загрузить(Пакет[3].Выгрузить());
	
	// Добавим заказы непопавшие в долги
	// разнеся пропорционально (размазоф)
	
	Пока ВыборкаЗаказов.Следующий() Цикл
		
		СуммаУжеЕсть 	= ВыборкаЗаказов.Сумма;
		СтрокиЗаказов 	= Движения.НайтиСтроки(Новый Структура("Заказ", ВыборкаЗаказов.Заказ));
		
		Для КАждого Строка Из СтрокиЗаказов Цикл
			
			Расспределяем = Мин(Строка.Сумма, СуммаУжеЕсть);
			Если СуммаУжеЕсть Тогда
				СуммаУжеЕсть = СуммаУжеЕсть - Расспределяем;
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаУжеЕсть <> 0 Тогда // То чего не вошло по сумме
			НовСтрока = Движения.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ВыборкаЗаказов);
			НовСтрока.Сумма = СуммаУжеЕсть;
		КонецЕсли;
	КонецЦикла;
	
	// Добавим отгрузки
	
	Пока ВыборкаОтгрузок.Следующий() Цикл
		
		// Сперва добавим в уже оплаченные заказы
		Если Не Движения.НайтиСтроки(Новый Структура("ДокументОтгрузки", ВыборкаОтгрузок.ДокументОтгрузки)).Количество() Тогда
			НовСтрока = Движения.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ВыборкаОтгрузок);
		КонецЕсли;
	КонецЦикла;
	
	// Добавим оплаты
	
	Пока ВыборкаОплат.Следующий() Цикл
		
		Если Не Движения.НайтиСтроки(Новый Структура("ДокументОплаты", ВыборкаОплат.ДокументОплаты)).Количество() Тогда
			НовСтрока = Движения.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ВыборкаОплат);
		КонецЕсли;
	КонецЦикла;
	
	// Остортируем так чтоюы пустые отгрузки были сверху
	
	Движения.Сортировать("ДокументОтгрузки Убыв");
	
	КолСтрок = Движения.Количество();
	Для Ном = 1 по КолСтрок Цикл
		
		// Удалим заказы которые проставлены к реализации
		
		Строка = Движения[КолСтрок - Ном];
		Если Движения.НайтиСтроки(Новый Структура("Заказ", Строка.Заказ)).Количество() > 1 Тогда
			Движения.Удалить(Строка);
		КонецЕсли;
		
		// Добавим отгрузки в заказы которые уже были оплачены
		
	КонецЦикла;
	
	
	
	// Отсортируем по дате
	
	Движения.Сортировать("Дата");
	
	
	
	
	//Пока ВыборкаДолгов.Следующий() Цикл
	//	
	//	Если ЗначениеЗаполнено(ВыборкаДолгов.Заказ) Тогда
	//		
	//		// ВЫчеркним из заказа
	//		Списываем = ВыборкаДолгов.Сумма;
	//		СтрокиЗаказа = ТаблицаЗаказов.НайтиСтроки(Новый Структура("Заказ", ВыборкаДолгов.Заказ));
	//		Инд = СтрокиЗаказа.Количество();
	//		Для Ном = 1 По КолСтрок Цикл Инд = Инд - 1;
	//			
	//			СтрокаЗаказа = СтрокиЗаказа[Инд];
	//			берем = Мин(Списываем, СтрокаЗаказа.Сумма);
	//			СтрокаЗаказа.Сумма = СтрокаЗаказа.Сумма - берем;
	//			
	//			Если Не СтрокаЗаказа.Сумма Тогда // удалим строку чтобы не попалась еще раз
	//				ТаблицаЗаказов.Удалить(СтрокаЗаказа);
	//			КонецЕсли;
	//			
	//		КонецЦикла;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Организация.Пустая() Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	 
	Если Не Параметры.Партнер.Пустая() Тогда
		Партнер = Параметры.Партнер;
	КонецЕсли;
	
	ПрочитатьТаблицу();
	
КонецПроцедуры
