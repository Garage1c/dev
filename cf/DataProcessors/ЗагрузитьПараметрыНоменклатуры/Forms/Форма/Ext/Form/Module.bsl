// Общая функция получения списка реквизитов заданного типа
//
&НаСервере
Функция ПолучитьРеквизитыОбъекта(ИмяТипа, ДобавитьСтандартныеРквизиты = Истина)   
	
	МассивРеквизитов = Новый СписокЗначений;
	МетаОбъект = Метаданные.Справочники[ОбъектОбработки];	
	
	// стандартные
	Если ДобавитьСтандартныеРквизиты Тогда
		
	Если МетаОбъект.ДлинаКода > 0 Тогда
		МассивРеквизитов.Добавить("Код", "Код"); КонецЕсли;
	
	Если МетаОбъект.ДлинаНаименования > 0 Тогда
		МассивРеквизитов.Добавить("Наименование", "Наименование"); КонецЕсли;
	
	КонецЕсли;
	//Элементы.Владелец.Видимость = МетаОбъект.Владельцы.Количество();
	
	// пробежимся по реквизитам, если строковые, добавим в список
	
	ПроверяемыйТип = Тип(ИмяТипа);

	МетаРеквизиты = МетаОбъект.Реквизиты;
	Для Каждого Рекв ИЗ МетаРеквизиты Цикл
		Если Рекв.Тип.СодержитТип(ПроверяемыйТип) Тогда
			МассивРеквизитов.Добавить(Рекв.Имя, Рекв.Синоним); КонецЕсли;
	КонецЦикла;
	
	// получим из общих реквизитов
	
	//СвойствоИспользовать = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать;
	//   
	//Для Каждого ОбщийРеквизит ИЗ Метаданные.ОбщиеРеквизиты Цикл
	//	
	//	Элемент = ОбщийРеквизит.Состав.Найти(МетаОбъект);
	//	
	//	Если Элемент.Использование = СвойствоИспользовать Тогда
	//		МассивРеквизитов.Добавить(ОбщийРеквизит.Имя, ОбщийРеквизит.Синоним);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	Возврат МассивРеквизитов; 	
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбъектОбработки = "Номенклатура";
	ЗаполнитьПолеПоискаИПараметры();
	Элементы.ЗаменятьСуществующееОписание.Доступность = Описание;
	Элементы.ЗаменятьСуществующуюКоплектацию.Доступность = Комплектация;
	Элементы.ПутьКИзображениям.Видимость = ЗагрузкаИзображений;
	
	ТабличныйДокумент.Защита = Ложь;	
КонецПроцедуры
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СписокВыбораИД = Элементы.РеквизитИдентификатор.СписокВыбора;
	
	МассивРеквизитов = ПолучитьРеквизитыОбъекта("Строка");
	СписокВыбораИД.ЗагрузитьЗначения(МассивРеквизитов.ВыгрузитьЗначения());
	ЗадатьОбластьТабличногоДокумента();

	//Реквизиты.Очистить();
//	ОбъектОбработкиПриИзмененииНаСервере();
	//Для Каждого Строка Из МассивРеквизитов Цикл
	//	НоваяСтрока = Реквизиты.Добавить();
	//	НоваяСтрока.Имя = Строка.Значение;
	//	НоваяСтрока.Представление = Строка.Представление;
	//КонецЦикла;
	//

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолеПоискаИПараметры()

	// загружаем список допустимых полей, используемых для дальнейшего поиска (идентификации) объекта
	СписокВыбораИД = Элементы.РеквизитИдентификатор.СписокВыбора;
	
	МассивРеквизитов = ПолучитьРеквизитыОбъекта("Строка");
	СписокВыбораИД.ЗагрузитьЗначения(МассивРеквизитов.ВыгрузитьЗначения());
	
	// ставим поле-поиска по-умолчанию
	ОчиститьПолеПоиска();

	//  заполняем список полей (параметров), которые будет загружены из табличного документа
	ЗаполнитьТаблицуРеквизитов();
	
	ЗадатьОбластьТабличногоДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРеквизитов(СохранитьТекущиеДанные = Ложь)
	
	Реквизиты.Очистить();
	
	// Заполняем списком дополнительных реквизитов Номенклатуры (параметры)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	Ссылка				Свойство,
		|	Наименование		Представление,
		|	ТипЗначения  		ТипЗначения,
		|	УчаствуетВФильтре 	Основной, 
		|	ЕдиницаИзмерения	ЕдиницаИзмерения,
		|	ЛОЖЬ				Выбран,
		|	0					НомерКолонки
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры
		|ГДЕ
		|	НЕ ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО Наименование");
		
	Реквизиты.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРеквизитовДляГруппы(Ссылка)
	
	Реквизиты.Очистить();
			
	Реквизиты.Загрузить(РаботаСНоменклатурой.ПолучитьДополнительныеРеквизитыНоменклатуры(Ссылка));
		
КонецПроцедуры


&НаСервере 
Процедура ОчиститьПолеПоиска()
	
	МетаОбъект = Метаданные.Справочники[ОбъектОбработки];
	РеквизитИдентификатор = ?(МетаОбъект.ДлинаКода > 0, "Код", 
		?(МетаОбъект.ДлинаНаименования > 0, "Наименование","")); 
	
КонецПроцедуры
&НаСервере
Процедура ЗадатьОбластьТабличногоДокумента()
	
	ТабличныйДокумент.Очистить();
	Макет = Обработки.ЗагрузитьПараметрыНоменклатуры.ПолучитьМакет("Перевод");
	ОбластьКолонкаНомер = Макет.ПолучитьОбласть("Заголовок|КолонкаНомер");
	ТабличныйДокумент.Присоединить(ОбластьКолонкаНомер);
	
	ОбластьИмя = Макет.ПолучитьОбласть("Заголовок|КолонкаИмя");
	ОбластьИмя.Параметры.ИмяРеквизита = РеквизитИдентификатор;
	ТабличныйДокумент.Присоединить(ОбластьИмя); 

	Если Вес Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "Вес";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;

	Если Описание Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "Описание";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Если Комплектация Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "Комплектация";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Если ОбратитьВнимание Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "ОбратитьВнимание";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Если Применение Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "Особенности";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Если ФлагВыгружатьНаСайт Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "ВыгружатьНаСайт";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Для Каждого Строка Из Реквизиты Цикл Если Строка.Выбран Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = Строка.Представление;
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	КонецЦикла;
	
	Если ЗагрузкаИзображений Тогда
		ОбластьИмя.Параметры.ИмяРеквизита = "Имя файла изображения
											|(через запятую)";
		ТабличныйДокумент.Присоединить(ОбластьИмя); 
		ОбластьИмя.Параметры.ИмяРеквизита = "Представление
											|объекта";
		ТабличныйДокумент.Присоединить(ОбластьИмя); КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Строки");
	//Для Сч = 1 По КоличествоСтрок Цикл
	//	Область.Параметры.Номер = Сч;
	ТабличныйДокумент.Вывести(Область);
	//КонецЦикла;
		
КонецПроцедуры


&НаКлиенте
Процедура Очистить(Команда)
	ЗаполнитьТаблицуРеквизитов();
	ЗадатьОбластьТабличногоДокумента();
КонецПроцедуры
&НаКлиенте
Процедура ЗагрузитьПеревод(Команда)
	
	Если ПустаяСтрока(РеквизитИдентификатор) Тогда
		ПоказатьПредупреждение(,"Не задано поле поиска. Загрузка реквизитов не может быть выполнена"); Возврат; КонецЕсли;
	
	строшибки = "";
	МассивТоваров = ЗагрузитьПереводНаСервере(стрОшибки);
	Если ЗагрузкаИзображений Тогда
		ЗагрузитьИзображения(МассивТоваров);
	КонецЕсли;
	Если СразуНаСайт Тогда ПослатьИзмененияНаСайт(МассивТоваров); КонецЕсли;
	
	Если ПустаяСтрока(стрОшибки) Тогда
		ПоказатьОповещениеПользователя("Загрузка заверешена",,"Загрузка данных");
	Иначе
		ОбщиеФункции.СообщитьТекст(стрОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПослатьИзмененияНаСайт(МассивТоваров)
	
	Если МассивТоваров.Количество() > 0 Тогда
		
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("СайтНазначения",		 	Новый ОписаниеТипов("ПеречислениеСсылка.Сайты"));
	Таблица.Колонки.Добавить("Объект", Метаданные.РегистрыСведений.БуферКомандДляСайта_API2.Измерения.Объект.Тип);
	Таблица.Колонки.Добавить("ДатаИзменений",			Новый ОписаниеТипов("Дата",,,,, Новый квалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Таблица.Колонки.Добавить("КомандаHTTP", 			Новый ОписаниеТипов("ПеречислениеСсылка.КомандыHTTP"));
	Таблица.Колонки.Добавить("АдресРесурсаСервера", 	Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(120))); 
	Таблица.Колонки.Добавить("ТелоЗапроса",				Новый ОписаниеТипов("Строка")); 
	Таблица.Колонки.Добавить("ЕстьОшибка", 				Новый ОписаниеТипов("Булево")); 
	Таблица.Колонки.Добавить("Очередь", 				Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(2,0, ДопустимыйЗнак.Неотрицательный))); 
	Таблица.Колонки.Добавить("ТипОбъекта", 				Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(20))); 
	
	Для Каждого СсылкаСправочник ИЗ МассивТоваров Цикл  Если СсылкаСправочник.ВыгружатьНаСайт Тогда
	
		// Отправим в API2
		
		АдресРесурсаСервера		  = ?(СсылкаСправочник.ЭтоГруппа, "/api/product_categories", "/api/products");
		ПараметрыПолученияОбъекта = Новый Структура("Очередь, Метод, ПараметрыМетода",
										?(СсылкаСправочник.ЭтоГруппа, 25, 30),
										?(СсылкаСправочник.ЭтоГруппа, "API2.ПолучитьКатегории", "API2.ПолучитьТовары"),
										Новый Структура("Ссылка, БудутЗаписаны", СсылкаСправочник, Истина));
	
		фПараметры 	= ПараметрыПолученияОбъекта.ПараметрыМетода;
		новОбъект 	= Вычислить(ПараметрыПолученияОбъекта.Метод + "(фПараметры)");
	
		Если новОбъект = Неопределено Тогда
				ОбщиеФункции.СообщитьТекст("Ошибка при помещении объекта в буфер обмена сайта
				|"); Отказ = Истина; Возврат Ложь; КонецЕсли;
	
		Суффикс = "update";
		ТипОбъекта =  ?(СсылкаСправочник.ЭтоГруппа, "product_category", "product");
		
		// Запишем
		
		
		Запись = Таблица.Добавить();
		
		Запись.СайтНазначения		= Перечисления.Сайты.garage;
		Запись.Объект 				= СсылкаСправочник;
		Запись.КомандаHTTP 			= Перечисления.КомандыHTTP.POST;
		Запись.АдресРесурсаСервера 	= АдресРесурсаСервера + "/" + Суффикс;
		Запись.ТипОбъекта 			= ТипОбъекта;
		Запись.ТелоЗапроса			= ЗначениеВСтрокуВнутр(новОбъект);
		Запись.Очередь 				= ПараметрыПолученияОбъекта.Очередь;
		Запись.ЕстьОшибка			= Ложь;
		Запись.ДатаИзменений		= ТекущаяДата();
		
	 КонецЕсли;	
 	КонецЦикла;
	
	НачатьТранзакцию();
	
	//Круглов 12.02.16
	//блокируем весь регистр сведений для того, чтобы добавить записи через НаборЗаписей
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БуферКомандДляСайта_API2");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;	
	Блокировка.Заблокировать();
	//Круглов 12.02.16
	
	Запрос = Новый Запрос("ВЫБРАТЬ Таб.СайтНазначения, Таб.Объект, Таб.КомандаHTTP, Таб.АдресРесурсаСервера, Таб.ТелоЗапроса, Таб.ЕстьОшибка, Таб.Очередь, Таб.ТипОбъекта, Таб.ДатаИзменений, """" Ошибка, ДАТАВРЕМЯ(1,1,1,0,0,0) ДатаОшибки, 0 НомерПовтораПриОшибке ПОМЕСТИТЬ Товары ИЗ &Таблица Таб; ВЫБРАТЬ
	|	ЕСТЬNULL(Тов.СайтНазначения,Рег.СайтНазначения) СайтНазначения,
	|	ЕСТЬNULL(Тов.Объект,Рег.Объект) Объект,
	|	ЕСТЬNULL(Тов.КомандаHTTP,Рег.КомандаHTTP) 					КомандаHTTP,
	|	ЕСТЬNULL(Тов.АдресРесурсаСервера,Рег.АдресРесурсаСервера) 	АдресРесурсаСервера,
	|	ЕСТЬNULL(Тов.ТелоЗапроса,Рег.ТелоЗапроса) 					ТелоЗапроса,
	|	ЕСТЬNULL(Тов.ДатаИзменений,Рег.ДатаИзменений) 				ДатаИзменений,
	|	ЕСТЬNULL(Тов.ЕстьОшибка,Рег.ЕстьОшибка) 	ЕстьОшибка,
	|	ЕСТЬNULL(Тов.Очередь,Рег.Очередь) 			Очередь,
	|	ЕСТЬNULL(Тов.ТипОбъекта,Рег.ТипОбъекта) 	ТипОбъекта,
	|   ЕСТЬNULL(Тов.Ошибка, Рег.Ошибка) 			Ошибка,
	|   ЕСТЬNULL(Тов.ДатаОшибки, Рег.ДатаОшибки) 	ДатаОшибки,
	|   ЕСТЬNULL(Тов.НомерПовтораПриОшибке, Рег.НомерПовтораПриОшибке) 		НомерПовтораПриОшибке
	|	ИЗ Товары Тов ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.БуферКомандДляСайта_API2 Рег ПО Тов.СайтНазначения = Рег.СайтНазначения И Тов.Объект = Рег.Объект //И Тов.ДатаПримененияКоманды = Рег.ДатаПримененияКоманды "); 
	Запрос.УстановитьПараметр("Таблица", Таблица);
	
 	Набор =  РегистрыСведений.БуферКомандДляСайта_API2.СоздатьНаборЗаписей();
	Набор.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если Не ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Набор) Тогда
	Возврат Ложь; КонецЕсли; 
	ЗафиксироватьТранзакцию();
	КонецЕсли;	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ЗагрузитьПереводНаСервере(стрОшибки = "")
	
	КоличествоСтрок = ТабличныйДокумент.ВысотаТаблицы;
	Менеджер = РегистрыСведений.ЗначенияДополнительныхРеквизитовНоменклатуры;
	МассивТоваров =  Новый Массив;
	Для Сч = 2 По КоличествоСтрок Цикл
		
		СтрокаИД = ТабличныйДокумент.Область("R"+Строка(Сч)+"C2").Текст;
		Если ПустаяСтрока(СтрокаИД) Тогда
			// Если поле поиска для товара не указано, пропускаем эту строку
			стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + ": Не заполнен реквизит поиска объекта. Выгрузка данных по этой строке не произведена";
			ТабличныйДокумент.Область("R"+Строка(Сч)+"C2").ЦветФона = WebЦвета.Красный;
			Продолжить;
		КонецЕсли;
		Ошибка = "";
		Ссылка = НайтиОбъект(ОбъектОбработки, РеквизитИдентификатор, СтрокаИД, Ошибка);
		Если Ссылка = Неопределено Тогда
			// Если товар по указанному полю поиска не найден, пропускаем его 
			стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + "Объект не найден. " + Ошибка;  
			ТабличныйДокумент.Область("R"+Строка(Сч)+"C2").ЦветФона = WebЦвета.Красный;
			Продолжить;
		КонецЕсли;
		
		Если Вес ИЛИ Описание ИЛИ Комплектация ИЛИ Применение ИЛИ ОбратитьВнимание ИЛИ ФлагВыгружатьНаСайт Тогда
				
			СсылкаОбъект = Ссылка.ПолучитьОбъект();
			Если СсылкаОбъект = Неопределено Тогда
				стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + "Объект не найден. " + Ошибка;  
				ТабличныйДокумент.Область("R"+Строка(Сч)+"C2").ЦветФона = WebЦвета.Красный;
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		
		ИзмененРеквизитТовара = Ложь;
		Если Вес Тогда
			ЗначениеВес = ТабличныйДокумент.Область("R"+Строка(Сч)+"C3").Текст;
			Попытка 
				ЧислоЗначениеВес = Число(ЗначениеВес);
				СсылкаОбъект.Вес = ЧислоЗначениеВес;
				ИзмененРеквизитТовара = Истина;
			Исключение
				стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + "Ошибка преобразования Веса к числовому значению " + Ошибка;  
				ТабличныйДокумент.Область("R"+Строка(Сч)+"C3").ЦветФона = WebЦвета.Красный;
			КонецПопытки;
		КонецЕсли;
		
		Если Описание Тогда НомерОписания = 3 + Число(Вес);
			ЗначениеОписание = ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(НомерОписания)).Текст;
			Если Не ПустаяСтрока(ЗначениеОписание) И (                                                             
				ПустаяСтрока(СсылкаОбъект.Описание) ИЛИ ЗаменятьСуществующееОписание) Тогда
				СсылкаОбъект.Описание = ЗначениеОписание; ИзмененРеквизитТовара = Истина; КонецЕсли;
		КонецЕсли;
		
		Если Комплектация Тогда НомерКомплектации = 3 + Число(Вес) + Число(Описание);
			ЗначениеКомплектация = ТабличныйДокумент.Область("R"+Строка(Сч)+"C"+Строка(НомерКомплектации)).Текст;
			Если Не ПустаяСтрока(ЗначениеКомплектация) И (                                                             
				ПустаяСтрока(СсылкаОбъект.Комплектация) ИЛИ ЗаменятьСуществующуюКоплектацию) Тогда
				СсылкаОбъект.Комплектация = ЗначениеКомплектация; ИзмененРеквизитТовара = Истина; КонецЕсли;
		КонецЕсли;
		
		Если ОбратитьВнимание Тогда НомерОбратитьВнимание = 3 + Число(Вес) + Число(Описание) + Число(Комплектация);
			ЗначениеОбратитьВнимание = ТабличныйДокумент.Область("R"+Строка(Сч)+"C"+Строка(НомерОбратитьВнимание)).Текст;
			Если Не ПустаяСтрока(ЗначениеОбратитьВнимание) Тогда
				СсылкаОбъект.ОбратитьВнимание = ЗначениеОбратитьВнимание; ИзмененРеквизитТовара = Истина; КонецЕсли;
		КонецЕсли;
		
		Если Применение Тогда НомерПрименение = 3 + Число(Вес) + Число(Описание) + Число(Комплектация) + Число(ОбратитьВнимание);
			ЗначениеПрименение = ТабличныйДокумент.Область("R"+Строка(Сч)+"C"+Строка(НомерПрименение)).Текст;
			Если Не ПустаяСтрока(ЗначениеПрименение) Тогда
				СсылкаОбъект.Особенности = ЗначениеПрименение; ИзмененРеквизитТовара = Истина; КонецЕсли;
		КонецЕсли;
		
		Если ФлагВыгружатьНаСайт Тогда НомерПрименение = 3 + Число(Вес) + Число(Описание) + Число(Комплектация) + Число(ОбратитьВнимание) + Число(Применение);
			ЗначениеПрименение = ТабличныйДокумент.Область("R"+Строка(Сч)+"C"+Строка(НомерПрименение)).Текст;
			Если Не ПустаяСтрока(ЗначениеПрименение) Тогда
				СсылкаОбъект.ВыгружатьНаСайт = Булево(Число(ЗначениеПрименение)); ИзмененРеквизитТовара = Истина; КонецЕсли;
		КонецЕсли;	
		
		Если ИзмененРеквизитТовара Тогда
			Попытка
				СсылкаОбъект.ОбменДанными.Загрузка = Истина;
				СсылкаОбъект.Записать();
			Исключение
				стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + "Ошибка сохранения других реквизитов товара." + Ошибка;  
				ТабличныйДокумент.Область("R"+Строка(Сч)+"C2").ЦветФона = WebЦвета.Красный;
			КонецПопытки;
		КонецЕсли;

		// Если товар нашелся, пытаемся обработать и записать заданные в таблице свойства
		ИдНач = 2 + Число(Вес) + Число(Описание) + Число(Комплектация) + Число(ОбратитьВнимание) + Число(Применение) +  Число(ФлагВыгружатьНаСайт); // первые две колонки - это нумерация и поле поиска + колонки реквизитов
		ВыбранныеСтроки = Реквизиты.НайтиСтроки(Новый Структура("Выбран", Истина));
		ЕстьЗапись = Ложь;
		Для Каждого Строка ИЗ ВыбранныеСтроки Цикл
			Ид = ИдНач + Строка.НомерКолонки; 		//Для Каждого Строка ИЗ Реквизиты Цикл Если Строка.Выбран Тогда Ид = Ид+1; 
			
			СтрокаРеквизит = ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(Ид)).Текст;
			
			Запись = Менеджер.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Ссылка;
			Запись.Свойство		= Строка.Свойство;
			Запись.Прочитать();
			Если НЕ Запись.Выбран() Тогда
					Запись.Номенклатура = Ссылка;
					Запись.Свойство		= Строка.Свойство; КонецЕсли;
			
			Запись.Владелец 	= Ссылка;
			
			ЗначениеПрисвоено = Ложь;			
			ТипыЗначений = Строка.ТипЗначения.Типы();
			
			Для Каждого ТипЗнач Из ТипыЗначений Цикл ТекстОшибки = "";
				Если ТипЗнач = Тип("Строка") Тогда
					Запись.Значение = СтрокаРеквизит;
				    ЗначениеПрисвоено = Истина;
				ИначеЕсли ТипЗнач = Тип("Число") Тогда
					
					Попытка 
						Запись.Значение = Число(СтрокаРеквизит); 
						ЗначениеПрисвоено = Истина; 
					Исключение  
						ТекстОшибки = """ - Ошибка преобразования к числу: " + ОписаниеОшибки();
					КонецПопытки;
				ИначеЕсли
					ТипЗнач = Тип("СправочникСсылка.ЗначенияДополнительныхРеквизитовНоменклатуры") Тогда
					Рез = Справочники.ЗначенияДополнительныхРеквизитовНоменклатуры.НайтиПоНаименованию(СтрокаРеквизит, Истина,, Строка.Свойство);
					Если Рез = Неопределено ИЛИ Рез.Пустая() Тогда 
						ТекстОшибки = """ - Указанное значение свойства не найдено: " + ОписаниеОшибки();
					Иначе 
						Запись.Значение= Рез; 
						ЗначениеПрисвоено = Истина;
					КонецЕсли;
				Иначе
					ТекстОшибки = """ - Выгрузка свойства по данному типу не предусмотрена: " + ОписаниеОшибки();
					
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ЗначениеПрисвоено Тогда	
				стрОшибки = стрОшибки + Символы.ПС + "|Строка #" + Строка(Сч-1) + ", свойство """ + Строка.Представление + ТекстОшибки;
				ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(Ид)).ЦветФона = WebЦвета.Красный; 
			Иначе
				Попытка 
					Запись.Записать();
					ЕстьЗапись = Истина;
				Исключение
					стрОшибки = стрОшибки + Символы.ПС + Ссылка + ", свойство """ + Строка.Представление +  """ - Не удалось сохранить изменения в базу данных: " + ОписаниеОшибки();
					ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(Ид)).ЦветФона = WebЦвета.Красный;
				КонецПопытки;
			КонецЕсли;
		
		//КонецЕсли;	
	КонецЦикла; 
	
		// если внесли хоть каки-то изменения, сохраним эту ссылку
//	Если ЕстьЗапись ИЛИ ИзмененРеквизитТовара Тогда МассивТоваров.Добавить(Ссылка); КонецЕсли;
 	МассивТоваров.Добавить(Ссылка);
	КонецЦикла;	 
	Возврат МассивТоваров;
КонецФункции



&НаСервере
Функция НайтиОбъект(ИмяОбъекта, РеквизитПоиска, Значение, стрОшибки = "")
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник." + ИмяОбъекта + " ГДЕ " + РеквизитПоиска + " = """ + Значение + """");
	
	Попытка                      // мало ли что подусунули в реквизит...
		Рез = Запрос.Выполнить();
	Исключение
		стрОшибки = ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки;
	
	Если НЕ Рез.Пустой() Тогда
		
		Выборка = Рез.Выбрать();
		Если Выборка.Следующий() Тогда
			
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
&НаКлиенте
Процедура РеквизитИдентификаторПриИзменении(Элемент)
	
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура РеквизитыВыборПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Реквизиты.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.НомерКолонки = 0;
		ПеренумероватьКолонки();
	КонецЕсли;
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры
&НаКлиенте
Процедура ПеренумероватьКолонки()
	
	Строки = Реквизиты.НайтиСтроки(Новый Структура("Выбран", Истина));
	
	Ном = 0;
	Для Каждого Строка Из Строки Цикл Ном = Ном + 1; Строка.НомерКолонки = Ном;	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзменении(Элемент)
	ТабличныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТабличныйДокументПриИзмененииНаСервере()
	
	КоличествоСтрок = ТабличныйДокумент.ВысотаТаблицы;
	
	Для Сч = 2 По КоличествоСтрок Цикл ТабличныйДокумент.Область("R"+Строка(Сч)+"C1").Текст = Строка(Сч-1); КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	ТабличныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	//Для Каждого Строка ИЗ ПараметрыПеретаскивания.Значение Цикл
	Строка = ПараметрыПеретаскивания.Значение[0];
	
	// перенумерация если перетаскивают выбранную колонку
	Если Строка.Выбран Тогда	ПеренумероватьКолонки(); КонецЕсли;
	//КонецЦикла;
	
	ЗадатьОбластьТабличногоДокумента();	
			
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПараметрНоменклатурыИзменен" Тогда
		ОбработкаОповещенияНаСервере(Параметр);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере(Ссылка)
	Строки = Реквизиты.НайтиСтроки(Новый Структура("Свойство", Ссылка));
	Для Каждого Строка Из Строки Цикл
		Строка.ТипЗначения	 		= Ссылка.ТипЗначения;
		Строка.Представление 		= Ссылка.Наименование;
		Строка.Основной			 	= Ссылка.УчаствуетВФильтре;
	КонецЦикла;
	Элементы.Реквизиты.Обновить();
КонецПроцедуры                                      

&НаКлиенте
Процедура СписокДополнительныхРеквизитов(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Если ТипЗнч(НовыйОбъект) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыНоменклатуры") Тогда
		новСтрока = Реквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(новСтрока, НовыйОбъект);
		ЗадатьОбластьТабличногоДокумента();
	конецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНоменклатурыПриИзменении(Элемент)
	ЗаполнитьТаблицуРеквизитовДляГруппы(ГруппаНоменклатуры);
	ШаблонСвойств = Неопределено;
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	Элементы.ЗаменятьСуществующееОписание.Доступность = Описание;
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПриИзменении(Элемент)
	Элементы.ЗаменятьСуществующуюКоплектацию.Доступность = Комплектация;
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ВесПриИзменении(Элемент)
	ЗадатьОбластьТабличногоДокумента();
КонецПроцедуры

&НаСервере
Процедура ШаблонСвойствПриИзмененииНаСервере()
	Реквизиты.Очистить();
	СвойстваТовара = ШаблонСвойств.ПараметрыНомеклатуры;
	
	Для Каждого Строка Из СвойстваТовара Цикл

			новСтрока = Реквизиты.Добавить();
			новСтрока.Свойство = Строка.Свойство;
			новСтрока.ЕдиницаИзмерения = Строка.Свойство.ЕдиницаИзмерения;
			новСтрока.Основной = Строка.Свойство.УчаствуетВФильтре;
			новСтрока.ТипЗначения = Строка.Свойство.ТипЗначения; КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ШаблонСвойствПриИзменении(Элемент)
	
	ШаблонСвойствПриИзмененииНаСервере();
	ГруппаНоменклатуры = Неопределено;		
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ОбратитьВниманиеПриИзменении(Элемент)
	ЗадатьОбластьТабличногоДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПрименениеПриИзменении(Элемент)
	ЗадатьОбластьТабличногоДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ФлагВыгружатьНаСайтПриИзменении(Элемент)
	
	ЗадатьОбластьТабличногоДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзображения(МассивТоваров)
	сч = 1;
	ВыбранныеСтроки = Реквизиты.НайтиСтроки(Новый Структура("Выбран", Истина));
	Ид = 2 + Число(Вес) + Число(Описание) + Число(Комплектация) + Число(ОбратитьВнимание) + Число(Применение) +  Число(ФлагВыгружатьНаСайт) + ВыбранныеСтроки.Количество() ; // первые две колонки - это нумерация и поле поиска + колонки реквизитов	
	КоличествоСтрок = МассивТоваров.Количество();
	
	Для Каждого Ссылка ИЗ МассивТоваров Цикл сч = сч + 1;	
	
			СтрокаРеквизит = ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(Ид+1)).Текст;
			Попытка
				ЭтоПредставлениеОбъекта = Булево(Число(ТабличныйДокумент.Область("R"+Строка(Сч)+"C" + Строка(Ид+2)).Текст));
			Исключение
				стрОшибки = стрОшибки + "|Строка #" + Строка(Сч-1) + "Ошибка преобразования флага ""Представление объекта"" к логическому типу";  
				ТабличныйДокумент.Область("R"+Строка(Сч) + "C"+ Строка(Ид+2).ЦветФона = WebЦвета.Красный);
				Продолжить;
			КонецПопытки;
			
			МассивИзображений = КонвертацияТипов.ПолучитьМассивИзСтроки(СтрокаРеквизит);
			ном = 0;
			Для Каждого ИмяКратинки Из МассивИзображений Цикл ном = ном + 1;  // первая по порядку картинка является представлением объекта
				Состояние("Загрузка изображений", Сч/КоличествоСтрок *100, СтрокаРеквизит); 
				
				НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗавершениеЗагрузкиКартинки", ЭтаФорма, Новый Структура("Владелец, ИмяФайла, ЭтоПредставлениеОбъекта, НомерСтроки, НомерКолонки, Всего", Ссылка, СтрокаРеквизит, ЭтоПредставлениеОбъекта И (ном = 1), Сч, Ид, КоличествоСтрок)), , ПутьКИзображениям + "\" + ИмяКратинки, Ложь, УникальныйИдентификатор);
		    КонецЦикла;
	
	КонецЦикла;

КонецПроцедуры


&НаСервере 
Функция СоздатьНовуюКартинку(Наименование, Владелец, АдресКартинки, ЭтоПредставлениеОбъекта, стрОшибки)
	
	новКартинка = Справочники.КартинкиНоменклатуры.СоздатьЭлемент();
	новКартинка.Владелец 		= Владелец;
	новКартинка.Наименование 	= Наименование;
	новКартинка.ВыгружатьНаСайт = Истина;
	Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(АдресКартинки));
	новКартинка.Картинка 		= Новый ХранилищеЗначения(Картинка);
	новКартинка.ЭтоПредставлениеОбъекта = ЭтоПредставлениеОбъекта;
	новКартинка.РасширениеКартинка = Картинка.Формат();
	новКартинка.ОбменДанными.Загрузка 	= Истина;
	Попытка
		новКартинка.Записать();
	Исключение
		стрОшибки =  "Не удалось сохранить изображение " + Строка(Наименование) + ": " + ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
		
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура ЗавершениеЗагрузкиКартинки(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	стрОшибки = "";
	Если НЕ СоздатьНовуюКартинку(ДополнительныеПараметры.ИмяФайла, ДополнительныеПараметры.Владелец, Адрес,  ДополнительныеПараметры.ЭтоПредставлениеОбъекта, стрОшибки) Тогда
		Сообщить(стрОшибки);
		ТабличныйДокумент.Область("R"+Строка(ДополнительныеПараметры.НомерСтроки) + "C"+ Строка(ДополнительныеПараметры.НомерКолонки)).ЦветФона = WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзображенийПриИзменении(Элемент)
	
	Элементы.ПутьКИзображениям.Видимость = ЗагрузкаИзображений;
	ЗадатьОбластьТабличногоДокумента();		
КонецПроцедуры
