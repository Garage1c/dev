
&НаКлиенте
Процедура Команда(Команда)
	
	ОчиститьФорму();
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат
	КОнецЕсли;
	
	ТабДок = СформироватьТабличныйДокумент();
	//ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	
	Результат = ТабДок;
	Элементы.ФормаОтправитьНаЭлектроннуюПочту.Доступность = Истина;
	Элементы.ТекстФорматФайла.Доступность = Истина;

КонецПроцедуры     

&НаСервере
Процедура ОчиститьФорму()
	
	Результат.Очистить();

КОнецПРоцедуры


&НаСервере
Функция СформироватьТабличныйДокумент()
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	Макет =  РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	
	Акция = Объект.Акция;
	СопутствующаяАкция = Акция.СопутствующаяАкция;
	
	ПараметрыЗаполнения = ПолучитьИнформациюПоАкции(Акция,СопутствующаяАкция);

	//Вывести верхний колонтитул
	
	Область = Макет.ПолучитьОбласть("ВерхнийКолонтитул");
	Область.Параметры.Заполнить(ПараметрыЗаполнения.Шапка);
	
	Область.Параметры.ДатаНачала = Формат(ПараметрыЗаполнения.Шапка.ДатаНачала,"ДФ=dd.MM.yyyy");
	Область.Параметры.ДатаОкончания = Формат(ПараметрыЗаполнения.Шапка.ДатаОкончания,"ДФ=dd.MM.yyyy");
	Область.Параметры.Ответственный = ПараметрыСеанса.ТекущийПользователь; 
	
	СтруктураОтветвенного = ПолучитьИнфуПоОтветвенному(ПараметрыСеанса.ТекущийПользователь);
	Область.Параметры.КонтактОтветвенного = "тел.: " + ?(СтруктураОтветвенного.Свойство("Телефон"), СтруктураОтветвенного.Телефон, "8 (812) 458-46-64") + 
													   ?(СтруктураОтветвенного.Свойство("Почта"), "; e-mail: " + СтруктураОтветвенного.Почта, "");
	ТабличныйДокумент.Вывести(Область);
	
	//Вывести комментарий
	
	Область = Макет.ПолучитьОбласть("Комментарий");
	Если Акция.Валюта <> КэшируемыеФункции.ВалютаУправленческогоУчета() Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Валюта",Акция.Валюта);
		
		Курс = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяДата(),Отбор);
		Если Курс<> Неопределено Тогда
			Область.Параметры.Курс = " по курсу " + Акция.Валюта + " = " + Формат(Курс.Курс,"ЧДЦ=2");
		КонецЕсли;
		
	КонецЕсли; 
	
	Область.Параметры.ДатаКурса = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Область);
	
	Если Объект.Комментарий <> "" Тогда
		Область = Макет.ПолучитьОбласть("Комментарий1");
		Область.Параметры.Комментарий = Объект.Комментарий;
		ТабличныйДокумент.Вывести(Область);
	КонецЕсли;


	//Вывести шапку таблицы
	
	ВыводитьСопутствАкцию = НЕ СопутствующаяАкция = Документы.Акция.ПустаяСсылка() И Объект.ВывестиНаценку;
	
	Если ВыводитьСопутствАкцию Тогда
		Область = Макет.ПолучитьОбласть("ШапкаТаблицыС");
		ТабличныйДокумент.Вывести(Область); 
	Иначе
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(Область);
	КонецЕсли;
	
	//Вывести строки таблицы
	
	НомерСтроки = 0;
	
	Для Каждого Строка Из ПараметрыЗаполнения.Товары Цикл
		Область = ?(ВыводитьСопутствАкцию,Макет.ПолучитьОбласть("СтрокаС"),Макет.ПолучитьОбласть("Строка"));
		НомерСтроки = НомерСтроки + 1;
		
		Область.Параметры.НомерСтроки = НомерСтроки;
		//Область.Параметры.Заполнить(Строка);
		Область.Параметры.Номенклатура = Строка.Номенклатура;
		Область.Параметры.Артикул = Строка.Номенклатура.Артикул;
		Область.Параметры.Производитель = Строка.Номенклатура.Производитель;
		Область.Параметры.ЦенаДилера = Строка.Цена;
		Область.Параметры.ЦенаДилераАкция = Строка.ЦенаПоАкции;
		
		Область.Параметры.ВалютаДилера = ?(Объект.ЦенаДилераВалюта = Справочники.Валюты.ПустаяСсылка() ИЛИ НЕ Объект.ВывестиНаценку, 
									       КэшируемыеФункции.ВалютаУправленческогоУчета(),
									       Объект.ЦенаДилераВалюта);
		
		Область.Параметры.ДилерПроцентСкидки = Формат( Строка.ПроцентСкидки,"ЧДЦ=2; ЧС=-2");
		
		// Картинка
		
		СсылкаКартинки = Картинки.ПолучитьСсылкуОсновногоИзображения(Строка.Номенклатура);
		Если СсылкаКартинки <> Неопределено Тогда 
			Область.Область("R1C2").Картинка = ?(СсылкаКартинки.КопияКартинки.Пустая(), 
												 СсылкаКартинки.Аватар.Получить(), 
												 СсылкаКартинки.КопияКартинки.Аватар.Получить());
		КонецЕсли;
		
		//Сопутствующуая акция
		
		Если ВыводитьСопутствАкцию Тогда
			
			Область.Параметры.ЦенаРозница = Строка.ЦенаС;
			Область.Параметры.ЦенаРозницаАкция = Строка.ЦенаПоАкцииС;
			                                                           
			Область.Параметры.ВалютаРозница = ?(Объект.РозницаВалюта = Справочники.Валюты.ПустаяСсылка() ИЛИ НЕ Объект.ВывестиНаценку,
												КэшируемыеФункции.ВалютаУправленческогоУчета(), 
												Объект.РозницаВалюта);
			
			Область.Параметры.РозницаПроцентСкидки = Формат(Строка.ПроцентСкидкиС ,"ЧДЦ=2; ЧС=-2");
			
			Область.Параметры.Наценка = Формат(Строка.Наценка,"ЧДЦ=2; ЧС=-2");
			
		КонецЕсли;
		
		Если НЕ ТабличныйДокумент.ПроверитьВывод(Область) Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			//Вывести колонтитул и шапку на новой странице
			
			ОбластьКолонтитул = Макет.ПолучитьОбласть("ВерхнийКолонтитул2");
			ОбластьКолонтитул.Параметры.НаименованиеАкции = Акция.Наименование;
			ТабличныйДокумент.Вывести(ОбластьКолонтитул);

		КонецЕсли;
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла;
	
	
	//Вывести подпись
	
	Область = Макет.получитьОбласть("Подпись");
	Область.Параметры.КонтактОтветвенного = "тел.: " + ?(СтруктураОтветвенного.Свойство("Телефон"), СтруктураОтветвенного.Телефон, "8 (812) 458-46-64") + 
													   ?(СтруктураОтветвенного.Свойство("Почта"), "; e-mail: " + СтруктураОтветвенного.Почта, "");
	Область.Параметры.Ответственный = ПараметрыСеанса.ТекущийПользователь; 

	ТабличныйДокумент.Вывести(Область);
	
	ТабличныйДокумент.НижнийКолонтитул.ТекстСправа = "Страница [&НомерСтраницы] Из [&СтраницВсего]";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.Защита = Ложь;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ПолучитьИнформациюПоАкции(Акция,АкцияС)
	
	НетАкцииС = АкцияС = Документы.Акция.ПустаяСсылка() ИЛИ НЕ Объект.ВывестиНаценку;
	
	//Определяем только один тип цен у каждой акции для выгрузки
	
	ВрТаблица = Акция.Товары.Выгрузить(,"ТипЦен");
	ВрТаблица.Свернуть("ТипЦен");
	ПервыйТипЦены = ВрТаблица.ВыгрузитьКолонку("ТипЦен")[0];
	
	Если Не НетАкцииС Тогда
		ВрТаблица = АкцияС.Товары.Выгрузить(,"ТипЦен");
		ВрТаблица.Свернуть("ТипЦен");
		ПервыйТипЦеныС = ВрТаблица.ВыгрузитьКолонку("ТипЦен")[0];	
	КонецЕсли;
	
	//ПолучитьКурсыТребуемхВалют
	
	КурсыВалют = РегистрыСведений.КурсыВалют.СрезПоследних();
	ВалДилера = ?(Объект.ЦенаДилераВалюта = Справочники.Валюты.ПустаяСсылка() ИЛИ НЕ Объект.ВывестиНаценку, 
				  КэшируемыеФункции.ВалютаУправленческогоУчета(),
				  Объект.ЦенаДилераВалюта);

	КоэфДилер =  КурсыВалют.Найти(ВалДилера,"Валюта");
	КоэфДилерКурс = КоэфДилер.Курс/КоэфДилер.Кратность;
	
	ВалРозн = ?(Объект.РозницаВалюта = Справочники.Валюты.ПустаяСсылка() ИЛИ НЕ Объект.ВывестиНаценку, 
				КэшируемыеФункции.ВалютаУправленческогоУчета(),
				Объект.РозницаВалюта);

	Если Не НетАкцииС Тогда
		КоэфРозниц =  КурсыВалют.Найти(ВалРозн,"Валюта");
		КоэфРозницКурс = КоэфРозниц.Курс/КоэфРозниц.Кратность;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцияТовары.Номенклатура,
	|	АкцияТовары.ТипЦен,
	|	АкцияТовары.НоваяЦена,
	|	Акция.Валюта"+ ?(НетАкцииС,"",",
	|	АкцияТоварыС.ТипЦен КАК ТипЦенС,
	|	АкцияТоварыС.НоваяЦена КАК НоваяЦенаС,
	|	АкцияС.Валюта КАК ВалютаС ")+
	" ПОМЕСТИТЬ ТаблицаАкции
	|ИЗ
	|	Документ.Акция.Товары КАК АкцияТовары"+ ?(НетАкцииС,"","
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Акция.Товары КАК АкцияТоварыС
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Акция КАК АкцияС
	|			ПО АкцияТоварыС.Ссылка = АкцияС.Ссылка
	|		ПО АкцияТовары.Номенклатура = АкцияТоварыС.Номенклатура")+
	"		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Акция КАК Акция
	|		ПО АкцияТовары.Ссылка = Акция.Ссылка
	|ГДЕ
	|	Акция.Ссылка = &Ссылка
	|	И АкцияТовары.Ссылка = &Ссылка
	|	И АкцияТовары.ТипЦен = &ТипЦен"+ ?(НетАкцииС,"","
	|	И АкцияС.Ссылка = &СсылкаС
	|	И АкцияТоварыС.Ссылка = &СсылкаС
	|	И АкцияТоварыС.ТипЦен = &ТипЦенС")+
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Акция.Наименование КАК Наименование,
	|	Акция.ДатаНачала КАК ДатаНачала,
	|	Акция.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.Акция КАК Акция
	|ГДЕ
	|	Акция.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаАкции.Номенклатура КАК Номенклатура,
	|	ТаблицаАкции.ТипЦен КАК ТипЦен,
	|	ТаблицаАкции.Валюта КАК Валюта,
	|	КурсыВалютАкции.Курс КАК Курс,
	|	КурсыВалютАкции.Кратность КАК Кратность,
	|	ЦеныНоменклатуры.Цена * КурсыВалют.Курс / КурсыВалют.Кратность / &КоэфДилерКурс КАК Цена,
	|	ТаблицаАкции.НоваяЦена * КурсыВалютАкции.Курс / КурсыВалютАкции.Кратность / &КоэфДилерКурс КАК ЦенаПоАкции,
	|	1 - ТаблицаАкции.НоваяЦена * КурсыВалютАкции.Курс / КурсыВалютАкции.Кратность / (ЦеныНоменклатуры.Цена * КурсыВалют.Курс / КурсыВалют.Кратность) КАК ПроцентСкидки"+ ?(НетАкцииС,"",",
	|	ТаблицаАкции.ТипЦенС КАК ТипЦенС,
	|	ТаблицаАкции.ВалютаС КАК ВалютаС,
	|	КурсыВалютАкцииС.Курс КАК КурсС,
	|	КурсыВалютАкцииС.Кратность КАК КратностьС,
	|	ТаблицаАкции.НоваяЦенаС * КурсыВалютАкцииС.Курс / КурсыВалютАкцииС.Кратность / &КоэфРозницКурс КАК ЦенаПоАкцииС,
	|	ЦеныНоменклатурыС.Цена * КурсыВалютС.Курс / КурсыВалютС.Кратность / &КоэфРозницКурс КАК ЦенаС,
	|	(ТаблицаАкции.НоваяЦенаС * КурсыВалютАкцииС.Курс / КурсыВалютАкцииС.Кратность) / (ТаблицаАкции.НоваяЦена * КурсыВалютАкции.Курс / КурсыВалютАкции.Кратность) - 1  КАК Наценка,
	|	1 - ТаблицаАкции.НоваяЦенаС * КурсыВалютАкцииС.Курс / КурсыВалютАкцииС.Кратность / (ЦеныНоменклатурыС.Цена * КурсыВалютС.Курс / КурсыВалютС.Кратность) КАК ПроцентСкидкиС ")+
	" ИЗ
	|	ТаблицаАкции КАК ТаблицаАкции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦенТоваров) КАК ЦеныНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|			ПО ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта
	|		ПО ТаблицаАкции.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютАкции
	|		ПО ТаблицаАкции.Валюта = КурсыВалютАкции.Валюта "+ ?(НетАкцииС,"","
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютАкцииС
	|		ПО ТаблицаАкции.ВалютаС = КурсыВалютАкцииС.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦенТоваровС) КАК ЦеныНоменклатурыС
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютС
	|			ПО ЦеныНоменклатурыС.Валюта = КурсыВалютС.Валюта
	|		ПО ТаблицаАкции.Номенклатура = ЦеныНоменклатурыС.Номенклатура");
	Запрос.УстановитьПараметр("Ссылка",Акция);
	Запрос.УстановитьПараметр("ТипЦен",ПервыйТипЦены);
	Запрос.УстановитьПараметр("ТипЦенТоваров",?(Объект.ЦенаДилераТипЦены = Справочники.ТипыЦен.ПустаяСсылка() ИЛИ  НЕ Объект.ВывестиНаценку,Константы.ТипЦенРозница.Получить(),Объект.ЦенаДилераТипЦены));
	Запрос.УстановитьПараметр("КоэфДилерКурс",КоэфДилерКурс);

	Если НЕ НетАкцииС Тогда
		Запрос.УстановитьПараметр("СсылкаС",АкцияС);
		Запрос.УстановитьПараметр("ТипЦенС",ПервыйТипЦеныС);
		Запрос.УстановитьПараметр("ТипЦенТоваровС",Константы.ТипЦенРозница.Получить());
		Запрос.УстановитьПараметр("КоэфРозницКурс",КоэфРозницКурс);
	КонецЕсли;

	Пакет = Запрос.ВыполнитьПакет();
	Возврат Новый Структура("Шапка, Товары", КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(Пакет[2].Выгрузить()), Пакет[3].Выгрузить());
	
КонецФункции

&НаСервере
Функция ПолучитьИнфуПоОтветвенному(Ответственный)
	
	Структура 	= Новый Структура;
	ФизЛицо 	= Ответственный.ФизЛицо;
	
	Если Не ФизЛицо.Пустая() Тогда
	
		// Вытащим телефон
		
		Телефон = ПерваяИнфаКонтактнойИнформации(ФизЛицо, Справочники.ВидыКонтактнойИнформации.Телефон);
		Если Телефон <> Неопределено Тогда Структура.Вставить("Телефон", Телефон) КонецЕсли;
		
		// Вытащим почту
		
		Почта = ПерваяИнфаКонтактнойИнформации(ФизЛицо, Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочты);
		Если Почта <> Неопределено Тогда Структура.Вставить("Почта", Почта) КонецЕсли; КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ПерваяИнфаКонтактнойИнформации(Ссылка, Вид)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Представление ИЗ РегистрСведений.ПредставлениеКонтактнойИнформации ГДЕ Объект = &Ссылка И Вид В ИЕРАРХИИ(&Вид) УПОРЯДОЧИТЬ ПО ЗначениеПоУмолчанию УБЫВ");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид", 	Вид);
		
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда Возврат Выборка.Представление КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьНаЭлектроннуюПочту(Команда)
	
	ФулИмяФайла = СохранитьВоВременныйФайл();
	
	Если ФулИмяФайла <> Неопределено Тогда
		
		// Добавим получателей
		
		//Кому = Новый Массив;
		//Для Каждого Строка Из ДополнительныеПараметры Цикл 
		//	
		//	Структура = Новый Структура("Партнер", Строка.Партнер);
		//	Если Найти(Строка.Почта, "@") Тогда Структура.Вставить("Почта", Строка.Почта); КонецЕсли; 
		//	
		//	Кому.Добавить(Структура); КонецЦикла;
		
		// Добавим вложения
		
		Вложения = Новый Массив;
		Вложения.Добавить(Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла + "." + ПолучитьРасширениеДляФайлаПоТипу(ФорматФайла), ФулИмяФайла));
		
		// Открем письо для отправки
		
		ОткрытьФорму("Документ.Письмо.Форма.Письмо2", 
				Новый Структура("Кому, Вложения, УдалитьФайлыПослеОтправки", , Вложения)); КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция СохранитьВоВременныйФайл()
	
	ТипФайлаВложения = ТипФайлаТабличногоДокумента[ФорматФайла];
	РасширениеФайлаВложения = ПолучитьРасширениеДляФайлаПоТипу(ФорматФайла);
	
	Если ТипФайлаВложения = Неопределено Тогда ТипФайлаВложения = ТипФайлаТабличногоДокумента.PDF КонецЕсли;
	Если ПустаяСтрока(РасширениеФайлаВложения) Тогда РасширениеФайлаВложения = "pdf" КонецЕсли;
	
	ИмяФайлаСохр 	= ПолучитьИмяФайла(Объект.Акция) + "." + РасширениеФайлаВложения;
	ФулИмяФайла 	= КаталогВременныхФайлов() + ИмяФайлаСохр;
	
	// Сохраним
	
	Попытка
		Результат.Записать(ФулИмяФайла, ТипФайлаВложения);
		Возврат ФулИмяФайла;
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при записи макета в файл
											|" + стрОшибки);КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьИмяФайла(Акция)
	Возврат Акция.Наименование;	
КонецФункции

&НаКлиенте
Функция ПолучитьРасширениеДляФайлаПоТипу(ФорматФайла)
	
	Если ФорматФайла = "XLS97" Тогда
		Возврат "xls";
	Иначе
		Возврат НРег(ФорматФайла); КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ФорматФайла = "" Тогда 
		ФорматФайла = "PDF" 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступность()
	
	Элементы.ЦенаДилераТипЦены.Доступность = Объект.ВывестиНаценку;
	Элементы.ЦенаДилераВалюта.Доступность = Объект.ВывестиНаценку;
	Элементы.РозницаВалюта.Доступность = Объект.ВывестиНаценку;
	
КонецПроцедуры


&НаКлиенте
Процедура ВывестиНаценкуПриИзменении(Элемент)
	ИзменитьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИзменитьДоступность();
КонецПроцедуры


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ВывестиНаценку Тогда
		
		Если Объект.ЦенаДилераТипЦены = Справочники.ТипыЦен.ПустаяСсылка() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Поле ""Тип цены дилера"" не заполнено!";
			Сообщение.Поле  = "ЦенаДилераТипЦены";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Объект.ЦенаДилераВалюта = Справочники.Валюты.ПустаяСсылка() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Поле ""Валюта цены дилера"" не заполнено!";
			Сообщение.Поле  = "ЦенаДилераВалюта";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Объект.РозницаВалюта = Справочники.Валюты.ПустаяСсылка() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Поле ""Валюта розничной цены"" не заполнено!";
			Сообщение.Поле  = "РозницаВалюта";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

