Функция ЗаполнитьЗависимости() Экспорт
	
	// Проверим
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран документ";
		Сообщение.Сообщить();
		Возврат Ложь;
		
	КонецЕсли;
	
	ЗависимыеДокументы.Очистить();
	
	// Определим регистры накопления
	
	ВидОстатки = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки;
	
	МетаДок = Документ.Метаданные();
	МетаДок = Документы.РеализацияТоваров.ПустаяСсылка().Метаданные();
	
	Регистры = Новый Структура;
	
	РегНакопления = Метаданные.РегистрыНакопления;
	
	Для Каждого Регистр Из МетаДок.Движения Цикл
		
		Если РегНакопления.Содержит(Регистр) И Регистр.ВидРегистра = ВидОстатки И Регистр.Имя <> "Взаиморасчеты" Тогда
			
			Ресурсы 	= Новый Массив;
			Измерения 	= Новый Массив;
			
			Для Каждого Измерение Из Регистр.Измерения Цикл 
				Измерения.Добавить(Измерение.имя);
			КонецЦикла;
			Для Каждого Ресурс Из Регистр.Ресурсы Цикл 
				Ресурсы.Добавить(Ресурс.имя);
			КонецЦикла;
			
			Регистры.Вставить(Регистр.Имя, Новый Структура("Измерения, Ресурсы", Измерения, Ресурсы));
			
		КонецЕсли;
	КонецЦикла;
	
	// Соорудим запросприходов
	
	стрФормТЗ 	= "";
	стрОтрДвиж 	= "";
	
	Для Каждого Регистр Из Регистры Цикл
		
		// Формирует запрос по временной таблицу
		
		стрРесурсов 	= "";
		стрПрРесурсов 	= "";
		стрУсловий 		= "";
		стрУсловияМинус = "";
		
		Для Каждого Ресурс Из Регистр.Значение.Ресурсы Цикл 
			
			ИмяРесурса = "ВЫБОР КОГДА ВидДвижения = &ВидДвиженияПриход ТОГДА " + Ресурс + " ИНАЧЕ -" + Ресурс + " КОНЕЦ";
			
			стрРесурсов 	= стрРесурсов + ?(стрРесурсов = "","",",") + ИмяРесурса + " " + Ресурс;
			стрУсловий 		= стрУсловий + ?(стрУсловий = "",""," И ") + ИмяРесурса + " > 0";
			стрПрРесурсов 	= стрПрРесурсов + ?(стрПрРесурсов = "","",",") + "СУММА(ВЫБОР КОГДА Рег.ВидДвижения = &ВидДвиженияРасход ТОГДА -Рег." + Ресурс + " ИНАЧЕ Рег." + Ресурс + " КОНЕЦ) " + Ресурс;
			стрУсловияМинус = стрУсловияМинус + ?(стрУсловияМинус = "",""," И ") + "ВЫБОР КОГДА Рег.ВидДвижения = &ВидДвиженияРасход ТОГДА врТабл." + Ресурс + " - Рег." + Ресурс + " < 0 ИНАЧЕ врТабл." + Ресурс + " + Рег." + Ресурс + " < 0 КОНЕЦ";
			
		КонецЦикла;
		
		стрИзмерений 	= "";
		стрГрИзмерений 	= "";
		стрСоедений		= "";
		стрПрИзмерений 	= "";
		
		Для Каждого Измерение Из Регистр.Значение.Измерения Цикл 
			
			стрИзмерений 	= стрИзмерений + ?(стрИзмерений = "","",",") + Измерение;
			стрГрИзмерений 	= стрГрИзмерений + ?(стрГрИзмерений = "","",",") + "Рег." + Измерение;
			стрПрИзмерений 	= стрПрИзмерений + ?(стрПрИзмерений = "","",",") + "ПРЕДСТАВЛЕНИЕ(Рег." + Измерение + ") " + Измерение;
			стрСоедений 	= стрСоедений + ?(стрСоедений = "",""," И ") + "врТабл." + Измерение + " = Рег." + Измерение;
			
		КонецЦикла;
		
		стрОтрДвиж 	= стрОтрДвиж + ?(стрОтрДвиж = "","","
		|;
		|") + "
		|ВЫБРАТЬ Регистратор ДокСсылка, ВЫБОР КОГДА Рег.Регистратор = &Документ ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ ЭтоДокумент, МАКСИМУМ(""" + Регистр.Ключ + """) ИмяРег, МАКСИМУМ(Рег.Период) Период, " + стрПрИзмерений + "," + стрПрРесурсов + "
		|ИЗ РегистрНакопления." + Регистр.Ключ + " Рег
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	(
		
		|ВЫБРАТЬ " + стрИзмерений + "," + стрПрРесурсов + "
		|ИЗ РегистрНакопления." + Регистр.Ключ + " Рег
		|ГДЕ 	Регистратор = &Документ 
		|СГРУППИРОВАТЬ ПО " + стрИзмерений + "
		|) врТабл
		
		|ПО
		|	" + стрСоедений + "
		|
		|ГДЕ 	Рег.Период >= &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Регистратор, ВЫБОР КОГДА Рег.Регистратор = &Документ ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ, " + стрГрИзмерений + "
		|
		|УПОРЯДОЧИТЬ ПО ИмяРег, Период
		|";
		
	КонецЦикла;
	
	Запрос = Новый Запрос(стрОтрДвиж);
	
	Запрос.УстановитьПараметр("Период", 			Документ.Дата);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", 	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", 	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Документ", 			Документ);
	
	Нарушители = Новый ТаблицаЗначений;
	Нарушители.Колонки.Добавить("Документ");
	Нарушители.Колонки.Добавить("ИмяРег", 	Новый ОписаниеТипов("Строка"));
	Нарушители.Колонки.Добавить("Ресурс", 	Новый ОписаниеТипов("Строка"));
	Нарушители.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
	
	// Заполним результатом
	
	Выборки = Запрос.ВыполнитьПакет();
	Для Каждого Выборка Из Выборки Цикл // ПО РЕГИСТРАМ
		
		Если Не Выборка.Пустой() Тогда
			
			Выгрузка = Выборка.Выгрузить();
			Выгрузка.Индексы.Добавить("ИмяРег, ЭтоДокумент");
			
			СтрокиДокумента = Выгрузка.НайтиСтроки(Новый Структура("ЭтоДокумент", Истина));
			Для Каждого СтрокаДокумента Из СтрокиДокумента Цикл     // ПО ИЗМРЕНИЯМ ДОКУМЕНТА
				
				Нарушители.Очистить();
				
				// Найдем строки движений
				
				стрИзмерений 	= "";
				СтруктураПоиска = Новый Структура("ЭтоДокумент, ИмяРег", Ложь, СтрокаДокумента.ИмяРег);
				Для Каждого Измерение Из Регистры[СтрокаДокумента.ИмяРег].Измерения Цикл СтруктураПоиска.Вставить(Измерение, СтрокаДокумента[Измерение]);стрИзмерений = стрИзмерений + ?(стрИзмерений = "","","; ") + СтрокаДокумента[Измерение];КонецЦикла;
				СтрокиДвижения = Выгрузка.НайтиСтроки(СтруктураПоиска);
				
				// Спишем для каждого ресурса
				
				стОстаток = Новый Структура;
				Для Каждого Ресурс Из Регистры[СтрокаДокумента.ИмяРег].Ресурсы Цикл стОстаток.Вставить(Ресурс, СтрокаДокумента[Ресурс]); КонецЦикла;
				
				// Разнесем строки
				
				Для Каждого СтрокаДвижения Из СтрокиДвижения Цикл // ПО ДВИЖЕНИЯМ ИЗМЕРЕНИЙ
						
					// По каждому ресурсу
						
					стСписываем = Новый Структура;
					
					Для Каждого Ресурс Из Регистры[СтрокаДвижения.ИмяРег].Ресурсы Цикл  // ПО РЕСУРСАМ
						
						// Последующие нас не интересует, только первый минусовой
						Если Не Нарушители.НайтиСтроки(Новый Структура("ИмяРег, Ресурс",СтрокаДвижения.ИмяРег, Ресурс)).Количество() Тогда 
						
							стОстаток[Ресурс] = стОстаток[Ресурс] + СтрокаДвижения[Ресурс];
							Если стОстаток[Ресурс] < 0  Тогда // вот он!
								
								НовСтрока = Нарушители.Добавить();
								НовСтрока.Документ 		= СтрокаДвижения.ДокСсылка;
								НовСтрока.Ресурс 		= Ресурс;
								НовСтрока.Значение 		= стОстаток[Ресурс];
								НовСтрока.ИмяРег 		= СтрокаДвижения.ИмяРег;
								
								Нарушитель = СтрокаДвижения.ДокСсылка;
								Прервать;
								
							КонецЕсли;
						КонецЕсли;
						
						// Спишем на всякий случай из таблицы чтобы потом дважы не списать его
						СтрокаДвижения[Ресурс] = 0;
						
					КонецЦикла;
				КонецЦикла;
				
				// Запоним проблемы
				
				стрРесурсов = "";
				Для Каждого СтрокаНарушителя Из Нарушители Цикл стрРесурсов = стрРесурсов + ?(стрРесурсов = "","","; ") + СтрокаНарушителя.Ресурс +":" + СтрокаНарушителя.Значение;КонецЦикла;
				
				Если стрРесурсов <> "" Тогда
					
					НовСтрока = ЗависимыеДокументы.Добавить();
					НовСтрока.Документ 		= Нарушитель;
					НовСтрока.Измерения 	= стрИзмерений;
					НовСтрока.Ресурсы 		= стрРесурсов;
					НовСтрока.ИмяРегистра 	= СтрокаДокумента.ИмяРег;
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции