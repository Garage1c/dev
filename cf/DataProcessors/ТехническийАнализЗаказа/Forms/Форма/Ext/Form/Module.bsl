
#Область Регистры

Функция ПолучитьСборкиПоЗаказу(Заказ)
	Запрос = Новый запрос;
	Запрос.Текст = "Выбрать ссылка из БизнесПроцесс.СборкаЗаказа ГДЕ Заказ = &Заказ";
	Запрос.УстановитьПараметр("Заказ",Заказ);
	МассивСборок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат МассивСборок;
КонецФункции	
	
Процедура ПолучитьРегистры()
	ТоварыВСборке.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ТоварыВСборкеИТ.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ТоварыСобранные.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ТоварыСобранныеИТ.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ТоварыВРезерве.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ТоварыВРезервеИТ.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ЗаказыНаПеремещение.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	ЗаказыНаПеремещениеИт.Параметры.УстановитьЗначениеПараметра("Заказ",Объект.Заказ);
	
	ТоварыВПути.Параметры.УстановитьЗначениеПараметра("МассивСборок",ПолучитьСборкиПоЗаказу(Объект.Заказ));
	ТоварыВПутиИт.Параметры.УстановитьЗначениеПараметра("МассивСборок",ПолучитьСборкиПоЗаказу(Объект.Заказ));
	
	
	ТоварыВЯчейках.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыВЯчейкахИТ.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	РезервыВЯчейках.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	РезервыВЯчейкахИТ.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыНаСкладах.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыНаСкладахИт.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыВРезервеНом.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыВРезервеНомИт.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыСобранныеНом.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	ТоварыСобранныеНомИт.Параметры.УстановитьЗначениеПараметра("Номенклатура",Объект.Номенклатура);
	
	УстановитьОтбор();

КонецПроцедуры

&НаСервере
Процедура УстановитьЭлементОтбораНоменклатура(ЭлементОтбора)
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Номенклатура;
КонецПроцедуры	

&НаСервере
Процедура УстановитьЭлементОтбораСклад(ЭлементОтбора)
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Склад");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Склад;
КонецПроцедуры	

&НаСервере
Процедура УстановитьЭлементОтбораРазмещение(ЭлементОтбора)
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Размещение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Склад;
КонецПроцедуры	


&НаСервере
Процедура УстановитьОтбор()
	
	ТоварыВСборке.Отбор.Элементы.Очистить();
	ТоварыВСборкеИТ.Отбор.Элементы.Очистить();
	ТоварыСобранные.Отбор.Элементы.Очистить();
	ТоварыСобранныеИТ.Отбор.Элементы.Очистить();
	ТоварыВРезерве.Отбор.Элементы.Очистить();
	ТоварыВРезервеИТ.Отбор.Элементы.Очистить();
	ЗаказыНаПеремещение.Отбор.Элементы.Очистить();
	ЗаказыНаПеремещениеИт.Отбор.Элементы.Очистить();
	ТоварыВПути.Отбор.Элементы.Очистить();
	ТоварыВПутиИт.Отбор.Элементы.Очистить();
	
	ТоварыВЯчейках.Отбор.Элементы.Очистить();
	ТоварыВЯчейкахИт.Отбор.Элементы.Очистить();
	РезервыВЯчейках.Отбор.Элементы.Очистить();
	РезервыВЯчейкахИт.Отбор.Элементы.Очистить();
	ТоварыНаСкладах.Отбор.Элементы.Очистить();
	ТоварыНаСкладахИт.Отбор.Элементы.Очистить();
	ТоварыВРезервеНом.Отбор.Элементы.Очистить();
	ТоварыВРезервеНомИт.Отбор.Элементы.Очистить();
	ТоварыСобранныеНом.Отбор.Элементы.Очистить();
	ТоварыСобранныеНомИт.Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ЭлементОтбора = ТоварыВСборке.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыВСборкеИТ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыСобранные.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыСобранныеИТ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыВРезерве.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыВРезервеИТ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ЗаказыНаПеремещение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ЗаказыНаПеремещениеИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыВПути.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		ЭлементОтбора = ТоварыВПутиИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораНоменклатура(ЭлементОтбора);
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ЭлементОтбора = ТоварыВЯчейках.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = ТоварыВЯчейкахИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = РезервыВЯчейках.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = РезервыВЯчейкахИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = ТоварыНаСкладах.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = ТоварыНаСкладахИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = ТоварыВРезервеНом.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораРазмещение(ЭлементОтбора);
		ЭлементОтбора = ТоварыВРезервеНомИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораРазмещение(ЭлементОтбора);
		ЭлементОтбора = ТоварыСобранныеНом.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
		ЭлементОтбора = ТоварыСобранныеНомИт.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УстановитьЭлементОтбораСклад(ЭлементОтбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



#Область СписокДокументов

&НаСервере
Функция ПолучитьТекстЗапросаПоДокументу(ИмяДока, текстУсловия, текстПолеСклад_О = "Неопределено", текстПолеСклад_П = "Неопределено", Псевдоним = "" )
	
	Псевдоним = ?(Псевдоним = "", ИмяДока, Псевдоним);
	
	Стр = "
	|ВЫБРАТЬ  Дата, """ + Псевдоним + """ Вид, Номер, "+ текстПолеСклад_О+" Склад_О, "+ текстПолеСклад_П+" Склад_П, Ссылка, ПометкаУдаления УД, Проведен ПР
	|ИЗ			Документ." + ИмяДока + "
	|ГДЕ		" + текстУсловия +?(НеОтображатьПомеченныеНаУдаление," И Проведен = Истина", "");
	
	
	Возврат Стр;
	
КонецФункции


&НаСервере
Функция ПолучитьТекстЗапросаПоТаблДокумента(ИмяДока, ИмяТаблицы, текстУсловия)
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ  Ссылка.Дата Дата, """ + ИмяДока + """ Вид, Ссылка.Номер Номер, Неопределено Склад_О, Неопределено Склад_П, Ссылка, Ссылка.ПометкаУдаления УД, Ссылка.Проведен ПР
	|ИЗ			Документ." + ИмяДока + "." + ИмяТаблицы + "
	|ГДЕ		" + текстУсловия +?(НеОтображатьПомеченныеНаУдаление," И Ссылка.Проведен = Истина", "") ;
	
КонецФункции


&НаСервере
Функция ПолучитьТекстЗапросаПоДокументуУниверсальный(ИмяДока, текстУсловия, текстПолеСклад_О = "Неопределено", текстПолеСклад_П = "Неопределено", Псевдоним = "" )
	
	Псевдоним = ?(Псевдоним = "", ИмяДока, Псевдоним);
	
	Стр = "
	|ВЫБРАТЬ  Дата, """ + Псевдоним + """ Вид, Номер, "+ текстПолеСклад_О+" Склад_О, "+ текстПолеСклад_П+" Склад_П, Ссылка, ПометкаУдаления УД, Проведен ПР
	|ИЗ			Документ." + ИмяДока + "
	|ГДЕ		" + текстУсловия+?(НеОтображатьПомеченныеНаУдаление," И Проведен = Истина", "");
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		
		текстПолеСклад_О = ?(текстПолеСклад_О <> "Неопределено","Ссылка." + текстПолеСклад_О,"Неопределено");
		текстПолеСклад_П = ?(текстПолеСклад_П <> "Неопределено","Ссылка." + текстПолеСклад_П,"Неопределено");
		
		Если ИмяДока = "КорректировкаЗаказаПокупателя" или  ИмяДока = "КорректировкаИнтернетЗаказа" тогда
			ИмяТЧ = "РазмещениеТоваров"
		Иначе
			ИмяТЧ = "Товары"
		КонецЕсли;	
		
		Стр = "
		|ВЫБРАТЬ  ссылка.Дата Дата, """ + Псевдоним + """ Вид, ссылка.Номер Номер, "+ текстПолеСклад_О+" Склад_О, "+ текстПолеСклад_П+" Склад_П, Ссылка, ссылка.ПометкаУдаления УД, ссылка.Проведен ПР
		|ИЗ			Документ." + ИмяДока + "."+ИмяТЧ+"
		|ГДЕ		ссылка." + текстУсловия+?(НеОтображатьПомеченныеНаУдаление," И ссылка.Проведен = Истина", "") + " и Номенклатура = &Номенклатура
		|СГРУППИРОВАТЬ ПО Ссылка.Дата,  """ + Псевдоним + """, ссылка.Номер, "+ текстПолеСклад_О+", "+ текстПолеСклад_П+", Ссылка,  ссылка.ПометкаУдаления, ссылка.Проведен
		|";
	КонецЕсли;	
	
	Возврат Стр;
	
КонецФункции


&НаСервере
Функция ПолучитьТекстЗапросаДокументовОплаты()
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Возврат "Выбрать 1,1,1,1,1,1,1,1 ГДЕ Истина =  Ложь";
	КонецЕсли;	
	
	Возврат "
	|ВЫБРАТЬ
	|	Период Дата,
	|	ТИПЗНАЧЕНИЯ(Регистратор) Вид,
	|	Регистратор.Номер Номер,
	|	Неопределено Склад_О,
	|	Неопределено Склад_П,
	|	Регистратор КАК Ссылка,
	|	Регистратор.ПометкаУдаления УД,
	|	Регистратор.Проведен ПР
	|ИЗ
	|	РегистрНакопления.ДолгиПоОтгрузкам
	|ГДЕ
	|  ВидДвижения=Значение(ВидДвиженияНакопления.Расход)  //оплаты
	|и Заказ=&Ссылка
	|"
	
КонецФункции

&НаСервере
Процедура ПолучитьСписокДокументов()
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура",Объект.Номенклатура);
	Запрос.Текст = "
		|ВЫБРАТЬ 	Ссылка
		|ПОМЕСТИТЬ	ТаблицаСборок
		|ИЗ 		БизнесПроцесс.СборкаЗаказа
		|ГДЕ		Заказ = &Ссылка
		|;
		|выбрать ссылка Поместить ТаблицаБП_Перемещение из бизнесПроцесс.ПеремещениеТоваров где Заказчик В(ВЫБРАТЬ Ссылка ИЗ ТаблицаСборок)
		|;
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ЗаказПокупателя", "Ссылка = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ИнтернетЗаказПокупателя", "Ссылка = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ВнутреннийЗаказ", "Ссылка = &Ссылка", "Склад" , "Заказчик") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ВнутреннийЗаказ", "Заказчик В(ВЫБРАТЬ Ссылка ИЗ ТаблицаСборок)", "Склад") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ЗаказНаПеремещение", "Заказ = &Ссылка", "СкладОтправитель", "СкладПолучатель") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("СборкаЗаказа", "Заказ = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ОтменаСборки", "Заказ = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("СборочныйЛист", "Заказ = &Ссылка и ссылка.ТипСборочногоЛиста = Значение(Перечисление.ТипыСборочныхЛистов.ФиксацияЯчеек)", "Склад", ,"СборочныйЛистФиксацияЯчеек") + "
		|ОБЪЕДИНИТЬ все 
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("СборочныйЛист", "Заказ = &Ссылка и ссылка.ТипСборочногоЛиста <> Значение(Перечисление.ТипыСборочныхЛистов.ФиксацияЯчеек)", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоТаблДокумента("СнятиеРезерва", "Товары", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("РедактированиеОтгруженногоЗаказа", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("РеализацияТоваров", "Заказ = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ВозвратОтПокупателя", "ДокументОтгрузки в (выбрать ссылка из Документ.РеализацияТоваров где Заказ = &Ссылка)", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ПередачаТовара", "Заказ = &Ссылка", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ВозвратПереданныхТоваров", "Основание в (выбрать ссылка из документ.ПередачаТовара где Заказ = &Ссылка)", "Склад") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ПриемТоваров", "Процесс в (выбрать ссылка из ТаблицаБП_Перемещение)", "СкладОтправитель", "СкладПолучатель") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ОтгрузкаТоваров", "Процесс в (выбрать ссылка из ТаблицаБП_Перемещение)", "СкладОтправитель", "СкладПолучатель") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("ПеремещениеТоваров", "Основание в (выбрать ссылка из ТаблицаБП_Перемещение)", "СкладОтправитель", "СкладПолучатель") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("КорректировкаЗаказаПокупателя", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("КорректировкаИнтернетЗаказа", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("КорректировкаВнутреннегоЗаказа", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументу("РедактированиеРегистра", "Заказ = &Ссылка") + "
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаПоДокументуУниверсальный("КорректировкаВнутреннегоЗаказа", "Заказ в (выбрать ссылка из документ.ВнутреннийЗаказ где Заказчик в (Выбрать ссылка из ТаблицаСборок))") + " 
		|ОБЪЕДИНИТЬ все
		|" + ПолучитьТекстЗапросаДокументовОплаты() + "
		|УПОРЯДОЧИТЬ ПО Дата
		|";
	
	СписокДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидДокумента(Ссылка)
	Возврат Ссылка.Метаданные().Имя;
КонецФункции

&НаКлиенте
Процедура СписокДокументовПередНачаломИзменения(Элемент, Отказ)
	Ссылка = Элементы.СписокДокументов.ТекущиеДанные.Ссылка;
	ВидДок = ПолучитьВидДокумента(Ссылка);
	Парам = Новый Структура("Ключ", Ссылка);
	ОткрытьФорму("Документ."+ ВидДок +".ФормаОбъекта",Парам);
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ДанныеДокументов

&НаСервере
Процедура ПолучитьЭтапыМаршрутов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура",Объект.Номенклатура);
	ТекстЗапроса = "
	|ВЫБРАТЬ Ссылка ПОМЕСТИТЬ ТаблицаСборок         ИЗ БизнесПроцесс.СборкаЗаказа 		ГДЕ	 Заказ = &Ссылка
	|;
	|выбрать ссылка ПОМЕСТИТЬ ТаблицаБП_Перемещение ИЗ бизнесПроцесс.ПеремещениеТоваров ГДЕ  Заказчик В(ВЫБРАТЬ Ссылка ИЗ ТаблицаСборок)
	|;
	|
	|Выбрать Различные Склад 
	|из
	|(
	|
	|Выбрать Склад из Документ.ЗаказПокупателя ГДЕ Ссылка = &Ссылка
	|
	|объединить все
	|
	|Выбрать Склад из Документ.СборкаЗаказа ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать Склад из Документ.СборочныйЛист ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать СкладОтправитель Склад из Документ.ЗаказНаПеремещение ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать СкладОтправитель Склад из Документ.ОтгрузкаТоваров ГДЕ Ссылка.Процесс в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать СкладПолучатель Склад из Документ.ПриемТоваров ГДЕ Ссылка.Процесс в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать СкладОтправитель из Документ.ПеремещениеТоваров ГДЕ Ссылка.Основание в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен
	|) КАК ВТ
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Документ.ЗаказПокупателя","Документ."+Объект.Заказ.Метаданные().Имя);
	Запрос.Текст = ТекстЗапроса;
	
	мСкладов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
	Элементы.ЭтапМаршрута.СписокВыбора.ЗагрузитьЗначения(мСкладов);
	ЭтапМаршрута = мСкладов[0];
	
КонецПроцедуры	


&НаКлиенте
Процедура ЭтапыМаршрутаПриИзменении(Элемент)
	 ПолучитьДанныеДокументов();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеДокументов()
	
	
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура",Объект.Номенклатура);
	Запрос.УстановитьПараметр("Склад",ЭтапМаршрута);
	ТекстЗапроса = "
	|ВЫБРАТЬ Ссылка ПОМЕСТИТЬ ТаблицаСборок         ИЗ БизнесПроцесс.СборкаЗаказа 		ГДЕ	 Заказ = &Ссылка
	|;
	|выбрать ссылка ПОМЕСТИТЬ ТаблицаБП_Перемещение ИЗ бизнесПроцесс.ПеремещениеТоваров ГДЕ  Заказчик В(ВЫБРАТЬ Ссылка ИЗ ТаблицаСборок)
	|;
	|
	|Выбрать Номенклатура.Артикул Артикул, Номенклатура.Наименование Наименование, Сумма(ЗАК), Сумма(РЕАЛ), Сумма(РЕЗ), Сумма(ЗСБ), Сумма(СБ), Сумма(ЗП), Сумма(ОТГ), Сумма(ПРИ), Сумма(ПЕР), Сумма(ВОЗ) 
	|из 
	|(
	|Выбрать Номенклатура, Количество ЗАК,0 РЕАЛ,0 РЕЗ,0 ЗСБ,0 СБ,0 ЗП,0 ОТГ ,0 ПРИ,0 ПЕР,0 ВОЗ из Документ.ЗаказПокупателя.Товары ГДЕ Ссылка = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать Номенклатура, Количество ЗАК,0,0,0,0,0,0,0,0,0 из Документ.КорректировкаВнутреннегоЗаказа.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,Количество РЕАЛ,0,0,0,0,0,0,0,0 из Документ.РеализацияТоваров.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,Количество РЕАЛ,0,0,0,0,0,0,0,0 из Документ.ПередачаТовара.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен
	|
	|объединить все
	|
	////|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.ЗаказПокупателя.РазмещениеТоваров ГДЕ Ссылка = &Ссылка и Размещение Ссылка Справочник.Склады и Ссылка.Проведен и Размещение = &Склад
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.ЗаказПокупателя.РазмещениеТоваров ГДЕ Ссылка = &Ссылка и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	//|
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.ИнтернетЗаказПокупателя.РазмещениеТоваров ГДЕ Ссылка = &Ссылка  и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	//|
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.ВнутреннийЗаказ.Товары ГДЕ Ссылка = &Ссылка и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	//|
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.КорректировкаЗаказаПокупателя.РазмещениеТоваров ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	//|
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.КорректировкаИнтернетЗаказа.РазмещениеТоваров ГДЕ Ссылка.Заказ = &Ссылка  и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	//|
	//|Выбрать Номенклатура, 0,0,Количество РЕЗ,0,0,0,0,0,0,0 из Документ.КорректировкаВнутреннегоЗаказа.Товары ГДЕ Ссылка = &Ссылка и Ссылка.Проведен и Размещение = &Склад
	//|
	//|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,ВСборке ЗСБ,0,0,0,0,0,0 из Документ.СборкаЗаказа.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен и Ссылка.Склад = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,Количество СБ,0,0,0,0,0 из Документ.СборочныйЛист.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен и Ссылка.Склад = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,Количество ЗП,0,0,0,0 из Документ.ЗаказНаПеремещение.Товары ГДЕ Ссылка.Заказ = &Ссылка и Ссылка.Проведен и Ссылка.СкладОтправитель = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,0,Количество ОТГ,0,0,0 из Документ.ОтгрузкаТоваров.Товары ГДЕ Ссылка.Процесс в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен и Ссылка.СкладОтправитель = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,0,0,Количество ПРИ,0,0 из Документ.ПриемТоваров.Товары ГДЕ Ссылка.Процесс в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен и Ссылка.СкладПолучатель = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,0,0,0, Количество ПЕР,0 из Документ.ПеремещениеТоваров.Товары ГДЕ Ссылка.Основание в (выбрать ссылка из ТаблицаБП_Перемещение) и Ссылка.Проведен и Ссылка.СкладОтправитель = &Склад
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,0,0,0,0,Количество ВОЗ из Документ.ВозвратОтПокупателя.Товары ГДЕ Ссылка.ДокументОтгрузки в (Выбрать ссылка из Документ.РеализацияТоваров ГДЕ Заказ = &Ссылка) и Ссылка.Проведен
	|
	|объединить все
	|
	|Выбрать Номенклатура, 0,0,0,0,0,0,0,0,0,Количество ВОЗ из Документ.ВозвратПереданныхТоваров.Товары ГДЕ Ссылка.Основание в (Выбрать ссылка из Документ.ПередачаТовара ГДЕ Заказ = &Ссылка) и Ссылка.Проведен
	|
	|) вт
	|"
	+?(ЗначениеЗаполнено(Объект.Номенклатура),
	"ГДЕ Номенклатура = &Номенклатура",
	"")+
	"
	|Сгруппировать по Номенклатура.Артикул, Номенклатура.Наименование
	|Упорядочить по Номенклатура.Наименование
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Документ.ЗаказПокупателя.Товары","Документ."+Объект.Заказ.Метаданные().Имя+".Товары");
	Запрос.Текст = ТекстЗапроса;
	ДанныеДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

#КонецОбласти

&НаСервере
Процедура ОбновитьНаСервере()
	
	ПолучитьСписокДокументов();
	
	ПолучитьЭтапыМаршрутов();
	
	ПолучитьДанныеДокументов();
	
	ПолучитьРегистры();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмяМД = Параметры.Заказ.Метаданные().ПолноеИмя();
	Если Лев(ИмяМД,13) = "БизнесПроцесс" Тогда
		Объект.Заказ = Параметры.Заказ.Заказ;
	Иначе
		Объект.Заказ = Параметры.Заказ;
	КонецЕсли;	
	
	ПолучитьРегистры();
КонецПроцедуры


&НаКлиенте
Процедура ЗаказОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если СокрЛП(Текст) = "" Тогда Возврат; КонецЕсли;
	
	мСсылок = ЗаказОкончаниеВводаТекстаНаСервере(Текст);
	
	если мСсылок.Количество() Тогда
		ДанныеВыбора = Новый СписокЗначений();
		ДанныеВыбора.ЗагрузитьЗначения(мСсылок);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЗаказОкончаниеВводаТекстаНаСервере(Текст)
	
	мСсылок = Новый Массив;
	
	Поз = СтрНайти(Текст, "от");
	Если Поз<>0 Тогда
		Текст = Лев(Текст,Поз-1);
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст," ","");
	Текст = СтрЗаменить(Текст,Символы.НПП,"");
	
	
	Поз = СтрНайти(Текст, "Заказ");
	Если Поз<>0 Тогда
		Текст = СтрЗаменить(Текст,"Заказ","");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номер",Текст);
		Запрос.Текст = "Выбрать ссылка из документ.ЗаказПокупателя ГДЕ Номер = &Номер";
		ТЗ = Запрос.Выполнить().Выгрузить();
		мСсылок = ТЗ.ВыгрузитьКолонку("Ссылка");
		Возврат  мСсылок;
		
	КонецЕсли;	
	
	Поз = СтрНайти(Текст, "Интернетзаказпокупателя");
	Если Поз<>0 Тогда
		Текст = СтрЗаменить(Текст,"Интернетзаказпокупателя","");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номер",Текст);
		Запрос.Текст = "Выбрать ссылка из документ.ИнтернетЗаказПокупателя ГДЕ Номер = &Номер";
		ТЗ = Запрос.Выполнить().Выгрузить();
		мСсылок = ТЗ.ВыгрузитьКолонку("Ссылка");
		Возврат  мСсылок;
		
	КонецЕсли;	
	
	Поз = СтрНайти(Текст, "Внутреннийзаказ");
	Если Поз<>0 Тогда
		Текст = СтрЗаменить(Текст,"Внутреннийзаказ","");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номер",Текст);
		Запрос.Текст = "Выбрать ссылка из документ.ВнутреннийЗаказ ГДЕ Номер = &Номер";
		ТЗ = Запрос.Выполнить().Выгрузить();
		мСсылок = ТЗ.ВыгрузитьКолонку("Ссылка");
		Возврат  мСсылок;
		
	КонецЕсли;	
	
	//если тип не указан ищем везде
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номер","%"+Текст+"%");
	Запрос.Текст =" 
	|Выбрать ссылка из документ.ЗаказПокупателя ГДЕ Номер Подобно &Номер
	|Объединить все
	|Выбрать ссылка из документ.ИнтернетЗаказПокупателя ГДЕ Номер Подобно &Номер
	|Объединить все
	|Выбрать ссылка из документ.ВнутреннийЗаказ ГДЕ Номер Подобно &Номер
	|";
	ТЗ = Запрос.Выполнить().Выгрузить();
	мСсылок = ТЗ.ВыгрузитьКолонку("Ссылка");
	
	Возврат  мСсылок;
КонецФункции


&НаКлиенте
Процедура СоздатьКорректировкуТоварыВРезерве(Команда)
	СоздатьКорректировкуТоварыВРезервеНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьКорректировкуТоварыВРезервеНаСервере()
	
	Док = Документы.РедактированиеРегистра.СоздатьДокумент();
	Док.Заказ = Объект.Заказ;
	Док.Дата = текущаяДата();
	Док.Активность = Истина;
	Док.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.УстановитьПараметр("Период", Док.Дата);
	Запрос.Текст = "Выбрать &Период Период, Значение(ВидДвиженияНакопления.Приход) ВидДвижения, ДокументРезерва, Номенклатура, Размещение, - КоличествоОстаток Количество из РегистрНакопления.ТоварыВРезерве.Остатки(,ДокументРезерва = &Заказ "+?(ЗначениеЗаполнено(Объект.Номенклатура)," и Номенклатура = &Номенклатура","")+")";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Док.Движения.ТоварыВРезерве.Загрузить(ТЗ);
	Док.Движения.ТоварыВРезерве.Записать();
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьКорректировкуТоварыВСборке(Команда)
	СоздатьКорректировкуТоварыВСборкеНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьКорректировкуТоварыВСборкеНаСервере()
	
	Док = Документы.РедактированиеРегистра.СоздатьДокумент();
	Док.Заказ = Объект.Заказ;
	Док.Дата = текущаяДата();
	Док.Активность = Истина;
	Док.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.УстановитьПараметр("Период", Док.Дата);
	Запрос.Текст = "Выбрать &Период Период, Значение(ВидДвиженияНакопления.Приход) ВидДвижения,  Заказ, Номенклатура, Склад, Упаковка,  - КоличествоОстаток Количество из РегистрНакопления.ТоварыВСборке.Остатки(,Заказ = &Заказ "+?(ЗначениеЗаполнено(Объект.Номенклатура)," и Номенклатура = &Номенклатура","")+")";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Док.Движения.ТоварыВСборке.Загрузить(ТЗ);
	Док.Движения.ТоварыВСборке.Записать();
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьКорректировкуТоварыСобранные(Команда)
	СоздатьКорректировкуТоварыСобранныеНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьКорректировкуТоварыСобранныеНаСервере()
	
	Док = Документы.РедактированиеРегистра.СоздатьДокумент();
	Док.Заказ = Объект.Заказ;
	Док.Дата = текущаяДата();
	Док.Активность = Истина;
	Док.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.УстановитьПараметр("Период", Док.Дата);
	Запрос.Текст = "Выбрать &Период Период, Значение(ВидДвиженияНакопления.Приход) ВидДвижения,  Заказ, Номенклатура, СборочныйЛист, Склад, Упаковка,  - КоличествоОстаток Количество из РегистрНакопления.ТоварыСобранные.Остатки(,Заказ = &Заказ "+?(ЗначениеЗаполнено(Объект.Номенклатура)," и Номенклатура = &Номенклатура","")+")";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Док.Движения.ТоварыСобранные.Загрузить(ТЗ);
	Док.Движения.ТоварыСобранные.Записать();
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьКорректировкуЗаказыНаПеремещение(Команда)
	СоздатьКорректировкуЗаказыНаПеремещениеНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьКорректировкуЗаказыНаПеремещениеНаСервере()
	
	Док = Документы.РедактированиеРегистра.СоздатьДокумент();
	Док.Заказ = Объект.Заказ;
	Док.Дата = текущаяДата();
	Док.Активность = Истина;
	Док.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.УстановитьПараметр("Период", Док.Дата);
	Запрос.Текст = "Выбрать &Период Период, Значение(ВидДвиженияНакопления.Приход) ВидДвижения, Заказ, Номенклатура, СкладОтправитель, Упаковка, - КоличествоОстаток Количество из РегистрНакопления.ЗаказыНаПеремещения.Остатки(,Заказ = &Заказ "+?(ЗначениеЗаполнено(Объект.Номенклатура)," и Номенклатура = &Номенклатура","")+")";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Док.Движения.ЗаказыНаПеремещения.Загрузить(ТЗ);
	Док.Движения.ЗаказыНаПеремещения.Записать();
		
КонецПроцедуры


&НаКлиенте
Процедура ЗаказИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВРезервеИтПриАктивизацииПоля(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВРезервеИтПриАктивизацииЯчейки(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры



