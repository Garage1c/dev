
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для сч = -6 По 6 Цикл
		новаяДата = ДобавитьМесяц(ТекущаяДата(), сч);
		Элементы.ТекМесяц.СписокВыбора.Добавить(сч, Формат(новаяДата, "ДФ='MMMM yyyy'"));
	КонецЦикла;
КонецПроцедуры

//////////////////////////////////////////////////////////////
// Основные расчеты

&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчитатьНаСервере()
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГрафика Тогда
		
		СформироватьГрафик();
	Иначе
		Доходы.Очистить();
		Итоги.Очистить();
	
		лДеревоРасходов = РеквизитФормыВЗначение("РасходыДерево", Тип("ДеревоЗначений"));
		лДеревоРасходов.Строки.Очистить();
		
		ЗаполнитьДоходы(лДеревоРасходов);
		ЗаполнитьРасходы(лДеревоРасходов);
		ЗаполнитьИтоги();
		
		ЗначениеВРеквизитФормы(лДеревоРасходов, "РасходыДерево");
	КонецЕсли;
КонецПроцедуры

Функция СформироватьГрафик()
	График.Очистить();
	График.ТипДиаграммы = ТипДиаграммы.График;
		
	таблицаРасходов = ПолучитьТаблицуРасходов();
	таблицаДоходов = ПолучитьТаблицуДоходов();
	
	Точки = Новый Соответствие;
	
	///////////////////////////////////////////////////////
	// Заполнить точки
	
	Для каждого лСтрока Из таблицаРасходов Цикл
		значениеТочки = Точки[НачалоМесяца(лСтрока.Период)];
		Если значениеТочки = Неопределено Тогда
			значениеТочки = Новый Структура("Расходы, Доходы", 0, 0);
		КонецЕсли;
		
		значениеТочки.Расходы = значениеТочки.Расходы + лСтрока.Сумма;
		Точки.Вставить(НачалоМесяца(лСтрока.Период), значениеТочки);
	КонецЦикла;
	
	Для каждого лСтрока Из таблицаДоходов Цикл
		Если НЕ ЗначениеЗаполнено(лСтрока.ДокументОплаты) ИЛИ НЕ ЗначениеЗаполнено(лСтрока.Прибыль) Тогда
			Продолжить;
		КонецЕсли;
		
		периодСтроки = НачалоМесяца(лСтрока.ДокументОплаты.Дата);
		значениеТочки = Точки[периодСтроки];
		Если значениеТочки = Неопределено Тогда
			значениеТочки = Новый Структура("Расходы, Доходы", 0, 0);
		КонецЕсли;
		
		значениеТочки.Доходы = значениеТочки.Доходы + лСтрока.Прибыль;
		Точки.Вставить(периодСтроки, значениеТочки);
	КонецЦикла;
	
	///////////////////////////////////////////////////////
	// Вывод диаграммы
	
	Серия1 = График.Серии.Добавить("Расходы");
	Серия2 = График.Серии.Добавить("Доходы");
	
	лТекМесяц = НачалоМесяца(Период.ДатаНачала);
	Пока лТекМесяц <= НачалоМесяца(Период.ДатаОкончания) Цикл
		ЗначенияТочки = Точки[лТекМесяц];
		Если НЕ ЗначенияТочки = Неопределено Тогда
			Точка = График.Точки.Добавить(лТекМесяц);
			Точка.Текст = Формат(лТекМесяц, "ДФ=dd.MM.yy");
			
			График.УстановитьЗначение(Точка, Серия1, ЗначенияТочки.Расходы);
			График.УстановитьЗначение(Точка, Серия2, ЗначенияТочки.Доходы);
		КонецЕсли;
		
		лТекМесяц = ДобавитьМесяц(лТекМесяц, 1);
	КонецЦикла;
КонецФункции // СформироватьГрафик()

Функция ПолучитьРодителя(Родитель, КЭШДерева, лДеревоРасходов)
	Если Родитель = Справочники.СтатьиДвиженияДенежныхСредств.ИнтернетМагазин ИЛИ Родитель.Пустая() Тогда
		Возврат лДеревоРасходов;	
	КонецЕсли;
	СтрокаРодитель = КЭШДерева[Родитель];
	Если СтрокаРодитель = Неопределено Тогда
		СтрокаРодитель = ПолучитьРодителя(Родитель.Родитель, КЭШДерева, лДеревоРасходов);
		новаяСтрока = СтрокаРодитель.Строки.Добавить();
		новаяСтрока.Статья = Родитель;
		КЭШДерева.Вставить(Родитель, новаяСтрока);
		Возврат новаяСтрока;
	Иначе
		Возврат СтрокаРодитель;
	КонецЕсли;
КонецФункции // ПолучитьРодителя()

Функция ОбновитьРодительскийИтог(Ветка)
	Если Ветка.Строки.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого лСтрока Из Ветка.Строки Цикл
		ОбновитьРодительскийИтог(лСтрока);
		Ветка.Сумма = Ветка.Сумма + лСтрока.Сумма;
	КонецЦикла;
КонецФункции // ОбновитьРодительскийИтог()

Функция ЗаполнитьРасходы(лДеревоРасходов)
	ТаблицаРасходов = ПолучитьТаблицуРасходов();
	ТаблицаРасходов.Свернуть("Статья", "Сумма");
	
	КЭШДерева = Новый Соответствие;
	
	Для каждого Выборка Из ТаблицаРасходов Цикл
		Родитель = ПолучитьРодителя(Выборка.Статья.Родитель, КЭШДерева, лДеревоРасходов);
		ЗаполнитьЗначенияСвойств(Родитель.Строки.Добавить(), Выборка);
	КонецЦикла;
	СуммаРасходовИтог = 0;
	
	Для каждого лСтрока Из лДеревоРасходов.Строки Цикл
		ОбновитьРодительскийИтог(лСтрока);
		
		Если лСтрока.Статья = Справочники.СтатьиДвиженияДенежныхСредств.ПремииПоИнтернетМагазниу Тогда
			Премия = лСтрока.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого лСтрока Из лДеревоРасходов.Строки Цикл
		СуммаРасходовИтог = СуммаРасходовИтог + лСтрока.Сумма;
	КонецЦикла;
КонецФункции // ЗаполнитьДоходы()

Функция ЗаполнитьДоходы(лДеревоРасходов)
	Результат = ПолучитьТаблицуДоходов();
	
	строкаРезультата = Результат[Результат.Количество() - 1];
	
	Если НЕ ЗначениеЗаполнено(строкаРезультата.СуммаОплаты) Тогда строкаРезультата.СуммаОплаты = 0; КонецЕсли;
	Если НЕ ЗначениеЗаполнено(строкаРезультата.Прибыль) 	Тогда строкаРезультата.Прибыль = 0; 	КонецЕсли;
	
	новСтрока = Доходы.Добавить(); новСтрока.Статья = "Выручка"; новСтрока.Сумма = строкаРезультата.СуммаОплаты;
	Себестоимость = (строкаРезультата.СуммаОплаты - строкаРезультата.Прибыль);
	новСтрока = лДеревоРасходов.Строки.Добавить(); новСтрока.Статья = "Себестоимость"; новСтрока.Сумма = Себестоимость;
	//новСтрока = Доходы.Добавить(); новСтрока.Статья = "Прибыль по продажам"; новСтрока.Сумма = строкаРезультата.Прибыль;
	
	СуммаДоходовИтог = Доходы.Итог("Сумма");
КонецФункции // ЗаполнитьДоходы()

Функция ЗаполнитьИтоги()
	лДоходы = Доходы.Итог("Сумма");
	лРасходы = Себестоимость;
	новСтрока = Итоги.Добавить(); новСтрока.Результат = "Валовая прибыль"; новСтрока.Сумма = лДоходы - лРасходы;
	
	лРасходы = СуммаРасходовИтог - Премия;
	новСтрока = Итоги.Добавить(); новСтрока.Результат = "Прибыль от продаж (до премирования)"; новСтрока.Сумма = лДоходы - лРасходы;
	
	лРасходы = СуммаРасходовИтог;
	новСтрока = Итоги.Добавить(); новСтрока.Результат = "Прибыль от продаж"; новСтрока.Сумма = лДоходы - лРасходы;
	
	новСтрока = Итоги.Добавить(); новСтрока.Результат = "Рентабельность (%)"; новСтрока.Сумма = Окр((лДоходы - лРасходы) / лДоходы * 100, 2);
КонецФункции // ЗаполнитьИтоги()

//////////////////////////////////////////////////////////////
// Получение основных таблиц

Функция ПолучитьТаблицуРасходов()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//|ВЫБРАТЬ
	//|	Ссылка
	//|ПОМЕСТИТЬ Статьи
	//|ИЗ
	//|	Справочник.СтатьиДвиженияДенежныхСредств
	//|ГДЕ
	//|	Ссылка В ИЕРАРХИИ (Значение(Справочник.СтатьиДвиженияДенежныхСредств.ИнтернетМагазин))
	//|	И ЭтоГруппа
	//|;
	|ВЫБРАТЬ
	|	СтатьяРасхода 	Статья,
	|	СуммаОборот		Сумма,
	|	Валюта			Валюта,
	|	Период			Период
	|ИЗ
	|	РегистрНакопления.ДопРасходыИнтернетМагазина.Обороты(&ДатаНачала, &ДатаОкончания, Запись) КАК ДопРасходыИнтернетМагазинаОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	СтатьяДДС 			Статья,
	|	-1*СуммаУпрОборот 	Сумма,
	|	Null,
	|	Период				Период
	|ИЗ
	|	РегистрНакопления.ОборотыДенежныхСредств.Обороты(&ДатаНачала, &ДатаОкончания, Месяц, 
	//|		СтатьяДДС.Родитель В (Выбрать Ссылка из Статьи)
	|	Отдел В (&Отделы) И НЕ СтатьяДДС.НеЯвляетсяРасходом
	|	) КАК ОборотыДенежныхСредствОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&СтатьяРасходаДоставка	Статья,
	|	СуммаДоставкиРасход		Сумма,
	|	Null					Валюта,
	|	Дата					Период
	|ИЗ
	|	Документ.ИнтернетЗаказПокупателя КАК Док
	|ГДЕ Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала"				, Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"			, Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СтатьяРасходаДоставка"	, СтатьяРасходовДоставки);
	Запрос.УстановитьПараметр("Отделы", Отделы.ВыгрузитьЗначения());
	
	ВалютаУПР = КэшируемыеФункции.ВалютаУправленческогоУчета();
	ТаблицаРасходов = Запрос.Выполнить().Выгрузить();
	
	Для каждого Выборка Из ТаблицаРасходов Цикл
		Если ЗначениеЗаполнено(Выборка.Валюта) И Выборка.Валюта <> ВалютаУПР Тогда
			КурсыВалюты = ОбщиеФункции.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Период);
			КурсыВалютыУПР = ОбщиеФункции.ПолучитьКурсВалюты(ВалютаУПР, Выборка.Период);
			
			Выборка.Сумма = Выборка.Сумма * КурсыВалюты.Курс * КурсыВалютыУПР.Кратность / КурсыВалютыУПР.Курс * КурсыВалюты.Кратность;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаРасходов;
КонецФункции // ПолучитьТаблицуРасходов()

Функция ПолучитьТаблицуДоходов()
	УстановитьПривилегированныйРежим(Истина);
	
	СхемаКомпоновкиДанных = Отчеты.ПрибыльПоИнтернетМагазину.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	//Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	//Если Настройки = Неопределено Тогда Настройки = КомпоновщикОтчета.Настройки КонецЕсли;
	
	//Помещаем в переменную данные о расшифровке данных
	НовыеДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	// Загрузим пользовтельские настройки которые ввыел пользователь совсем недавно
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	//КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(КомпоновщикОтчета.ПользовательскиеНастройки);
	
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "НачалоПериода"		, Период.ДатаНачала);
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "КонецПериода"		, Период.ДатаОкончания);
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "ТипЦенСебестоимость", Константы.ТипЦенСебестоимостьДляРасчетаЗП.Получить());
	КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, "ТипЦенЗакупка"		, Константы.ТипЦенЗакупочныйРуб.Получить());
	
	Для каждого элементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		элементОтбора.Использование = Ложь;
	КонецЦикла;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), НовыеДанныеРасшифровки, , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,НовыеДанныеРасшифровки);
	
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(НовыеДанныеРасшифровки, УникальныйИдентификатор);
	
	//Очищаем поле табличного документа
	Результат = Новый ТаблицаЗначений;
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Результат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
КонецФункции // ПолучитьТаблицуДоходов()

//////////////////////////////////////////////////////////////
// Вспомогательные функции

Функция КомпоновщикНастроекУстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, Значение)
	НекийПараметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
   
	Если НекийПараметр = Неопределено Тогда
		НекийПараметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Добавить();
		НекийПараметр.Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	КонецЕсли;
	
	НекийПараметр.Использование = Истина;
	НекийПараметр.Значение = Значение;
КонецФункции // КомпоновщикНастроекУстановитьПараметр()

&НаКлиенте
Процедура ТекМесяцПриИзменении(Элемент)
	Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	Период.ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), ТекМесяц));
	Период.ДатаОкончания = КонецМесяца(ДобавитьМесяц(ТекущаяДата(), ТекМесяц));
КонецПроцедуры

//////////////////////////////////////////////////////////////
// Расшифровка

#Область Расшифровка

&НаКлиенте
Процедура ИтогиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.ИтогиСумма Тогда
		Сообщить("Скоро по нажатию добавится расшифровка");
	КонецЕсли;
	
	ИтогиВыборНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИтогиВыборНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура РасходыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.РасходыСумма Тогда
		Сообщить("Скоро по нажатию добавится расшифровка");
	КонецЕсли;
	
	РасходыВыборНаСервере();
КонецПроцедуры

&НаСервере
Процедура РасходыВыборНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДоходыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.ДоходыСумма Тогда
		Сообщить("Скоро по нажатию добавится расшифровка");
	КонецЕсли;
	
	ДоходыВыборНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоходыВыборНаСервере()
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////
// Печать

&НаСервере
Процедура ВывестиСтроки(Ветка, ОбластьСтроки, ТабличныйДокумент, Уровень)
	Если Ветка.Строки.Количество() = 0 Тогда                         
		Возврат;
	КонецЕсли;
	
	Отступ = "";
	Развернут = (Уровень = 0);
	
	Для сч = 1 По Уровень Цикл
		Отступ = Отступ + "  ";
	КонецЦикла;
	
	ТабличныйДокумент.НачатьГруппуСтрок(Строка(Новый УникальныйИдентификатор()), Развернут);
	
	Для каждого стр Из Ветка.Строки Цикл
		ОбластьСтроки.Параметры.Статья = Отступ + стр.Статья;
		ОбластьСтроки.Параметры.Сумма = стр.Сумма;
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		ВывестиСтроки(стр, ОбластьСтроки, ТабличныйДокумент, Уровень + 1);
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьГруппуСтрок();
КонецПроцедуры // ВывестиСтроки()

&НаСервере
Функция ПечатьНаСервере()
	Макет = Обработки.РентабельностьИнтернетМагазина.ПолучитьМакет("Макет");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Период = Период;
	
	ТабличныйДокумент.Вывести(Шапка);
	
	ШапкаГруппы = Макет.ПолучитьОбласть("ШапкаГруппа");
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокиИтоги = Макет.ПолучитьОбласть("СтрокаИтоги");
	
	// Шапка Доходы
	ШапкаГруппы.Параметры.ИмяГруппировки 	= "Доходы";
	ШапкаГруппы.Параметры.Сумма 			= СуммаДоходовИтог;
	
	ТабличныйДокумент.Вывести(ШапкаГруппы);
	
	// Строки Доходы
	ТабличныйДокумент.НачатьГруппуСтрок("Доходы", Истина);
	Для каждого стр Из Доходы Цикл
		ОбластьСтроки.Параметры.Заполнить(стр);
		ТабличныйДокумент.Вывести(ОбластьСтроки);
	КонецЦикла;
	ТабличныйДокумент.ЗакончитьГруппуСтрок();
	
	// Шапка Расходы
	ШапкаГруппы.Параметры.ИмяГруппировки 	= "Расходы";
	ШапкаГруппы.Параметры.Сумма 			= СуммаРасходовИтог;
	
	ТабличныйДокумент.Вывести(ШапкаГруппы);
	
	// Строки Расходы
	ДеревоРасходов = РеквизитФормыВЗначение("РасходыДерево", Тип("ДеревоЗначений"));
	
	ВывестиСтроки(ДеревоРасходов, ОбластьСтроки, ТабличныйДокумент, 0);
	
	// Шапка Итоги
	ШапкаГруппы.Параметры.ИмяГруппировки 	= "Итоги";
	ШапкаГруппы.Параметры.Сумма 			= "";
	
	ТабличныйДокумент.Вывести(ШапкаГруппы);
	
	// Строки Итоги
	Для каждого стр Из Итоги Цикл
		ОбластьСтрокиИтоги.Параметры.Заполнить(стр);
		ТабличныйДокумент.Вывести(ОбластьСтрокиИтоги);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	ТабДок = ПечатьНаСервере();
	
	ОткрытьФорму("ОбщаяФорма.ТабличныйДокумент", Новый Структура("ТабличныйДокумент, ИмяФайла, ДополнительныеПараметры", ТабДок, "Рентабельность интернет магазина", Неопределено));
КонецПроцедуры

