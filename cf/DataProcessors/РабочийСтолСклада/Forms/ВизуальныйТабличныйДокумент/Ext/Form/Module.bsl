&НаКлиенте
Перем Отмеченные, мШрифтПростой, мШрифтЖирный;

&НаКлиенте
Перем мОбновлениеПрошло;

&НаКлиенте
перем текТовар;

&НаКлиенте
Процедура УправлениеВидимостьюДоступностью()
	
	мОбновлениеПрошло 		= Истина;
	ВидимостьПеремещений 	= Ложь;
	
	Для Каждого Элемент Из Отмеченные Цикл Если Элемент.Значение <> Неопределено Тогда ВидимостьПеремещений = Истина; Прервать; КонецЕсли; КонецЦикла;
	
	Если Элементы.ГруппаПеремещение.Видимость <> ВидимостьПеремещений Тогда
		Элементы.ГруппаПеремещение.Видимость = ВидимостьПеремещений; КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоординатыШирины(Область)
	
	Массив = Новый Массив;
	Для Ном = 1 По Область.ШиринаТаблицы Цикл Массив.Добавить(Область.Область("C" + Формат(Ном,"ЧГ=")).ШиринаКолонки) КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Процедура СформироватьНаСервере(ФильтрТовары = Неопределено)

	Координаты = Новый Массив;
	
	// Подготовим области
	
	Макет = Обработки.РабочийСтолСклада.ПолучитьМакет("Стол");
	
	ОбластьРазделитель 			= Макет.ПолучитьОбласть("Разделитель");
	
	ОбластьСтрока 				= Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаПусто 			= Макет.ПолучитьОбласть("СтрокаПусто");
	ОбластьПустаяСтрока			= Макет.ПолучитьОбласть("ПустаяСтрока");
	
	ОбластьЯчейкаШапка 			= Макет.ПолучитьОбласть("ЯчейкаШапка");
	ОбластьЯчейкаНаименование 	= Макет.ПолучитьОбласть("ЯчейкаНаименование");
	ОбластьЯчейкаПустая 		= Макет.ПолучитьОбласть("ЯчейкаПустая");
	ОбластьЯчейкаПодвал 		= Макет.ПолучитьОбласть("ЯчейкаПодвал");
	
	ОбластьЯрусПервый 			= Макет.ПолучитьОбласть("ЯрусПервый");
	ОбластьЯрусПродолжение 		= Макет.ПолучитьОбласть("ЯрусПродолжение");
	ОбластьЯрусЗавершение		= Макет.ПолучитьОбласть("ЯрусЗавершение");
	
	ОбластьСекцияШапка			= Макет.ПолучитьОбласть("СекцияШапка");
	ОбластьСекцияНаименование	= Макет.ПолучитьОбласть("СекцияНаименование");
	ОбластьСекцияПустая			= Макет.ПолучитьОбласть("СекцияПустая");
	ОбластьСекцияПодвал			= Макет.ПолучитьОбласть("СекцияПодвал");
	
	// Поготовим запрос
	
	Запрос = Новый Запрос(СтрШаблон("
	|ВЫБРАТЬ
	|	Яч.Секция,
	|	ВЫБОР КОГДА ПОДСТРОКА(Секция, 3, 1) = """" ТОГДА ВЫБОР КОГДА ПОДСТРОКА(Секция, 2, 1) = """" ТОГДА ""00"" + Секция ИНАЧЕ ""0"" + Секция КОНЕЦ ИНАЧЕ Секция КОНЕЦ СекцияПорядок,
	|	Яч.Ярус,
	|	Яч.Поддон,
	|	Яч.Ссылка Ячейка,
	|	Рег.Номенклатура,
	|	ВЫБОР КОГДА Рег.Номенклатура.Артикул = """" ТОГДА ""_"" + Рег.Номенклатура.Наименование ИНАЧЕ Рег.Номенклатура.Артикул КОНЕЦ Артикул,
	|	Рег.КоличествоОстаток Количество,
	|	1 ПозицийНоменклатуры
	|ИЗ
	|	Справочник.Ячейки Яч
	|
	|%1 СОЕДИНЕНИЕ 	РегистрНакопления.ТоварыВЯчейках.Остатки(,%2) Рег
	|ПО 				Яч.Ссылка = Рег.Ячейка
	|
	|ГДЕ Яч.Владелец = &Склад %3 %4
	|
	|УПОРЯДОЧИТЬ ПО СекцияПорядок, Ярус Убыв, Поддон, Артикул, Наименование
	|ИТОГИ МАКСИМУМ(Ячейка), МАКСИМУМ(Ярус), КОЛИЧЕСТВО(ПозицийНоменклатуры) ПозицийНоменклатуры ПО
	|	Секция, Ярус, Поддон
	|", 
	?(ФильтрТовары = Неопределено, "ЛЕВОЕ", "ВНУТРЕННЕЕ"),
	?(ФильтрТовары = Неопределено, "", "Номенклатура В(&Номенклатура)"),
	?(ФильтрТовары = Неопределено, "И Яч.Проход = """ + Проход + """", ""),
	?(ФильтрТовары = Неопределено И Не ПустаяСтрока(Секция), "И Яч.Секция = """ + Секция + """", "")));
	
	Запрос.УстановитьПараметр("Склад", 			объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура", 	ФильтрТовары);
	
	//Вывод.Очистить();
	Вывод = Новый ТабличныйДокумент;
	//ИтогПравыхЧислаЯчеек = 0;
	
	ВыборкаСекция = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаСекция.Следующий() Цикл
		
		ПравыхЯчеек = 0;
		
		// Подготовим таблицу яруса
		макЧислоПоддонов = 0;
		ИндЯрус = 0;
		ТаблицаЯруса = Новый ТабличныйДокумент;
		
		ВыборкаЯрус = ВыборкаСекция.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока ВыборкаЯрус.Следующий() Цикл ИндЯрус = ИндЯрус + 1;
			
			// Создадим таблицу ячеек
			
			ТаблицаЯчеек = Новый ТабличныйДокумент;
			
			// Определим сколько максимальных позиций
			
			МаксПозиций = 0;
			Выборка 	= ВыборкаЯрус.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока Выборка.Следующий() Цикл МаксПозиций = Макс(МаксПозиций, Выборка.ПозицийНоменклатуры); КонецЦикла;
			
			// переберем поддоны
			
			ВыборкаПоддон 		= ВыборкаЯрус.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			макЧислоПоддонов 	= Макс(макЧислоПоддонов, ВыборкаПоддон.Количество());
			
			// Выведем линию яруса
			
			КолЯчеек = ВыборкаПоддон.Количество();
			Ном = 0;
			//Для Ном = 1 По КолЯчеек Цикл
			Пока ВыборкаПоддон.Следующий() Цикл Ном = Ном + 1;
				
				Структура = Новый Структура("Действие, Ячейка", "ОтметитьЯчейку", ВыборкаПоддон.Ячейка);
				
				Если Ном = 1 Тогда 
					ОбластьЯрусПервый.Параметры.Ярус = ВыборкаЯрус.Ярус; 
					ОбластьЯрусПервый.Область("R1C4").Расшифровка = Структура;
					ТаблицаЯруса.Вывести(ОбластьЯрусПервый); 
				Иначе 
					ОбластьЯрусПродолжение.Область("R1C4").Расшифровка = Структура;
					ТаблицаЯруса.Присоединить(ОбластьЯрусПродолжение); КонецЕсли;
				
				ТаблицаЯруса.Присоединить(ОбластьЯрусЗавершение); КонецЦикла;
			
			// Перемберем ячейки
			
			ВыборкаПоддон = ВыборкаЯрус.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока ВыборкаПоддон.Следующий() Цикл
				
				// Подготовим таблицу строк
				
				ТаблицаСписокТоваров = Новый ТабличныйДокумент;
				ТаблицаСписокТоваров.Вывести(ОбластьПустаяСтрока);
				
				Выборка = ВыборкаПоддон.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					// Выведем товар
					
					Если Выборка.Номенклатура = null Тогда
						ТаблицаСписокТоваров.Вывести(ОбластьСтрокаПусто);
					Иначе
						Структура = Новый Структура("Действие, Ячейка, Номенклатура, Количество, Идентификатор", "Отметка", Выборка.Ячейка, Выборка.Номенклатура, Выборка.Количество, XMLСтрока(Выборка.Ячейка) + XMLСтрока(Выборка.Номенклатура));
						ОбластьСтрока.Область("R1C1").Расшифровка = Структура;
						
						Структура = Новый Структура("Действие, Номенклатура", "Просмотр", Выборка.Номенклатура);
						ОбластьСтрока.Область("R1C2").Расшифровка = Структура;
						ОбластьСтрока.Область("R1C3").Расшифровка = Структура;
						
						ОбластьСтрока.Параметры.Заполнить(Выборка);
						ТаблицаСписокТоваров.Вывести(ОбластьСтрока); КонецЕсли; КонецЦикла;
				
				// Сформируем вертикальную длинную палку ячейку
				
				//ТаблицаЯчейка 		= Новый ТабличныйДокумент; // объединяющая
				ТаблицаСтолбЯчейка 	= Новый ТабличныйДокумент;				
				ТаблицаСтолбЯчейка.Вывести(ОбластьЯчейкаШапка); ОбластьЯчейкаНаименование.Параметры.Ячейка = ВыборкаПоддон.Ячейка;
				ТаблицаСтолбЯчейка.Вывести(ОбластьЯчейкаНаименование);
				Для Ном = 1 По МаксПозиций - 3 Цикл ТаблицаСтолбЯчейка.Вывести(ОбластьЯчейкаПустая); КонецЦикла;
				ТаблицаСтолбЯчейка.Вывести(ОбластьЯчейкаПодвал);
				
				// Добавим к общей таблице ячеек
				
				ТаблицаЯчеек.Присоединить(ТаблицаСтолбЯчейка); 
				ТаблицаЯчеек.Присоединить(ТаблицаСписокТоваров);КонецЦикла;
				
			ТаблицаЯруса.Вывести(ТаблицаЯчеек); КонецЦикла;
		
		// Сформируем кирпичную стену секции
		
		ТаблицаКирпСтена = Новый ТабличныйДокумент;
		
		ВысотаСекции = ТаблицаЯруса.ВысотаТаблицы;
		ТаблицаКирпСтена.Вывести(ОбластьСекцияШапка);
		ОбластьСекцияНаименование.Параметры.Секция = ВыборкаСекция.Секция;
		ТаблицаКирпСтена.Вывести(ОбластьСекцияНаименование);
		Для Ном = 1 По ВысотаСекции - 5 Цикл ТаблицаКирпСтена.Вывести(ОбластьСекцияПустая); КонецЦикла;
		ТаблицаКирпСтена.Вывести(ОбластьСекцияПодвал);
		
		// Добавим к общей главной таблице
		
		Вывод.Присоединить(ТаблицаКирпСтена);
		Вывод.Присоединить(ТаблицаЯруса);
		
		// Запомним координаты
		
		КонвертацияТипов.ДобавитьМассивВКонецМассива(Координаты, ПолучитьКоординатыШирины(ОбластьСекцияШапка));
		Для Ном = 1 По макЧислоПоддонов Цикл КонвертацияТипов.ДобавитьМассивВКонецМассива(Координаты, ПолучитьКоординатыШирины(ОбластьЯрусПродолжение)); КонвертацияТипов.ДобавитьМассивВКонецМассива(Координаты, ПолучитьКоординатыШирины(ОбластьЯрусЗавершение)); КонецЦикла; КонецЦикла;
	
	// Выставим нужную ширину
	
	Ном = 0;
	Для Каждого Координата Из Координаты Цикл Ном = Ном + 1; Вывод.Область("C" + Формат(Ном,"ЧГ=")).ШиринаКолонки = Координата; КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	Отмеченные = Новый Соответствие;
	СформироватьНаСервере();
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроходы()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Проход ИЗ Справочник.Ячейки ГДЕ НЕ ПометкаУдаления УПОРЯДОЧИТЬ ПО Проход");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Проход");
	
КонецФункции
&НаКлиенте
Процедура ПроходНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элементы.Проход.СписокВыбора.ЗагрузитьЗначения(ПолучитьПроходы());
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСекции()
	
	Если ПустаяСтрока(Проход) Тогда Возврат Новый Массив КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Секция,  
	|		ВЫБОР КОГДА ПОДСТРОКА(Секция, 3, 1) = """" ТОГДА ВЫБОР КОГДА ПОДСТРОКА(Секция, 2, 1) = """" ТОГДА ""00"" + Секция ИНАЧЕ ""0"" + Секция КОНЕЦ ИНАЧЕ Секция КОНЕЦ СекцияПорядок
	|ИЗ 
	|	Справочник.Ячейки ГДЕ НЕ ПометкаУдаления И Проход = """ + Проход + """ УПОРЯДОЧИТЬ ПО СекцияПорядок");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Секция");
	
КонецФункции
&НаКлиенте
Процедура СекцияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элементы.Секция.СписокВыбора.ЗагрузитьЗначения(ПолучитьСекции());
	
КонецПроцедуры

&НаКлиенте
Процедура СекцияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Секция) Тогда
		Отмеченные = Новый Соответствие;
		СформироватьНаСервере(); 
		УправлениеВидимостьюДоступностью(); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроходПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Секция) Тогда
	
		Секции = ПолучитьСекции();
		Если Секции.Найти(Секция) = Неопределено Тогда
			
			Секция = "";
			
		Иначе
			Отмеченные = Новый Соответствие;
			СформироватьНаСервере(); 
			УправлениеВидимостьюДоступностью(); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьОтметкуТовараВизуально(Строка, Колонка)
	
	текОбласть 	= Вывод.Область("R" + Формат(Строка, "ЧГ=") + "C" + Формат(Колонка, "ЧГ="));
	Структура 	= текОбласть.Расшифровка;
	
	// Проверим какой этот товар
				
	Идентификатор = Структура.Идентификатор;
	Отмеченный = Отмеченные[Идентификатор] <> Неопределено;
	Отмеченные.Вставить(Идентификатор, ?(Отмеченный, Неопределено, Структура));
				
	//  Как будет выглядеть
				
	Если Отмеченный Тогда
		Шрифт = мШрифтПростой;
		Текст = "[  ]";
	Иначе
		Шрифт = мШрифтЖирный;
		Текст = "[X]"; КонецЕсли;
				
	// Изменим состояние визуально
				
	текОбласть.Текст = Текст;
	Для Ном = 0 По 2 Цикл Вывод.Область("R" + Формат(Строка, "ЧГ=") + "C" + Формат(Колонка + Ном, "ЧГ=")).Шрифт = Шрифт; КонецЦикла;
	
КонецПроцедуры
&НаКлиенте
Процедура ВыводПриАктивизацииОбласти(Элемент)
	
	Если мОбновлениеПрошло <> Истина Тогда
	
		текОбласть 	= Элементы.Вывод.ТекущаяОбласть;
		Имя 		= текОбласть.Имя;
		
		стЛево 	= текОбласть.Лево;
		стНиз 	= текОбласть.Низ;
		
		Если Не Найти(Имя, ":") И ТипЗнч(текОбласть.Расшифровка) = Тип("Структура") Тогда
				
			Структура = текОбласть.Расшифровка;
				
			Если Структура.Действие = "Отметка" Тогда
				
				ИнвертироватьОтметкуТовараВизуально(текОбласть.Низ, текОбласть.Лево);
				УправлениеВидимостьюДоступностью();
				
			ИначеЕсли Структура.Действие = "ОтметитьЯчейку" Тогда
				
				// спустимся вниз и всех отметим
				текСтрока 	= текОбласть.Низ + 2;
				текКолонка 	= текОбласть.Лево;
				Пока Истина Цикл текСтрока = текСтрока + 1;
					ОбластьТовара = Вывод.Область("R" + Формат(текСтрока, "ЧГ=") + "C" + Формат(текКолонка, "ЧГ="));
					Если ТипЗнч(ОбластьТовара.Расшифровка) = Тип("Структура") И  ОбластьТовара.Расшифровка.Действие = "Отметка" Тогда
						ИнвертироватьОтметкуТовараВизуально(текСтрока, текКолонка);
					Иначе Прервать; КонецЕсли; КонецЦикла;
					
				УправлениеВидимостьюДоступностью();
				
			КонецЕсли;
			
			текТовар = ПолучитьТекущийТовар();
			ОбработатьОтображениеИнформацииОТоваре(текТовар);КонецЕсли;КонецЕсли;
	
	мОбновлениеПрошло = Ложь;
	
КонецПроцедуры

// ТИПОВЫЕ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
	// Выполним сразу если параметры были переданы (фильтр товаров)
	
	Если Не Параметры.Склад.Пустая() Тогда Объект.Склад = Параметры.Склад КонецЕсли;
	
	Если ТипЗнч(Параметры.Номенклатура) = Тип("Массив") Тогда
		СформироватьНаСервере(Параметры.Номенклатура); КонецЕсли;
	
КонецПроцедуры

// ИНФОРМАЦИЯ О ТОВАРЕ

&НаСервере
Функция ПолучитьТекущийТовар()
	
	текОбласть 		= Элементы.Вывод.ТекущаяОбласть;
	текНоменклатура = Неопределено;
	
	Если 	текОбласть <> Неопределено И
			ТипЗнч(текОбласть.Расшифровка) = Тип("Структура") И
			текОбласть.Расшифровка.Свойство("Номенклатура", текНоменклатура) Тогда
			
		Возврат текНоменклатура; КонецЕсли;
	
КонецФункции
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре(текНоменклатура = Неопределено) Экспорт
	
	Если текНоменклатура = Неопределено Тогда текНоменклатура = ПолучитьТекущийТовар() КонецЕсли;
	
	Если текНоменклатура <> Неопределено Тогда
		
		Массив = Новый Массив;
		Массив.Добавить(текНоменклатура);
		РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма,,,Массив); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка,,текТовар);
	
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма,,,ПолучитьТекущийТовар());
КонецПроцедуры

&НаКлиенте
Процедура ВыводОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Расшифровка.Действие = "Просмотр" Тогда
		ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", Новый Структура("Ключ", Расшифровка.Номенклатура)); КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Перемещения(Команда)
	
	ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаСписка",, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьТоварыСтрокой()
	
	Объект.Склад = Буфер[0].Ячейка.Владелец;
	
	товТЗ = Буфер.Выгрузить();
	товТЗ.Колонки.Ячейка.Имя = "ЯчейкаОтправитель";
	товТЗ.ЗаполнитьЗначения(ЯейкаПеремещения, "ЯчейкаПолучатель");
	
	Возврат ЗначениеВСтрокуВнутр(товТЗ);
	
КонецФункции
&НаКлиенте
Процедура Переместить(Команда)
	
	// Подготовим товары к заброске
	
	Буфер.Очистить();
	Для Каждого Элемент Из Отмеченные Цикл Если Элемент.Значение <> Неопределено Тогда ЗаполнитьЗначенияСвойств(Буфер.Добавить(), Элемент.Значение); КонецЕсли; КонецЦикла;
	
	// Передадим в документ
	
	ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаОбъекта", 
					Новый Структура("СкладОтправитель, СкладПолучатель, ТоварыСтрокой", 
								Объект.Склад, Объект.Склад, ПодготовитьТоварыСтрокой()));
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийСтол(Команда)
	
	ОткрытьФорму("Обработка.РабочийСтолСклада.Форма.Форма",,ЭтаФорма);
	
КонецПроцедуры

Отмеченные = Новый Соответствие;
мШрифтПростой 	= Новый Шрифт(,, Ложь);
мШрифтЖирный 	= Новый Шрифт(,, Истина);