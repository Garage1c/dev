#Область Подбор

//Подбор товаров
&НаСервере
Функция ПоместитьТоварыВХранилище(ТолькоСтруктуру = Истина) 
	
	Таб = Объект.Товары.Выгрузить();
	Если ТолькоСтруктуру ТОгда
		Таб.Очистить();
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Таб, 
					УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПодборВыполнить(Кнопка = Неопределено, ДополнительныеПараметрыПодбора = Неопределено)
	
	ИмяТабличнойЧасти = "Номенклатура";
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	ПараметрыПодбора = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);

 	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Товары);

	ПараметрыПодбора.Вставить("СтруктураКолонокТовары", СтруктураКолонокТовары);
	ПараметрыПодбора.Вставить("ВидыЗапросов", 	"СписокНоменклатуры");
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыПодбора,Элементы.Товары);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТаблицуИзВремХанилища(АдресВрХранилища)
	
	Таблица = ПолучитьИзВременногоХранилища(АдресВрХранилища);
	Таблица.Свернуть("Номенклатура");
	НоваяТаблица = Новый ТаблицаЗначений();
	НоваяТаблица.Колонки.Добавить("Номенклатура");
	
	Для Каждого Строка Из Таблица Цикл
		
		Товар = Строка.Номенклатура;
		Если ПолучитьКоличествоПовторов(Товар) = 0 Тогда
			
			НоваяСтрока = НоваяТаблица.Добавить();
			НоваяСтрока.Номенклатура = Товар;
			
		КонецЕсли;
		
	КонецЦикла;
	
	КонвертацияТипов.ДобавитьТаблицуКДругойТаблице(Объект.Товары, НоваяТаблица);	
	
	//ЗагрузитьАналоги(НоваяТаблица.ВыгрузитьКолонку("Номенклатура"));
	
	//Отбор = Новый Структура();
	//Отбор.Вставить("Номенклатура",Неопределено);
	//Элементы.Аналоги.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
КонецПроцедуры

//Подбор аналогов

Функция ПоместитьАналогиВХранилище() 
	
	Таб = Объект.Аналоги.Выгрузить();
	Таб.Очистить();
	Возврат ПоместитьВоВременноеХранилище(Таб, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ПодборАналогов(Команда)
	
	Если ТекущаяНоменклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
		Возврат
	КонецЕсли;
	
	ИмяТабличнойЧасти = "Номенклатура";
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	ПараметрыПодбора = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);

 	СтруктураКолонокТовары = ФункцииФормДокументов.ПолучитьСтруктуруКолонокТовары(Элементы.Аналоги);

	ПараметрыПодбора.Вставить("СтруктураКолонокТовары", СтруктураКолонокТовары);
	ПараметрыПодбора.Вставить("ВидыЗапросов", 	"СписокНоменклатуры");
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыПодбора,Элементы.Аналоги);
	ЕстьИзменения = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТаблицуАналоговИзВремХанилища(АдресВрХранилища)
	
	Таблица = ПолучитьИзВременногоХранилища(АдресВрХранилища);
	Таблица.Свернуть("Номенклатура");
	НоваяТаблица = Новый ТаблицаЗначений();
	НоваяТаблица.Колонки.Добавить("Номенклатура");
	НоваяТаблица.Колонки.Добавить("Аналог");
	НоваяТаблица.Колонки.Добавить("Производитель");

	
	Для Каждого Строка Из Таблица Цикл
		
		Товар = Строка.Номенклатура;
		Если Товар <> ТекущаяНоменклатура И ПолучитьКоличествоПовторовАналогов(Товар) = 0 Тогда
			
			НоваяСтрока = НоваяТаблица.Добавить();
			НоваяСтрока.Аналог = Товар;
			НоваяСтрока.Номенклатура = ТекущаяНоменклатура;
			НоваяСтрока.Производитель = Товар.Производитель;
			
		КонецЕсли;
		
	КонецЦикла;
	
	КонвертацияТипов.ДобавитьТаблицуКДругойТаблице(Объект.Аналоги, НоваяТаблица);	
	
КонецПроцедуры

#КонецОбласти

#Область ИнформацияОТоваре

Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Аналоги", "Объект.Аналоги",, "Аналог");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Аналоги", "Объект.Аналоги");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Аналоги", "Объект.Аналоги");
КонецПроцедуры


#КонецОбласти

&НаСервере
Функция ПолучитьКоличествоПовторов(Номенклатура)
	
	Возврат Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура)).Количество(); 
	
КонецФункции

&НаСервере
Функция ПолучитьКоличествоПовторовАналогов(Аналог)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Аналог",Аналог);
	Возврат Объект.Аналоги.НайтиСтроки(Отбор).Количество(); 
	
КонецФункции


&НаКлиенте
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ЗагрузитьТаблицуИзВремХанилища(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	Если ЕстьИзменения Тогда
		СохранитьНаСервере();
		ЕстьИзменения = Ложь;
	КонецЕсли;
	
	ОбновитьАналоги();
			
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьАналоги(Товар)
	
	//Объект.Аналоги.Очистить();
	Если Товар = Справочники.Номенклатура.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Аналоги.Номенклатура2 КАК Аналог,
		|	Аналоги.Основной
		|ИЗ
		|	РегистрСведений.АналогиНоменклатуры КАК Аналоги
		|ГДЕ
		|	Аналоги.Номенклатура1 = &Товар
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Аналоги.Номенклатура1,
		|	Аналоги.Основной
		|ИЗ
		|	РегистрСведений.АналогиНоменклатуры КАК Аналоги
		|ГДЕ
		|	Аналоги.Номенклатура2 = &Товар";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	                                                            
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Аналоги.Добавить();
		НоваяСтрока.Аналог = Выборка.Аналог;
		НоваяСтрока.Основной = Выборка.Основной;
		НоваяСтрока.Производитель = Выборка.Аналог.Производитель;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАналоги()
	
	Объект.Аналоги.Очистить();
	
	Если Элементы.Товары.ТекущиеДанные <> Неопределено  Тогда
		
		Если Элементы.Товары.ТекущиеДанные.Номенклатура = ТекущаяНоменклатура Тогда
			Возврат
		КонецЕсли;
		
		ТекущаяНоменклатура = Элементы.Товары.ТекущиеДанные.Номенклатура;
		
		Если ТекущаяНоменклатура <> ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
			ЗагрузитьАналоги(ТекущаяНоменклатура);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	
	НачатьТранзакцию();
	
	НаборЗаписей = РегистрыСведений.АналогиНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура2.Установить(ТекущаяНоменклатура);
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.АналогиНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура1.Установить(ТекущаяНоменклатура);
	НаборЗаписей.Записать();
	
	Для Каждого СтрокаАналог Из Объект.Аналоги Цикл
		
		СтрокаЗаписи = НаборЗаписей.Добавить();
		СтрокаЗаписи.Номенклатура1 = ТекущаяНоменклатура;
		СтрокаЗаписи.Номенклатура2 = СтрокаАналог.Аналог;
		СтрокаЗаписи.Основной = СтрокаАналог.Основной;
		
	КонецЦикла; 
	
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьАналогНаСервере(Товар, Аналог)
	
	// Сперва найдем
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	ИСТИНА 
	|ИЗ 		РегистрСведений.АналогиНоменклатуры
	|ГДЕ 	Номенклатура1 = &Ссылка И Номенклатура2 = &Аналог ИЛИ
	|		Номенклатура2 = &Ссылка И Номенклатура1 = &Аналог
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Товар);
	Запрос.УстановитьПараметр("Аналог", Аналог);
	
	Выполнение = Запрос.Выполнить();
	
	Если Выполнение.Пустой() Тогда
		
		Запись = РегистрыСведений.АналогиНоменклатуры.СоздатьМенеджерЗаписи();
		Запись.Номенклатура1 = Товар;
		Запись.Номенклатура2 = Аналог;
		
		Попытка
			Запись.Записать();
		Исключение
			стрОшибки = ОписаниеОшибки();
			ОбщиеФункции.СообщитьТекст("Ошибка при записи аналога
											|" + стрОшибки);
		КонецПопытки;
										
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(НСтр("ru = 'Сохранить аналоги выбранных товаров?'"), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;

	СохранитьНаСервере();
	ОбщиеФункции.СообщитьТекст("Аналоги номенклатуры записаны.");
	
КонецПроцедуры

&НаКлиенте
Процедура АналогиАналогОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//Элементы.Аналоги.ТекущиеДанные.Номенклатура = Элементы.Товары.ТекущиеДанные.Номенклатура;

КонецПроцедуры

&НаКлиенте
Процедура АналогиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено ИЛИ Элементы.Товары.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	//Для Каждого Строка Из Элементы.Товары.ВыделенныеСтроки Цикл
	//	УдалитьАналоги(Объект.Товары.НайтиПоИдентификатору(Строка).Номенклатура);
	//КонецЦикла;

	
КонецПроцедуры

&НаСервере
Процедура УдалитьАналоги(Номенклатура) 
	
	//Отбор = Новый Структура("Номенклатура",Номенклатура);      
	//СписокСтрок = Объект.Аналоги.НайтиСтроки(Отбор);      
	//Для Каждого Строка Из СписокСтрок Цикл      
	//	Объект.Аналоги.Удалить(Строка);      
	//КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(НСтр("ru = 'Удалить все товары с формы?'"), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	ТекущаяНоменклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	Объект.Аналоги.Очистить();
	Объект.Товары.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Товар = Элемент.ТекущиеДанные.Номенклатура;
	
	Если ПолучитьКоличествоПовторов(Товар)>1 ТОгда
		Отказ = Истина;
		ОбщиеФункции.СообщитьТекст("Товар уже в списке!");	
	//ИначеЕсли НЕ ОтменаРедактирования Тогда 
	//    Товар = Элемент.ТекущиеДанные.Номенклатура;
		//УдалитьАналоги(ТекущаяНоменклатура);
		
		//ЗагрузитьАналоги(Товар);
		//ТекущаяНоменклатура	= Товар;
		//ОбновитьАналоги();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЕстьИзменения = Ложь;	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);

КонецПроцедуры


&НаКлиенте
Процедура АналогиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение<>Неопределено Тогда
		ЗагрузитьТаблицуАналоговИзВремХанилища(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновнойАналог(Команда)
	
	ТекущиеДанные = Элементы.Аналоги.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Производитель) Тогда 
		
		ОбщиеФункции.СообщитьТекст("Не указан производитель для выбираемой в качестве основного аналога номенклатуры");
		
	ИначеЕсли НЕ ТекущиеДанные.Основной Тогда // если текущий аналог еще не основной
		СделатьТекущийАналогОсновным();
		ЕстьИзменения = Истина;
	Иначе
		ТекущиеДанные.Основной = Ложь;
		ЕстьИзменения = Истина;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура СделатьТекущийАналогОсновным()
	
	ТекущиеДанные = Элементы.Аналоги.ТекущиеДанные;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Производитель",ТекущиеДанные.Производитель);
	Выборка = Объект.Аналоги.НайтиСтроки(Отбор);
	
	Для Каждого Строка Из Выборка Цикл
		Строка.Основной = Ложь;	
	КонецЦикла;
	
	ТекущиеДанные.Основной = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура АналогиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Элементы.Аналоги.ТекущиеДанные.Производитель = ПолучитьПроизводителя(Элементы.Аналоги.ТекущиеДанные.Аналог); 
КонецПроцедуры

&НаСервере
Функция ПолучитьПроизводителя(Товар)
	Возврат Товар.Производитель; 	
КонецФункции

&НаКлиенте
Процедура АналогиПриАктивизацииСтроки(Элемент)
	ОбработатьОтображениеИнформацииОТоваре()
КонецПроцедуры

&НаКлиенте
Процедура АналогиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ПолучитьКоличествоПовторовАналогов(ТекущиеДанные.Аналог)>1 ТОгда
		Отказ = Истина;
		ОбщиеФункции.СообщитьТекст("Товар уже в списке!");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналогиПриИзменении(Элемент)
	ЕстьИзменения =  Истина;
КонецПроцедуры

&НаКлиенте
Процедура АвтоПодбор(Команда)
	
	АдресТоваровВХранилище =  ПоместитьТоварыВХранилище(Ложь);

	ПараметрыОткрытияФормы = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);

	ОткрытьФорму("Обработка.УстановкаАналоговНоменклатуры.Форма.ФормаАвтоЗаполнения", ПараметрыОткрытияФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение = Неопределено ТОгда
		Возврат
	КонецЕсли;
	ЗаполнитьИзАвтоподбора(ВыбранноеЗначение);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзАвтоподбора(ВремХран)
	
	Объект.Аналоги.Очистить();
	Объект.Товары.Очистить();
	
	Таблица = ПолучитьИзВременногоХранилища(ВремХран);	
	Для Каждого Строка Из Таблица Цикл
		Если Строка.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() ИЛИ Строка.Аналог = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовар = Объект.Товары.Добавить();
		СтрокаТовар.Номенклатура = Строка.Номенклатура;
		
		МенеджерЗаписи = РегистрыСведений.АналогиНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Номенклатура1 = Строка.Номенклатура;
		МенеджерЗаписи.Номенклатура2 = Строка.Аналог;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЕстьИзменения Тогда
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Ответ = Вопрос(НСтр("ru = 'Сохранить последние изменения аналогов товара?'"), Режим, 0);
		
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьНаСервере();				
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ОбновитьАналоги();

	
КонецПроцедуры


