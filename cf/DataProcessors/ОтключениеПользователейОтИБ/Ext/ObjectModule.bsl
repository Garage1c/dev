
Функция ОтключитьПользователейОтИБ(ВЫбранныйСеанс=Неопределено,ВыбранноеСоединение=Неопределено) Экспорт   
	Сообщение=Новый СообщениеПользователю();
	МассивСоединений=ПолучитьСоединенияИнформационнойБазы();
	Конектор="V83.Comconnector";
	НомерСоединенияТек=НомерСоединенияИнформационнойБазы();
	НомерСеансаТек=НомерСеансаИнформационнойБазы();
	Кластер="";
	ПарольАдминаКластера=СокрЛП(ПарольАдминаКластера);
	ИмяАдминаКластера=СокрЛП(АдминКластера);
	СтрокаСоединения=СтрокаСоединенияИнформационнойБазы();
	ИмяАдминаИБ=СокрЛП(АдминИБ);
	ПарольАдминаИБ=СокрЛП(ПарольАдминаИБ);
	ПортаАгента=?(СокрЛП(НомерПортаАгента)="0","",":"+Строка(НомерПортаАгента));
	ПортаАгента=СтрЗаменить(ПортаАгента,Символ(160),"");
	СтрПодключения="";
	
	СистемнаяИнформация=новый СистемнаяИнформация();
	Если Найти(СистемнаяИнформация.ВерсияПриложения,"8.2.")>0 Тогда
		Конектор="V82.Comconnector";
	ИначеЕсли Найти(СистемнаяИнформация.ВерсияПриложения,"8.3.")>0 Тогда
		Конектор="V83.Comconnector";
	КонецЕсли;
	
	Попытка
		ComConnector = Новый COMОбъект(Конектор);
	Исключение
		Сообщение.Текст=ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
	Если Найти(СтрокаСоединения,"Srvr=")<>0 Тогда 
		НомерРазделителя=Найти(СтрокаСоединения,";");
		ДлинаСтрокиСоед=СтрДлина(СтрокаСоединения)-НомерРазделителя-7;
		ИмяИБ=Врег(Сред(СтрокаСоединения,НомерРазделителя+6,ДлинаСтрокиСоед));
		Если Найти(СтрокаСоединения,":")<>0 Тогда
			ИмяСервераАгента=ВРег(Сред(СтрокаСоединения,7,НомерРазделителя-13));
		Иначе
			ИмяСервераАгента=ВРег(Сред(СтрокаСоединения,7,НомерРазделителя-8));
		КонецЕсли;
	иначе
		Сообщение.Текст="Файловый вариант БД! Отключение возможно через оповещение пользователей!";
		Сообщение.Сообщить();
		Возврат Истина;
	КонецЕсли;
	
	Попытка
		СтрПодключения=ИмяСервераАгента+ПортаАгента; 
		ПодключениеКАгенту=ComConnector.ConnectAgent(СтрПодключения);
	Исключение
		Сообщение.Текст="Не удалось подключиться к серверу агента! "+ИнформацияОбОшибке().Описание;
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецПопытки;
	
	Попытка
		Кластеры=ПодключениеКАгенту.GetClusters();
	Исключение
		Сообщение.Текст=ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецПопытки;
	
	Для ТекущийИндекс = Кластеры.GetLowerBound() По Кластеры.GetUpperBound() Цикл
		Кластер = Кластеры.GetValue(ТекущийИндекс);
		Если (ВРЕГ(Кластер.HostName) = ИмяСервераАгента) Тогда
			Прервать;                      
		КонецЕсли
	КонецЦикла;
	
	Если Кластер = НЕОПРЕДЕЛЕНО Тогда
		Сообщение.Текст="Нет удалось найти кластер";
		Сообщение.Сообщить(); 
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПарольАдминаКластера) И НЕ ЗначениеЗаполнено(ИмяАдминаКластера)  Тогда
		Попытка
			ПодключениеКАгенту.Authenticate(Кластер,"","");
		Исключение
			Сообщение.Текст="Неверный логин или пароль кластера!";
			Сообщение.Сообщить();
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Попытка
			ПодключениеКАгенту.Authenticate(Кластер,ИмяАдминаКластера,ПарольАдминаКластера);
		Исключение
			Сообщение.Текст="Неверный логин или пароль кластера!";
			Сообщение.Сообщить();
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
		
	//Подключаемся к рабочему процессу
	РабочиеПроцессы=ПодключениеКАгенту.GetWorkingProcesses(Кластер);
	Для каждого процесс ИЗ РабочиеПроцессы Цикл
		Порт= СтрЗаменить(Процесс.mainPort, Символы.НПП, "");
		попытка
			РабПроцесс=ComConnector.ConnectWorkingProcess(ИмяСервераАгента+":"+Порт);
			РабПроцесс.AuthenticateAdmin(ИмяАдминаКластера,ПарольАдминаКластера);
			РабПроцесс.AddAuthentication(ИмяАдминаИБ,ПарольАдминаИБ);
		Исключение
			Сообщение.Текст="Не удалось подключиться к рабочему процессу! Проверьте Логин и Пароль администратора ИБ!";
			Сообщение.Сообщить();
			Продолжить;
		КонецПопытки;
		
		//Найдем нужную базу по имени
		ИнфоБаза="";
		Попытка
			МассивБаз=РабПроцесс.GetInfoBases();
		Исключение
			Продолжить;
		КонецПопытки;
		
		Для каждого База Из МассивБаз Цикл
			Если ВРег(База.Name)=ВРег(ИмяИБ) Тогда
				ИнфоБаза=База;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			Соединения=РабПроцесс.GetInfoBaseConnections(ИнфоБаза);
		Исключение 
			Сообщение.Текст="Недостаточно прав! Не указан админ ИБ!";
			Сообщение.Сообщить();
			Продолжить;
		КонецПопытки;
		
		//Отключаем соединения
		Для каждого Соединение Из Соединения Цикл
			Попытка
				Если ВыбранноеСоединение=Неопределено Тогда  
					Если НомерСоединенияТек<>Соединение.ConnID Тогда
						РабПроцесс.Disconnect(Соединение);
					КонецЕсли;
				ИначеЕсли Соединение.ConnID=ВыбранноеСоединение Тогда 
					РабПроцесс.Disconnect(Соединение);
				КонецЕсли;
			Исключение	КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
	//Отключаем сеансы
	Попытка
		МассивБаз=ПодключениеКАгенту.GetInfoBases(Кластер);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Для каждого База Из МассивБаз Цикл
		Если ВРег(База.Name)=ВРег(ИмяИБ) Тогда
			ИнфоБаза=База;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		Сеансы=ПодключениеКАгенту.GetInfoBaseSessions(Кластер,ИнфоБаза);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Для каждого Сеанс Из Сеансы Цикл
		Попытка
			ИДСесии=Сеанс.SessionID;
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если ВЫбранныйСеанс=Неопределено Тогда 
			
			Если НомерСеансаТек<>ИДСесии Тогда
				
				Попытка
					ПодключениеКАгенту.TerminateSession(Кластер,Сеанс);
				Исключение 	КонецПопытки;
				
			КонецЕсли;
		ИначеЕсли ИДСесии=ВЫбранныйСеанс Тогда 
			
			Попытка
				ПодключениеКАгенту.TerminateSession(Кластер,Сеанс);
			Исключение	КонецПопытки;
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

Функция УстановитьБлокировкуСоединений() Экспорт
	Сообщение=Новый СообщениеПользователю();
	Блокировка=Новый БлокировкаСеансов();	
	Если НЕ Блокировка.Установлена Тогда
		Блокировка.КодРазрешения=СокрЛП(ЭтотОбъект.КодРазрешения);
		Блокировка.Начало=ТекущаяДата();
		Блокировка.Сообщение=Символы.ВК+ВРег("Установлена блокировка на базу данных на "+ПериодБлокировки+" сек.! Просьба немного подождать"+Символы.ПС);
		Блокировка.Сообщение=Блокировка.Сообщение+ВРег("пока будут производиться регламентные операции с базой!");
		Блокировка.Конец=ТекущаяДата()+ПериодБлокировки;
		Блокировка.Установлена=Истина;
	КонецЕсли;
	Попытка
		УстановитьБлокировкуСеансов(Блокировка);
		Сообщение.Текст=Строка(ТекущаяДата())+" Блокировка сеансов установлена на "+ПериодБлокировки+" сек.!";
		Сообщение.Сообщить();
	Исключение 
		Сообщение.Текст="Произошла ошибка при установке блокировки сеансов!";
		Сообщение.Сообщить();
		Возврат ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

Функция СнятьБлокировкуСоединений() Экспорт
	Блокировка=ПолучитьБлокировкуСеансов();
	Если Блокировка.Установлена Тогда
		Блокировка.Установлена=Ложь;     
		УстановитьБлокировкуСеансов(Блокировка);
	КонецЕсли;
КонецФункции

Функция СоздатьБэкап() Экспорт
	Сообщение=Новый СообщениеПользователю();
	КодРазрешения=СокрЛП(ЭтотОбъект.КодРазрешения);
	ИмяАдминистратораИБ=СокрЛП(ЭтотОбъект.АдминИБ);
	ПарольАдминистратораИБ=СокрЛП(ЭтотОбъект.ПарольАдминаИБ);
	СтрокаСоединения=СтрокаСоединенияИнформационнойБазы();
	СтрокаПодключенияКБазе="";
	ИмяСкрипта = "BackUP.CMD";
	ИмяИБ="";
	
	//Проверим наличие исполняемого файла
	СистемнаяИнформация=новый СистемнаяИнформация();
	ПутьКПрограмме="C:\Program Files (x86)\1cv8\"+СистемнаяИнформация.ВерсияПриложения+"\bin\"+"1cv8.exe";
	ФайлПрограммы=Новый Файл(ПутьКПрограмме);
	Если НЕ ФайлПрограммы.Существует() Тогда 
		ПутьКПрограмме="C:\Program Files\1cv8\"+СистемнаяИнформация.ВерсияПриложения+"\bin\"+"1cv8.exe";
		ФайлПрограммы=Новый Файл(ПутьКПрограмме);
		Если НЕ ФайлПрограммы.Существует() Тогда
			ПутьКПрограмме="C:\Program Files\1cv82\"+СистемнаяИнформация.ВерсияПриложения+"\bin\"+"1cv8.exe";
			ФайлПрограммы=Новый Файл(ПутьКПрограмме);
			Если НЕ ФайлПрограммы.Существует() Тогда                                                                            
				ПутьКПрограмме="C:\Program Files (x86)\1cv82\"+СистемнаяИнформация.ВерсияПриложения+"\bin\"+"1cv8.exe";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Найти(СтрокаСоединения,"Srvr=")<>0 Тогда 
		НомерРазделителя=Найти(СтрокаСоединения,";");                                                 
		ДлинаСтрокиСоед=СтрДлина(СтрокаСоединения)-НомерРазделителя-7;                  
		ИмяИБ=Врег(Сред(СтрокаСоединения,НомерРазделителя+6,ДлинаСтрокиСоед));
		ИмяСервераАгента=ВРег(Сред(СтрокаСоединения,7,НомерРазделителя-8));
		СтрокаПодключенияКБазе = " /S""" + ИмяСервераАгента + "\" + ИмяИБ + """";
		УстановитьБлокировкуСоединений();
	иначе
		СтрокаПодключенияКБазе = " /F""" + Сред(СтрокаСоединения,7,СтрДлина(СтрокаСоединения)-8) + """";
	КонецЕсли;
	
	ТекстДок = Новый ТекстовыйДокумент();
	СтрокаЗапускаПрограммы=""""+ПутьКПрограмме+"""";
	
	СтрокаЗапуска = СтрокаЗапускаПрограммы + " DESIGNER /uc" + КодРазрешения + " /DisableStartupMessages /Visible /DumpIB "+""""+ПутьБэкапа+"""";
	СтрокаЗапуска = СтрокаЗапуска + СтрокаПодключенияКБазе;
	СтрокаЗапуска = СтрокаЗапуска + " /N""" + ИмяАдминистратораИБ + """"; 
	Если ЗначениеЗаполнено(ПарольАдминистратораИБ) Тогда
		СтрокаЗапуска = СтрокаЗапуска + " /P""" + ПарольАдминистратораИБ + """";
	КонецЕсли;
	ТекстДок.ДобавитьСтроку(СтрокаЗапуска);
	
	ПолноеИмяСкрипта=КаталогВременныхФайлов()+ИмяСкрипта;
	
	УдалитьФайлы(ПолноеИмяСкрипта); //удаляем старый скрипт
	
	попытка
		ТекстДок.Записать(ПолноеИмяСкрипта,КодировкаТекста.OEM);//записываем скрипт
	Исключение 
		Сообщение.Текст="Не удалось сохранить файл скрипта в "+ПолноеИмяСкрипта+"!";
		Сообщение.Сообщить();
		возврат Ложь;
	КонецПопытки;                               
	
	Попытка
		//ЗапуститьПриложение(ПолноеИмяСкрипта);
		Ком = Новый COMObject("wScript.Shell");
		Ком.Run("""" + ПолноеИмяСкрипта + """");
	Исключение
		Сообщение.Текст="Не удалось запустить скрипт!";
		Сообщение.Сообщить();
		Возврат ложь;
	КонецПопытки;
	Возврат Истина;	
КонецФункции
 