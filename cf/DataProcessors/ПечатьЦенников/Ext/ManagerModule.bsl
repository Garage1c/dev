&НаСервере
Функция Печать(ТабДок, ТабДокАкция, ПараметрКоманды, ПараметрыПечати = Неопределено) Экспорт
	
	ПараметрыПечати = ?(ПараметрыПечати <> Неопределено, ПараметрыПечати, Новый Структура("Дата, Организация, Валюта"));
	
	Если НЕ ПараметрыПечати.Свойство("Дата") Тогда
		ПараметрыПечати.Вставить("Дата",ТекущаяДата());
	КонецЕсли;

	Если НЕ ПараметрыПечати.Свойство("Организация") Тогда
		ПараметрыПечати.Вставить("Организация", ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Организация"));
	КонецЕсли;
	Если НЕ ПараметрыПечати.Свойство("Валюта") Тогда
		ПараметрыПечати.Вставить("Валюта", ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета"));
	КонецЕсли;
	
	
	
	//КолКолонок 	= 5;
	КолКолонок 	= 4;
	текКолонка 	= 0;
	КолКолонокАкция = 4;
	текКолонкаАкция = 0;

	Выводить = Истина;
	ВыводитьАкцию = Истина;
	
	ТаблСтрока = Новый ТабличныйДокумент;
	ТабСтрокаАкции = Новый ТабличныйДокумент;	
	

	
	Для Каждого Строка Из ПараметрКоманды Цикл
		
		Ссылка = Строка.Номенклатура;
		 
		ПараметрыПечати.Вставить("Цена", Строка.Цена);
		ПараметрыПечати.Вставить("Бренд", Ссылка.Производитель);
		ПараметрыПечати.Вставить("ЦенаПоАкции", Строка.ЦенаПоАкции);
		ПараметрыПечати.Вставить("ЕдиницаИзмерения", ?(Строка.Упаковка.Пустая(), Ссылка.ЕдиницаИзмерения, Строка.Упаковка));
		 
		 // Увеличим счетчик
		
	//	текКолонка 	= ?(текКолонка = КолКолонок, 1, текКолонка + 1);
		
		
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Номенклатура") И НЕ Ссылка.ЭтоГруппа Тогда
			
			МакетЦенника = Справочники.Номенклатура.ПолучитьЦенник(Ссылка, ПараметрыПечати);
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
		// Добавим в макет
		
		Если Строка.ЦенаПоАкции > 0 Тогда текКолонкаАкция = текКолонкаАкция + 1;
			Если текКолонкаАкция / КолКолонокАкция = Цел(текКолонкаАкция / КолКолонокАкция) Тогда // строка заполнена и готова
				
				ТабСтрокаАкции.Присоединить(МакетЦенника);
			
				Если ТабДокАкция.ПроверитьВывод(ТабСтрокаАкции) Тогда
					ТабДокАкция.Вывести(ТабСтрокаАкции);
				Иначе
					ТабДокАкция.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокАкция.Вывести(ТабСтрокаАкции);
				КонецЕсли;
				
				ТабСтрокаАкции = Новый ТабличныйДокумент;
				текКолонкаАкция = 0;
				ВыводитьАкцию 	= Ложь;

			Иначе
				
				ТабСтрокаАкции.Присоединить(МакетЦенника);
				ВыводитьАкцию = Истина;
				
			КонецЕсли;
		
		Иначе   текКолонка 	= текКолонка + 1;
		Если текКолонка / КолКолонок = Цел(текКолонка / КолКолонок) Тогда // строка заполнена и готова
			
			ТаблСтрока.Присоединить(МакетЦенника);
		
			Если ТабДок.ПроверитьВывод(ТаблСтрока) Тогда
				ТабДок.Вывести(ТаблСтрока);
			Иначе
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ТаблСтрока);
			КонецЕсли;
			
			ТаблСтрока = Новый ТабличныйДокумент;
			текКолонка = 0;
			Выводить 	= Ложь;

		Иначе
			
			ТаблСтрока.Присоединить(МакетЦенника);
			Выводить = Истина;
			
		КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Выводить Тогда
		Если ТабДок.ПроверитьВывод(ТаблСтрока) Тогда
			ТабДок.Вывести(ТаблСтрока);
		Иначе
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ТаблСтрока);
		КонецЕсли;
	КонецЕсли;
	
	Если ВыводитьАкцию Тогда
		Если ТабДокАкция.ПроверитьВывод(ТабСтрокаАкции) Тогда
			ТабДокАкция.Вывести(ТабСтрокаАкции);
		Иначе
			ТабДокАкция.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокАкция.Вывести(ТабСтрокаАкции);
		КонецЕсли;
	КонецЕсли;
	
	//Если ТабДокАкция.ВысотаТаблицы > 0 Тогда
	//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//	ТабДок.Вывести(ТабДокАкция);	
	//КонецЕсли;
	
	
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция ПечатьLicota(ТабДок, ТабДокАкция = Неопределено, ПараметрКоманды, ПараметрыПечати = Неопределено) Экспорт
	
	ПараметрыПечати = ?(ПараметрыПечати <> Неопределено, ПараметрыПечати, Новый Структура("Дата, Организация, Валюта"));
	
	Если НЕ ПараметрыПечати.Свойство("Дата") Тогда
		ПараметрыПечати.Вставить("Дата", ТекущаяДата());
	КонецЕсли;

	Если НЕ ПараметрыПечати.Свойство("Организация") Тогда
		ПараметрыПечати.Вставить("Организация", ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Организация"));
	КонецЕсли;
	Если НЕ ПараметрыПечати.Свойство("Валюта") Тогда
		ПараметрыПечати.Вставить("Валюта", ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ВалютаУправленческогоУчета"));
	КонецЕсли;
	
	КолКолонок 	= 4;	    
	текКолонка 	= 0;
	КолКолонокАкция = 4;
	текКолонкаАкция = 0;

	Выводить = Истина;
	ВыводитьАкцию = ТабДокАкция <> Неопределено;

	ТаблСтрока = Новый ТабличныйДокумент;
	ТабСтрокаАкции = Новый ТабличныйДокумент;	
		
	Ликота = Справочники.Производители.НайтиПоНаименованию("Licota");
	Гарвин = Справочники.Производители.НайтиПоНаименованию("Garwin");
	
	Для Каждого Строка Из ПараметрКоманды Цикл
		
		Ссылка = Строка.Номенклатура;
		Если Ссылка.Производитель = Ликота Тогда		ИмяОБластиМакета  = "ЦенникLicota";
		ИначеЕсли Ссылка.Производитель = Гарвин Тогда	ИмяОбластиМакета = "ЦенникGarwin"; 
		КонецЕсли;
		
		ПараметрыПечати.Вставить("ИмяОбласти", ИмяОБластиМакета); 
		ПараметрыПечати.Вставить("Цена", Строка.Цена);
		ПараметрыПечати.Вставить("ЦенаПоАкции", Строка.ЦенаПоАкции);
		ПараметрыПечати.Вставить("ЕдиницаИзмерения", ?(Строка.Упаковка.Пустая(), Ссылка.ЕдиницаИзмерения, Строка.Упаковка));
		 
	
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Номенклатура") И НЕ Ссылка.ЭтоГруппа Тогда
			
			МакетЦенника = Справочники.Номенклатура.ПолучитьЦенникLicota(Ссылка, ПараметрыПечати);
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
		// Добавим в макет

//		текКолонка 	= текКолонка + 1;
//		Если текКолонка / КолКолонок = Цел(текКолонка / КолКолонок) Тогда // строка заполнена и готова
//			
//			ТаблСтрока.Присоединить(МакетЦенника);
//		
//			Если ТабДок.ПроверитьВывод(ТаблСтрока) Тогда
//				ТабДок.Вывести(ТаблСтрока);
//			Иначе
//				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
//				ТабДок.Вывести(ТаблСтрока);
//			КонецЕсли;
//			
//			ТаблСтрока = Новый ТабличныйДокумент;
//			текКолонка = 0;
//			Выводить 	= Ложь;

//		Иначе
//			
//			ТаблСтрока.Присоединить(МакетЦенника);
//			Выводить = Истина;
//			
//		КонецЕсли;

		Если Строка.ЦенаПоАкции > 0 Тогда текКолонкаАкция = текКолонкаАкция + 1;
			Если текКолонкаАкция / КолКолонокАкция = Цел(текКолонкаАкция / КолКолонокАкция) Тогда // строка заполнена и готова
				
				ТабСтрокаАкции.Присоединить(МакетЦенника);
			
				Если ТабДокАкция.ПроверитьВывод(ТабСтрокаАкции) Тогда
					ТабДокАкция.Вывести(ТабСтрокаАкции);
				Иначе
					ТабДокАкция.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокАкция.Вывести(ТабСтрокаАкции);
				КонецЕсли;
				
				ТабСтрокаАкции = Новый ТабличныйДокумент;
				текКолонкаАкция = 0;
				ВыводитьАкцию 	= Ложь;

			Иначе
				
				ТабСтрокаАкции.Присоединить(МакетЦенника);
				ВыводитьАкцию = Истина;
				
			КонецЕсли;
		
		Иначе   текКолонка 	= текКолонка + 1;
		Если текКолонка / КолКолонок = Цел(текКолонка / КолКолонок) Тогда // строка заполнена и готова
			
			ТаблСтрока.Присоединить(МакетЦенника);
		
			Если ТабДок.ПроверитьВывод(ТаблСтрока) Тогда
				ТабДок.Вывести(ТаблСтрока);
			Иначе
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ТаблСтрока);
			КонецЕсли;
			
			ТаблСтрока = Новый ТабличныйДокумент;
			текКолонка = 0;
			Выводить 	= Ложь;

		Иначе
			
			ТаблСтрока.Присоединить(МакетЦенника);
			Выводить = Истина;
			
		КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Выводить Тогда
		Если ТабДок.ПроверитьВывод(ТаблСтрока) Тогда
			ТабДок.Вывести(ТаблСтрока);
		Иначе
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ТаблСтрока);
		КонецЕсли;
	КонецЕсли;
	Если ВыводитьАкцию Тогда
		Если ТабДокАкция.ПроверитьВывод(ТабСтрокаАкции) Тогда
			ТабДокАкция.Вывести(ТабСтрокаАкции);
		Иначе
			ТабДокАкция.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокАкция.Вывести(ТабСтрокаАкции);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
