
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаПоКонтрагентам");
	
	КомпоновщикНастроек.Инициализировать(
	Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор)));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтрагентов(Команда)
	ЗаполнитьКонтрагентовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтрагентовНаСервере()
	
	ТаблицаКонтрагентов.Очистить();
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаПоКонтрагентам");
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ТаблицаВывода = ТаблицаКонтрагентов.Выгрузить();
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаВывода);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ТаблицаКонтрагентов.Загрузить(ТаблицаВывода);
	
	КоличествоКонтрагентовВТаблице = ТаблицаКонтрагентов.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсех(Команда)
	
	Если ТаблицаКонтрагентов.Количество() <> 0 Тогда
		Для Каждого СтрокаТаблицаКонтрагентов из ТаблицаКонтрагентов Цикл
			СтрокаТаблицаКонтрагентов.Выбрать = Истина;	
		КонецЦикла;		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	
	Если ТаблицаКонтрагентов.Количество() <> 0 Тогда
		Для Каждого СтрокаТаблицаКонтрагентов из ТаблицаКонтрагентов Цикл
			СтрокаТаблицаКонтрагентов.Выбрать = Ложь;	
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНовуюКатегориюНаСервере()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Выбрать", Истина);
	
	МассивКонтрагентов = ТаблицаКонтрагентов.НайтиСтроки(Отбор);
	Если МассивКонтрагентов.Количество()> 0 Тогда
		Для Каждого СтрокаМассива из МассивКонтрагентов Цикл
			
			КонтрагентОбъект = СтрокаМассива.Ссылка.ПолучитьОбъект();	
			КонтрагентОбъект.Категория = НоваяКатегория;
			КонтрагентОбъект.Записать();		
		
		КонецЦикла;
	Иначе
		Сообщить("Не выбрано ни одного контрагента!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовуюКатегорию(Команда)
	
	Если НЕ ЗначениеЗаполнено(НоваяКатегория) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаКонтрагентов.Количество() = 0 Тогда
		Сообщить("Таблица контрагентов не заполнена!");
		Возврат;
	КонецЕсли;	
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",
	ЭтаФорма);	
	
	ПоказатьВопрос(Оповещение,
	"Установить категорию " + """" + НоваяКатегория + """" + " для выбранных контрагентов?",
	РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "Установка категории");    
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьНовуюКатегориюНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрагентовПослеУдаления(Элемент)
	КоличествоКонтрагентовВТаблице = ТаблицаКонтрагентов.Количество();
КонецПроцедуры
