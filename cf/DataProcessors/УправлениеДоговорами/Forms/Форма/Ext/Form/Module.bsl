
&НаКлиенте
Перем стПараметрыДействий;

&НаКлиенте
Процедура УправлениеВидимостьюДоступностью()
	
	Элементы.СтрокаОтмены.Видимость = стПараметрыДействий <> Неопределено;
	
КонецПроцедуры
&НаКлиенте
Процедура СформироватьПредставлениеОтмены()
	
	Если стПараметрыДействий.Действие = "Установить" Тогда
		
		Текст1 = "установку"
		
	ИначеЕсли стПараметрыДействий.Действие = "Удалить" Тогда
		
		Текст1 = "удаление"
		
	ИначеЕсли стПараметрыДействий.Действие = "Добавить" Тогда
		
		Текст1 = "добавление"
		
	Иначе Текст1 = "неизвестно что" КонецЕсли;
	
	СтрокаОтмены = "Отменить " + Текст1 + ":  " + стПараметрыДействий.Контрагент +
				?(ЗначениеЗаполнено(стПараметрыДействий.ДокументВорд), "  " + стПараметрыДействий.ДокументВорд + "","") +
				?(ЗначениеЗаполнено(стПараметрыДействий.НомерДоговора), " №" + стПараметрыДействий.НомерДоговора + "","") +
				"  " + стПараметрыДействий.Организация;
				
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруРасшифровки(Выборка, Действие)
	
	Возврат Новый Структура("Действие, Организация, НомерДоговора, Партнер, Контрагент, ДокументВорд, ДатаНачала, ДатаОкончания, НомерСтроки, НомерДокумента, Основной", 
			Действие,
			Выборка.Организация, 
			Выборка.НомерДоговора,
			Выборка.Партнер, 
			Выборка.Контрагент, 
			Выборка.ДокументВорд,
			Выборка.ДатаНачала,
			Выборка.ДатаОкончания,
			Выборка.НомерСтроки,
			Выборка.НомерДокумента,
			Выборка.Основной);
	
КонецФункции
&НаСервере
Процедура ОбновитьТаблицу()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контр.Ссылка Контрагент,
	|	Контр.Ссылка ЧислоКонтрагентов,
	|	Контр.ПометкаУдаления,
	|	Контр.Код,
	|	Контр.Наименование,
	|	Контр.ЮрФизЛицо,
	|	Контр.ИНН,
	|	Контр.КПП,
	|	Контр.Партнер,
	|	Контр.ТипЦен,
	|	Контр.ВЛице,
	|	Контр.НаОсновании,
	|	Контр.Подпись,
	|	Контр.ПодписьДолжность,
	|	Орг.Организация,
	|	ЕСТЬNULL(ВЫБОР КОГДА Контр.ЗначениеПоУмолчанию ТОГДА ИСТИНА ИНАЧЕ Орг.ЗначениеПоУмолчанию КОНЕЦ, ЛОЖЬ) Основной,
	|	Орг.НомерДоговора,
	|	Орг.ДатаНачала,
	|	Орг.ДатаОкончания,
	|	Орг.ДокументВорд,
	//|	ЕСТЬNULL(Док.ИмяФайла + "" "", """") + Орг.ДокументВорд.Наименование ДокументПредставление,
	|	Док.ИмяФайла					ИмяФайла,
	|	Орг.ДокументВорд.Наименование 	ДокументПредставление,
	|	ВЫБОР КОГДА Док.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ ЕстьДокумент,
	|	ЕСТЬNULL(Док.НомерСтроки, 0) НомерДокумента,
	|	ЕСТЬNULL(Орг.НомерСтроки, 0) НомерСтроки,
	|	Док.Замена Замена,
	|	Док.ИмяФайла
	|ИЗ
	|	Справочник.Контрагенты Контр
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Контрагенты.Организации Орг
	|ПО
	|	Контр.Ссылка = Орг.Ссылка
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ДокументыWord.ДвоичныеДанные Док
	|ПО
	|	Орг.ДокументВорд = Док.Ссылка
	|
	|ГДЕ НЕ Контр.ПометкаУдаления
	|" + ?(ОрганизацияФильтр.Пустая(), "",			" И Орг.Организация 			= &Организация") + "
	|" + ?(Менеджер.Пустая(), "",					" И Контр.Партнер.ОсновнойМенеджер = &Менеджер") + "
	|" + ?(ГруппаПартнер.Пустая(), "",				" И Контр.Партнер 				В ИЕРАРХИИ(&ГруппаПартнер)") + "
	|" + ?(ВходитВПериод, 							" И ЕСТЬNULL(Орг.ДатаНачала, &ПустаяДата) <= &ДатаФильтрНачало И ЕСТЬNULL(Орг.ДатаОкончания, &ПустаяДата) >= &ДатаФильтрОкончание","")  + "
	|" + ?(НеВходитВПериод, 						" И (ЕСТЬNULL(Орг.ДатаНачала, &ПустаяДата) > &ДатаФильтрНачало ИЛИ ЕСТЬNULL(Орг.ДатаОкончания, &ПустаяДата) < &ДатаФильтрОкончание)","")  + "
	|" + ?(СНомерами, 								" И ЕСТЬNULL(Орг.НомерДоговора,"""") <> """"", "") + "
	|" + ?(БезНомеров, 								" И ЕСТЬNULL(Орг.НомерДоговора,"""") = """"", "") + "
	|" + ?(ПустаяСтрока(НомерДоговораФильтр), "",	" И Орг.НомерДоговора 			ПОДОБНО ""%" + НомерДоговораФильтр + "%""") + "
	|" + ?(ПустаяСтрока(ИНН), "",					" И Контр.ИНН 					ПОДОБНО ""%" + ИНН + "%""") + "
	|" + ?(ПустаяСтрока(Наименование), "",			" И (Контр.Партнер.Наименование ПОДОБНО ""%" + Наименование + "%"" ИЛИ Контр.Наименование ПОДОБНО ""%" + Наименование + "%"")") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Партнер.Наименование, НомерСтроки, НомерДокумента
	|
	|ИТОГИ МАКСИМУМ(ЕстьДокумент), МАКСИМУМ(НомерДоговора), МАКСИМУМ(Организация), МАКСИМУМ(Контрагент), КОЛИЧЕСТВО(ЧислоКонтрагентов) ПО
	|	Партнер, Контрагент
	|");
	
	Запрос.УстановитьПараметр("ПустаяДата", 		'00010101');
	Запрос.УстановитьПараметр("ДатаФильтрНачало", 	НачалоДня(ДатаФильтр));
	Запрос.УстановитьПараметр("ДатаФильтрОкончание",КонецДня(ДатаФильтр));
	Запрос.УстановитьПараметр("Организация", 		ОрганизацияФильтр);
	Запрос.УстановитьПараметр("ГруппаПартнер", 		ГруппаПартнер);
	Запрос.УстановитьПараметр("Менеджер", 			Менеджер);
	
	// Подготовим переменные
	
	Макет = Обработки.УправлениеДоговорами.ПолучитьМакет("Договора");
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьПартнер 				= Макет.ПолучитьОбласть("Партнер");
	ОбластьПартнерОрганизация	= Макет.ПолучитьОбласть("ПартнерОрганизация");
	ОбластьПартнерБезДокументов	= Макет.ПолучитьОбласть("ПартнерБезДокументов");
	ОбластьКонтрагентОрганизация= Макет.ПолучитьОбласть("КонтрагентОрганизация");
	ОбластьКонтрагентДокумент	= Макет.ПолучитьОбласть("КонтрагентДокумент");
	ОбластьДокумент				= Макет.ПолучитьОбласть("Строка");
	
	ОбластьКонтрагентДокументОсновной 	= Макет.ПолучитьОбласть("КонтрагентДокументОсновной");
	ОбластьДокументОсновной 			= Макет.ПолучитьОбласть("СтрокаОсновной");
	
	текОбласть = Элементы.Таблица.ТекущаяОбласть; стКонтра = Неопределено;
	Если ТипЗнч(текОбласть) = Тип("РисунокТабличногоДокумента") Тогда
		стКонтра = текОбласть.Расшифровка.Контрагент.Наименование;
	Иначе
		стИмя = Элементы.Таблица.ТекущаяОбласть.Имя; КонецЕсли;
	
	
	Таблица.Очистить();
	Таблица.Вывести(ОбластьШапка);
	Таблица.ФиксацияСверху = 1;
	
	// переберем строки
	
	текГруппа 			= 1;
	ВыборкаПартнеров 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ВремяНачала 	= ТекущаяДата();
	НеБольшеСекунд	= 5; // не больше 5 секунд тебе
	
	Пока ВыборкаПартнеров.Следующий() Цикл Если ПустаяСТрока(ВыборкаПартнеров.Партнер.Код) Тогда Продолжить; КонецЕсли;
		
		// Отменим выборку если слишком долго
		
		Если ТекущаяДата() - ВремяНачала > НеБольшеСекунд Тогда
			ОбщиеФункции.СообщитьТекст("Выведены не все партнеры, так как список оказался слишком большим,
											|рекомендуется установить фильтры, чтобы сократить список."); Прервать; КонецЕсли;
			
		ОдинКонтрагент = ВыборкаПартнеров.ЧислоКонтрагентов = 1;
		
		// Если нет документов то пропускаем его
		ПропуститьВыводПартнера = Ложь; ЕстьДоговор = ЗначениеЗаполнено(ВыборкаПартнеров.НомерДоговора);
		Если Не ЕстьДоговор И ОдинКонтрагент Тогда
			
			ОбластьПартнерБезДокументов.Параметры.Заполнить(ВыборкаПартнеров); 
			ОбластьПартнерБезДокументов.Рисунки.ДобавитьПартнер.Расшифровка = ПолучитьСтруктуруРасшифровки(ВыборкаПартнеров, "Добавить");
			
			Если ЕстьДоговор Тогда Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1; КонецЕсли;
			Таблица.Вывести(ОбластьПартнерБезДокументов, текГруппа, "Партнер");
			ПропуститьВыводПартнера = Истина;
			
			Если Не ЗначениеЗаполнено(ВыборкаПартнеров.НомерДоговора) Тогда Продолжить; КонецЕсли; КонецЕсли;
		
		// Запросим контров
		
		ВыборкаКонтрагентов = ВыборкаПартнеров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		// Выведем партнера
		
		Если Не ПропуститьВыводПартнера Тогда
			Область = ?(ОдинКонтрагент, ОбластьПартнерОрганизация, ОбластьПартнер);
			Область.Параметры.Заполнить(ВыборкаПартнеров);
			Таблица.НачатьАвтогруппировкуСтрок();
			Таблица.Вывести(Область, текГруппа, "Партнер"); КонецЕсли;
		
		// Переберем контров
		
		Пока ВыборкаКонтрагентов.Следующий() Цикл
			
			Выборка 		= ВыборкаКонтрагентов.Выбрать();
			ОдинДокумент 	= Выборка.Количество() = 1;
			
			// Выведем контров
			
			Если Не ОдинКонтрагент И Не ОдинДокумент Тогда 
				Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1;
				ОбластьКонтрагентОрганизация.Параметры.Заполнить(ВыборкаКонтрагентов);
				ОбластьКонтрагентОрганизация.Рисунки.ДобавитьКонтрагент.Расшифровка = ПолучитьСтруктуруРасшифровки(ВыборкаКонтрагентов, "Добавить");
				Таблица.Вывести(ОбластьКонтрагентОрганизация, текГруппа, "Контрагент"); КонецЕсли;
			
			// Запросим доки
			
			Пока Выборка.Следующий() Цикл
				
				// Выведем доки
				
				Приставка 			= ?(Выборка.Основной, "Основной", "");
				Область 			= Макет.ПолучитьОбласть(?(Не ОдинДокумент, "Строка" + Приставка, "КонтрагентДокумент" + Приставка));
				ПриставкаКартинки 	= ?(ОдинДокумент, "1","");
				Область.Параметры.Заполнить(Выборка);
				
				РисунокОткрыть = Область.Рисунки["Открыть" + Приставка + ПриставкаКартинки];
				РисунокОткрыть.Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Открыть");
				Область.Рисунки["Установить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Установить");
				
				Если Не ЗначениеЗаполнено(Выборка.ДокументВорд) Тогда Область.Рисунки.Удалить(РисунокОткрыть); КонецЕсли; // Спрячем картинку открытия
				
				Если ОдинДокумент Тогда
					Область.Рисунки["Добавить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Добавить");
				Иначе
					Область.Рисунки["Удалить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Удалить"); КонецЕсли;
				
				Таблица.Вывести(Область, текГруппа + 1, "Документ"); КонецЦикла; 
				
			// Завершим группировку контрагентов
			
			Если Не ОдинКонтрагент И Не ОдинДокумент Тогда
				Таблица.ЗакончитьАвтогруппировкуСтрок(); текГруппа = текГруппа - 1; КонецЕсли; КонецЦикла;
		
		// Завершим группировку партнеров
		
		Таблица.ЗакончитьАвтогруппировкуСтрок(); КонецЦикла;
	
	Если стКонтра = Неопределено Тогда
		Элементы.Таблица.ТекущаяОбласть = Таблица.Область(стИмя);
	Иначе
		Элементы.Таблица.ТекущаяОбласть = Таблица.НайтиТекст(стКонтра); КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьТаблицу_Нов()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контр.Ссылка Контрагент,
	|	Контр.Ссылка ЧислоКонтрагентов,
	|	Контр.ПометкаУдаления,
	|	Контр.Код,
	|	Контр.Наименование,
	|	Контр.ЮрФизЛицо,
	|	Контр.ИНН,
	|	Контр.КПП,
	|	Контр.Партнер,
	|	Контр.ТипЦен,
	|	Контр.ВЛице,
	|	Контр.НаОсновании,
	|	Контр.Подпись,
	|	Контр.ПодписьДолжность,
	|	Орг.Организация,
	|	ЕСТЬNULL(ВЫБОР КОГДА Контр.ЗначениеПоУмолчанию ТОГДА ИСТИНА ИНАЧЕ Орг.ЗначениеПоУмолчанию КОНЕЦ, ЛОЖЬ) Основной,
	|	Орг.НомерДоговора,
	|	Орг.ДатаНачала,
	|	Орг.ДатаОкончания,
	|	Орг.ДокументВорд,
	|	ЕСТЬNULL(Док.ИмяФайла + "" "", """") + Орг.ДокументВорд.Наименование ДокументПредставление,
	|	ВЫБОР КОГДА Док.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ ЕстьДокумент,
	|	ЕСТЬNULL(Док.НомерСтроки, 0) НомерДокумента,
	|	ЕСТЬNULL(Орг.НомерСтроки, 0) НомерСтроки,
	|	Док.Замена Замена,
	|	Док.ИмяФайла
	|ИЗ
	|	Справочник.Контрагенты Контр
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Контрагенты.Организации Орг
	|ПО
	|	Контр.Ссылка = Орг.Ссылка
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ДокументыWord.ДвоичныеДанные Док
	|ПО
	|	Орг.ДокументВорд = Док.Ссылка
	|
	|ГДЕ НЕ Контр.ПометкаУдаления
	|" + ?(ОрганизацияФильтр.Пустая(), "",			" И Орг.Организация 			= &Организация") + "
	|" + ?(ГруппаПартнер.Пустая(), "",				" И Контр.Партнер 				В ИЕРАРХИИ(&ГруппаПартнер)") + "
	|" + ?(ВходитВПериод, 							" И ЕСТЬNULL(Орг.ДатаНачала, &ПустаяДата) <= &ДатаФильтрНачало И ЕСТЬNULL(Орг.ДатаОкончания, &ПустаяДата) >= &ДатаФильтрОкончание","")  + "
	|" + ?(НеВходитВПериод, 						" И (ЕСТЬNULL(Орг.ДатаНачала, &ПустаяДата) > &ДатаФильтрНачало ИЛИ ЕСТЬNULL(Орг.ДатаОкончания, &ПустаяДата) < &ДатаФильтрОкончание)","")  + "
	|" + ?(СНомерами, 								" И ЕСТЬNULL(Орг.НомерДоговора,"""") <> """"", "") + "
	|" + ?(БезНомеров, 								" И ЕСТЬNULL(Орг.НомерДоговора,"""") = """"", "") + "
	|" + ?(ПустаяСтрока(НомерДоговораФильтр), "",	" И Орг.НомерДоговора 			ПОДОБНО ""%" + НомерДоговораФильтр + "%""") + "
	|" + ?(ПустаяСтрока(ИНН), "",					" И Контр.ИНН 					ПОДОБНО ""%" + ИНН + "%""") + "
	|" + ?(ПустаяСтрока(Наименование), "",			" И (Контр.Партнер.Наименование ПОДОБНО ""%" + Наименование + "%"" ИЛИ Контр.Наименование ПОДОБНО ""%" + Наименование + "%"")") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Партнер.Наименование, НомерСтроки, НомерДокумента
	|
	|ИТОГИ МАКСИМУМ(ЕстьДокумент), МАКСИМУМ(НомерДоговора), МАКСИМУМ(Организация), МАКСИМУМ(Контрагент), КОЛИЧЕСТВО(ЧислоКонтрагентов) ПО
	|	Партнер, Контрагент
	|");
	
	Запрос.УстановитьПараметр("ПустаяДата", 		'00010101');
	Запрос.УстановитьПараметр("ДатаФильтрНачало", 	НачалоДня(ДатаФильтр));
	Запрос.УстановитьПараметр("ДатаФильтрОкончание",КонецДня(ДатаФильтр));
	Запрос.УстановитьПараметр("Организация", 		ОрганизацияФильтр);
	Запрос.УстановитьПараметр("ГруппаПартнер", 		ГруппаПартнер);
	
	// Подготовим переменные
	
	Макет = Обработки.УправлениеДоговорами.ПолучитьМакет("Договора");
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьПартнер 				= Макет.ПолучитьОбласть("Партнер");
	ОбластьПартнерОрганизация	= Макет.ПолучитьОбласть("ПартнерОрганизация");
	ОбластьПартнерБезДокументов	= Макет.ПолучитьОбласть("ПартнерБезДокументов");
	ОбластьКонтрагентОрганизация= Макет.ПолучитьОбласть("КонтрагентОрганизация");
	ОбластьКонтрагентДокумент	= Макет.ПолучитьОбласть("КонтрагентДокумент");
	ОбластьДокумент				= Макет.ПолучитьОбласть("Строка");
	
	ОбластьКонтрагентДокументОсновной 	= Макет.ПолучитьОбласть("КонтрагентДокументОсновной");
	ОбластьДокументОсновной 			= Макет.ПолучитьОбласть("СтрокаОсновной");
	
	текОбласть = Элементы.Таблица.ТекущаяОбласть; стКонтра = Неопределено;
	Если ТипЗнч(текОбласть) = Тип("РисунокТабличногоДокумента") Тогда
		стКонтра = текОбласть.Расшифровка.Контрагент.Наименование;
	Иначе
		стИмя = Элементы.Таблица.ТекущаяОбласть.Имя; КонецЕсли;
	
	
	Таблица.Очистить();
	Таблица.Вывести(ОбластьШапка);
	Таблица.ФиксацияСверху = 1;
	
	// переберем строки
	
	текГруппа 			= 0;
	ВыборкаПартнеров 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ВремяНачала 	= ТекущаяДата();
	НеБольшеСекунд	= 5; // не больше 5 секунд тебе
	
	//Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1;
	
	Пока ВыборкаПартнеров.Следующий() Цикл Если ПустаяСТрока(ВыборкаПартнеров.Партнер.Код) Тогда Продолжить; КонецЕсли;
		
		// Отменим выборку если слишком долго
		
		Если ТекущаяДата() - ВремяНачала > НеБольшеСекунд Тогда
			ОбщиеФункции.СообщитьТекст("Выведены не все партнеры, так как список оказался слишком большим,
											|рекомендуется установить фильтры, чтобы сократить список."); Прервать; КонецЕсли;
			
		ОдинКонтрагент = ВыборкаПартнеров.ЧислоКонтрагентов = 1;
		
		// Если нет документов то пропускаем его
		ПропуститьВыводПартнера = Ложь; ЕстьДоговор = ЗначениеЗаполнено(ВыборкаПартнеров.НомерДоговора);
		Если Не ЕстьДоговор И ОдинКонтрагент Тогда
			
			ОбластьПартнерБезДокументов.Параметры.Заполнить(ВыборкаПартнеров); 
			ОбластьПартнерБезДокументов.Рисунки.ДобавитьПартнер.Расшифровка = ПолучитьСтруктуруРасшифровки(ВыборкаПартнеров, "Добавить");
			
			Таблица.Вывести(ОбластьПартнерБезДокументов, текГруппа, "Партнер");
			ПропуститьВыводПартнера = Истина;
			
			Если Не ЗначениеЗаполнено(ВыборкаПартнеров.НомерДоговора) Тогда 
				//Таблица.ЗакончитьАвтогруппировкуСтрок(); 
				Продолжить; КонецЕсли;
			
		Иначе
			
			Область = ?(ОдинКонтрагент, ОбластьПартнерОрганизация, ОбластьПартнер);
			Область.Параметры.Заполнить(ВыборкаПартнеров);
			Таблица.Вывести(Область, текГруппа, "Партнер"); КонецЕсли;
		
		Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1;
		
		// Запросим контров
		
		ВыборкаКонтрагентов = ВыборкаПартнеров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		// Переберем контров
		
		Пока ВыборкаКонтрагентов.Следующий() Цикл
			
			Выборка 		= ВыборкаКонтрагентов.Выбрать();
			ОдинДокумент 	= Выборка.Количество() = 1;
			
			// Выведем контров
			
			Если Не ОдинКонтрагент И Не ОдинДокумент Тогда 
				ОбластьКонтрагентОрганизация.Параметры.Заполнить(ВыборкаКонтрагентов);
				ОбластьКонтрагентОрганизация.Рисунки.ДобавитьКонтрагент.Расшифровка = ПолучитьСтруктуруРасшифровки(ВыборкаКонтрагентов, "Добавить");
				Таблица.Вывести(ОбластьКонтрагентОрганизация, текГруппа, "Контрагент"); 
				//Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1; КонецЕсли;
				КонецЕсли;
				
			Таблица.НачатьАвтогруппировкуСтрок(); текГруппа = текГруппа + 1; //КонецЕсли;
			// Запросим доки
			
			Пока Выборка.Следующий() Цикл
				
				// Выведем доки
				
				Приставка 			= ?(Выборка.Основной, "Основной", "");
				Область 			= Макет.ПолучитьОбласть(?(Не ОдинДокумент, "Строка" + Приставка, "КонтрагентДокумент" + Приставка));
				ПриставкаКартинки 	= ?(ОдинДокумент, "1","");
				Область.Параметры.Заполнить(Выборка);
				
				РисунокОткрыть = Область.Рисунки["Открыть" + Приставка + ПриставкаКартинки];
				РисунокОткрыть.Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Открыть");
				Область.Рисунки["Установить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Установить");
				
				Если Не ЗначениеЗаполнено(Выборка.ДокументВорд) Тогда Область.Рисунки.Удалить(РисунокОткрыть); КонецЕсли; // Спрячем картинку открытия
				
				Если ОдинДокумент Тогда
					Область.Рисунки["Добавить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Добавить");
				Иначе
					Область.Рисунки["Удалить" + Приставка + ПриставкаКартинки].Расшифровка = ПолучитьСтруктуруРасшифровки(Выборка, "Удалить"); КонецЕсли;
				
				Таблица.Вывести(Область, текГруппа, "Документ");  
			КонецЦикла;
				
			// Завершим группировку контрагентов
			
			//Если Не ОдинКонтрагент И Не ОдинДокумент Тогда
				Таблица.ЗакончитьАвтогруппировкуСтрок(); текГруппа = текГруппа - 1; //КонецЕсли; 
		КонецЦикла;
		
		// Завершим группировку партнеров
		
		Таблица.ЗакончитьАвтогруппировкуСтрок(); текГруппа = текГруппа - 1; 
	КонецЦикла;
	
	//Таблица.ЗакончитьАвтогруппировкуСтрок(); текГруппа = текГруппа - 1;
	
	Если стКонтра = Неопределено Тогда
		Элементы.Таблица.ТекущаяОбласть = Таблица.Область(стИмя);
	Иначе
		Элементы.Таблица.ТекущаяОбласть = Таблица.НайтиТекст(стКонтра); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Загрузим компановщик настроек
	
	//Макет = Обработки.РабочийСтолРуководителя.ПолучитьМакет("Взаиморасчеты");
	//Объект.КомпановщикНастроек.ЗагрузитьНастройки(Макет.НастройкиПоУмолчанию);
	//Объект.КомпановщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Макет));
	
КонецПроцедуры


// ИЗМЕНЕНИЕ ДАННЫХ

&НаСервере
Функция СтруктураИзмененияИзРасшифровки(Расшифровка)
	
	Возврат Новый Структура("Действие, Переписать, Организация, НомерДоговора, Контрагент, ЗначениеПоУмолчанию, ДатаНачала, ДатаОкончания, ДокументВорд, НомерСтроки, НомерДокумента",
	 				Расшифровка.Действие,
					Переписать, 
					ОрганизацияУстановка, 
					Справочники.Контрагенты.ПолучитьДинамическийНомерДоговора(Расшифровка.Контрагент.Код, ОрганизацияУстановка, Период.ДатаНачала),
					Расшифровка.Контрагент,
					ДоговорПоУмолчанию, 
					Период.ДатаНачала,
					Период.ДатаОкончания,
					ДокументВорд,
					Расшифровка.НомерСтроки,
					Расшифровка.НомерДокумента);
КонецФункции
&НаСервере
Функция СтруктураУдаленияИзРасшифровки(Расшифровка)
	
	Возврат Новый Структура("Действие, Организация, Контрагент, ЗначениеПоУмолчанию, НомерДоговора, ДатаНачала, ДатаОкончания, ДокументВорд, НомерСтроки, НомерДокумента",
	 				Расшифровка.Действие,
					Расшифровка.Организация, 
					Расшифровка.Контрагент,
					Расшифровка.Основной, 
					Расшифровка.НомерДоговора,
					Расшифровка.ДатаНачала,
					Расшифровка.ДатаОкончания,
					Расшифровка.ДокументВорд,
					Расшифровка.НомерСтроки,
					Расшифровка.НомерДокумента);
КонецФункции

&НаСервере
Процедура УстановитьРеквизит(ИмяРеквизита, Строка, Параметры, ПереписатьСмотретьВПараметрах = Истина)
	
	Если (ПереписатьСмотретьВПараметрах И Параметры.Переписать) Или Не ЗначениеЗаполнено(Строка[ИмяРеквизита]) Тогда
		Строка[ИмяРеквизита] = Параметры[ИмяРеквизита]; КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция УстановитьЗначенияУКонтрагента(ПараметрыДействий, стПараметры = Неопределено)
	
	КонтрОбъект = ПараметрыДействий.Контрагент.ПолучитьОбъект();
	
	// Считаем старые показания
	
	НоваяСтрока = Не ЗначениеЗаполнено(ПараметрыДействий.НомерСтроки) Или Не ПараметрыДействий.НомерСтроки;
	текСтрока = ?(НоваяСтрока, Неопределено, КонтрОбъект.Организации[ПараметрыДействий.НомерСтроки - 1]);
	стПараметры = КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицы(КонтрОбъект.Метаданные().ТабличныеЧасти.Организации, текСтрока);
	стПараметры.Вставить("Контрагент", ПараметрыДействий.Контрагент);
	
	// сбросим всем значение по умолчанию если этот делаем по умолчнаию
	
	Если ПараметрыДействий.ЗначениеПоУмолчанию Тогда 
		Табл = КонтрОбъект.Организации.Выгрузить();
		Табл.ЗаполнитьЗначения(Ложь, "ЗначениеПоУмолчанию");
		КонтрОбъект.Организации.Загрузить(Табл); КонецЕсли;
	
	// Установим новые значения
	
	Строка = ?(НоваяСтрока, КонтрОбъект.Организации.Добавить(), КонтрОбъект.Организации[ПараметрыДействий.НомерСтроки - 1]);
	стПараметры.Вставить("ТекущийНомерСтроки", Строка.НомерСтроки);
	
	стНомерДоговора = Строка.НомерДоговора;
	
	УстановитьРеквизит("НомерДоговора", 		Строка, ПараметрыДействий, Ложь);
	УстановитьРеквизит("Организация", 			Строка, ПараметрыДействий);
	УстановитьРеквизит("ДатаНачала", 			Строка, ПараметрыДействий);
	УстановитьРеквизит("ДатаОкончания", 		Строка, ПараметрыДействий);
	УстановитьРеквизит("ДокументВорд", 			Строка, ПараметрыДействий);
	УстановитьРеквизит("ЗначениеПоУмолчанию", 	Строка, ПараметрыДействий);
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(КонтрОбъект);
	
КонецФункции
&НаСервере
Функция УдалитьЗначенияУКонтрагента(ПараметрыДействий)
	
	КонтрОбъект = ПараметрыДействий.Контрагент.ПолучитьОбъект();
	
	КонтрОбъект.Организации.Удалить(ПараметрыДействий.НомерСтроки - 1);
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(КонтрОбъект);
	
КонецФункции

// ИНТЕРФЕЙС

&НаКлиенте
Процедура ТаблицаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда СтандартнаяОбработка = Ложь;
		
		Если Расшифровка.Действие = "Открыть" Тогда
			
			ДиалогиСПользователем.ОткрытьДокументВордДляПросмотра(
						Расшифровка.ДокументВорд, 
						Расшифровка.НомерДокумента - 1, 
						Новый Структура("Организация, Контрагент, Партнер, ИндексДоговора", 
											Расшифровка.Организация, 
											Расшифровка.Контрагент, 
											Расшифровка.Партнер, 
											Расшифровка.НомерСтроки - 1));
											
		ИначеЕсли Расшифровка.Действие = "Добавить" Тогда
			
			Расшифровка.НомерСтроки = 0; // значит добавлять
			ОбработатьУстановку(СтруктураИзмененияИзРасшифровки(Расшифровка));
			
		ИначеЕсли Расшифровка.Действие = "Установить" Тогда
					
			ОбработатьУстановку(СтруктураИзмененияИзРасшифровки(Расшифровка));
		
		ИначеЕсли 	Расшифровка.Действие = "Удалить" Тогда
			
			ОбработатьУдаление(СтруктураУдаленияИзРасшифровки(Расшифровка)); КонецЕсли;КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Функция ОбработатьУстановку(ПараметрыДействий)
	
	ПараметрыДействийССервера = Неопределено;
	
	Если УстановитьЗначенияУКонтрагента(ПараметрыДействий, ПараметрыДействийССервера) Тогда
		
		стПараметрыДействий = ПараметрыДействийССервера;
		стПараметрыДействий.Вставить("Действие", ПараметрыДействий.Действие);
		
		СформироватьПредставлениеОтмены();
		УправлениеВидимостьюДоступностью();
		
		Если ОбновлятьПослеУстановки Тогда ОбновитьТаблицу(); КонецЕсли;
		
	Иначе 
		ПоказатьПредупреждение(,"Установить выбранные значения не удалось.",,"предупреждение"); Возврат Ложь; КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции
&НаКлиенте
Функция ОбработатьУдаление(ПараметрыДействий)
	
	Если УдалитьЗначенияУКонтрагента(ПараметрыДействий) Тогда
		
		стПараметрыДействий = ПараметрыДействий;
		стПараметрыДействий.Вставить("Действие", ПараметрыДействий.Действие);
		
		СформироватьПредставлениеОтмены();
		УправлениеВидимостьюДоступностью();
		
		Если ОбновлятьПослеУстановки Тогда ОбновитьТаблицу(); КонецЕсли;
		
	Иначе 
		ПоказатьПредупреждение(,"Удалить не удалось.",,"Предупреждение"); Возврат Ложь; КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СтрокаОтменыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Отработал				= Ложь;
	
	Если стПараметрыДействий.Действие = "Установить" Тогда
		
		стПараметрыДействий.Вставить("Переписать", 	Истина);
		стПараметрыДействий.Вставить("НомерСтроки", стПараметрыДействий.ТекущийНомерСтроки);
		Отработал = УстановитьЗначенияУКонтрагента(стПараметрыДействий);
		
	ИначеЕсли стПараметрыДействий.Действие = "Удалить" Тогда
		
		стПараметрыДействий.Вставить("Переписать", 	Истина);
		стПараметрыДействий.Вставить("НомерСтроки", 0); // новая строка
		Отработал = УстановитьЗначенияУКонтрагента(стПараметрыДействий);
		
	ИначеЕсли стПараметрыДействий.Действие = "Добавить" Тогда
		
		стПараметрыДействий.Вставить("НомерСтроки", стПараметрыДействий.ТекущийНомерСтроки);
		Отработал = УдалитьЗначенияУКонтрагента(стПараметрыДействий); КонецЕсли;
	
	Если Отработал Тогда
		
		стПараметрыДействий = Неопределено;
		УправлениеВидимостьюДоступностью();
		ОбновитьТаблицу(); КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	ОбновитьТаблицу();
	
КонецПроцедуры
