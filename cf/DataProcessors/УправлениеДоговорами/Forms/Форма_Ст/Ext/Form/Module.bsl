
&НаСервере
Процедура ОбновитьТаблицу()
	
	//Получаем схему из макета
	СхемаКомпоновкиДанных = Обработки.УправлениеДоговорами.ПолучитьМакет("Запрос");

	//Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	//Помещаем в переменную данные о расшифровке данных
	НовыеДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки 	= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, НовыеДанныеРасшифровки);
	ДанныеРасшифровки 	= ПоместитьВоВременноеХранилище(НовыеДанныеРасшифровки, УникальныйИдентификатор);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,, НовыеДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	Взаиморасчеты.Очистить();

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Взаиморасчеты);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Загрузим компановщик настроек
	
	Макет = Обработки.РабочийСтолРуководителя.ПолучитьМакет("Взаиморасчеты");
	Объект.КомпановщикНастроек.ЗагрузитьНастройки(Макет.НастройкиПоУмолчанию);
	Объект.КомпановщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Макет));
	
КонецПроцедуры
