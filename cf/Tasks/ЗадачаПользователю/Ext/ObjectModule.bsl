
Процедура ПередЗаписью(Отказ)
	
	// Зполним заказ
	
	Если Заказ = Неопределено Тогда
		ИмяБП = БизнесПроцесс.Метаданные().Имя;
		
		Если ИмяБП = "ПеремещениеТоваров" Тогда	
			Заказ = БизнесПроцесс.Заказчик.Заказ;
			
		ИначеЕсли ИмяБП = "ЗаявкаПокупателя" Или ИмяБП = "СборкаЗаказа" Или ИмяБП = "ИнтернетЗаявка" ИЛИ ИмяБП = "СогласованиеЗаказаПоставщику" Тогда
			Заказ = БизнесПроцесс.Заказ;
			
		ИначеЕсли ИмяБП = "РемонтИнструмента" Тогда
			Заказ = БизнесПроцесс.ЗаказНаряд; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Процедура ПередВыполнением(Отказ)
	
	Перем КонтрольАдресации;

	Если НЕ ДополнительныеСвойства.Свойство("КонтрольАдресации", КонтрольАдресации) Тогда
		КонтрольАдресации = Истина;
	КонецЕсли;
	
	Если 	КонтрольАдресации И
			Не КэшируемыеФункции.ЭтоПолныеПрава() И
			Не РольДоступна("ВыполнятьЛюбуюЗадачу") И
			Не ФункцииБизнесПроцессов.РазрешенаЗадачаКВыполнению(ЭтотОбъект) Тогда
		
		ОбщиеФункции.СообщитьТекст("Вам запрещено выполнять задачу
				|проверте на соответствие назначения задачи по исполнителю (кнопка ""адресация заадачи""");
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Исполнитель 	= ПараметрыСеанса.ТекущийПользователь;
		ДатаВыполнения 	= ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// Запишем статус БП
	
	Если 	ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.ЗадачаРазработчику") И
			Выполнена = Ложь Тогда
		
		// Проверим есть ли старше
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1 Истина 
		|ИЗ 		Задача.ЗадачаПользователю 
		|
		|ГДЕ 		БизнесПроцесс 	= &БизнесПроцесс И 
		|			Выполнена 		= Ложь И
		|			ПометкаУдаления = Ложь И
		|			Дата > &Дата
		|");
		
		Запрос.УстановитьПараметр("БизнесПроцесс", 	БизнесПроцесс);
		Запрос.УстановитьПараметр("Дата", 			Дата);
		
		Если Запрос.Выполнить().Пустой() Тогда
		
			// Запишем
			
			Запись = РегистрыСведений.СтатусыБП.СоздатьМенеджерЗаписи();
			Запись.Статус 			= Ссылка;
			Запись.БизнесПроцесс 	= БизнесПроцесс;
			
			Попытка
				Запись.Записать();
			Исключение
				ОбщиеФункции.СообщитьТекст(ОписаниеОшибки());
				Отказ = Истина;
			КонецПопытки;
			
		КонецЕсли;
	КонецЕсли;
	
	// Проверим что нужно бы напомнить
	
	Если 	ЭтотОбъект.ТочкаМаршрута <> БизнесПроцессы.ЗаявкаПокупателя.ТочкиМаршрута.СборкаЗаказа И
			//ЭтотОбъект.ТочкаМаршрута <> БизнесПроцессы.СборкаЗаказа.ТочкиМаршрута.Переместить И
			//ЭтотОбъект.ТочкаМаршрута <> БизнесПроцессы.СборкаЗаказа.ТочкиМаршрута.ПереместитьКогдаСобран И
			ЭтотОбъект.ТочкаМаршрута <> БизнесПроцессы.ИнтернетЗаявка.ТочкиМаршрута.СборкаЗаказа Тогда
			
		Если Выполнена Тогда
			
			Если Не НапоминанияСервер.УдалитьНапоминаниеПоИсточнику(Ссылка) Тогда
				Отказ = Истина;
			КонецЕсли;
			
		Иначе
			
			НапоминанияСервер.УстановитьНапоминание(
				Новый Структура("Склад, Роль, Пользователь",
								Склад, Роль, Пользователь),
				Ссылка,
				"Вам назначена задача:
				|" + Наименование);
			
		КонецЕсли;
			
	КонецЕсли;
	
	// Установим паралелльность (медлено но куда деыацо, торплюсь я)
	
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.СборкаЗаказа") Тогда
		
		Задачи.ЗадачаПользователю.УстановитьФлагПараллельныхЗадач(БизнесПроцесс,,Ссылка);
		
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.ПеремещениеТоваров") Тогда
		
		Задачи.ЗадачаПользователю.УстановитьФлагПараллельныхЗадач(БизнесПроцесс.Заказчик,,Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры
