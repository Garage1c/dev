
Процедура ЛогЗапроса(Запрос, ТелоЭтоФайл = Ложь)
	
	Если Константы.обм_ВестиЛогЗапросов.Получить() Тогда
	
		Результат = ">> " + Запрос.HTTPМетод + " -> " + Запрос.ОтносительныйURL + Символы.ПС;
		Результат = Результат + Запрос.БазовыйURL + Символы.ПС;
		Результат = Результат + "Заголовки:" + Символы.ПС;
			
		Для каждого Параметр Из Запрос.Заголовки Цикл Результат = Результат + Параметр.Ключ + ":" + Параметр.Значение + Символы.ПС; КонецЦикла;
		Результат = Результат + "Параметры URL:" + Символы.ПС;
		Для каждого Параметр Из Запрос.ПараметрыURL Цикл Результат = Результат + Параметр.Ключ + ":" + Параметр.Значение + Символы.ПС; КонецЦикла;
		Результат = Результат + "Параметры запроса:" + Символы.ПС;
		Для каждого Параметр Из Запрос.ПараметрыЗапроса Цикл Результат = Результат + Параметр.Ключ + ":" + Параметр.Значение + Символы.ПС; КонецЦикла;
			
		Результат = Результат + "Тело запроса:" + Символы.ПС + ?(ТелоЭтоФайл, " тело это файл не логируется ", Запрос.ПолучитьТелоКакСтроку());
			
		Запись = РегистрыСведений.обм_ЛогЗапросов.СоздатьМенеджерЗаписи();
		Запись.ИДзапроса = Новый УникальныйИдентификатор;
		Запись.Дата 		= ТекущаяДата(); 
		Запись.СокрТекст 	= Результат;
		Запись.Текст 		= Результат;
		Запись.Записать(); КонецЕсли;
	
КонецПроцедуры
Процедура ЛогОтвета(Ответ, ТелоЭтоФайл = Ложь)
	
	Если Константы.обм_ВестиЛогЗапросов.Получить() Тогда
	
		Результат = "<< " + Ответ.КодСостояния + " " + Ответ.Причина + Символы.ПС;
		Результат = Результат + "Заголовки:" + Символы.ПС;
		Для каждого Параметр Из Ответ.Заголовки Цикл Результат = Результат + Параметр.Ключ + ":" + Параметр.Значение + Символы.ПС; КонецЦикла;
		
		Результат = Результат + "Тело ответа:" + Символы.ПС + ?(ТелоЭтоФайл, " тело это файл не логируется ", Ответ.ПолучитьТелоКакСтроку());
		
		Запись = РегистрыСведений.обм_ЛогЗапросов.СоздатьМенеджерЗаписи();
		Запись.ИДзапроса = Новый УникальныйИдентификатор;
		Запись.Дата 		= ТекущаяДата(); 
		Запись.СокрТекст 	= Результат;
		Запись.Текст 		= Результат;
		Запись.Записать(); КонецЕсли;
	
КонецПроцедуры

Функция ЗаголовкиЗаполнены(Запрос, кодОшибки, стрОшибки, З1 = Ложь, З2 = Ложь, З3 = Ложь)
	
	Структура = Новый Структура("ИдОбмена, ИдНабора, КлючОбъекта");
	
	Если З1 Тогда
		Структура.ИдОбмена = Запрос.Заголовки["exh1-txt"];
		Если Структура.ИдОбмена = Неопределено Тогда
			кодОшибки = 500;
			стрОшибки = "В заголовке ну установлен идентификатор обмена (exh1-txt)";
			Возврат Неопределено; КонецЕсли; КонецЕсли;
	
	Если З2 Тогда
		Структура.ИдНабора = Запрос.Заголовки["exh2-txt"];
		Если Структура.ИдНабора = Неопределено Тогда 
			кодОшибки = 500;
			стрОшибки = "В заголовке ну установлен идентификатор набора (exh2-txt)";
			Возврат Неопределено; КонецЕсли; КонецЕсли;

	Если З3 Тогда
		Структура.КлючОбъекта = Запрос.Заголовки["exh3-txt"];
		Если Структура.ИдНабора = Неопределено Тогда 
			кодОшибки = 500;
			стрОшибки = "В заголовке ну установлен идентификатор объекта (exh3-txt)";
			Возврат Неопределено; КонецЕсли; КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

Функция ПолучитьНаборИзЗапроса(Запрос, кодОшибки, стрОшибки)
	
	Заголовки = ЗаголовкиЗаполнены(Запрос, кодОшибки, стрОшибки, Истина, Истина);
	Если Заголовки = Неопределено Тогда Возврат Неопределено КонецЕсли;
	
	// Определим каким правилом обрабатывать запрос вытащив их из заголовка
	
	ЗапросПоиска = Новый Запрос("
	|ВЫБРАТЬ Ссылка ИЗ Справочник.обм_НаборыДанных 
	|ГДЕ 	НЕ ПометкаУдаления И 
	|		Активно И
	|		Наименование 			= """ + Заголовки.ИдНабора + """ И
	|		Владелец.Наименование 	= """ + Заголовки.ИдОбмена + """ И
	|		НЕ Владелец.ПометкаУдаления");
	Выборка = ЗапросПоиска.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 1 Тогда
		
		кодОшибки = 500;
		стрОшибки = "Обмен (" + Заголовки.ИдОбмена + "); Набор (" + Заголовки.ИдНабора + ") найдено больше 1";
		Возврат Неопределено;
		
	ИначеЕсли Не Выборка.Количество() Тогда	
		
		кодОшибки = 500;
		стрОшибки = "Обмен (" + Заголовки.ИдОбмена + "); Набор (" + Заголовки.ИдНабора + ") не найдено";
		Возврат Неопределено; КонецЕсли;
		
		
	Выборка.Следующий(); 
	Возврат Выборка.Ссылка;
	
КонецФункции
Функция ПолучитьОбменИзЗапроса(Запрос, КодОшибки, стрОшибки)
	
	ИдОбмена = Запрос.Заголовки["exh1-txt"];
	Если ИдОбмена = Неопределено Тогда
		кодОшибки = 500;
		стрОшибки = "В заголовке ну установлен идентификатор обмена (exh1-txt)";
		Возврат Неопределено; КонецЕсли;
	
	// Определим каким правилом обрабатывать запрос вытащив их из заголовка
	
	ЗапросПоиска = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.обм_ОбменДанными ГДЕ НЕ ПометкаУдаления И Наименование = """ + ИдОбмена + """");
	Выборка = ЗапросПоиска.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 1 Тогда
		
		кодОшибки = 500;
		стрОшибки = "Обмен (" + ИдОбмена + "); найдено больше 1";
		Возврат Неопределено;
		
	ИначеЕсли Не Выборка.Количество() Тогда	
		
		кодОшибки = 500;
		стрОшибки = "Обмен (" + ИдОбмена + "); не найдено";
		Возврат Неопределено; КонецЕсли;
		
	Выборка.Следующий(); 
	Возврат Выборка.Ссылка;
	
КонецФункции

Функция ВернутьОшибку(КодСостояния, ТекстОшибки)
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния, ТекстОшибки);
	Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
	
	ЛогОтвета(Ответ);
	
	Возврат Ответ;
	
КонецФункции
Функция ДанныеОтправить(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	// Получает данные из другой базы обмена и записывает данные в текущей базе
	
	ЛогЗапроса(Запрос);
	
	// Проверим чтобы в заголовках содержалась необходимая информация
	
	Набор = ПолучитьНаборИзЗапроса(Запрос, кодОшибки, стрОшибки);
	Если Набор = Неопределено Тогда Возврат ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;

	// Прочитаем JSON
	
	стрОшибки = "";
	Данные = обм_Обмен.ПреобразоватьИзJSON(Запрос.ПолучитьТелоКакСтроку(), стрОшибки,, Набор.ПоляДат);
	Если Данные = Неопределено Тогда Возврат ВернутьОшибку(418, стрОшибки); КонецЕсли;
	
	// Отправим на прием
	
	Результат = обм_Обмен.ПринятьНаборДанных(Набор, Данные, Новый Соответствие, стрОшибки);
	Если Не Результат Тогда Возврат ВернутьОшибку(418, стрОшибки); КонецЕсли;
	
	// Вернем результат
	
	Ответ = Новый HTTPСервисОтвет(200);
	ЛогОтвета(Ответ);
	
	Возврат Ответ;
	
КонецФункции

Функция МетаданныеПолучить(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	// Получает данные из другой базы обмена и записывает данные в текущей базе
	
	ЛогЗапроса(Запрос);
	
	// Проверим чтобы в заголовках содержалась необходимая информация
	
	Обмен = ПолучитьОбменИзЗапроса(Запрос, КодОшибки, стрОшибки);
	Если Обмен = Неопределено Тогда ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;
	
	стрОтвет = обм_Обмен.ПреобразоватьВJSON(,обм_Обмен.ПолучитьСтруктуруКонфигурации(Обмен), Новый Соответствие);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(стрОтвет);
	
	ЛогОтвета(Ответ);
	
	Возврат Ответ;
	
КонецФункции

Функция ДанныеПолучить(Запрос)
	ЛогЗапроса(Запрос);
	Ответ = Новый HTTPСервисОтвет(200);
	ЛогОтвета(Ответ);
	Возврат Ответ;
КонецФункции

Функция ОбъектПолучить(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	КэшДанные = Новый Соответствие;
	
	// Получает данные из другой базы обмена и записывает данные в текущей базе
	
	ЛогЗапроса(Запрос);
	
	// Получим набор
	
	Набор = ПолучитьНаборИзЗапроса(Запрос, кодОшибки, стрОшибки);
	Если Набор = Неопределено Тогда Возврат ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;
	
	// Получим ключ
	
	стрКлюч = Запрос.ПолучитьТелоКакСтроку();
	Ключ 	= обм_Обмен.ПреобразоватьИзJSON(стрКлюч, стрОшибки);
	Если Ключ = Неопределено Тогда
		Возврат ВернутьОшибку(500, "Ошибка получения ключа из JSON " + Набор + " " + стрКлюч + " " + стрОшибки) КонецЕсли;
	
	// Получим объект по ключу
	
	Ссылка = обм_Среда.ПолучитьСсылкуПоКлючу(Ключ, Набор, КэшДанные);
	Если Ссылка = Неопределено Тогда
		Возврат ВернутьОшибку(500, "не нашлась ссылка по ключу " + Набор + " " + ЗначениеВСтрокуВнутр(Ключ)) КонецЕсли;
	
	Массив = Новый Массив;
	Массив.Добавить(Ссылка);
	Данные = обм_Обмен.ВычислитьСтруктуруПоНаборуДанных(Набор, Массив, КэшДанные);
	Если ТипЗнч(Данные) <> Тип("Массив") Или Не Данные.Количество() Тогда
		Возврат ВернутьОшибку(500, "нет данных для объекта " + Набор + " " + ЗначениеВСтрокуВнутр(Ключ)) КонецЕсли;
	
	// Упакуем
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(обм_Обмен.ПреобразоватьВJSON(Набор, Данные[0], КэшДанные));
	
	// Вернем
	
	ЛогОтвета(Ответ);
	Возврат Ответ;
	
КонецФункции

Функция НаборСоздать(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	// Получим обмен
	
	Обмен = ПолучитьОбменИзЗапроса(Запрос, КодОшибки, стрОшибки);
	Если Обмен = Неопределено Тогда ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;
	
	// Получим набор
	
	ИдНабора = Запрос.Заголовки["exh2-txt"];
	Если ИдНабора = Неопределено Тогда 
		Возврат ВернутьОшибку(500, "В заголовке ну установлен идентификатор набора (exh2-txt)"); КонецЕсли;

	// Прочитаем JSON
	
	стрОшибки = "";
	Данные = обм_Обмен.ПреобразоватьИзJSON(Запрос.ПолучитьТелоКакСтроку(), стрОшибки);
	Если Данные = Неопределено Тогда Возврат ВернутьОшибку(418, стрОшибки); КонецЕсли;

	// Создадим и обновим набор новыми данными
	
	Набор = Справочники.обм_НаборыДанных.СоздатьЭлемент();
	Набор.Владелец 		= Обмен;
	Набор.Наименование 	= ИдНабора;
	
	Если Не обм_Обмен.ИзменитьНаборПоJSONНабору(Набор, Данные, стрОшибки) Тогда
		Возврат ВернутьОшибку(500, стрОшибки); КонецЕсли;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции
Функция НаборИзменить(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	ЛогЗапроса(Запрос);
	
	// Получим набор
	
	Набор = ПолучитьНаборИзЗапроса(Запрос, кодОшибки, стрОшибки);
	Если Набор = Неопределено Тогда ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;
	
	// Прочитаем JSON
	
	стрОшибки = "";
	Данные = обм_Обмен.ПреобразоватьИзJSON(Запрос.ПолучитьТелоКакСтроку(), стрОшибки);
	Если Данные = Неопределено Тогда Возврат ВернутьОшибку(418, стрОшибки); КонецЕсли;

	// Обновим набор новыми данными
	
	Если обм_Обмен.ИзменитьНаборПоJSONНабору(Набор.ПолучитьОбъект(), Данные, стрОшибки) Тогда
		ВернутьОшибку(500, стрОшибки); КонецЕсли;
	
	// Вернем ок
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции
Функция НаборПолучть(Запрос)
	
	Перем стрОшибки, кодОшибки;
	
	ЛогЗапроса(Запрос);
	
	// Получим набор
	
	Набор = ПолучитьНаборИзЗапроса(Запрос, кодОшибки, стрОшибки);
	Если Набор = Неопределено Тогда ВернутьОшибку(кодОшибки, стрОшибки); КонецЕсли;
	
	// Вернем набор
	
	стрОтвет = обм_Обмен.ПреобразоватьВJSON(,обм_Обмен.ПолучитьСтруктуруКонфигурации(Набор.Владелец, "Наборы", Набор), Новый Соответствие);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(стрОтвет);
	
	Возврат Ответ;
	
КонецФункции
