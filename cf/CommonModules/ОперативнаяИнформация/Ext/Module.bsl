Функция ДобавитьПолеФормы(Элементы, Имя, ПутьКДанным, Родитель, ВидПоляФормы, Заголовок = Неопределено, ОбработчикПриНажатии = "", ТолькоПросмотр = Ложь)
      
	НовоеПоле = Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);
	НовоеПоле.Вид = ВидПоляФормы;
	НовоеПоле.ПутьКДанным = ПутьКДанным;
	НовоеПоле.Заголовок = ?(ЗначениеЗаполнено(Заголовок), Заголовок, "");
	НовоеПоле.ТолькоПросмотр = ТолькоПросмотр;
	НовоеПоле.ПоложениеЗаголовка = ?(ЗначениеЗаполнено(Заголовок), ПоложениеЗаголовкаЭлементаФормы.Авто, ПоложениеЗаголовкаЭлементаФормы.Нет);
   	НовоеПоле.ЦветРамки = Новый Цвет(252, 250, 235);

	Если ЗначениеЗаполнено(ОбработчикПриНажатии) Тогда
		НовоеПоле.УстановитьДействие("ПриНажатии", ОбработчикПриНажатии);
	КонецЕсли;
	
	Возврат НовоеПоле;
	
КонецФункции
Функция ДобавитьГруппуФормы(Элементы, Имя, Родитель, Заголовок = Неопределено)

	НоваяГруппа = Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);	
	НоваяГруппа.Заголовок = ?(ЗначениеЗаполнено(Заголовок), Заголовок, "");
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	НоваяГруппа.ОтображатьЗаголовок = Ложь;
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Возврат НоваяГруппа;
	
КонецФункции

Процедура ДобавитьОперативнуюИнформациюОПартнере(Форма, ОтображатьЦены = Истина) Экспорт
	
	// Реквизиты
	
	ТипСтрока 	= Новый ОписаниеТипов("Строка");
	РеквизитыИнфТовара = Новый Массив;
	
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераЗаголовок", 		ТипСтрока));
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераHTML", 		ТипСтрока));
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераОтображать",		Новый ОписаниеТипов("Булево")));
	
	Форма.ИзменитьРеквизиты(РеквизитыИнфТовара);

	НоваяКоманда = Форма.Команды.Добавить("ПоказатьСкрытьИнформацию");
	НоваяКоманда.Действие		= "ПоказатьСкрытьИнформацию";
    НоваяКоманда.Подсказка		= "Показать, скрыть оперативную информацию в выделенных строках таблицы";
	НоваяКоманда.Картинка		= БиблиотекаКартинок.ИнформацияОТоваре;
	НоваяКоманда.Отображение 	= ОтображениеКнопки.Картинка;
		
	// Элементы
	
	Группа = Форма.Элементы.ГруппаОперативнойИнформации;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа.РастягиватьПоВертикали = Истина;
	
	ГруппаШапка = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнформацияШапка", Группа);
	ГруппаШапка.Ширина = 0;
	ГруппаШапка.Высота = 6;
	ГруппаШапка.РастягиватьПоВертикали = Ложь;

	//ГруппаКартинкаКнопки = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнфКартинкаКнопки", ГруппаШапка);
	//ГруппаКартинкаКнопки.Ширина = 0;
	//ГруппаКартинкаКнопки.Высота = 6;
	//ГруппаКартинкаКнопки.РастягиватьПоВертикали = Ложь;
	//ГруппаКартинкаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	
	ГруппаКнопки = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнформацияКнопки", ГруппаШапка);
	ГруппаКнопки.Ширина = 0;
	ГруппаКнопки.Высота = 6;
	ГруппаКнопки.РастягиватьПоВертикали = Ложь;
	ГруппаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	Кнопка = Форма.Элементы.Добавить("ИнфПартнераКнопка", Тип("КнопкаФормы"), ГруппаКнопки);
	Кнопка.Заголовок 	= "";
	Кнопка.ИмяКоманды 	= "ПоказатьСкрытьИнформацию";


	//ГруппаШапка = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнфТовараШапка", Группа);
	//ГруппаШапка.Ширина = 0;
	//ГруппаШапка.Высота = 5;
	//ГруппаШапка.РастягиватьПоВертикали = Ложь;
		
	//ПолеКартинки  = ДобавитьПолеФормы(Форма.Элементы, "ИнфТовараКартинка",  "ИнфТовараАдресКартинки", ГруппаКартинкаКнопки, ВидПоляФормы.ПолеКартинки);
	//ПолеКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	//ПолеКартинки.Ширина = 10;
	//ПолеКартинки.Высота = 5;
	//ПолеКартинки.РастягиватьПоВертикали = Ложь;
	//ПолеКартинки.РастягиватьПоГоризонтали = Ложь;
	//ПолеКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;
	
	ПолеЗаголовка = ДобавитьПолеФормы(Форма.Элементы, "ИнфПартнераЗаголовок", "ИнфПартнераЗаголовок",	 ГруппаШапка, ВидПоляФормы.ПолеHTMLДокумента, ,"ИнфПартнераЗаголовокHTMLПриНажатии");
	ПолеЗаголовка.Ширина = 20;
	
	ПолеТело = ДобавитьПолеФормы(Форма.Элементы, "ИнфПартнераHTML", "ИнфПартнераHTML", Группа, ВидПоляФормы.ПолеHTMLДокумента, ,"ИнфТекстHTMLПриНажатии");
	ПолеТело.Ширина = 20;
	
	// раскрасим
	
	Форма.ИнфПартнераЗаголовок = "<html><body bgcolor=""#FCFAEB""></body></html>";
	Форма.ИнфПартнераHTML = "<html><body bgcolor=""#FCFAEB""></body></html>";	
	
	ОбработатьОтображениеИнфОПартнере(Форма) 
	
КонецПроцедуры

Процедура ДобавитьОперативнуюИнформациюОКонтрагенте(Форма, ОтображатьЦены = Истина) Экспорт
	
	// Реквизиты
	
	ТипСтрока 	= Новый ОписаниеТипов("Строка");
	РеквизитыИнфТовара = Новый Массив;
	
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераЗаголовок", 		ТипСтрока));
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераHTML", 		ТипСтрока));
	РеквизитыИнфТовара.Добавить(Новый РеквизитФормы("ИнфПартнераОтображать",		Новый ОписаниеТипов("Булево")));
	
	Форма.ИзменитьРеквизиты(РеквизитыИнфТовара);

	НоваяКоманда = Форма.Команды.Добавить("ПоказатьСкрытьИнформацию");
	НоваяКоманда.Действие		= "ПоказатьСкрытьИнформацию";
    НоваяКоманда.Подсказка		= "Показать, скрыть оперативную информацию в выделенных строках таблицы";
	НоваяКоманда.Картинка		= БиблиотекаКартинок.ИнформацияОТоваре;
	НоваяКоманда.Отображение 	= ОтображениеКнопки.Картинка;
		
	// Элементы
	
	Группа = Форма.Элементы.ГруппаОперативнойИнформации;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа.РастягиватьПоВертикали = Истина;
	
	ГруппаШапка = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнформацияШапка", Группа);
	ГруппаШапка.Ширина = 0;
	ГруппаШапка.Высота = 6;
	ГруппаШапка.РастягиватьПоВертикали = Ложь;

	//ГруппаКартинкаКнопки = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнфКартинкаКнопки", ГруппаШапка);
	//ГруппаКартинкаКнопки.Ширина = 0;
	//ГруппаКартинкаКнопки.Высота = 6;
	//ГруппаКартинкаКнопки.РастягиватьПоВертикали = Ложь;
	//ГруппаКартинкаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	
	ГруппаКнопки = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнформацияКнопки", ГруппаШапка);
	ГруппаКнопки.Ширина = 0;
	ГруппаКнопки.Высота = 6;
	ГруппаКнопки.РастягиватьПоВертикали = Ложь;
	ГруппаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	Кнопка = Форма.Элементы.Добавить("ИнфПартнераКнопка", Тип("КнопкаФормы"), ГруппаКнопки);
	Кнопка.Заголовок 	= "";
	Кнопка.ИмяКоманды 	= "ПоказатьСкрытьИнформацию";


	//ГруппаШапка = ДобавитьГруппуФормы(Форма.Элементы, "ГруппаИнфТовараШапка", Группа);
	//ГруппаШапка.Ширина = 0;
	//ГруппаШапка.Высота = 5;
	//ГруппаШапка.РастягиватьПоВертикали = Ложь;
		
	//ПолеКартинки  = ДобавитьПолеФормы(Форма.Элементы, "ИнфТовараКартинка",  "ИнфТовараАдресКартинки", ГруппаКартинкаКнопки, ВидПоляФормы.ПолеКартинки);
	//ПолеКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	//ПолеКартинки.Ширина = 10;
	//ПолеКартинки.Высота = 5;
	//ПолеКартинки.РастягиватьПоВертикали = Ложь;
	//ПолеКартинки.РастягиватьПоГоризонтали = Ложь;
	//ПолеКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;
	
	ПолеЗаголовка = ДобавитьПолеФормы(Форма.Элементы, "ИнфПартнераЗаголовок", "ИнфПартнераЗаголовок",	 ГруппаШапка, ВидПоляФормы.ПолеHTMLДокумента, ,"ИнфПартнераЗаголовокHTMLПриНажатии");
	ПолеЗаголовка.Ширина = 20;
	
	ПолеТело = ДобавитьПолеФормы(Форма.Элементы, "ИнфПартнераHTML", "ИнфПартнераHTML", Группа, ВидПоляФормы.ПолеHTMLДокумента, ,"ИнфТекстHTMLПриНажатии");
	ПолеТело.Ширина = 20;
	
	// раскрасим
	
	Форма.ИнфПартнераЗаголовок = "<html><body bgcolor=""#FCFAEB""></body></html>";
	Форма.ИнфПартнераHTML = "<html><body bgcolor=""#FCFAEB""></body></html>";	
	
	ОбработатьОтображениеИнфОПартнере(Форма) 
	
КонецПроцедуры

Процедура ОбработатьОтображениеИнфОПартнере(Форма, ЭлементСписок = "Список", ФормаСписок = "Список", ТекущаяСтрока = Неопределено) Экспорт
	
	ИнфПартнераОтображать 	= Форма.ИнфПартнераОтображать;
	
	Форма.Элементы.ИнфПартнераHTML.Видимость 		= ИнфПартнераОтображать;
	Форма.Элементы.ИнфПартнераЗаголовок.Видимость 		= ИнфПартнераОтображать;
	
	Если ИнфПартнераОтображать Тогда
		
		Если ТекущаяСтрока = Неопределено Тогда
			ТекущаяСтрока = ПолучитьВыделеннуюСтроку(Форма, ЭлементСписок, ФормаСписок); КонецЕсли;
		
        Если ТекущаяСтрока <> Неопределено Тогда

			ИнформацияОПартнере = ПолучитьИнформациюПартнераHTML(ТекущаяСтрока);
						
			Форма.ИнфПартнераЗаголовок 	= ИнформацияОПартнере.Заголовок;
			Форма.ИнфПартнераHTML 		= ИнформацияОПартнере.ТекстHTML; КонецЕсли; КонецЕсли;

КонецПроцедуры

Функция ПолучитьВыделеннуюСтроку(Форма, ЭлементСписок = "Список", ФормаСписок = "Список")
	
	Строки = Форма.Элементы[ЭлементСписок].ВыделенныеСтроки;	
	
	Если Строки.Количество() Тогда Возврат Строки[0]; КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьИнформациюПартнераHTML(ТекущаяСтрока)
	
	Структура = Новый Структура("Заголовок, ТекстHTML","","");
	                                    
	Заголовок 	= "";
	Структура.ТекстHTML 	= ПолучитьТекстHTMLДляПартнера(ТекущаяСтрока, Заголовок);
	Структура.Заголовок		= Заголовок;
		
	Возврат Структура;
	
КонецФункции

Функция СформироватьЗаголовокПартнераHTML(Ссылка, Долги, КонтактнаяИнформация) Экспорт
			

	Заголовок = "<b>" + Ссылка.Код + "</b> " + Ссылка.Наименование + ":";

	Возврат "<HTML><HEAD>
		|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
		|<META name=GENERATOR content=""MSHTML 8.00.7601.17655""></HEAD>
		|<BODY bgcolor=""#FCFAEB"" style=""font-family: Verdana,Geneva,sans-serif;font-size:12px;""> 
		|<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"" >
	  //  |	<tr style=""font-family: Verdana,Geneva,sans-serif;font-size:12px;"">
	  //|		<td align=""right"" valign=""top"">
	  //  |		<INPUT Type=""checkbox""" + ?(Долги, " checked=""checked""", "") + " id=""CheckStock"" VALUE=""1"" style=""width: 20px; height:20px; border:none; color:#fff; background-color:#FCFAEB;"">Остатки
	  //  |		<INPUT Type=""checkbox""" + ?(КонтактнаяИнформация, " checked=""checked""", "") + " id=""CheckPrice"" VALUE=""2"" style="" width: 20px;height:20px;border: none;color:#fff;background-color:#FCFAEB;"">Цены
	  //  |	</td></tr>
		|	<tr align=""left"" style=""font-family: Verdana,Geneva,sans-serif;font-size:12px;""><td><br>" + Заголовок + "
		|	</td></tr>
		|</table>
		|</BODY></HTML>";
	
КонецФункции
Функция ПолучитьТекстHTMLДляПартнера(ТекущаяСтрока, ТекстЗаголовка = "") Экспорт
		
	ПустойТекст = "<HTML><BODY bgcolor=""#FCFAEB""></BODY></HTML>";
	
	ПоказыватьКонтактнуюИнформацию	= Истина;
	ПоказыватьДолги		= Истина;
	ПоказыватьЗаказы	= Истина;
	
	СоотвПакетов = Новый Соответствие;
	
	Инд = 0;
    ТекстЗапроса = "";	
	
	// ЗАГОЛОВОК
	
	СоотвПакетов.Вставить("Шапка", Инд);
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "","",";") + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР КОГДА ПОДСТРОКА(НаименованиеПолное, 1, 255) = """" ТОГДА Наименование ИНАЧЕ ПОДСТРОКА(НаименованиеПолное, 1, 255) КОНЕЦ Наименование,
	|	Код
	|ИЗ
	|	Справочник.Контрагенты
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|";
			
	// ИНФОРМАЦИЯ ПО ДОЛГАМ
	 
	Если ПоказыватьДолги Тогда
			
		Инд = Инд + 1;
		СоотвПакетов.Вставить("Долги", Инд);

		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "","",";") + "
			|ВЫБРАТЬ
			|	Рег.Организация,
			|	Рег.Организация.Код Код,
			|	МАКСИМУМ(ЕСТЬNULL(Спр.ЗначениеПоУмолчанию, Ложь)) Основная,
			|	МАКСИМУМ(Рег.СуммаОстаток) Долг
			|ИЗ
			|	РегистрНакопления.Взаиморасчеты.Остатки(, Контрагент = &Ссылка) Рег
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|	Справочник.Контрагенты.Организации Спр
			|	ПО Рег.Контрагент = Спр.Ссылка.Контрагент И Спр.Организация = Рег.Организация
			|   СГРУППИРОВАТЬ ПО Рег.Организация 
			|";
			
	КонецЕсли;
		
	// КОНТАКТНАЯ ИНФОРМАЦИЯ
	
	Если ПоказыватьКонтактнуюИнформацию Тогда
			
		Инд = Инд + 1;
		СоотвПакетов.Вставить("КонтактнаяИнформация", Инд);
		
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "","",";") + "
		|ВЫБРАТЬ
        |	Вид,
		|	ПОДСТРОКА(Представление,1,255) Представление
		|ИЗ
		|	РегистрСведений.ПредставлениеКонтактнойИнформации
		|ГДЕ
		|	Объект = &Ссылка
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ
        |	Вид,
		|	ПОДСТРОКА(Представление,1,255) Представление
		|ИЗ
		|	РегистрСведений.ПредставлениеКонтактнойИнформации
		|ГДЕ
		|	Объект В (ВЫБРАТЬ Ссылка ИЗ Справочник.Контрагенты ГДЕ Контрагент = &Ссылка)
		|";	
	КонецЕсли;	
	Если ПоказыватьЗаказы Тогда	
		
		Инд = Инд + 1;
		СоотвПакетов.Вставить("Заказы", Инд);
		
		
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "","",";") + "
		|ВЫБРАТЬ ПЕРВЫЕ 5
		|	Зак.Заказ	Заказ,
		|	Зак.Заказ.Организация.Префикс Префикс,
		|	Зак.Заказ.Номер Номер,
		|	Зак.Заказ.Дата	Дата,
		|	Зак.СуммаПриход Заказано,
		|	ЕСТЬNULL(Прод.СуммаПриход, 0) Отгружено,
		|	Зак.СуммаРасход Оплачено
  		|ИЗ
		|	РегистрНакопления.ДолгиПоЗаказам.Обороты(,,, Контрагент = &Ссылка) Зак
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ДолгиПоОтгрузкам.Обороты(,,, Контрагент = &Ссылка) Прод
		|	ПО Прод.Заказ = Зак.Заказ
		|
		|УПОРЯДОЧИТЬ ПО Зак.Заказ.Дата Убыв
		|";
		
	КонецЕсли;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПлатежноеПоручениеВходящее"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОплатаБанковскойКартой"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", 	ТекущаяСтрока);
    Запрос.УстановитьПараметр("МассивТипов", МассивТипов);
	
	
	Результаты = Запрос.ВыполнитьПакет();
	
	// Вывод ЗАГОЛОВОК
	
	ТекстЗаголовка = СформироватьЗаголовокПартнераHTML(ТекущаяСтрока, Истина, Истина);
	
	// Вывод табличных данных
	
	Текст = "";
	ЦветФонаШапки = "#F5F2DD";
	
	// Таблица ДОЛГИ
	
	Если ПоказыватьДолги Тогда                                  
		
		Всего = 0;
		
		Инд = СоотвПакетов.Получить("Долги");
        Результат = Результаты[Инд]; 
		
		ОтступТаблицы = ?(Инд = 1 , "0", "20px");
 		ТекстДолги = "";
		
		Если Результат.Пустой() Тогда
			
			ТекстДолги = "
			|<tr> У Контрагента нет долгов. </tr>";
			
		Иначе
			
			// шапка таблицы              // ; text-align:center

			ТекстДолги = ТекстДолги + 
				"<thead>                                       	             
				 |	<tr style=""background-color: " + ЦветФонаШапки + ";font-family: Verdana,Geneva,sans-serif;font-size:10px;"">
				 |" + 	СформироватьШапкаКолонкиHTML("Организация",,,"left") + 
				 		СформироватьШапкаКолонкиHTML("Долг",,,"right") + "
				 |	</tr>
				 |</thead>";	
			 
			Выборка = Результат.Выбрать();
				
			ТекстДолги = ТекстДолги + "<tbody border=""1"" style=""background-color:#FFF;"">";

			Пока Выборка.Следующий() Цикл									
				
				Всего = Всего + Выборка.Долг;
				
				ТекстДолги = ТекстДолги + "<tr>";
									
				Фонт = ПолучитьЦветСтрокиДолга(Выборка.Долг);
					
				ТекстДолги = ТекстДолги + 
					СформироватьСтрокуТаблицыHTML(Выборка.Организация, "left", Фонт, ?(Выборка.Основная, "Основная организация", ""), Выборка.Основная) + 
					СформироватьСтрокуТаблицыHTML(СформироватьСсылкаHTML("Credit" + Выборка.Код, Формат(Выборка.Долг,"ЧЦ=15; ЧДЦ=2; ЧН=-"), "Показать подробно", Фонт),, Фонт); 
					//СформироватьСтрокуТаблицыHTML(?(Выборка.Ячеестый, СформироватьСсылкаHTML("s" + Выборка.КодСклада, Выборка.Остаток, "Остатки в ячейках", Фонт), Выборка.Остаток), , Фонт) +
					//СформироватьСтрокуТаблицыHTML(?(Выборка.Резерв <> 0 И Выборка.КодСклада <> "", СформироватьСсылкаHTML(Выборка.КодСклада, Выборка.Резерв, "Показать резерв", Фонт), Выборка.Резерв), , Фонт);
										
				ТекстДолги = ТекстДолги + "</tr>";
		
			КонецЦикла;
				
			ТекстДолги = ТекстДолги + "</tbody>";
				
			Если Выборка.Количество() > 1 Тогда
				Фонт = ПолучитьЦветСтрокиДолга(Всего);
				ТекстДолги = ТекстДолги + 
				"<tfoot>
				|	<tr style=""border-bottom-style: none; font-weight: bold;background-color:" + ЦветФонаШапки + "; text-align:right;"">" +
						СформироватьПодвалКолонкиHTML("0", ЦветФонаШапки) +
						СформироватьПодвалКолонкиHTML(Всего, Фонт) + "
				|	</tr>
				|</tfoot>";
			КонецЕсли;
			
		КонецЕсли;	
		
				
		Текст = Текст +  "	 <tr>
						|		<td colspan = ""2"" align=""center"" valign=""top"">
						|			<table width=""95%"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:" + ОтступТаблицы + " 0 0;"">
						|" + ТекстДолги + "	
						|			</table>
						|		</td>
						|	</tr>
						|";
	

	КонецЕсли;
		
	Если ПоказыватьЗаказы Тогда
			
			Инд = СоотвПакетов.Получить("Заказы");
	        Результат = Результаты[Инд]; 
			
			ОтступТаблицы = ?(Инд = 1 , "0", "20px");
	 		ТекстЗаказы = "";
			
		Если Результат.Пустой() Тогда
			
			ТекстЗаказы = "
			|<tr> Контрагент пока ничего не заказывал </tr>";
			
		Иначе
			
			// шапка таблицы              // ; text-align:center

			ТекстЗаказы = ТекстЗаказы + 
				"<thead>                                       	             
				 |	<tr style=""background-color: " + ЦветФонаШапки + ";font-family: Verdana,Geneva,sans-serif;font-size:10px;"">
				 |" + 	СформироватьШапкаКолонкиHTML("Дата",,,"left") + 
				 		СформироватьШапкаКолонкиHTML("Заказ",,,"left") + 
					 //	СформироватьШапкаКолонкиHTML("Состояние",,,"right") +
						СформироватьШапкаКолонкиHTML("Зак", "Заказано",,"center") +
					 	СформироватьШапкаКолонкиHTML("Отг", "Отгружено",,"center") +
				 		СформироватьШапкаКолонкиHTML("Опл", "Оплачено",,"center") + "
				 |	</tr>
				 |</thead>";	
			 
			Выборка = Результат.Выбрать();
				
			ТекстЗаказы = ТекстЗаказы + "<tbody border=""1"" style=""background-color:#FFF;"">";

			Пока Выборка.Следующий() Цикл									
						
				ТекстЗаказы = ТекстЗаказы + "<tr>";
									
				Фонт = ПолучитьЦветСтрокиЗаказа(Выборка.Отгружено = Выборка.Заказано, Выборка.Оплачено);
				СтрокаЗаказ = ПолучитьСокращениеИмениЗаказа(Выборка.Заказ) + " "+ Выборка.Префикс + ФормированиеПечатныхФорм.ПолучитьНомерНаПечать(Выборка.Номер);
				
				ТекстЗаказы = ТекстЗаказы + 
					СформироватьСтрокуТаблицыHTML(Формат(Выборка.Дата,"ДФ=dd.MM.yy"), "left", Фонт, ,) +
					СформироватьСтрокуТаблицыHTML(СформироватьСсылкаHTML("Order" + ПолучитьСокращениеИмениЗаказа(Выборка.Заказ) + Выборка.Номер, СтрокаЗаказ,,Фонт), "left", Фонт, , Истина) + 
					//СформироватьСтрокуТаблицыHTML(ЛЕВ(Выборка.Состояние, 6), "left", Фонт,,,10) +
					СформироватьСтрокуТаблицыHTML(Выборка.Заказано, "right", Фонт,,) +
					СформироватьСтрокуТаблицыHTML(Выборка.Отгружено, "right", Фонт,,) +
					СформироватьСтрокуТаблицыHTML(Выборка.Оплачено, "right", Фонт,,);
				
				ТекстЗаказы = ТекстЗаказы + "</tr>";
		
			КонецЦикла;
				
			ТекстЗаказы = ТекстЗаказы + "</tbody>";
							
		КонецЕсли;
		
				
		Текст = Текст +  "	 <tr>
						|		<td colspan = ""5"" align=""center"" valign=""top"">
						|			<table width=""95%"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:" + ОтступТаблицы + " 0 0;"">
						|" + ТекстЗаказы + "	
						|			</table>
						|		</td>
						|	</tr>
						|";
						
				
	КонецЕсли;

	// Таблица КОНТАКТНАЯ ИНФОРМАЦИЯ
	
	Если ПоказыватьКонтактнуюИнформацию Тогда
		
		Инд = СоотвПакетов.Получить("КонтактнаяИнформация");
		Результат = Результаты[Инд];
		
		ОтступТаблицы = ?(Инд = 1, "0", "20px");
		ТекстКонтактной = "";	

		Если Результат.Пустой() Тогда
					  
			ТекстКонтактной = "
			|Контактная информация отсутствует.";
	
		Иначе
			
			// шапка таблицы
							
			ТекстКонтактной = ТекстКонтактной + 
				"<thead>
				 |	<tr style=""background-color: " + ЦветФонаШапки + "; text-align:center;font-family: Verdana,Geneva,sans-serif;font-size:10px;"">
		 		 |" + 	СформироватьШапкаКолонкиHTML("Вид",,, "center") + 
				 		СформироватьШапкаКолонкиHTML("Контактная информация") + "
				 |	</tr>
				 |</thead>";	
					 
			Выборка = Результат.Выбрать();
					
			ТекстКонтактной = ТекстКонтактной + "<tbody border=""1"" style=""background-color:#FFF;"">";
			
			Пока Выборка.Следующий() Цикл									
								
				ТекстКонтактной = ТекстКонтактной + "<tr>";
						
				ТекстКонтактной = ТекстКонтактной + 
					//СформироватьСтрокуТаблицыHTML(Строка(Выборка.ТипЦен) + ?(Выборка.Упаковка.Пустая(), "", " (" + Строка(Выборка.Упаковка.Коэффициент) + " " + Строка(Выборка.Номенклатура.ЕдиницаИзмерения) + ")"), "left", , Выборка.ТипЦен, Истина,"10") + 
					СформироватьСтрокуТаблицыHTML(Выборка.Вид, "left",,,, 11)+
					СформироватьСтрокуТаблицыHTML(Выборка.Представление);						
					
				ТекстКонтактной = ТекстКонтактной + "</tr>";КонецЦикла;
			
	        ТекстКонтактной = ТекстКонтактной + "<tr><td  height=""30""; bgcolor=""#FCFAEB""; colspan=""2""; align=""right"">"+ СформироватьСсылкаHTML("КИ", "Управление",,"#0000FF") +"</td></tr>";
			ТекстКонтактной = ТекстКонтактной + "</tbody>"; КонецЕсли;
		
		Текст = Текст +  "
				|	<tr>
				|		<td colspan = ""5"" align=""center"" valign=""top"">
				|			<table width=""95%"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""margin:" + ОтступТаблицы + " 0 0;"">
				|" + ТекстКонтактной + "	
				|			</table>
				|		</td>
				|	</tr>
				|";КонецЕсли;

	
	Возврат "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
			|<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""ru"">
			|<head>
			|	<meta http-equiv=""Content-Type"" content=""text/html"" />
			|</head>
			|<body style=""background-color:#FCFAEB;"">
			|  
			|<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"">
			|" + Текст + "	
			|</table>  
			|</body>
			|</html>";
			
		КонецФункции
		
Функция	ПолучитьСокращениеИмениЗаказа(Заказ)
	ТипЗаказа = ТипЗнч(Заказ);
	Если ТипЗаказа = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Возврат "Зкз"
	ИначеЕсли ТипЗаказа = Тип("ДокументСсылка.ИнтернетЗаказПокупателя") Тогда
		Возврат "Изк"
	ИначеЕсли ТипЗаказа = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		Возврат "Знд"
	КонецЕсли;
	Возврат "";
КонецФункции

Функция	ПолучитьИмяЗаказаИзСокращения(Сокращение)
	
	Если Сокращение =  "Зкз" Тогда
		Возврат "ЗаказПокупателя";
	ИначеЕсли Сокращение = "Изк" Тогда
		Возврат "ИнтернетЗаказПокупателя";
	ИначеЕсли Сокращение = "Знд" Тогда
		Возврат "ЗаказНаряд";
	КонецЕсли;
	Возврат "";
КонецФункции


Функция ПолучитьЦветСтрокиЗаказа(Отгружен, Оплачено)
	
	Если Оплачено = 0 И Отгружен Тогда
		Возврат "#FF0000";
		
	ИначеЕсли Отгружен Тогда		
		Возврат "#C0C0C0";
		
	Иначе
		Возврат "#333333";
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьЦветСтрокиДолга(Долг)
	

	
	Если Долг < 0 Тогда
		
		Возврат "#FF0000";
		
		//		
		//Возврат "#C0C0C0";
				
				
	Иначе
		
		Возврат "#333333";
		
	КонецЕсли;
	
КонецФункции
Функция ОрганизацияДляРасшифровки(Код, Ссылка) Экспорт
	
	Ссылка = Справочники.Организации.НайтиПоКоду(Код);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Истина;				
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции
Функция ЗаказДляРасшифровки(Сокращение, Номер, Ссылка) Экспорт
	
	Имя = ПолучитьИмяЗаказаИзСокращения(Сокращение);
	Если НЕ ПустаяСтрока(Имя) Тогда
		
		Ссылка = Документы[Имя].НайтиПоНомеру(Номер);
		Если ЗначениеЗаполнено(Ссылка) Тогда
			Возврат Истина;				
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции



Функция СформироватьШапкаКолонкиHTML(Заголовок = "", Подсказка = "", Цвет = "#333333", Выравнивание = "right")
	Возврат "<th align=""" + Выравнивание + """" + ?(ЗначениеЗаполнено(Подсказка), " title= """ + Подсказка + """", "") + " style=""color: " + Цвет + ";padding:3px 5px;border-bottom:1px solid #CCC085; border-top:1px solid #CCC085;"">"+ Заголовок +"</th>"	
КонецФункции
Функция СформироватьСтрокуТаблицыHTML(Значение, Выравнивание = "right", Цвет = "#333333", Подсказка = "", Выделить = Ложь, Размер = "12")
	Возврат "<td align=""" + Выравнивание + """" + ?(ЗначениеЗаполнено(Подсказка), " title= """ + Подсказка + """", "") + " valign=""top"" style=""font-family: Verdana,Geneva,sans-serif;border-bottom:1px solid #CCC085;padding:3px 5px;font-size:"+ Размер +"px;color: " + Цвет + ";"">" +  ?(Выделить, "<b>", "") + Значение + ?(Выделить, "</b>", "") + "</td>";
КонецФункции
Функция СформироватьПодвалКолонкиHTML(Значение = "", Цвет = "#333333", Размер = "12", Выделить = Ложь, допПараметр = "", Отступ = "3px 5px", Разделитель = Истина)    
	Возврат "<td " + допПараметр +  " style=""color:" + Цвет + ";font-family: Verdana,Geneva,sans-serif;font-size:"+ Размер +"px;padding:" + Отступ +";" + ?(Выделить, "font-weight: bold;", "") + ?(Разделитель, "border-bottom:1px solid #CCC085;", "") + """>" + Значение + "</td>";
КонецФункции    //line-height:15px;
Функция СформироватьСсылкаHTML(ID, Значение, Подсказка = "", Цвет = "#333333", href = "./0")
	Возврат "<A style=""color:" + Цвет + ";"" id=" + Строка(ID) + ?(ЗначениеЗаполнено(Подсказка), " title= """ + Подсказка + """", "") + " href='" + href + "'>" + Строка(Значение) + "</A>";
КонецФункции

