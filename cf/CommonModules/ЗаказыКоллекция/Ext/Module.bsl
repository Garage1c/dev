
// ДИАЛОГИ

&НаКлиенте
Процедура ВыбратьЗаказыДляОбъединения(Форма, ДопУсловия = Неопределено, ПомеченныеЗаказы = Неопределено) Экспорт
	
	// ПомеченныеЗаказы - массив, если указать тогда будут помечены только эти заказы
	
	Список = ЗаказыКоллекцияСервер.ПолучитьСписокЗаказовКОбъединению(Форма.Объект.Ссылка, ДопУсловия);
	
	Если ПомеченныеЗаказы <> Неопределено Тогда
		КонвертацияТипов.УстановитьПометкиВСпискеЗначений(Список, ПомеченныеЗаказы.Выгрузитьзначения(), Ложь);
	Иначе
		текЗаказы = Форма.Заказы();
		Для Каждого ТекЗаказ Из текЗаказы Цикл
			Элемент = Список.НайтиПоЗначению(ТекЗаказ);
			Если Элемент <> Неопределено Тогда
				Элемент.Пометка = Истина; КонецЕсли; КонецЦикла; КонецЕсли;
			
	ОткрытьФорму("ОбщаяФорма.ОтметитьЗаказы", 
					Новый Структура("Заказы, Заказ", Список, Форма.Объект.Заказ),
					Форма,,,,Новый ОписаниеОповещения("ОтмеченыЗаказы", ЗаказыКоллекция, Новый Структура("Форма", Форма)));
КонецПроцедуры
&НаКлиенте
Процедура ОтмеченыЗаказы(ВыбЗаказы, ДопПараметры) Экспорт
	
	Если ВыбЗаказы <> Неопределено Тогда
		
		ДопПараметры.Форма.Модифицированность = Истина;
		
		Товары = ДопПараметры.Форма.Товары;
		Товары.Очистить();
		
		Для Каждого текЗаказ Из ВыбЗаказы Цикл Товары.Добавить().Заказ = текЗаказ КонецЦикла; 
		ДопПараметры.Форма.ОбновитьДанныеПоТоварам(); КонецЕсли;
				
КонецПроцедуры


// ЗАПОЛНЕНИЕ ДАННЫХ ФОРМЫ

Функция ПолучитьПредставлениеЗаказов(текЗаказы) Экспорт
	
	Возврат СтрСоединить(текЗаказы, ";");
	
КонецФункции

&НаСервере
Функция ЗаполнитьТаблицуЗаказовЕслиНеСопадает(Форма, БПОбъект) Экспорт
	
	//// Проверяет чтобы заказы в табличной части совпадали с заказами БП
	//// если не совпадут, значит заполнение
	//// возвращает ИСТИНА если произошло заполнение и ЛОЖЬ если ниче не тронули
	//
	//Разные = Форма.ТаблицаЗаказов.Количество() <> БПОбъект.Заказы.Количество();
	//	
	//Если Не Разные Тогда
	//	
	//	Инд = -1;
	//	Для КАждого Строка ИЗ Форма.ТаблицаЗаказов Цикл Инд = Инд + 1;
	//		Если Строка.Заказ <> БПОбъект.Заказы[Инд].Заказ Тогда
	//			Разные = Истина;
	//			Прервать; КонецЕсли; КонецЦикла; КонецЕсли;
	//			
	//Если Разные Тогда БПОбъект.Заказы.Загрузить(Форма.ТаблицаЗаказов.Выгрузить()) КонецЕсли;
	//			
	//Возврат Разные;			
	
КонецФункции

// РАШИРЯЮЩИЕ ФУНКЦИИ

&НаСервере
Функция ЕстьЗаказКоторыйЧастичноСобран(ЗаказыМассив, ДатаСостояния = Неопределено) Экспорт
	
	Возврат Булево(Заказы.ПолучитьСостояниеТоваров(ЗаказыМассив, ДатаСостояния).
				НайтиСтроки(Новый Структура("Состояние", Перечисления.СостояниеСборкиЗаказа.Собрано)).Количество());
КонецФункции

&НаСервере
Функция УстановитьСостояниеЗаказов(ЗаказыМассив, Состояние, Дата = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	Для Каждого Заказ Из ЗаказыМассив Цикл
		Если Не Заказы.УстановитьСостояниеЗаказа(Заказ, Состояние, Дата) Тогда
			ОтменитьТранзакцию();
			Возврат Ложь; КонецЕсли; КонецЦикла;
			
	ЗафиксироватьТранзакцию();
	Возврат Истина;
	
КонецФункции