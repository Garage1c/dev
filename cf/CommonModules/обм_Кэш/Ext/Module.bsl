
Функция ПолучитьСоединение(ОбменДанными) Экспорт
	
	Перем Соединение;
	
	Попытка
		Выполнить(ОбменДанными.АлгоритмИнициализацииСоединения);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Функция КлючСоединенияВКеше() Экспорт
	
	Возврат "Соединение";
	
КонецФункции

Функция ПолучитьМетаСписок() Экспорт
	
	Список = Новый СписокЗначений;
	
	// Получим метаданные
	
	Для КАждого Справочник Из Метаданные.Справочники Цикл Список.Добавить(Справочник.ПолноеИмя(), обм_Обмен.ПолучитьПредставлениеМетаДанного(Справочник.ПолноеИмя(), Справочник.Синоним)) КонецЦикла;
	Для КАждого Документ Из Метаданные.Документы Цикл Список.Добавить(Документ.ПолноеИмя(), обм_Обмен.ПолучитьПредставлениеМетаДанного(Документ.ПолноеИмя(), Документ.Синоним)) КонецЦикла;
	Для КАждого Перечисление Из Метаданные.Перечисления Цикл Список.Добавить(Перечисление.ПолноеИмя(), обм_Обмен.ПолучитьПредставлениеМетаДанного(Перечисление.ПолноеИмя(), Перечисление.Синоним)) КонецЦикла;
	
	Список.СортироватьПоПредставлению();
	
	Возврат Список;
	
КонецФункции
Функция ПолучитьМетаСписокДругой(Обмен) Экспорт
	
	Список 		= Новый СписокЗначений;
	Connect 	= обм_Обмен.ПолучитьHTTPСоединение(Обмен);
	HTTPRequest	= обм_Обмен.ПолучитьHTTPЗапрос_Метаданные(Обмен);
	
	Попытка		HTTPResponse = Connect.GET(HTTPRequest);
	Исключение	
				стрОшибки = ОписаниеОшибки();
				Сообщить("Ошибка инициализации соединения: " + стрОшибки); 
				Возврат Неопределено; КонецПопытки;
			
	СтрокаВозврата = HTTPResponse.GetBodyAsString();
	
	Если HTTPResponse.StatusCode <> 200 Тогда
		Сообщить("Ошибка в другой базе (" + HTTPResponse.StatusCode + "): " + СтрокаВозврата);
		Возврат Неопределено; КонецЕсли;
	
	стрОшибки = "";
	НастройкиДругие = обм_Обмен.ПреобразоватьИзJSON(HTTPResponse.GetBodyAsString(), стрОшибки, Истина);
	Если стрОшибки <> "" Тогда
		Сообщить("Ошибка преобразования из JSON строки: " + стрОшибки); 
		Возврат Неопределено; КонецЕсли;
	
	Для Каждого Элемент Из НастройкиДругие["МетаДанные"]["Справочники"]["МетаДанные"] Цикл Список.Добавить(Элемент.Ключ, обм_Обмен.ПолучитьПредставлениеМетаДанного(Элемент.Ключ, Элемент.Значение["Синоним"])); КонецЦикла;
	Для Каждого Элемент Из НастройкиДругие["МетаДанные"]["Документы"]["МетаДанные"] Цикл Список.Добавить(Элемент.Ключ, обм_Обмен.ПолучитьПредставлениеМетаДанного(Элемент.Ключ, Элемент.Значение["Синоним"])); КонецЦикла;
	Для Каждого Элемент Из НастройкиДругие["МетаДанные"]["Перечисления"]["МетаДанные"] Цикл Список.Добавить(Элемент.Ключ, обм_Обмен.ПолучитьПредставлениеМетаДанного(Элемент.Ключ, Элемент.Значение["Синоним"])); КонецЦикла;
	
	Список.СортироватьПоПредставлению();
	
	Возврат Список;
	
КонецФункции

Функция ПолучитьСоответствиеПутей(Обмен) Экспорт
	
	Соотв = Новый Соответствие;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПутьТут, ПутьТам ИЗ Справочник.обм_ОбменДанными.СоответствияПутей ГДЕ Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Обмен);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл Соотв.Вставить(Выборка.ПутьТут, Выборка.ПутьТам) КонецЦикла;
	
	Возврат Соотв;
	
КонецФункции
