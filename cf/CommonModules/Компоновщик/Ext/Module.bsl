
Процедура УстановитьОтборы(КомпоновщикНастроек, НастройкиКомпоновки, Отборы)
	
	// Устанавливаем отбор, только если передана не пустая структура, где Ключ - имя поля, Значение - значение отбора на равенство.
	Если ТипЗнч(Отборы) = Тип("Структура") И Отборы.Количество() Тогда
		
		Отбор = НастройкиКомпоновки.Отбор;
		
		// Очистим отбор перед заполнением
		Отбор.Элементы.Очистить();
		
		// Заполним отбор из структуры
		Для Каждого ТекОтбор Из Отборы Цикл
			
			ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ТекОтбор.Ключ);
			
			Если Отбор.ДоступныеПоляОтбора.НайтиПоле(ПолеКомпоновки) <> Неопределено Тогда
				
				ПолеОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
				//ПолеОтбора.Представление  = ТекОтбор.Ключ;
				ПолеОтбора.ЛевоеЗначение  = ПолеКомпоновки;
				ПолеОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ПолеОтбора.ПравоеЗначение = ТекОтбор.Значение;
				ПолеОтбора.Использование  = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновки);
		
	КонецЕсли;
	
КонецПроцедуры
Процедура Установитьпараметры(Параметры, Отборы)
	
	Для Каждого ТекОтбор Из Отборы Цикл
		
		ПолеПараметр = Параметры.Найти(ТекОтбор.Ключ);
		
		Если ПолеПараметр <> Неопределено Тогда
			
			ПолеПараметр.Значение = ТекОтбор.Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитПроцессорКомпоновки(Отчет, ИмяМакета = Неопределено, отборы = Неопределено, Форма = Неопределено)
	
	СхемаКомпоновкиДанных = Отчет.ПолучитьМакет(ИмяМакета);
	//НовыеДанныеРасшифровки = Форма.ДанныеРасшифровки;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Если отборы <> Неопределено Тогда
		Установитьпараметры(СхемаКомпоновкиДанных.Параметры, Отборы);
	КонецЕсли;
	//НовыеДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;	
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
				СхемаКомпоновкиДанных, 
				СхемаКомпоновкиДанных.НастройкиПоУмолчанию);//,НовыеДанныеРасшифровки);
					
	// Подгрузим табличку
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки); //, , НовыеДанныеРасшифровки);

    Возврат ПроцессорКомпоновки;

КонецФункции

Процедура ВывестиОтчет(ИмяОтчета, ИмяМакета, ТабличныйДокумент, Отборы = Неопределено, ЗаголовокОкна = "", Форма = Неопределено) Экспорт
	
	Отчет = Отчеты[ИмяОтчета].Создать();
	ПроцессорКомпоновки = ПолучитПроцессорКомпоновки(Отчет, ИмяМакета, Отборы);
	
	// Определимся куда выводить
	
	ТабличныйДокумент.Защита 				= Истина;
	ТабличныйДокумент.ОтображатьЗаголовки 	= Ложь;
	ТабличныйДокумент.ОтображатьСетку 		= Ложь;
	
	//ТабличныйДокумент.Показать(ЗаголовокОкна);
		
	// Создадим и инициализируем процессор вывода результата 
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);

	// Выведем результат
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
КонецПроцедуры                                                                                             