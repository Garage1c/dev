
Функция ИмяПоказаноОповещение() Экспорт Возврат "Показано оповещение" КонецФункции

Процедура Иницилизировать() Экспорт
	
	ПодключитьОбработчикОжидания("ПросканироватьНовыеСообщения", 4, Ложь);	// Запустим сканирование новых сообщений
	
КонецПроцедуры
Процедура ПросканироватьПоявлениеНовыхСообщений() Экспорт
	
	~ПроверкаСообщений:
	КолСообщений = События.ПолучитьКоличествоТекущихСообщений();
		
	Если КолСообщений Тогда
		
		Сообщение = События.ПолучитьСообщение();
		Если Сообщение <> Неопределено Тогда
			
			// Покажем
			ПоказатьОповещениеПользователя(Сообщение.Название, ?(Сообщение.Свойство("Инициатор") И ЗначениеЗаполнено(Сообщение.Инициатор), ПолучитьНавигационнуюСсылку(Сообщение.Инициатор), Неопределено), Сообщение.КраткоеОписание, БиблиотекаКартинок.СистемаОповещений);
				
			// Удалим
			События.УдалитьСообщение(Сообщение.guid); 
			
			// Оповестим
			Оповестить(ИмяПоказаноОповещение()); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

Функция ОткрытьФормуПодписки(Событие, Ссылка, Пользователь = Неопределено, Владелец = Неопределено) Экспорт
	
	ПочемутоМассив = Новый Массив;
    ПочемутоМассив.Добавить(Новый Структура("Подписчик, Событие, Ссылка", ?(Пользователь = Неопределено, глТекущийПользователь, Пользователь), Событие, Ссылка));
	
	Ключ = Новый("РегистрСведенийКлючЗаписи.ПодпискиНаОповещение", ПочемутоМассив);
	
	ОткрытьФорму("РегистрСведений.ПодпискиНаОповещение.ФормаЗаписи", Новый Структура("Ключ", Ключ), Владелец, , , , ?(Владелец = Неопределено, Неопределено, Новый ОписаниеОповещения("ТекстПодпискиЗакрытиеФормы", Владелец)));
	
КонецФункции
Функция ПолучитьКлючЗаписиПодписки(Событие, Ссылка, Пользователь = Неопределено) Экспорт
	
	ПочемутоМассив = Новый Массив;
    ПочемутоМассив.Добавить(Новый Структура("Подписчик, Событие, Ссылка", ?(Пользователь = Неопределено, глТекущийПользователь, Пользователь), Событие, Ссылка));
	
	Возврат Новый("РегистрСведенийКлючЗаписи.ПодпискиНаОповещение", ПочемутоМассив);
	
КонецФункции

Процедура ВыбраноОповещение(ВыбЭлемент, ДопПараметры) Экспорт
	
	Если ВыбЭлемент <> Неопределено И События.ОбработкаВыбораОповещенияНаОбъекте(ВыбЭлемент.Значение, ДопПараметры.Ссылка) Тогда
		
		ПоказатьОповещениеПользователя("Оповещение установлено",,ВыбЭлемент.Представление, БиблиотекаКартинок.СистемаОповещений);
		
		//ОбновитьТекстОповещений();
		ДопПараметры.Форма.ОбновитьТекстОповещений();
		
		Оповестить("ОбновитьНастройкиОповещения");
		
	КонецЕсли;
	
КонецПроцедуры
Процедура УправлениеПодпискойСФормыОбъектаНажатие(Форма, Элемент, ВидОбъекта, Ссылка) Экспорт
	
	Форма.ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыбраноОповещение", СобытияКлиент, Новый Структура("Форма, Ссылка", Форма, Ссылка)), События.ПолучитьСписокСобытийДляОбъекта(ВидОбъекта), Элемент);
	
КонецПроцедуры
Процедура ВыбранаНастройка(ВыбЭлемент, ДопПараметры) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		ОткрытьФормуПодписки(ВыбЭлемент.Значение.Событие, ВыбЭлемент.Значение.Ссылка,,ДопПараметры.Форма); КонецЕсли;

КонецПроцедуры
Процедура ТекстПодпискиФормыОбъектаНажатие(Форма, Элемент, Ссылка) Экспорт
	
	Записи = События.ПолучитьЗаписиСобытийСсылки(Ссылка);
	
	Если Записи.Количество() = 1 Тогда
		
		ОткрытьФормуПодписки(Записи[0].Событие, Ссылка,,Форма);
		
	ИначеЕсли Записи.Количество() > 1 Тогда
		
		Список = Новый СписокЗначений;
		Для Каждого Запись Из Записи Цикл
			Список.Добавить(Запись, События.ПолучитьОписаниеПодписки(Запись,,,Ложь)) КонецЦикла;
		
		Форма.ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыбранаНастройка", СобытияКлиент, Новый Структура("Форма", Форма)), Список, Элемент); КонецЕсли;
	
КонецПроцедуры