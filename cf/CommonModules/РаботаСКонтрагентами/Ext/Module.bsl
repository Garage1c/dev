Процедура ЗаполнитьСписокВариантовДоставкиДляПокупки(СписокВариантовДоставки) Экспорт
	
	СписокВариантовДоставки.Очистить();
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.ДоставкаСоСкладаПоставщиком, Строка(Перечисления.ВариантДоставки.ДоставкаСоСкладаПоставщиком));
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.ДоставкаСоСкладаТК, Строка(Перечисления.ВариантДоставки.ДоставкаСоСкладаТК));
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.СамовывозСоСкладаПоставщика, Строка(Перечисления.ВариантДоставки.СамовывозСоСкладаПоставщика));
	//СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.СамовывозСТерминала, Строка(Перечисления.ВариантДоставки.СамовывозСТерминала));
	
КонецПроцедуры

Процедура ЗаполнитьСписокВариантовДоставкиДляПродажки(СписокВариантовДоставки) Экспорт
	
	СписокВариантовДоставки.Очистить();
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика, Строка(Перечисления.ВариантДоставки.ДоставкаДоГрузоперевозчика));
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.ДоставкаДоКлиента, Строка(Перечисления.ВариантДоставки.ДоставкаДоКлиента));
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами, Строка(Перечисления.ВариантДоставки.ДоставкаДоКлиентаНашимиСилами));
	СписокВариантовДоставки.Добавить(Перечисления.ВариантДоставки.СамовывозСНашегоСклада, Строка(Перечисления.ВариантДоставки.СамовывозСНашегоСклада));
	
КонецПроцедуры

Процедура ЗаписьСтатусаСпецификацииПриЗаписи(Источник, Отказ) Экспорт
	
	Если Не Источник.ДополнительныеСвойства.ЭтоНовый 
			И Не Источник.ДополнительныеСвойства.Свойство("ЗаписатьСтатус")
			И Не Источник.ДополнительныеСвойства.Свойство("СменаСтатуса") Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураСтатуса = Новый Структура("Поставщик,Договор,ЕстьАктивнаяСпецификация,Спецификация,СтатусСпецификации",
										Источник.Поставщик, 
										Источник.Договор,
										Источник.СтатусСпецификации = Перечисления.СтатусыСпецификаций.Активна
											Или Источник.ДополнительныеСвойства.Свойство("СделатьНеАктивной"),
										Источник.Ссылка,
										Источник.СтатусСпецификации);
										
	МенеджерЗаписи = РегистрыСведений.АктивныеСпецификации.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураСтатуса);
															
	Если Источник.ДополнительныеСвойства.Свойство("СделатьНеАктивной") Тогда 
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ЕстьАктивнаяСпецификация = Ложь;
	Иначе 
		МенеджерЗаписи.ЕстьАктивнаяСпецификация = СтруктураСтатуса.ЕстьАктивнаяСпецификация;
	КонецЕсли;
	
	Попытка
		МенеджерЗаписи.Записать(Не СтруктураСтатуса.ЕстьАктивнаяСпецификация Или Источник.ДополнительныеСвойства.Свойство("СделатьНеАктивной"));
	Исключение
		Отказ = Истина;
		Сообщить("Для поставщика "  
					+ Строка(Источник.Поставщик) + 
					" по договору " + 
					Строка(Источник.Договор)
					+ " уже есть активная спецификация");
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьСтатусСпецификации(Спецификация, СтатусСпецификации) Экспорт 
	
	Если Спецификация.СтатусСпецификации = СтатусСпецификации Тогда 
		Возврат;
	КонецЕсли;
	
	СпецификацияОбъект = Спецификация.ПолучитьОбъект();
	СпецификацияОбъект.СтатусСпецификации = СтатусСпецификации;
	СпецификацияОбъект.Записать();
	
КонецПроцедуры

Процедура ПролонгацияДоговоров() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК ДоговорПролонгировать,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Пролонгация.КоличествоМесяцевПролонгации, 0) КАК КоличествоМесяцевПролонгации
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|	И ДоговорыКонтрагентов.ДатаОкончания <= &ТекущаяДата
	|	И ДоговорыКонтрагентов.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ДоговорыКонтрагентов.ДоговорПролонгируется";
	
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ДоговорОбъект = Выборка.ДоговорПролонгировать.ПолучитьОбъект();
		ДоговорОбъект.ДатаОкончания = ДобавитьМесяц(ДоговорОбъект.ДатаОкончания, Выборка.КоличествоМесяцевПролонгации);
		ДоговорОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписьЛогистическойСпецификацииПриЗаписи(Источник, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛогистическиеСпецификации.Поставщик,
	|	ЛогистическиеСпецификации.СпособДоставки
	|ИЗ
	|	РегистрСведений.ЛогистическиеСпецификации КАК ЛогистическиеСпецификации
	|ГДЕ
	|	ЛогистическиеСпецификации.ЛогистическаяСпецификация = &ЛогистическаяСпецификация";
	
	Запрос.УстановитьПараметр("ЛогистическаяСпецификация", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		НаборЗаписей = РегистрыСведений.ЛогистическиеСпецификации.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Поставщик.Установить(Выборка.Поставщик);
		НаборЗаписей.Отбор.СпособДоставки.Установить(Выборка.СпособДоставки);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	Если Источник.ПометкаУдаления Тогда 
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЛогистическиеСпецификации.СоздатьНаборЗаписей();
	
	Для Каждого ТекСтрока Из Источник.Состав Цикл 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Поставщик = ТекСтрока.Поставщик;
		НоваяЗапись.СпособДоставки = ТекСтрока.СпособДоставки;
		НоваяЗапись.ЛогистическаяСпецификация = Источник.Ссылка;
	КонецЦикла;
	
	Попытка 
		НаборЗаписей.Записать(Ложь);
	Исключение
		Сообщить("Проверьте уникальность поставщика и способа доставки!");
	КонецПопытки;
	
КонецПроцедуры
