
Функция ПолучитьОбъектПоШтрихКоду(ШтрихКод, Упаковка = Неопределено) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Объект, Упаковка ИЗ РегистрСведений.ШтрихКоды ГДЕ ШтрихКод = """ + ШтрихКод + """");
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда Упаковка = Выборка.Упаковка; Возврат Выборка.Объект; КонецЕсли;
	
КонецФункции

Функция ПолучитьШтрихКодыОбъекта(Объект, Упаковка = Неопределено) Экспорт
	
	// Возвращает массив штрих кодов
	
	Запрос = Новый Запрос("ВЫБРАТЬ ШтрихКод ИЗ РегистрСведений.ШтрихКоды ГДЕ Объект = &Объект" + ?(Упаковка = Неопределено, ""," И Упаковка = &Упаковка"));
	Запрос.УстановитьПараметр("Объект", 	Объект);
	Запрос.УстановитьПараметр("Упаковка", 	Упаковка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ШтрихКод");
	
КонецФункции

Функция УстановитьШтрихКод(ШтрихКод, Объект, УдалятьПредыдущиеЗаписи = Истина, Упаковка = Неопределено, ТипШтрихКода = Неопределено) Экспорт
	
	// Удалим старые записи
	
	Если УдалятьПредыдущиеЗаписи Тогда
		
		мШтрихКоды 		= ПолучитьШтрихКодыОбъекта(Объект, Упаковка);
		ЕстьТакаяЗапись = Ложь;
		
		Для Каждого текШтрихКод Из мШтрихКоды Цикл Если ШтрихКод = текШтрихКод Тогда ЕстьТакаяЗапись = Истина; Продолжить; КонецЕсли;
		
			Запись = РегистрыСведений.ШтрихКоды.СоздатьМенеджерЗаписи();
			Запись.ШтрихКод = текШтрихКод;
			Запись.Удалить(); КонецЦикла; Если ЕстьТакаяЗапись Тогда Возврат Истина; КонецЕсли; КонецЕсли; // если есть то нечего записывать а предыдущую мы оставили в покое	
	
	// Заполним
	
	Запись = РегистрыСведений.ШтрихКоды.СоздатьМенеджерЗаписи();
	
	Запись.ШтрихКод 	= ШтрихКод;
	Запись.Объект 		= Объект;
	Запись.Упаковка 	= Упаковка;
	Запись.ТипШтрихКода = ?(ТипШтрихКода = Неопределено, Перечисления.ТипыШтрихКодов.EAN13, ТипШтрихКода);
	
	// Запишем
	
	Попытка Если ПустаяСтрока(ШтрихКод) Тогда Запись.Удалить() Иначе Запись.Записать() КонецЕсли;
	Исключение ОбщиеФункции.СообщитьТекст("Ошибка при записи штрих кода! " + ШтрихКод + " - " + Объект); Возврат Ложь; КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция СгенерироватьШтрихКод(Объект) Экспорт
	
	// Подготовим и определим тип объекта
	
	ТипОбъект = ТипЗнч(Объект);
	РегистрационныйНомерПроизводителяТовара = "0001";
	
	Если		ТипОбъект = Тип("СправочникСсылка.Номенклатура") Тогда 			ПрефиксНациональнойОрганизации = "200";
	ИначеЕсли	ТипОбъект = Тип("СправочникСсылка.Ячейки") Тогда 				ПрефиксНациональнойОрганизации = "201";
	ИначеЕсли 	ТипОбъект = Тип("СправочникСсылка.ФизическиеЛица") Тогда 		ПрефиксНациональнойОрганизации = "202";
	ИначеЕсли	ТипОбъект = Тип("СправочникСсылка.ИнформационныеКарты") Тогда	ПрефиксНациональнойОрганизации = "203";
	ИначеЕсли	ТипОбъект = Тип("ДокументСсылка.ЗаказНаряд") Тогда 				ПрефиксНациональнойОрганизации = "204";
	ИначеЕсли	ТипОбъект = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 		ПрефиксНациональнойОрганизации = "205";
	ИначеЕсли	ТипОбъект = Тип("ДокументСсылка.ИнтернетЗаказПокупателя") Тогда ПрефиксНациональнойОрганизации = "206";
	ИначеЕсли	ТипОбъект = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 		ПрефиксНациональнойОрганизации = "207";
	ИначеЕсли	ТипОбъект = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда 		ПрефиксНациональнойОрганизации = "208";
		
	Иначе ВызватьИсключение "Нет обработчика генерации штрих кода для типа объекта " + ТипЗнч(Объект);КонецЕсли;
	
	// Найдем ближайший незанятый штрих код
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1 ПОДСТРОКА(ШтрихКод, 8, 5) КодТовара
	|ИЗ РегистрСведений.ШтрихКоды
	|ГДЕ ПОДСТРОКА(ШтрихКод, 1, 7) = """ +  ПрефиксНациональнойОрганизации + РегистрационныйНомерПроизводителяТовара + """
	|УПОРЯДОЧИТЬ ПО ШтрихКод Убыв
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда КодТовара = Прав("0000" + Формат(Число(Выборка.КодТовара) + 1,"ЧГ="), 5) Иначе КодТовара = "00000"; КонецЕсли;
	
	ШтрихКод = ПрефиксНациональнойОрганизации + РегистрационныйНомерПроизводителяТовара + КодТовара;
	
	// Расчитаем контрольную сумму
	
	X = Число(Сред(ШтрихКод, 1, 1)) + Число(Сред(ШтрихКод, 3, 1)) + Число(Сред(ШтрихКод, 5, 1)) + Число(Сред(ШтрихКод, 7, 1)) + Число(Сред(ШтрихКод, 9, 1)) + Число(Сред(ШтрихКод, 11, 1));
	Y = Число(Сред(ШтрихКод, 2, 1)) + Число(Сред(ШтрихКод, 4, 1)) + Число(Сред(ШтрихКод, 6, 1)) + Число(Сред(ШтрихКод, 8, 1)) + Число(Сред(ШтрихКод, 10, 1)) + Число(Сред(ШтрихКод, 12, 1));
	Z = X + Y * 3;
	
	ШтрихКод = ШтрихКод + Строка(?(Z % 10, Цел((Z / 10) + 1) * 10 - Z, 0));
	
	// Проверим есть ли такой и если есть сгенерим новый
	
	Запрос = Новый запрос("ВЫБРАТЬ ИСТИНА ИЗ РегистрСведений.ШтрихКоды ГДЕ ШтрихКод = """ + ШтрихКод + """");
	Если Не Запрос.Выполнить().Пустой() Тогда Возврат СгенерироватьШтрихКод(Объект); КонецЕсли;
	
	// Вернем
	
	Возврат ШтрихКод;
	
КонецФункции

Процедура УстановитьШтрихКодНаЗаписанныйОбъектПриЗаписи(Источник, Отказ) Экспорт
	
	Возврат;
	// Проверим есть ли штрих код у объекта и установим штрих код если нет
	
	Объект = Источник.Ссылка;
	
	Если Не ПолучитьШтрихКодыОбъекта(Объект).Количество() И Не УстановитьШтрихКод(СгенерироватьШтрихКод(Объект), Объект, Ложь) Тогда
		
		Отказ = Истина; КонецЕсли;
	
КонецПроцедуры

// ПЕЧАТЬ

// Функция выполняет подключение внешней компоненты и ее первоначальную настройку.
// 
// Параметры: 
//  Нет 
// 
// Возвращаемое значение: 
//  Картинка - Картинка со сформированным штрихкодом или НЕОПРЕДЕЛЕНО
Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода()
	
	// В зависимости от типа платформы подключим соответствующую внешнюю компоненту
	ПодключениеВыполнено = Неопределено;
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("Обработка.ПечатьЦенников.Макет.КомпонентаПечатиШтрихкодовWindows32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("Обработка.ПечатьЦенников.Макет.КомпонентаПечатиШтрихкодовWindows64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("Обработка.ПечатьЦенников.Макет.КомпонентаПечатиШтрихкодовLinux32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	Иначе
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("Обработка.ПечатьЦенников.Макет.КомпонентаПечатиШтрихкодовLinux64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	КонецЕсли;
	
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	Иначе
		
		// Установим основные параметры компоненты
		
		// Если в системе установлен шрифт Tahoma
		Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
			// Выбираем его как шрифт для формирования картинки
			ВнешняяКомпонента.Шрифт = "Tahoma";
		Иначе
			
			// Шрифт Tahoma в системе отсутствует
			// Обойдем все доступные компоненте шрифты
			Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
				// Получим очередной шрифт, доступный компоненте
				ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
				// Если шрифт доступен
				Если ТекущийШрифт <> Неопределено Тогда
					// Они и будет шрифтом для формирования штри-кода
					ВнешняяКомпонента.Шрифт = ТекущийШрифт;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Утановим размер шрифта
		ВнешняяКомпонента.РазмерШрифта = 12;
		
		Возврат ВнешняяКомпонента;
		
	КонецЕсли;
	
КонецФункции
// Функция выполняет формирование изображения штрихкода.
// 
// Параметры: 
//  ВнешняяКомпонента, ПараметрыШтрихкода
// 
// Возвращаемое значение: 
//  Картинка - Картинка со сформированным штрихкодом или НЕОПРЕДЕЛЕНО
Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ПараметрыШтрихкода)
	
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина = ПараметрыШтрихкода.Ширина;
	ВнешняяКомпонента.Высота = ПараметрыШтрихкода.Высота;
	
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = Ложь;
	ВнешняяКомпонента.ТипКода         = ПараметрыШтрихкода.ТипКода;
	ВнешняяКомпонента.ОтображатьТекст = ПараметрыШтрихкода.ОтображатьТекст;
	Попытка
		ВнешняяКомпонента.РазмерШрифта = ПараметрыШтрихкода.РазмерШрифта;
	Исключение
		
	КонецПопытки;
	
	// Или установим код EAN-13
	// ВнешняяКомпонента.ТипКода = 1;
	//
	// Тип смотрим в документации на внешнуюю компоненту
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(ПараметрыШтрихкода.Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = ПараметрыШтрихкода.Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		
		// Отладка
			Карт = Новый Картинка(ДвоичныеДанныеКартинки);
			Карт.Записать("c:\temp\двоичныеДанные.jpg");
		
		// Формируем из двоичных данных
		Возврат Карт;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
Процедура УстановитьШтрихКодВМакете(Макет, ЗначениеШтрихкода, ОтображатьТекст = Истина, РазмерШрифта = 12, ТипКода = 1) Экспорт
	
	// Найдем картинку у которой имя "ШтрихКод"
	
	Если Не ПустаяСтрока(ЗначениеШтрихкода) Тогда ШтрихКод = Неопределено; Для Каждого Рисунок ИЗ Макет.Рисунки Цикл Если ЛЕВ(Рисунок.Имя, 8) = "ШтрихКод" Тогда ШтрихКод = Рисунок; Прервать; КонецЕсли; КонецЦикла;
		
		// Подключим внешнюю компоненту
		
		ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода(); Если ВнешняяКомпонента <> Неопределено Тогда КоличествоМиллиметровВПикселе = КэшируемыеФункции.КоличествоМиллиметровВПикселе();
		МаксимумШирина 	= 120;
		МаксимумВысота 	= 30;
			
			// Установим изображение штрих кода на картинку
			
			Если ШтрихКод <> Неопределено Тогда ШтрихКод.Картинка = ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, 
				Новый Структура("Ширина, Высота, Штрихкод, ТипКода, ОтображатьТекст, РазмерШрифта",
									Окр(Макс(МаксимумШирина,Рисунок.Ширина / КоличествоМиллиметровВПикселе)), 
									Окр(Макс(МаксимумВысота,Рисунок.Высота / КоличествоМиллиметровВПикселе)), 
									ЗначениеШтрихкода, 
									ТипКода, 
									ОтображатьТекст, 
									РазмерШрифта)); КонецЕсли; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

