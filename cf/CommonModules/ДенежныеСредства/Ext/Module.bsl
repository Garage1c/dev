
Функция ПолучитьДолгПартнера(Контрагент, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ СуммаОстаток СуммаДолга ИЗ РегистрНакопления.Взаиморасчеты.Остатки(, Контрагент = &Контрагент" +
	?(Организация <> Неопределено, " И Организация = &Организация", "") + ")");

	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СуммаДолга;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

Функция ПолучитьДолгКонтрагента(Контрагент, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ СуммаОстаток СуммаДолга ИЗ РегистрНакопления.Взаиморасчеты.Остатки(, Контрагент = &Контрагент" +
	?(Организация <> Неопределено, " И Организация = &Организация", "") + ")");

	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СуммаДолга;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции


Функция ПолучитьНаличностьВКассе(Касса, Дата = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	СуммаОстаток Сумма
	|ИЗ			РегистрНакопления.ДенежныеСредства.Остатки(" + ?(Дата = Неопределено, "","&Дата") + ", Касса = &Касса)
	|");
	
	Запрос.УстановитьПараметр("Касса",	Касса);
	Запрос.УстановитьПараметр("Дата", 	Дата);
	
	Выполнение = Запрос.Выполнить();
	Если Выполнение.Пустой() Тогда
		
		Возврат 0;
		
	Иначе
		
		Выборка = Выполнение.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Сумма;
		
	КонецЕсли;
	
КонецФункции

Функция стрПолучитьПолучитьНаличностьВКассе(Касса, Дата = Неопределено) Экспорт
	
	Если Касса.Пустая() Тогда
		Возврат "";
	КонецЕсли;
	
	Сумма 	= ПолучитьНаличностьВКассе(Касса, Дата);
	Начало 	= ?(Дата = Неопределено, "в кассе: ", "на тот момент: ");
	
	Если Сумма Тогда
		
		Текст = Начало + Сумма + " " + Строка(Касса.ТипЦен.Валюта);
		
	ИначеЕсли Сумма < 0 Тогда
		
		Текст = Начало + "отрицательная сумма !!! " + Строка(Сумма);
		
	Иначе
		
		Текст = Начало + "небыло наличности";
		
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

#Область Заполнение_подразделения_отдела

Процедура ВытащитьОтделПодразделение(Объект, ДокОбъект, ОбъектВытаскивания, СтруктураСостава, СтруктураДокумента)
	
	Если 	СтруктураСостава.ЕстьПодразделение И
			СтруктураДокумента.ЕстьПодразделение И
			ДокОбъект.Подразделение.Пустая() И
			Не Объект.Подразделение.Пустая() Тогда
			
		ДокОбъект.Подразделение = ОбъектВытаскивания.Подразделение КонецЕсли;
	
	Если 	СтруктураСостава.ЕстьОтдел И
			СтруктураДокумента.ЕстьОтдел И
			ДокОбъект.Отдел.Пустая() И
			Не Объект.Отдел.Пустая() Тогда 
			
		ДокОбъект.Отдел = ОбъектВытаскивания.Отдел КонецЕсли;
	
КонецПроцедуры
Функция ОтделПодразделенияНеЗаполнен(ДокОбъект, СтруктураДокумента)
	
	Возврат (СтруктураДокумента.ЕстьОтдел И ДокОбъект.Отдел.Пустая()) Или (СтруктураДокумента.ЕстьПодразделение И ДокОбъект.Подразделение.Пустая());
	
КонецФункции
Процедура ВытащитьОтделПодразделениеВЗаданнойПоследовательности(ПосмотретьВ, Объект, ДокОбъект, Отработанные, СтруктураДокумента)
	
	Реквизиты = КонвертацияТипов.ПолучитьМассивИзСтроки(ПосмотретьВ);
	Для Каждого Реквизит Из Реквизиты Цикл
		Если ЕстьРеквизит(Объект.Метаданные(), Реквизит) Тогда
			
			СсылкаПроверяемого = Объект[Реквизит];
		
			Если ЗначениеЗаполнено(СсылкаПроверяемого) Тогда
				ВытащитьПодразделениеОтделРекурсивно(СсылкаПроверяемого, ДокОбъект, Отработанные, СтруктураДокумента);
				
				Если Не ОтделПодразделенияНеЗаполнен(ДокОбъект, СтруктураДокумента) Тогда
					Возврат; КонецЕсли; КонецЕсли; КонецЕсли; КонецЦикла;
	
КонецПроцедуры
Функция ЕстьРеквизит(Мета, ИмяРеквизита)
	
	Если  Мета.Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
		Возврат Истина;
	Иначе
		МетаОбщ = Метаданные.ОбщиеРеквизиты.Найти(ИмяРеквизита);
	
		Если МетаОбщ <> Неопределено Тогда  ОбщРекв = МетаОбщ.Состав.Найти(Мета);
			
			Возврат ОбщРекв <> Неопределено И ОбщРекв.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать;
		Иначе
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецФункции
Процедура ВытащитьПодразделениеОтделРекурсивно(Объект, ДокОбъект, Отработанные, СтруктураДокумента)
	
	// Проверим может уже пробывали
	
	Если Отработанные[Объект] = Истина Или Не ОтделПодразделенияНеЗаполнен(ДокОбъект, СтруктураДокумента) Тогда Возврат; КонецЕсли;
	Отработанные.Вставить(Объект, Истина);
	
	// Заполним возможность проверки метаданных
	
	//Общ 	= Метаданные.ОбщиеРеквизиты;
	Мета 	= Объект.Метаданные();
	
	СтруктураСостава = Новый Структура("ЕстьОтдел, ЕстьПодразделение", ЕстьРеквизит(Мета, "Отдел"), ЕстьРеквизит(Мета, "Подразделение"));
	
	// Попробуем получит у текущего объекта
	
	ВытащитьОтделПодразделение(Объект, ДокОбъект, Объект, СтруктураСостава, СтруктураДокумента);
	
	// Если Отдел заполнили, а Подразделение нет, то вытащим Подразделение из Отдела
	
	Если  СтруктураДокумента.ЕстьОтдел И НЕ ДокОбъект.Отдел.Пустая() Тогда
		Если СтруктураДокумента.ЕстьПодразделение И ДокОбъект.Подразделение.Пустая() Тогда
			ДокОбъект.Подразделение = ДокОбъект.Отдел.Подразделение; КонецЕсли; КонецЕсли;
	
	// Если не получилось отправим вытаскивать дальше
	
	Если ОтделПодразделенияНеЗаполнен(ДокОбъект, СтруктураДокумента) Тогда
	
		стрОбъект = Объект.Метаданные().ПолноеИмя();
		ПоследПросмотра	= "";
		
		// Укажим какие реквизиты проверять впоисках подразделения и партнера
		
		Если стрНайти(стрОбъект, "Документ") = 1 Тогда 	
				Если стрОбъект = "Документ.ЧекККМ" ИЛИ (стрОбъект = "Документ.ЗаказПокупателя" И ДокОбъект.РозничнаяЗаявка) Тогда
					ПоследПросмотра = "Касса";	
				Иначе	
					ПоследПросмотра = "Контрагент, Партнер, Склад, Касса, Продавец"; // Это попытки просмотра у всех документов
				КонецЕсли;
		ИначеЕсли 	стрОбъект = "Справочник.Партнеры" Тогда 	ПоследПросмотра = "ОсновнойМенеджер";
		ИначеЕсли 	стрОбъект = "Справочник.Контрагенты" Тогда 	ПоследПросмотра = "Владелец"; КонецЕсли;
		
		Если Не ПустаяСтрока(ПоследПросмотра) Тогда
			ВытащитьОтделПодразделениеВЗаданнойПоследовательности(ПоследПросмотра, Объект, ДокОбъект, Отработанные, СтруктураДокумента); 
			
			// Исключительные свойства (когда ничего не помогло)
			
			Если стрОбъект = "Документ.ЧекККМ" И ДокОбъект.Отдел.Пустая() Тогда
				ДокОбъект.Отдел = Константы.ОтделВЧекеККМПоУмолчанию.Получить() КонецЕсли; КонецЕсли; КонецЕсли;
	
КонецПроцедуры
Процедура ПроверитьИПроставитьПодразделениеИОтдел(ДокОбъект) Экспорт
	
	// Проверяет заполнено или нет поля (подразделение и отдел) в документе и если нет тогда заполняет автоматически по алгоритму
	
	Отработанные 		= Новый Соответствие;
	Мета 				= ДокОбъект.Метаданные();
	СтруктураДокумента 	= Новый Структура("ЕстьОтдел, ЕстьПодразделение", ЕстьРеквизит(Мета, "Отдел"), ЕстьРеквизит(Мета, "Подразделение"));
	
	ВытащитьПодразделениеОтделРекурсивно(ДокОбъект, ДокОбъект, Отработанные, СтруктураДокумента);
	
КонецПроцедуры

#КонецОбласти