
&НаКлиенте
Функция ПолучитьВыделенныеСтрокиТоваров(ЭлементТаблица, Таблица) Экспорт
	
	МассивИндексов = Новый Массив;
	
	Для Каждого Идентификатор Из ЭлементТаблица.ВыделенныеСтроки Цикл МассивИндексов.Добавить(Таблица.Индекс(Таблица.НайтиПоИдентификатору(Идентификатор))) КонецЦикла;
	
	Возврат МассивИндексов;
	
КонецФункции

// Сообщалки

&НаКлиенте
Процедура ОповеститьОПомещенииТовара(КолДобавленного, КолВКорзине) Экспорт
	
	ПоказатьОповещениеПользователя(
		"Товар добавлен в корзину " + КолДобавленного + "поз.",,
		"Количество позиций в корзине - " + КолВКорзине, 
		БиблиотекаКартинок.КорзинаДобавить);
	
КонецПроцедуры
&НаКлиенте
Процедура ОповеститьЧтоНечегоДобавлять() Экспорт
	
	ПоказатьОповещениеПользователя("Ничего не помещено",,"так как нечего помещать",БиблиотекаКартинок.КорзинаОшибка);
	
КонецПроцедуры
&НаКлиенте
Процедура ОповеститьЧтоКорзинаОчищена() Экспорт
	
	ПоказатьОповещениеПользователя("Корзина пустая",,,БиблиотекаКартинок.Корзина);
	
КонецПроцедуры
&НаКлиенте
Процедура ОповеститьОВставкеТовараВДокумент(КолВКорзине, КолВДоке) Экспорт
	
	ПоказатьОповещениеПользователя("Товар добавлен из корзины " + КолВКорзине + "поз.",,"Количество позиций - " + КолВДоке,БиблиотекаКартинок.КорзинаПоложить);
	
КонецПроцедуры

// Работа с регистром

&НаСервере
Функция ПолучитьНаборКорзины(ИмяКомпа)

	Набор = РегистрыСведений.Корзина.СоздатьНаборЗаписей();
	
	Набор.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	Набор.Отбор.ИмяКомпа.Установить(ИмяКомпа);
	
	Набор.Прочитать();
	
	Возврат Набор;
	
КонецФункции
&НаСервере
Функция ЗаписатьНабор(Набор)
	
	Попытка
		
		Набор.Записать();
		
	Исключение
		
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка записи корзины
							|" + стрОшибки);
		Возврат Ложь;
		
	КонецПопытки;

	Возврат Истина;
	
КонецФункции


// Действия в документе

&НаСервере
Функция ПоложитьТоварВКорзину(Таблица, ВыделенныеИндексы, ИмяКомпа, КолВКорзине = 0, ИмяКолонкиКоличество = "") Экспорт
	
	Набор = ПолучитьНаборКорзины(ИмяКомпа);
	ТабНабора = Набор.Выгрузить();
	
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
			КолонкиТаблицы = Таблица.Колонки;
	Иначе	КолонкиТаблицы = Таблица.Выгрузить().Колонки;	КонецЕсли;
	
	ИменаКолонок	= КэшируемыеФункции.ПолучитьИменаКолонокПоискаВКорзине();
	ИменаСумм 		= КэшируемыеФункции.ПолучитьИменаСуммовыхКолонокВКорзине();
	ИменаКолонокСтр	= КонвертацияТипов.ПолучитьСтрокуИзМассива(ИменаКолонок);
	
	Позиция = ТабНабора.Количество();
	Для Каждого Индекс Из ВыделенныеИндексы Цикл Позиция = Позиция + 1;
		
		// Создадим отбо поиска
		
		Отбор = Новый Структура;
		
		Для Каждого ИмяКолонки Из ИменаКолонок Цикл
			Если КолонкиТаблицы.Найти(ИмяКолонки) <> Неопределено Тогда
				Отбор.Вставить(ИмяКолонки, Таблица[Индекс][ИмяКолонки]); КонецЕсли; КонецЦикла;
		
		// Добавим если в наборе такие есть
		
		НайденныеСтроки = ТабНабора.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() Тогда
			Для Каждого НайдСтрока Из НайденныеСтроки Цикл
				Для Каждого ИмяСуммы Из ИменаСумм Цикл
					Если КолонкиТаблицы.Найти(ИмяСуммы) <> Неопределено Тогда
						НайдСтрока[ИмяСуммы] = НайдСтрока[ИмяСуммы] + Таблица[Индекс][ИмяСуммы]; КонецЕсли; КонецЦикла; КонецЦикла;
		Иначе
			
			// Добавим новые записи в набор
			
			НовЗапись = ТабНабора.Добавить();
			ЗаполнитьЗначенияСвойств(НовЗапись, Таблица[Индекс]);
			
			Если НЕ ПустаяСтрока(ИмяКолонкиКоличество) Тогда
				НовЗапись.Количество = Таблица[Индекс][ИмяКолонкиКоличество];
			КонецЕсли;
		
			НовЗапись.Пользователь 	= ПараметрыСеанса.ТекущийПользователь;
			НовЗапись.ИмяКомпа 		= ИмяКомпа;
			НовЗапись.Позиция 		= Позиция; КонецЕсли; КонецЦикла;
	
	КолВКорзине = ТабНабора.Количество();
	ТабНабора.ЗаполнитьЗначения(ТекущаяДата(), "ДатаПомещения");
	
	//ТабНабора.Свернуть("Пользователь,ИмяКомпа,Номенклатура,Ячейка,Упаковка,Цена,ПроцентРучнойСкидки,ПроцентАвтоматическойСкидки,СтавкаНДС,Заказ,Размещение",
	//"Количество,КоличествоВУпаковке,Сумма,СуммаРучнойСкидки,СуммаНДС,СуммаАвтоматическойСкидки,СуммаБезСкидки");
	
	Набор.Загрузить(ТабНабора);
		
	Возврат ЗаписатьНабор(Набор);
	
КонецФункции
&НаСервере
Процедура ПолучитьТоварИзКорзины(ЭлементТаблица, Таблица, СтруктураКолонокТовары, ИмяКомпа, КолСтрок, ПересчитатьЦену = Истина, ОчищатьРазмещение = Ложь, ПересчетСтроки = Истина, ДопЗначенияДляЗаполнения = Неопределено, ДопКодДляСтроки = "") Экспорт
		
	ТоварыКорзины = ПолучитьНаборКорзины(ИмяКомпа).Выгрузить();
	ТоварыКорзины.Сортировать("Позиция");
	
	Для Каждого Строка Из ТоварыКорзины Цикл
		
		НовСтрока = Таблица.Добавить();
		Если ДопЗначенияДляЗаполнения <> Неопределено Тогда ЗаполнитьЗначенияСвойств(НовСтрока, ДопЗначенияДляЗаполнения) КонецЕсли;
		ЗаполнитьЗначенияСвойств(НовСтрока, Строка,,?(СтруктураКолонокТовары.ЕстьСтавкаНДС, "СтавкаНДС", Неопределено));
		
		Если ОчищатьРазмещение Тогда НовСтрока.Размещение = Неопределено КонецЕсли;
		
		Если СтруктураКолонокТовары.ЕстьЯчейкаОтправитель Тогда
			НовСтрока.ЯчейкаОтправитель = Строка.Ячейка;
		КонецЕсли;
				
		Если  ПересчетСтроки И СтруктураКолонокТовары.ЕстьКоличество Тогда
			ФункцииФормДокументов.КоличествоПриИзменении(
				ЭлементТаблица,
				СтруктураКолонокТовары, 
				НовСтрока); КонецЕсли;
			
		Если ПересчетСтроки И СтруктураКолонокТовары.ЕстьУчитыватьНДС Тогда
			ФункцииФормДокументов.НоменклатураПриИзменении(
				ЭлементТаблица, 
				СтруктураКолонокТовары, 
				НовСтрока,, ПересчитатьЦену); КонецЕсли; 
			
		Если Не ПустаяСтрока(ДопКодДляСтроки) Тогда Выполнить(ДопКодДляСтроки) КонецЕсли; КонецЦикла;
		
	КолСтрок = ТоварыКорзины.Количество();
 
КонецПроцедуры

&НаСервере
Процедура ПолучитьТоварИзКорзиныКакЕсть(Таблица, ИмяКомпа, КолСтрок) Экспорт
	
	ТоварыКорзины = ПолучитьНаборКорзины(ИмяКомпа);
	
	Для Каждого СтрокаКорзины Из ТоварыКорзины Цикл ЗаполнитьЗначенияСвойств(Таблица.Добавить(), СтрокаКорзины) КонецЦикла;
			
	КолСтрок = ТоварыКорзины.Количество();
 
КонецПроцедуры

&НаСервере
Функция ОчиститьКорзину(ИмяКомпа) Экспорт
	
	Набор = ПолучитьНаборКорзины(ИмяКомпа);
	Набор.Очистить();
	Возврат ЗаписатьНабор(Набор);
	
КонецФункции
				