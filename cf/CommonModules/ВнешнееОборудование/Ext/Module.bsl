
// ОБЩЕЕ (нужно приписвать код для каждого вида оборудование и тут тоже)

Процедура ПредупретитьОНеизвестном(Оборудование)
	
	ПоказатьПредупреждение(,"Неизвестное оборудование,
			|" + Оборудование + "
			|проверте какое оборудование подключено к данному компьютеру!", 60,"Сообщение!");
	
КонецПроцедуры

Функция ПолучитьНачальныеНастройки(Оборудование) Экспорт
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" Тогда
		
		Возврат ПолучитьНачальныеНастройкиCipherLab8230();
		
	ИначеЕсли Строка(Оборудование) = "Сканер штрих кода" Тогда
		
		Возврат ПолучитьНачальныеНастройкиСканерШтрихКода();
		
	КонецЕсли;
	
	ПредупретитьОНеизвестном(Оборудование);
	
КонецФункции
Функция НастроитьПараметры(Оборудование) Экспорт
	
	текОборудование = глВнешнееОборудование[Оборудование];
	Если 	текОборудование = Неопределено Или
			текОборудование.Драйвер = Неопределено Тогда 
			
		ПоказатьПредупреждение(,"Оборудование не подключено
							|" + Оборудование, 60,"Сообщение");
		Возврат Ложь;
	КонецЕсли;
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" Тогда
		
		Возврат НастроитьПараметрыCipherLab8230(Оборудование);
		
	ИначеЕсли Строка(Оборудование) = "Сканер штрих кода" Тогда
		
		Возврат НастроитьПараметрыСканерШтрихКода(Оборудование);
		
	КонецЕсли;
	
	ПредупретитьОНеизвестном(Оборудование);	Возврат Ложь;
	
КонецФункции
Функция ПодключитьОборудование(Оборудование, Настройки)
	
	// Проверим может уже подключен
	
	текОборудование = глВнешнееОборудование[Оборудование];
	Если 	текОборудование <> Неопределено И
			текОборудование.Драйвер <> Неопределено Тогда // уже подключен
			
		Возврат Истина;
	КонецЕсли;
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" Тогда
		
		Возврат ПодключитьCipherLab8230(Оборудование, Настройки);
		
	ИначеЕсли Строка(Оборудование) = "Сканер штрих кода" Тогда
		
		Возврат ПодключитьСканерШтрихКода(Оборудование, Настройки);
		
	КонецЕсли;
	
	ПредупретитьОНеизвестном(Оборудование);	Возврат Ложь;
	
КонецФункции
Процедура ОтключитьОборудование(Оборудование)
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" Тогда
		
		ОтключитьCipherLab8230(Оборудование);
		
	ИначеЕсли Строка(Оборудование) = "Сканер штрих кода" Тогда
		
		ОтключитьСканерШтрихКода(Оборудование);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоСканерТСД(Оборудование)
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
Функция ЭтоСканерШтрихКода(Оборудование)
	
	Если Строка(Оборудование) = "Сканер штрих кода" Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ЕстьУстановленныйСканер(ИмяКомпьютера = "") Экспорт
	
	// Проверяет установлен сканер на данном компе или нет
	
	#Если Не ВебКлиент Тогда
		Оборудование = ВнешнееОборудованиеСервер.ПолучитьСписокУстановленногоОборудования(?(ИмяКомпьютера = "", ИмяКомпьютера(), ИмяКомпьютера));
		Для Каждого текОборудование Из Оборудование Цикл Если ЭтоСканерТСД(текОборудование.Ключ) Тогда Возврат Истина;КонецЕсли;КонецЦикла;
	#КонецЕсли
		
	Возврат Ложь;
	
КонецФункции

Функция СкачатьДанныеСТерминала(Оборудование = Неопределено, ДокументСсылка = Неопределено, ФизЛицоСсылка = Неопределено) Экспорт
	
	// Считывает данные с терминала сбора данных
	// если терминал не указан тогда выберет самый первый попавшийся терминал
	// и вернет его в переменную "Оборудование"
	// 
	// Возвращает произвольную таблицу со считываемыми данными
	// ДокументСсылка 	- возвращает послежний документ который соотв штрих коду
	// ФизЛицоСсылка 	- возвращает последниего сборщика который воотв штрих коду
	
	// Проверим оборудование
	
	Если Оборудование = Неопределено Тогда 
		
		// Подключим все оборудование на компе
		
		#Если ВебКлиент Тогда
		#Иначе
			Оборудование = ВнешнееОборудованиеСервер.ПолучитьСписокУстановленногоОборудования(ИмяКомпьютера());
		
			Для Каждого текОборудование Из Оборудование Цикл
				Если Не ПодключитьОборудование(текОборудование.Ключ, текОборудование.Значение) Тогда
					Возврат Неопределено;
				КонецЕсли;
			КонецЦикла;
			
			// Поищем ТСД в оборудовании
			
			Для Каждого текОборудование Из глВнешнееОборудование Цикл 
				Если ЭтоСканерТСД(текОборудование.Ключ) Тогда 
					Оборудование = текОборудование.Ключ; Прервать; 
				КонецЕсли;
			КонецЦикла;
		#КонецЕсли
		
	КонецЕсли;
	
	Если Оборудование = Неопределено Тогда ПоказатьПредупреждение(,"На данном компьютере не найден подключенный сканер ТСД, проверте настройки!",,"Сообщение!"); Возврат Неопределено; КонецЕсли;
	
	// Вернем таблицу
	
	ИмяФайла = "";
	
	Если Строка(Оборудование) = "ТСД CipherLab 8230" И Не ЗаписатьДанныеВФайлCipherLab8230(Оборудование, ИмяФайла) Тогда
		
		 Возврат Неопределено;
		
	ИначеЕсли ИмяФайла = "" Тогда
		
		ВызватьИсключение Строка(Оборудование) + " данный вид ТСД не имеет обработчика в коде!";
		
	КонецЕсли;
	
	// подготовим переменные для считывания данных
	
	ТипНоменклатура = Тип("СправочникСсылка.Номенклатура");
	ТипФизЛицо 		= Тип("СправочникСсылка.ФизическиеЛица");
	Текст 			= Новый ЧтениеТекста(ИмяФайла);
	Массив 			= Новый Массив; // внутри структура с полями
	ИдВМассиве		= Новый Соответствие;
	Настройки 		= глВнешнееОборудование[Оборудование].Настройки;
	
	Строка = Текст.ПрочитатьСтроку(); Ном = 0;
	Пока Строка <> Неопределено Цикл Ном = Ном + 1;
		
		// Разберем строку
		
		РазСтрока 	= СтрЗаменить(Строка, ",", Символы.ПС);
		ШтрихКод 	= СтрПолучитьСтроку(РазСтрока, 1);
		Попытка Количество = Число(СтрПолучитьСтроку(РазСтрока, 2)); Исключение Количество = 0; КонецПопытки;
		стрОшибки	= "";
		
		// Проверим чтобы было корректно
		
		Если ПустаяСтрока(ШтрихКод) Тогда стрОшибки = стрОшибки + "В строке №" + Ном + " не указан штрих код!"; КонецЕсли;
		Если ПустаяСтрока(Количество) Тогда  стрОшибки =  стрОшибки + "В строке №" + Ном + " не указано количество!";КонецЕсли;
		Если Не ПустаяСтрока(стрОшибки) Тогда УдалитьФайлы(ИмяФайла); Возврат Неопределено; КонецЕсли;
		
		~ПоискШтрихКода:
		Упаковка 	= Неопределено;
		Объект 		= РаботаСНоменклатурой.ПолучитьОбъектПоШтрихКоду(ШтрихКод, Упаковка);
		
		// Спросим что делать с ненайденным товаром
		
		Если Объект = Неопределено Тогда Ответ = Вопрос("Штрих код """ + ШтрихКод + """ не найден", РежимДиалогаВопрос.ПрерватьПовторитьПропустить);
			
			// Повторить поиск штрих кода
			Если Ответ = КодВозвратаДиалога.Повторить Тогда Перейти ~ПоискШтрихКода;
				
			// Прервать загрузку и выйти
			ИначеЕсли Ответ = КодВозвратаДиалога.Прервать Тогда Текст.Закрыть(); УдалитьФайлы(ИмяФайла);Возврат Неопределено;
			
			// Продолжить без этого штрих кода
			Иначе Перейти ~СчитатьСледующуюСтроку; КонецЕсли;
			
		КонецЕсли;
		
		// Прочитаем документ или сборщика
		
		ТипОбъекта = ТипЗнч(Объект); Если ТипОбъекта = ТипФизЛицо Тогда ФизЛицоСсылка = Объект; Перейти ~СчитатьСледующуюСтроку;
		ИначеЕсли ТипОбъекта <> ТипНоменклатура Тогда ДокументСсылка = Объект; Перейти ~СчитатьСледующуюСтроку; КонецЕсли;
		
		// Заполним табличку
		
		ЗначениеПоиска = ?(ЗначениеЗаполнено(Упаковка), Упаковка, Объект);Инд = ИдВМассиве[ЗначениеПоиска];
		Если Инд = Неопределено Тогда
			
			Массив.Добавить(Новый Структура("Номенклатура, Упаковка, Количество", Объект, Упаковка, Количество));
			ИдВМассиве.Вставить(ЗначениеПоиска, Массив.ВГраница());
			
		Иначе Массив[Инд].Количество = Массив[Инд].Количество + Количество;КонецЕсли;
		
		// Считываем дальше
		
		~СчитатьСледующуюСтроку: Строка = Текст.ПрочитатьСтроку(); КонецЦикла;

	// Уберем за собой файл а то темп и так разростается и мы еще гадим в эту общую кучу и бедненький компьютер задыхается от нехватки свободного пространства в намагниченых областях круглого жесткого диска

	Если Ном > 1 Тогда
		Текст.Закрыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;

	// Нарисуем красиво оповещение
	
	Если Ном Тогда ПоказатьОповещениеПользователя("Считано из ТСД " + Ном + " позиций",,"CipherLab 8230", БиблиотекаКартинок.ChierLab8230); КонецЕсли;
		
	Возврат Массив;
	
КонецФункции

Функция УстановитьСканерШтрихКодаВРежимОжиданияЕслиОнЕсть(ИмяКомпьютера = "") Экспорт
	
	// Устанавливает сканер штрих кода если есть
	// если нет или он не установится то вернет ЛОЖЬ
	
	// Сперва найдем первый сканер штрих кода
	
	#Если Не ВебКлиент Тогда
		Сканер = Неопределено; Оборудование = ВнешнееОборудованиеСервер.ПолучитьСписокУстановленногоОборудования(?(ИмяКомпьютера = "", ИмяКомпьютера(), ИмяКомпьютера));
		Для Каждого текОборудование Из Оборудование Цикл Если ЭтоСканерШтрихКода(текОборудование.Ключ) Тогда Сканер = текОборудование; Прервать;КонецЕсли;КонецЦикла;
		
		Если Сканер <> Неопределено Тогда
			
			// Попробуем подключить сканер
			
			Если ПодключитьОборудование(Сканер.Ключ, Сканер.Значение) Тогда
				Возврат НастроитьПараметрыСканерШтрихКода(Сканер.Ключ); КонецЕсли; КонецЕсли;
	#КонецЕсли
	
	Возврат Ложь;
	
КонецФункции
Процедура ОтключитьСканерШтрихКодаЕслиОнЕсть(ИмяКомпьютера = "") Экспорт
	
	// Сперва найдем первый сканер штрих кода
	
	#Если Не ВебКлиент Тогда
		
		Сканер = Неопределено; Оборудование = ВнешнееОборудованиеСервер.ПолучитьСписокУстановленногоОборудования(?(ИмяКомпьютера = "", ИмяКомпьютера(), ИмяКомпьютера));
		Для Каждого текОборудование Из Оборудование Цикл Если ЭтоСканерШтрихКода(текОборудование.Ключ) Тогда Сканер = текОборудование; Прервать;КонецЕсли;КонецЦикла;
		
		Если Сканер <> Неопределено Тогда
			
			// Попробуем подключить сканер
			
			ОтключитьОборудование(Сканер.Ключ); КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

Процедура ОбработатьДобавлениеШтрихКодаВДокумент(ШтрихКод, ТаблицаТоваров, ЭлементТаблица, СтруктураКолонокТовары) Экспорт
	
	Упаковка 		= Неопределено;
	СсылкаНаТовар 	= ШтрихКоды.ПолучитьОбъектПоШтрихКоду(ШтрихКод, Упаковка);
	
	Если ТипЗнч(СсылкаНаТовар) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		ИспользоватьУпаковку = СтруктураКолонокТовары.ЕстьУпаковка И Упаковка <> Неопределено;
		
		Строки 		= ТаблицаТоваров.НайтиСтроки(?(ИспользоватьУпаковку, Новый Структура("Номенклатура, Упаковка", СсылкаНаТовар, Упаковка), Новый Структура("Номенклатура", СсылкаНаТовар)));
		текСтрока 	= ?(Строки.Количество(), Строки[0], ТаблицаТоваров.Добавить());
		
		// Обработаем строку
		
		Если СтруктураКолонокТовары.ЕстьКоличество Тогда
			текСтрока.Количество = текСтрока.Количество + 1; КонецЕсли;
		текСтрока.Номенклатура = СсылкаНаТовар;
		Если ИспользоватьУпаковку Тогда
				текСтрока.Упаковка = Упаковка; КонецЕсли;
			
		// Пересчитаем строку
			
		ФункцииФормДокументов.НоменклатураПриИзменении(
			ЭлементТаблица, 
			СтруктураКолонокТовары,
			текСтрока);КонецЕсли;
	
КонецПроцедуры

// --======-- Сканер штрих кода --======-- \\

Функция ПолучитьНачальныеНастройкиСканерШтрихКода()
	
	Возврат Новый Структура("Порт, Скорость, БитДанных, СтопБит, СтопСимвол",
							3,		9600,			8,		0,		13);
КонецФункции

Функция ПодключитьСканерШтрихКода(Оборудование, Настройки)
	
	// Подключим
	
	ProgID = "AddIn.Scanner"; Попытка
		
		ПодключитьВнешнююКомпоненту(ProgID);
		Драйвер = Новый (ProgID);
		
	Исключение  ПоказатьПредупреждение(,"Компонента для работы с штрих кодом 1с не загружена",60,"Сообщение!"); Возврат Ложь; КонецПопытки;
	
	// Добавим в глобальную переменную
	
	Если Драйвер = Неопределено Тогда ПоказатьПредупреждение(,"Не удалось создать объект внешней компоненты с программым идентификатром AddIn.Сканер.Scanner (сканер штрих кода 1с)",60,"Сообщение!");Возврат Ложь;
	Иначе 
		глВнешнееОборудование.Вставить(Оборудование, Новый Структура("Драйвер, Настройки", Драйвер, Настройки));
	КонецЕсли;
	
	Возврат Истина;	
	
КонецФункции
Функция НастроитьПараметрыСканерШтрихКода_Ст(Оборудование)
	
	текОборудование = глВнешнееОборудование[Оборудование];
	
	текОборудование.Драйвер.Порт 		= текОборудование.Настройки.Порт;
	текОборудование.Драйвер.Скорость 	= текОборудование.Настройки.Скорость;
	текОборудование.Драйвер.БитДанных 	= текОборудование.Настройки.БитДанных;
	текОборудование.Драйвер.СтопБит 	= текОборудование.Настройки.СтопБит;
	текОборудование.Драйвер.СтопСимвол 	= текОборудование.Настройки.СтопСимвол;
	
	МодельСканера = "";
	
	Результат = (текОборудование.Драйвер.Занять(1) = 0);
	Если Результат Тогда
		
		текОборудование.Драйвер.УстройствоВключено = 1;
		текОборудование.Драйвер.ПосылкаДанных      = 1;
		текОборудование.Драйвер.ОчиститьВход();
		текОборудование.Драйвер.ОчиститьВыход();

		Результат = (текОборудование.Драйвер.УстройствоВключено = 1);
		Если НЕ Результат Тогда
			
			ОтключитьСканерШтрихКода(Оборудование);
 			ОбщиеФункции.СообщитьТекст("Ошибка при подключении сканера штрих кода.
													|Проверьте настройки порта."); Возврат Ложь; КонецЕсли;
												
	Иначе
		
		ОтключитьСканерШтрихКода(Оборудование);
    	ОбщиеФункции.СообщитьТекст("Не удалось занять сканер штрих кода.
												|Проверьте настройки порта");Возврат Ложь;КонецЕсли;
										
	Возврат Истина;
	
КонецФункции
Функция НастроитьПараметрыСканерШтрихКода(Оборудование)
	
	Результат  			= Истина;
	ВыходныеПараметры 	= Новый Массив();
	текОборудование 	= глВнешнееОборудование[Оборудование];
	
	ВыходныеПараметры.Добавить("СканерШтрихкода");
	ВыходныеПараметры.Добавить(Новый Массив());
	ВыходныеПараметры[1].Добавить("ПолученШтрихкод");

	Результат = (текОборудование.Драйвер.Подсоединить(ВыходныеПараметры[0]) = 0);
	Если НЕ Результат Тогда
		
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Ошибка при подключении сканера штрих кода.
													|Проверьте настройки порта, либо сканер уже занят другим приложением.'"));ОбщиеФункции.СообщитьТекст(ВыходныеПараметры[1]);КонецЕсли;

	Если Результат Тогда
		
		текОборудование.Драйвер.БитДанных  = текОборудование.Настройки.БитДанных;
		текОборудование.Драйвер.Порт       = текОборудование.Настройки.Порт;
		текОборудование.Драйвер.Скорость   = текОборудование.Настройки.Скорость;
		текОборудование.Драйвер.СтопБит    = текОборудование.Настройки.СтопБит;
		текОборудование.Драйвер.СтопСимвол = текОборудование.Настройки.СтопСимвол;

		текОборудование.Драйвер.ИмяСобытия = ВыходныеПараметры[1][0];

		Результат = (текОборудование.Драйвер.Занять(1) = 0);
		Если Результат Тогда
			
			текОборудование.Драйвер.УстройствоВключено = 1;
			текОборудование.Драйвер.ПосылкаДанных      = 1;
			текОборудование.Драйвер.ОчиститьВход();
			текОборудование.Драйвер.ОчиститьВыход();

				Результат = (текОборудование.Драйвер.УстройствоВключено = 1);
				Если НЕ Результат Тогда
					
					//ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
					ОтключитьСканерШтрихКода(Оборудование);

					ВыходныеПараметры.Очистить();
					ВыходныеПараметры.Добавить(999);
					ВыходныеПараметры.Добавить(НСтр("ru='Ошибка при подключении сканера штрих кода.
													|Проверьте настройки порта.'")); ОбщиеФункции.СообщитьТекст(ВыходныеПараметры[1]); КонецЕсли;
			Иначе
				
				//ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
				ОтключитьСканерШтрихКода(Оборудование);

				ВыходныеПараметры.Очистить();
				ВыходныеПараметры.Добавить(999);
				ВыходныеПараметры.Добавить(НСтр("ru='Не удалось занять сканер штрих кода.
												|Проверьте настройки порта.'"));ОбщиеФункции.СообщитьТекст(ВыходныеПараметры[1]); КонецЕсли; КонецЕсли;

	Возврат Результат;
	
КонецФункции
Процедура ОтключитьСканерШтрихКода(Оборудование)
	
	текОборудование = глВнешнееОборудование[Оборудование];

	текОборудование.Драйвер.УстройствоВключено = 0;
	текОборудование.Драйвер.Освободить();
	текОборудование.Драйвер.Отсоединить();
	
КонецПроцедуры


// --======-- ТСД CiperLab 8230 --======-- \\

Функция ПолучитьНачальныеНастройкиCipherLab8230()
	
	Возврат Новый Структура("Порт, Скорость, ТипСвязи, ДопТаймаут, РазделительБД, РазделительФайлаДанных, Кодировка",
							5,		1,			1,				0,		";",			";",				0);
	//						COM5 115200 б/с  КабельUSB												 	ANSI
КонецФункции

Функция ПодключитьCipherLab8230(Оборудование, Настройки)
	
	// Подключим
	
	Попытка
		
		ПодключитьВнешнююКомпоненту("AddIn.iPOSoft_DT");
		Драйвер = Новый ("AddIn.iPOSoft_DT");
		
	Исключение  ПоказатьПредупреждение(,"Компонента для работы с терминалом CitySoftWarehouseDOS.DLL не загружена",60,"Сообщение!"); Возврат Ложь; КонецПопытки;
	
	// Добавим в глобальную переменную
	
	Если Драйвер = Неопределено Тогда ПоказатьПредупреждение(,"Не удалось создать объект внешней компоненты с программым идентификатром AddIn.iPOSoft_DT",60);Возврат Ложь;
	Иначе 
		глВнешнееОборудование.Вставить(Оборудование, Новый Структура("Драйвер, Настройки", Драйвер, Настройки));
	КонецЕсли;
	
	Возврат Истина;	
	
КонецФункции
Функция НастроитьПараметрыCipherLab8230(Оборудование)
	
	текОборудование = глВнешнееОборудование[Оборудование];
	
	текОборудование.Драйвер.Порт 		= текОборудование.Настройки.Порт;
	текОборудование.Драйвер.Скорость 	= текОборудование.Настройки.Скорость;
	текОборудование.Драйвер.ТипСвязи 	= текОборудование.Настройки.ТипСвязи;
	текОборудование.Драйвер.ДопТаймаут 	= текОборудование.Настройки.ДопТаймаут;
	
	МодельТерминала = "";
	ТекКодОшибки = текОборудование.Драйвер.Драйвер.ПроверкаСвязи(МодельТерминала);
	
	Если ТекКодОшибки Тогда
			
		ТекКодОшибки = СокрЛП(текОборудование.Драйвер.Состояние);
		ОтключитьОборудование(Оборудование);
		ПоказатьПредупреждение(,"Не прошла проверка связи. Код ошибки = " + ТекКодОшибки, 60,"Сообщение!");
			
	Иначе	
		
		текОборудование.Драйвер.РазделительБД 			= текОборудование.Настройки.РазделительБД;
		текОборудование.Драйвер.РазделительФайлаДанных 	= текОборудование.Настройки.РазделительФайлаДанных;
		текОборудование.Драйвер.Кодировка 				= текОборудование.Настройки.Кодировка;
			
	КонецЕсли;
	
КонецФункции
Процедура ОтключитьCipherLab8230(Оборудование)
	
	текОборудование = глВнешнееОборудование[Оборудование];
	Если текОборудование <> Неопределено И
		текОборудование.Драйвер <> Неопределено Тогда
		
		Попытка текОборудование.Драйвер.ЗакрытьПорт(); Исключение КонецПопытки;
		текОборудование.Драйвер = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

// Открыть закрыть порт

Функция ПрочитатьСерийныйНомерCipherLab8230(Драйвер, СерийныйНомер)
	
	// считываем серийный номер терминала
	СерийныйНомер 	= СокрЛП(Драйвер.СерийныйНомер());
	КодОшибки 		= Драйвер.Состояние;
	
	Если КодОшибки Тогда
		Предупреждение(Драйвер.ОписаниеСостояния + ". Код ошибки = " + СокрЛП(КодОшибки));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ЧтениеСерийногоНомера
Функция ПроверитьСвязьCipherLab8230(Драйвер, СерийныйНомер)
	
	МодельТерминала = "";
	КодОшибки 		= Драйвер.ПроверкаСвязи(МодельТерминала);
	
	Если КодОшибки Тогда
		
		Предупреждение(Драйвер.ОписаниеСостояния + ". Код ошибки = " + СокрЛП(КодОшибки));
		Возврат Ложь;
		
	КонецЕсли;
	
	// и считываем серийный номер
	Если Не ПрочитатьСерийныйНомерCipherLab8230(Драйвер, СерийныйНомер) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПоКнопкеПроверкаСвязи
Функция ЗаписатьДанныеВФайлCipherLab8230(Оборудование, ИмяФайла)
	
	Состояние("Считывание данных из терминала...");
	
	// Подготовим переменные
	
	Драйвер 	= глВнешнееОборудование[Оборудование].Драйвер;
	Настройки	= глВнешнееОборудование[Оборудование].Настройки;
	
	РазделительПолей 	= Настройки.РазделительБД;
	ТипФайлаВ_ТСД 		= 0;
	
	#Если ВебКлиент Тогда
		ПоказатьПредупреждение(,"В веб браузере внешнее оборудование не доступно!",,"Сообщение!");
		Возврат Ложь;
	#Иначе
		ИмяФайла 			= ПолучитьИмяВременногоФайла();
	#КонецЕсли
	
	// Получим устройство
	
	Если Драйвер.ВыбратьУстройство("CipherLAB") Тогда
		ПоказатьПредупреждение(,"Метод ВыбратьУстройство завершился с ошибкой!",,"Ошибка!");
		Возврат Ложь;
	КонецЕсли;
	
	// Откроем порт
	
	Драйвер.Порт 		= Настройки.Порт;
	Драйвер.Скорость 	= Настройки.Скорость;
	Драйвер.ТипСвязи 	= Настройки.ТипСвязи;
	Драйвер.ДопТаймаут 	= Настройки.ДопТаймаут;
	
	КодОшибки = Драйвер.НастроитьПорт();
	Если КодОшибки Тогда
		ТекКодОшибки = СокрЛП(Драйвер.Состояние);
		Драйвер.ЗакрытьПорт();
		ПоказатьПредупреждение(,"Не прошла проверка связи. Код ошибки = " + ТекКодОшибки,,"Ошибка!");
		Возврат Ложь;
	КонецЕсли;
	
	// начинаем чтение данных
	
	КодОшибки = Драйвер.Читать(ИмяФайла, 0, ТипФайлаВ_ТСД, 1, 1); 
	
	// ждем окончания
	
	Пока КодОшибки = 81 Цикл
		ОбработкаПрерыванияПользователя();
		КодОшибки = Драйвер.Состояние;
	КонецЦикла;
	
	// Закроем порт
	
	Драйвер.ЗакрытьПорт();
	
	Если КодОшибки Тогда    
		ПоказатьПредупреждение(,"Ошибка терминала сбора данных " + Драйвер.ОписаниеСостояния + ". Код ошибки = " + СокрЛП(КодОшибки),,"Ошибка!");
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
