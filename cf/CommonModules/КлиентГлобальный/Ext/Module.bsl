
Функция МожноРаботать(ТекстПричины = "") Экспорт
	
	Параметры = Выгонялка_Сервер.ПолучитьПараметрыВремениМассив();
	
	// 0 - ТекущийРежим (число)
	//			0 - Можно работать
	//			1 - Можно работать, но назначена дата завершения, но еще не настало время начала изгнания
	//			2 - Режим завершения, но не все еще готовы к выходу
	//			3 - Режим завершения, все готовы к выходу
	// 1 - КоличествоНеГотовых 		(число)
	// 2 - ПолныеПрава 				(булево)
	// 3 - КонфигурацияИзменена 	(булево)
	// 4 - ВремяНаСервере 			(датавремя)
	// 5 - ВремяЗавершения 			(датавремя)
	// 6 - ВремяНачалаНапоминания 	(датавремя)
	
	Если Параметры[0] < 2 Тогда
		
		Возврат Истина;
		
	Иначе
		
		Ожидание = "<p align=center>(" + НСтр("ru='ожидаем завершения работы пользователей в количестве';de='weiterleiten, um den Abschluss der Arbeiten in der Höhe von Nutzern'") + " - " + Параметры[1] + ")</p>";
		ТекстПричины = ?(Параметры[3],
								"<BR><BR><BR>
								|<H2 align=center>" + НСтр("ru='Изменилась конфигурация'; de='Konfiguration geändert'") + "</H2>
								|<P align=center>" + НСтр("ru='база данных будет обновлена'; de='Datenbank wird aktualisiert'") + "<FONT color=#ff0000>" + Формат(Параметры[5],"ДЛФ=DDT") + "</FONT></P>
								|<P align=center>" + НСтр("ru='Возможно система будет доступна в'; de='Vielleicht wird das System in sein'") + " <FONT color=#006400>" + Формат(Параметры[5] + 60,"ДФ=hh:mm") + "</FONT></P>",
								
								"<BR><BR><BR>
								|<H2 align=center>" + НСтр("ru='Запланирована перезагрузка базы'; de='Geplante Wiederanlauf-Datenbank'") + "</H2>
								|<P align=center><FONT color=#ff0000>" + Формат(Параметры[5],"ДЛФ=DDT") + "</FONT></P>") + "
								|" + Ожидание; 
		Возврат Ложь; КонецЕсли;

КонецФункции

Процедура ОстановитьЗапланированныйВыходИзПрогаммы() Экспорт
	
	Если Выгонялка_Сервер.ВыгонялкаНазначена() Тогда
		
		Выгонялка_Сервер.ТеперьОстановленаВыгонялка();
		ОтключитьОбработчикОжидания("ЕслиВсеПользователиСогласилисьСВыходомТогдаВыйти");
		ОтключитьОбработчикОжидания("ПредупредитьОЗавершенииЗаМинуту");
		ОтключитьОбработчикОжидания("ЗавершитьРаботу");
		ОтключитьОбработчикОжидания("ПрекратитьРаботу"); 
		
	КонецЕсли;
	
КонецПроцедуры
Процедура КонтрольВозможностиРаботы() Экспорт
	
	Параметры = Выгонялка_Сервер.ПолучитьПараметрыВремениМассив();
	
	// 0 - ТекущийРежим (число)
	//			0 - Можно работать
	//			1 - Можно работать, но назначена дата завершения, но еще не настало время начала изгнания
	//			2 - Режим завершения, но не все еще готовы к выходу
	//			3 - Режим завершения, все готовы к выходу
	// 1 - КоличествоНеГотовых 		(число)
	// 2 - ПолныеПрава 				(булево)
	// 3 - КонфигурацияИзменена 	(булево)
	// 4 - ВремяНаСервере 			(датавремя)
	// 5 - ВремяЗавершения 			(датавремя)
	// 6 - ВремяНачалаНапоминания 	(датавремя)
	
	Если Параметры[0] = 3 Тогда
		
		ПрекратитьРаботуСистемы();          
		
	ИначеЕсли Параметры[0] = 2 Тогда
		
		// Расчитаем когда предупредим последний раз и выгоним
		
		Если Не Выгонялка_Сервер.ВыгонялкаНазначена() И Параметры[5] <> '00010101' Тогда
			
			Осталось = Параметры[5] - Параметры[4];
			
			Выгонялка_Сервер.ТеперьЗапущенаВыгонялка();
			ПодключитьОбработчикОжидания("ЕслиВсеПользователиСогласилисьСВыходомТогдаВыйти", 1);
			Если Осталось - 60 > 0 Тогда ПодключитьОбработчикОжидания("ПредупредитьОЗавершенииЗаМинуту", Осталось - 60, Истина); КонецЕсли;
			Если Осталось - 30 > 0 Тогда ПодключитьОбработчикОжидания("ЗавершитьРаботу", Осталось - 30, Истина); КонецЕсли;
			ПодключитьОбработчикОжидания("ПрекратитьРаботу", ?(Осталось > 0, Осталось, 1), Истина); 
			
			глПользовательХочетЗакрыть = Истина;КонецЕсли;
		
		// Отобразим форму изгнания
		
		ОткрытьФорму("ОбщаяФорма.Выгонялка", Новый Структура("ЭтаФормаОткрыласьАвтоматически", Истина),,"1"); 
		
	ИначеЕсли Параметры[0] = 3 Тогда
		
		ОтключитьОбработчикОжидания("ПросканироватьНовыеСообщения"); // Отключаем оповещения
		ЗавершитьРаботуСистемы();
		
	Иначе ОстановитьЗапланированныйВыходИзПрогаммы() КонецЕсли;
	
КонецПроцедуры
Процедура ЕслиВсеПользователиСогласилисьСВыходомТогдаВыйти() Экспорт
	
	Если Не Выгонялка_Сервер.КоличествоНеГотовыКВыходу() Тогда
		ЗавершитьРаботу(); КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаНапоминаний() Экспорт
	
	НапоминанияКлиент.ПроверитьНапоминания();
	
КонецПроцедуры

Процедура ПрекратитьРаботу() Экспорт
	
	//Если глЭтотСеансВыгоняетВсех <> истина Тогда
		ПоказатьОповещениеПользователя("ru='Завершение работы';de='Schließung'",,НСтр("ru='Автоматическое закрытие';de='Automatisches Schließen'"), БиблиотекаКартинок.Выключить);
		ПрекратитьРаботуСистемы(); //КонецЕсли;
	
КонецПроцедуры
Процедура ЗавершитьРаботу() Экспорт
	
	ПоказатьОповещениеПользователя(НСтр("ru='Завершение работы';de='Schließung'"),,НСтр("ru='Работа завершается'; de='Die Arbeiten sind abgeschlossen'"), БиблиотекаКартинок.Выключить);
	ЗавершитьРаботуСистемы();
	
КонецПроцедуры
Процедура ПредупредитьОЗавершенииЗаМинуту() Экспорт
	
	ПоказатьОповещениеПользователя(НСтр("ru='Завершение работы';de='Schließung'"),,НСтр("ru='Через минуту система принудительно завершит работу'; de='Eine Minute später wird das System zwangsweise beenden den Job'"), БиблиотекаКартинок.Выключить);
	
КонецПроцедуры
Процедура ЗавершитьРаботуЧерезСекунду() Экспорт
	
	ПодключитьОбработчикОжидания("ЗавершитьРаботу", 0.1, Истина);
	
КонецПроцедуры

#Область Выгонялка

Процедура ВключитьОбработчикКонтроляРаботы() Экспорт

	ПодключитьОбработчикОжидания("КонтрольВозможностиРаботы", 31);
	
КонецПроцедуры
Процедура ОтключитьОбработчикКонтроляРаботы() Экспорт

	ОтключитьОбработчикОжидания("КонтрольВозможностиРаботы");
	
КонецПроцедуры

#КонецОбласти

#Область Смена_пароля

Процедура ПроверитьТребованиеСменитьПароль() Экспорт
	
	Если ДиалогиСПользователямиСервер.ПользователюНужноСменитьПароль() Тогда
		ОткрытьФорму("Справочник.Пользователи.Форма.ВводПароля", Новый Структура("ПоказатьНадпись1", Истина),,,,,Новый ОписаниеОповещения("ПолучитьНовыйПарольПользователя", ДиалогиСПользователем)); КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

Процедура ПросканироватьНовыеСообщения() Экспорт
	
	СобытияКлиент.ПросканироватьПоявлениеНовыхСообщений();
	
КонецПроцедуры