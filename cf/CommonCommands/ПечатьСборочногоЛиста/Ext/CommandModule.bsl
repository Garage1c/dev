
Функция ПодсчитатьИтогЯчейки(ОтрСоответствие, КлючПоиска)
	
	Если ОтрСоответствие[КлючПоиска] <> ИСТИНА Тогда
		ОтрСоответствие.Вставить(КлючПоиска, Истина);
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервере
Функция ПодготовитьТаблицуВыводаПоОстаткам(Ссылка, Склад, ИмяДок, ИмяКоличество)
	
	// Выводит таблицу распределяя аккуратно по остаткам
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Номенклатура,
	|	МАКСИМУМ(Номенклатура.ЕдиницаИзмерения) 	ЕдиницаИзмерения,
	|	СУММА(" + ИмяКоличество + ") 				Количество
	|
	|ПОМЕСТИТЬ
	|	Товары
	|ИЗ
	|	Документ." + ИмяДок + ".Товары
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.Наименование Наименование,
	|	Номенклатура.Артикул Артикул,	
	|	ЕдиницаИзмерения,
	|	Количество
	|ИЗ
	|	Товары
	|;
	|
	|ВЫБРАТЬ 
	|	Номенклатура, 
	|	Номенклатура.Наименование Наименование,
	|	Номенклатура.Артикул Артикул,  
	|	Ячейка, 
	|	Ячейка.Проход	Проход, 
	|	Ячейка.Секция 	Секция, 
	|	Ячейка.Ярус 	Ярус, 
	|	Ячейка.Поддон 	Поддон, 
	|	ПРЕДСТАВЛЕНИЕ(Ячейка.Проход) НомерЯчейки,
	|	КоличествоОстаток Количество
	|ИЗ 
	|	РегистрНакопления.ТоварыВЯчейках.Остатки(,Ячейка.Владелец = &Склад И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ Товары))
	|ГДЕ
	|	КоличествоОстаток > 0
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", 	Склад);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	текТовары 	= Результаты[1].Выгрузить();
	Остатки 	= Результаты[2].Выгрузить();
	
	ТаблВывода = Новый ТаблицаЗначений;
	ТаблВывода.Колонки.Добавить("Артикул", 			Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Наименование", 	Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблВывода.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	ТаблВывода.Колонки.Добавить("Ячейка", 			Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	ТаблВывода.Колонки.Добавить("НомерЯчейки", 		Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число"));
	ТаблВывода.Колонки.Добавить("Проход", 			Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Секция", 			Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Ярус", 			Новый ОписаниеТипов("Строка"));
	ТаблВывода.Колонки.Добавить("Поддон", 			Новый ОписаниеТипов("Строка"));
	
	Остатки.Индексы.Добавить("Номенклатура");
	
	ОтрПроход 	= Новый Соответствие;
	ОтрСекция 	= Новый Соответствие;
	ОтрЯрус 	= Новый Соответствие;
	ОтрПоддон 	= Новый Соответствие;
	
	// Рассчитаем
	
	ВсегоКол 	= 0;
	
	Для каждого Строка Из текТовары Цикл
		
		Нужно 			= Строка.Количество;
		СтрокиЯчеек		= Остатки.НайтиСтроки(Новый Структура("Номенклатура", Строка.Номенклатура));
		
		Для каждого СтрокаЯчейки Из СтрокиЯчеек Цикл
		
			Берем = Мин(СтрокаЯчейки.Количество, Нужно);
			Если Берем > 0 Тогда
				
				НовСтрока = ТаблВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаЯчейки);
				
				НовСтрока.Количество 		= Берем;
				НовСтрока.ЕдиницаИзмерения 	= Строка.ЕдиницаИзмерения;
				
				ВсегоКол 				= ВсегоКол + Берем;
				Нужно					= Нужно - Берем;
				СтрокаЯчейки.Количество = СтрокаЯчейки.Количество - Берем;
							
			КонецЕсли; 
		КонецЦикла; 
		
		Если Нужно Тогда
			НовСтрока = ТаблВывода.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
			НовСтрока.Количество = Нужно;
		КонецЕсли;
		
	КонецЦикла; 
	
	// Отсортируем чтобы бегали быстрее
	
	ТаблВывода.Сортировать("Наименование, НомерЯчейки");

	Возврат ТаблВывода;
	
КонецФункции
&НаСервере
Функция ПодготовитьТаблицуВыводаПоДокументу(Ссылка, Склад, ИмяДок, ИмяКоличество, ИмяЯчейки = "Ячейка")
	
	// Выводит таблицу распределяя аккуратно по остаткам
	
	Запрос = Новый Запрос("
	|" + ?(ИмяДок = "Комплектация", "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Номенклатура.Артикул Артикул,
	|	Док.Номенклатура,
	|	Док.Ячейка,
	|	Док.Ячейка.Проход	Проход,
	|	Док.Ячейка.Секция	Секция,
	|	Док.Ячейка.Ярус		Ярус,
	|	Док.Ячейка.Поддон	Поддон,
	|	РегЦен.Цена			Цена,
	|	ПРЕДСТАВЛЕНИЕ(Док.Ячейка.Проход)	НомерЯчейки,
	|	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Док.Номенклатура.ЕдиницаИзмерения 				
	|	ИНАЧЕ
	|		Док.Упаковка
	|	КОНЕЦ ЕдиницаИзмерения,
	|   Док.Количество
	|ИЗ
	|	Документ.Комплектация Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(	ВЫБРАТЬ Номенклатура, МАКСИМУМ(Цена) Цена
	|	ИЗ		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,
	|						ТипЦен = &ТипЦен И 
	|						Номенклатура В(
	|								ВЫБРАТЬ Номенклатура 
	|								ИЗ		Документ.Комплектация
	|								ГДЕ 	Ссылка = &Ссылка
	|									))
	|	СГРУППИРОВАТЬ ПО Номенклатура
	|) РегЦен
	|ПО
	|	РегЦен.Номенклатура = Док.Номенклатура
	|	
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|","") + "
	|
	|ВЫБРАТЬ
	|	Док.Номенклатура.Артикул Артикул,
	|	Док.Номенклатура,
	|	Док." + ИмяЯчейки + " Ячейка, 
	|	Док." + ИмяЯчейки + ".Проход	Проход, 
	|	Док." + ИмяЯчейки + ".Секция 	Секция, 
	|	Док." + ИмяЯчейки + ".Ярус 	Ярус, 
	|	Док." + ИмяЯчейки + ".Поддон 	Поддон, 
	|	РегЦен.Цена			Цена,
	|	ПРЕДСТАВЛЕНИЕ(Док." + ИмяЯчейки + ".Проход) 	НомерЯчейки,
	|	ВЫБОР КОГДА Док.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		Док.Номенклатура.ЕдиницаИзмерения 				
	|	ИНАЧЕ
	|		Док.Упаковка
	|	КОНЕЦ 									ЕдиницаИзмерения,
	|	Док." + ИмяКоличество + " 					Количество
	|
	|ИЗ
	|	Документ." + ИмяДок + ".Товары Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(	ВЫБРАТЬ Номенклатура, МАКСИМУМ(Цена) Цена
	|	ИЗ		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,
	|						ТипЦен = &ТипЦен И 
	|						Номенклатура В(
	|								ВЫБРАТЬ Номенклатура 
	|								ИЗ		Документ." + ИмяДок + ".Товары
	|								ГДЕ 	Ссылка = &Ссылка
	|									))
	|	СГРУППИРОВАТЬ ПО Номенклатура
	|) РегЦен
	|ПО
	|	РегЦен.Номенклатура = Док.Номенклатура
	|
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", 	Склад);
	Запрос.УстановитьПараметр("ТипЦен", ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница"));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокумент(Ссылка)
	
	МетаДок = Ссылка.Метаданные();
	ИмяДок 	= МетаДок.Имя;
	Синоним	= МетаДок.Синоним;
	Комменты = Новый Массив;

	Если 	ИмяДок = "ОтгрузкаТоваров" Тогда
		
		Склад = Ссылка.СкладОтправитель;
		ИмяКоличество 	= "Количество";
		ТаблВывода 		= ПодготовитьТаблицуВыводаПоДокументу(Ссылка, Склад, ИмяДок, ИмяКоличество);
		Комменты 		= БизнесПроцессы[Ссылка.Процесс.Метаданные().Имя].ПолучитьМассивКомментариев(Ссылка.Процесс);
		
	ИначеЕсли	ИмяДок = "ПеремещениеТоваров" Тогда
			
		Склад = Ссылка.СкладОтправитель;
		ИмяКоличество 	= "Количество";
		ТаблВывода 		= ПодготовитьТаблицуВыводаПоДокументу(Ссылка, Склад, ИмяДок, ИмяКоличество, "ЯчейкаОтправитель");
		Если Ссылка.Основание <> Неопределено И НЕ Ссылка.Основание.Пустая() И ТипЗнч(Ссылка.Основание) <> Тип("ДокументСсылка.ПоступлениеТоваров") И ТипЗнч(Ссылка.Основание) <> Тип("ДокументСсылка.ЧекККМ") Тогда 
			Комменты 		= БизнесПроцессы[Ссылка.Основание.Метаданные().Имя].ПолучитьМассивКомментариев(Ссылка.Основание);
		ИначеЕсли НЕ ПустаяСтрока(Ссылка.Комментарий) Тогда
	        Комменты.Добавить(Новый Структура("Комментарий, Заголовок, ДатаВыполнения, Исполнитель", Ссылка.Комментарий, ФормированиеПечатныхФорм.СформироватьЗаголовокДокумента(Ссылка, "ПеремещениеТоваров"), Ссылка.Дата, Ссылка.Ответственный));
		КонецЕсли;
		
	ИначеЕсли 	ИмяДок = "ВнутреннийЗаказ" Или 
				ИмяДок = "ЗаказПоставщику" Или
				ИмяДок = "ЗаказПокупателя" Или
				ИмяДок = "ВозвратПоставщику" Тогда
		
		Склад 			= Ссылка.Склад;
		ИмяКоличество 	= "Количество";
		ТаблВывода 		= ПодготовитьТаблицуВыводаПоОстаткам(Ссылка, Склад, ИмяДок, ИмяКоличество);
		
	ИначеЕсли 	ИмяДок = "СписаниеТоваров" 		Или
				ИмяДок = "ОприходованиеТоваров" Или
				ИмяДок = "Комплектация" 		Тогда
		
		Склад 			= Ссылка.Склад;
		ИмяКоличество 	= "Количество";
		ТаблВывода 		= ПодготовитьТаблицуВыводаПоДокументу(Ссылка, Склад, ИмяДок, ИмяКоличество);
		
	Иначе
		
		Склад 			= Ссылка.Склад;
		ИмяКоличество 	= "ВСборке + Собрано";
		ТаблВывода 		= ПодготовитьТаблицуВыводаПоДокументу(Ссылка, Склад, ИмяДок, ИмяКоличество, "СкладЯчейка");
		
	КонецЕсли;
	
	ТабДокумент 	= Новый ТабличныйДокумент;
	Макет 			= ПолучитьОбщийМакет("СборочныйЛист");
	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьКомментарий		= Макет.ПолучитьОбласть("Комментарий");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьПерваяСтрока 	= Макет.ПолучитьОбласть("ПерваяСтрока");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итого");
	
	// Установим штрих код
	
	//мШтрихКоды = ШтрихКоды.ПолучитьШтрихКодыОбъекта(Ссылка); Если мШтрихКоды.Количество() Тогда
	//	ШтрихКоды.УстановитьШтрихКодВМакете(ОбластьШапка, мШтрихКоды[мШтрихКоды.ВГраница()]);КонецЕсли;
	
	// Шапка
	
	ТипЦен = ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница");
	//ОбластьЗаголовокТаблицы.Параметры.ТипЦен 	= Строка(ТипЦен);
	//ОбластьЗаголовокТаблицы.Параметры.Цена 		= "Цена, " + Строка(ТипЦен.Валюта);
	
	ОбластьШапка.Параметры.Номер 			= Ссылка.Номер;
	ОбластьШапка.Параметры.Дата 			= Ссылка.Дата;
	ОбластьШапка.Параметры.СинонимДокумента = Синоним;
	ОбластьШапка.Параметры.Склад 			= Склад;
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Сформируем комментарий
	
	Для Каждого Коммент Из Комменты Цикл
		ОбластьКомментарий.Параметры.Заполнить(Коммент);
		Если Коммент.Исполнитель.Пустая() Тогда
			ОбластьКомментарий.Параметры.Исполнитель = "Последний комментарий:";
		Иначе
			ОбластьКомментарий.Параметры.Исполнитель = Строка(Коммент.Исполнитель) + " (" + Формат(Коммент.ДатаВыполнения,"ДЛФ=DDT") + "):";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьКомментарий);
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
	
	
	ОтрПроход 	= Новый Соответствие;
	ОтрСекция 	= Новый Соответствие;
	ОтрЯрус 	= Новый Соответствие;
	ОтрПоддон 	= Новый Соответствие;
	
	// Выводим в таблицу
	
	Ном = 0;
	ИтогПроход 	= 0;
	ИтогСекция 	= 0;
	ИтогЯрус 	= 0;
	ИтогПоддон 	= 0;
	ВсегоКол	= 0;
	
	Если ИмяДок = "Комплектация" Тогда
	    Ном = Ном + 1;
	   	ОбластьПерваяСтрока.Параметры.Заполнить(ТаблВывода[0]);
		ОбластьПерваяСтрока.Параметры.Номер 		= Ном;
		ТабДокумент.Вывести(ОбластьПерваяСтрока);
		ТаблВывода.Удалить(0);
	КонецЕсли;
	
	Для каждого Строка Из ТаблВывода Цикл Ном = Ном + 1;
		
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.Номер 		= Ном;
		ТабДокумент.Вывести(ОбластьСтрока);
		
		// Подсчитаем итоги
		
		Если ЗначениеЗаполнено(Строка.Ячейка) Тогда
		
			ИтогПроход 	= ИтогПроход + ПодсчитатьИтогЯчейки(ОтрПроход, Строка.Проход);
			ИтогСекция 	= ИтогСекция + ПодсчитатьИтогЯчейки(ОтрСекция, Строка.Проход + "." + Строка.Секция);
			ИтогЯрус 	= ИтогЯрус + ПодсчитатьИтогЯчейки(ОтрЯрус, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус);
			ИтогПоддон 	= ИтогПоддон + ПодсчитатьИтогЯчейки(ОтрПоддон, Строка.Проход + "." + Строка.Секция + "." + Строка.Ярус + "." + Строка.Поддон);
			
		КонецЕсли;
	КонецЦикла; 
	
	ОбластьИтого.Параметры.ДатаФормирования = Формат(ТекущаяДата(),"ДЛФ=DDT");
	//ОбластьИтого.Параметры.КолЯчеек		 	= Строка(ИтогПроход) + "." + Строка(ИтогСекция) + "." + Строка(ИтогЯрус) + "." + Строка(ИтогПоддон);
	//ОбластьИтого.Параметры.КолНоменклатура 	= ВсегоКол;
	ТабДокумент.Вывести(ОбластьИтого);
	
	// Настрим просмотры
	
	ТабДокумент.ТолькоПросмотр 	= Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Возврат ТабДокумент;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	// Вставить содержимое обработчика.
	// ПараметрыФормы = Новый Структура("", );
	// ОткрытьФорму("ОбщаяФорма.", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
	
	// Подготовим печатную форму
	
	Для Каждого Ссылка Из ПараметрКоманды Цикл
	
		ПолучитьТабличныйДокумент(Ссылка).Показать("Сборочный лист");
		
	КонецЦикла;
	
КонецПроцедуры
