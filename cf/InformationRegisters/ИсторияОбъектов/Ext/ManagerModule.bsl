
#Область Запись

Процедура ДобавитьЗапись(Набор, Дата, ОбъектСсылка, ИмяПоля, Значение = Неопределено, ЗначениеДо = Неопределено, idСтроки = "", ИмяПоляТаблицы = "")
	
	Запись = Набор.Добавить();
	
	Запись.Период			= Дата;
	Запись.Объект 			= ОбъектСсылка;
	Запись.Реквизит 		= ИмяПоля;
	Запись.РеквизитТаблицы 	= ИмяПоляТаблицы;
	Запись.idстроки 		= idстроки;
	Запись.Ответственный 	= ПараметрыСеанса.ТекущийПользователь;
	
	Запись.Значение 				= Новый ХранилищеЗначения(Значение);
	Запись.ЗначениеПредставление 	= Строка(Значение);
	Запись.ЗначениеДо 				= Новый ХранилищеЗначения(Значение);
	Запись.ЗначениеПредставлениеДо 	= Строка(ЗначениеДо);
	
КонецПроцедуры

Функция ЗаписатьИзменение(ОбъектСсылка, ИзмененныеРеквизиты) Экспорт	
	// Подготовим	
	МетаОбъект	= ОбъектСсылка.Метаданные();
	ТипМассив 	= Тип("Массив");
	Дата 		= ТекущаяДатаСеанса();
	
	Набор 		= РегистрыСведений.ИсторияОбъектов.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(ОбъектСсылка);
	Набор.Отбор.Период.Установить(Дата);
	// Сосканируем табличные части
	ТаблЧасти = Новый Массив;
	Для Каждого ТабЧасть Из МетаОбъект.ТабличныеЧасти Цикл ТаблЧасти.Добавить(ТабЧасть.Имя) КонецЦикла;
	// Начнемс	
	Для Каждого Изменение Из ИзмененныеРеквизиты Цикл
		Если ТипЗнч(Изменение.Значение) = ТипМассив Тогда //			 СЛЕЖЕНИЕ ЗА ТАБЛИЧНЫМИ ЧАСТЯМИ	
			// Запшием изменения таблицы
			Для Каждого Строка Из Изменение.Значение Цикл 
				idстроки = Строка.idстроки;
				НомерСтроки = 1;
				Для Каждого Колонка Из Строка Цикл 
					Если Колонка.Ключ <> "idстроки" Тогда 
						СтрокаОбъекта = ОбъектСсылка[Изменение.Ключ].Найти(idСтроки);
						ДобавитьЗапись(Набор, Дата, ОбъектСсылка, Изменение.Ключ, ?(СтрокаОбъекта = Неопределено, Неопределено,СтрокаОбъекта[Колонка.Ключ]), Колонка.Значение, idстроки, Колонка.Ключ); 
					КонецЕсли; 
				КонецЦикла; 
			КонецЦикла;
		Иначе // Запишем реквизиты
			ДобавитьЗапись(Набор, Дата, ОбъектСсылка, Изменение.Ключ, ОбъектСсылка[Изменение.Ключ], Изменение.Значение,,) КонецЕсли; КонецЦикла;
	// Запишем
	
	Попытка
		Набор.Записать();
	Исключение
		текОшибка 	= ОписаниеОшибки();
		стрОшибки 	= "Ошибка при записи " + Строка(ОбъектСсылка) + "
						|" + текОшибка;
		//СообщитьТекст(стрОшибки) КонецЕсли; Возврат Ложь; КонецПопытки; Возврат Истина;
		
	Возврат Ложь; КонецПопытки;
		
	Возврат Истина;
		
	//Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Набор);	
		
КонецФункции

#КонецОбласти

#Область Печать

Функция НоваяТаблицаИзменений()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Реквизит", 				Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ЗначениеПредставление",	Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("значение");
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьДанныеИзмененияОбъектаДляПечати(ОбъектСсылка)
	
	// Возвращает истрию объекта
	// Таблица значений - {Период, Ответственный, Реквизиты, ТабличныеЧасти}
	//				где Период - дата изменения
	//					Реквизиты - таблица значений {Реквизит, значение, ЗначениеПредставление}
	//					ТабличныеЧасти - структура ключ имя таблицы а значение это соответвие где ключ это номер строки 
	//										а значение это таблица значений {Реквизит, значение, ЗначениеПредставление}
	
	// Вытащим запросом
	
	Запрос = Новый Запрос("
	//|ВЫБРАТЬ Источник, Период, Реквизит, РеквизитТаблицы, НомСтроки, Значение, ЗначениеПредставление ИЗ (
	//|
	//|	ВЫБРАТЬ 	""Реквизиты"" Источник, Период, Реквизит, РеквизитТаблицы, НомСтроки, Значение, ЗначениеПредставление
	//|	ИЗ 	РегистрСведений.ИсторияОбъектов
	//|	ГДЕ Объект = &Объект И НомСтроки = 0
	//|
	//|	ОБЪЕДИНИТЬ ВСЕ
	//|
	//|	ВЫБРАТЬ 	""Таблица"", Период, Реквизит, РеквизитТаблицы, НомСтроки, Значение, ЗначениеПредставление
	//|	ИЗ 	РегистрСведений.ИсторияОбъектов
	//|	ГДЕ Объект = &Объект  И НомСтроки > 0) Запрос
	//|
	//|УПОРЯДОЧИТЬ ПО Период Убыв, Источник, НомСтроки ИТОГИ ПО Период
	|	ВЫБРАТЬ 	Период, Ответственный, Реквизит, РеквизитТаблицы, НомСтроки, Значение, ЗначениеПредставление
	|	ИЗ 	РегистрСведений.ИсторияОбъектов
	|	ГДЕ Объект = &Объект
	|УПОРЯДОЧИТЬ ПО Период Убыв, НомСтроки ИТОГИ МАКСИМУМ(Ответственный) ПО Период
	|");
	
	Запрос.УстановитьПараметр("Объект", ОбъектСсылка);
	
	ВыборкаПериода 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	История = Новый ТаблицаЗначений;
	История.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	История.Колонки.Добавить("Ответственный", 	Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	История.Колонки.Добавить("Реквизиты",		Новый ОписаниеТипов("ТаблицаЗначений"));
	История.Колонки.Добавить("ТабличныеЧасти", 	Новый ОписаниеТипов("Структура"));
	
	Пока ВыборкаПериода.Следующий() Цикл
		
		Реквизиты = НоваяТаблицаИзменений();
		ТаблЧасти = Новый Структура;
		
		Выборка = ВыборкаПериода.Выбрать();
		Пока Выборка.Следующий() Цикл
		    
			Если ОбъектСсылка.Метаданные().ТабличныеЧасти.Найти(Выборка.Реквизит)<> Неопределено Тогда // Добавим таблицу
				
				СоотвСтрок 		= ?(ТаблЧасти.Свойство(Выборка.Реквизит), ТаблЧасти[Выборка.Реквизит], Новый Соответствие);
				ТаблицаСтроки 	= СоотвСтрок[Выборка.НомСтроки];
				Если ТаблицаСтроки = Неопределено Тогда ТаблицаСтроки = НоваяТаблицаИзменений() КонецЕсли;
				
				НовСтрока = ТаблицаСтроки.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
				НовСтрока.Реквизит = Выборка.РеквизитТаблицы;
				
				СоотвСтрок.Вставить(Выборка.НомСтроки, ТаблицаСтроки);
				ТаблЧасти.Вставить(Выборка.Реквизит, СоотвСтрок);
				
				//Если Не ТаблЧасти.Свойство(Выборка.Реквизит, Таблица) Тогда Таблица = НоваяТаблицаИзменений() КонецЕсли;
				
				//Таблица.Добавить(Новый Структура("НомерСтроки, Реквизит, Значение, ЗначениеПредставление", 
				//					Выборка.НомСтроки, Выборка.РеквизитТаблицы, Выборка.Значение,Выборка.ЗначениеПредставление));
				//ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Выборка);
				//ТаблЧасти.Вставить(Выборка.Реквизит, Таблица);
				
			Иначе // Добавим реквизит
				
				ЗаполнитьЗначенияСвойств(Реквизиты.Добавить(), Выборка); КонецЕсли; КонецЦикла; 
							
		// Добавим табличные части
		
		//Для Каждого Таб Из ТаблЧасти Цикл ЗаполнитьЗначенияСвойств(Реквизиты.Добавить(), Новый Структура("Реквизит, Значение", Выборка.Реквизит, Таб)) КонецЦикла; 
		
		ЗаполнитьЗначенияСвойств(История.Добавить(), Новый Структура("Период, Ответственный, Реквизиты, ТабличныеЧасти", ВыборкаПериода.Период, ВыборкаПериода.Ответственный, Реквизиты, ТаблЧасти));КонецЦикла;
	
	Возврат История;	
	
КонецФункции

Функция ПолучитьМакетИсторииОбъекта(ОбъектСсылка) Экспорт
	
	Макет 		= РегистрыСведений.ИсторияОбъектов.ПолучитьМакет("ИсторияОбъекта");
	Таблица 	= Новый ТабличныйДокумент;
	История 	= ПолучитьДанныеИзмененияОбъектаДляПечати(ОбъектСсылка);
	МетаОбъект 	= ОбъектСсылка.Метаданные();
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьВремя 			= Макет.ПолучитьОбласть("Время");
	ОбластьРевизит 			= Макет.ПолучитьОбласть("Реквизит");
	ОбластьРевизитТаблицы	= Макет.ПолучитьОбласть("РеквизитТаблицы");
	ОбластьТаблица 			= Макет.ПолучитьОбласть("Таблица");
	ОбластьСтрокаТаблицы	= Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ОбластьЗаголовок.Параметры.Объект = ОбъектСсылка;
	Таблица.Вывести(ОбластьЗаголовок);
	
	Для Каждого СтрокаИстории Из История Цикл
		
		ОбластьВремя.Параметры.ДатаИзменения = СтрокаИстории.Период;
		ОбластьВремя.Параметры.Ответственный = СтрокаИстории.Ответственный;
		Таблица.НачатьАвтогруппировкуСтрок();
		
		Таблица.Вывести(ОбластьВремя, 1, "Время изменений", Истина);
		
		// Выведем реквизиты
		
		Для Каждого СтрокаРеквизит Из СтрокаИстории.Реквизиты Цикл
			
			МетаРеквизит = МетаОбъект.Реквизиты.Найти(СтрокаРеквизит.Реквизит);
				//Если МетаРеквизит = Неопределено Тогда МетаРеквизит = МетаОбъект.СтандартныеРеквизиты[СтрокаРеквизит.Реквизит] КонецЕсли;
				Если МетаРеквизит = Неопределено Тогда Продолжить; КонецЕсли;
			
			ОбластьРевизит.Параметры.ДеталиИзмененияРеквизиты = МетаРеквизит.Синоним + ":		" + СтрокаРеквизит.ЗначениеПредставление;
			Таблица.Вывести(ОбластьРевизит); КонецЦикла;
		
		// Выведем таблицы
		
		Для Каждого ЭлементТаблицы Из СтрокаИстории.ТабличныеЧасти Цикл
			
			МетаТабл = МетаОбъект.ТабличныеЧасти[ЭлементТаблицы.Ключ];
			ОбластьТаблица.Параметры.ТабличнаяЧасть = "табличная часть [" + МетаТабл.Синоним + "]";
			
			Таблица.НачатьАвтогруппировкуСтрок();
			Таблица.Вывести(ОбластьТаблица, 2, МетаТабл.Синоним, Истина);
			
			// Номер строк таблицы
			
			Для Каждого НомерСтроки Из ЭлементТаблицы.Значение Цикл
				
				ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки.Ключ;
				Таблица.Вывести(ОбластьСтрокаТаблицы);
				
				// Реквизиты таблицы
				
				Для Каждого СтрокаРеквизит Из НомерСтроки.Значение Цикл
					Если СтрокаРеквизит.Реквизит = "НомерСтроки" Тогда продолжить КонецЕсли;
					ОбластьРевизитТаблицы.Параметры.ДеталиИзмененияРеквизиты = МетаТабл.Реквизиты[СтрокаРеквизит.Реквизит].Синоним + " установлен в: " + СтрокаРеквизит.ЗначениеПредставление;
					Таблица.Вывести(ОбластьРевизитТаблицы); КонецЦикла; КонецЦикла; 
			
			Таблица.ЗакончитьАвтогруппировкуСтрок(); КонецЦикла;
		
		Таблица.ЗакончитьАвтогруппировкуСтрок(); КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти