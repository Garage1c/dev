
&НаКлиенте
Перем стТекТовар;

&НаСервере
Функция ЗаписатьИзменения(СтруктураИзменений)
	
	Спр = СтруктураИзменений.Ссылка.ПолучитьОбъект();
	ЗаполнитьЗначенияСвойств(Спр, СтруктураИзменений);
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Спр);
	
КонецФункции
&НаКлиенте
Процедура ОпределитьИзмененияВHTMLИЗаписатьИзменения()
	
	Если стТекТовар <> Неопределено Тогда
		
		Товары = ПолучитьМассивКартинокТовара(стТекТовар);
		Для Каждого Строка ИЗ Товары Цикл
			
			СтруктураИзменений 	= Новый Структура;
			ИдСтрока 			= Строка(Строка.Ссылка.УникальныйИдентификатор());
			
			// Проверим
			
			Элемент = Элементы.ТекстHTML.Документ.getElementById(ИдСтрока + "ВыгружатьНаСайт");
			Если Элемент.checked <> Строка.ВыгружатьНаСайт Тогда СтруктураИзменений.Вставить("ВыгружатьНаСайт", Элемент.checked) КонецЕсли;
			
			Элемент = Элементы.ТекстHTML.Документ.getElementById(ИдСтрока + "Наименование");
			Если Элемент.value <> Строка.Наименование Тогда СтруктураИзменений.Вставить("Наименование", Элемент.value) КонецЕсли;
			
			Элемент = Элементы.ТекстHTML.Документ.getElementById(ИдСтрока + "ЭтоПредставлениеОбъекта");
			Если Элемент.checked <> Строка.ЭтоПредставлениеОбъекта Тогда СтруктураИзменений.Вставить("ЭтоПредставлениеОбъекта", Элемент.checked) КонецЕсли;
			
			Элемент = Элементы.ТекстHTML.Документ.getElementById(ИдСтрока + "ПометкаУдаления");
			Если Элемент.checked <> Строка.ПометкаУдаления Тогда СтруктураИзменений.Вставить("ПометкаУдаления", Элемент.checked) КонецЕсли;
			
			Элемент = Элементы.ТекстHTML.Документ.getElementById(ИдСтрока + "ИконкаКатегории");
			Если Элемент <> Неопределено И Элемент.checked <> Строка.ИконкаКатегории Тогда СтруктураИзменений.Вставить("ИконкаКатегории", Элемент.checked) КонецЕсли;
			
			
			// Запишем
			
			Если СтруктураИзменений.Количество() Тогда
				СтруктураИзменений.Вставить("Ссылка", Строка.Ссылка);
				Если Не ЗаписатьИзменения(СтруктураИзменений) Тогда
					//хрень!
					ПоказатьПредупреждение(,"Последнии изменения записаны не были",,); КонецЕсли; КонецЕсли; КонецЦикла; КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКартинокТовара(текТовар)
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка, Наименование, ВыгружатьНаСайт, ЭтоПредставлениеОбъекта, ПометкаУдаления, ИконкаКатегории, Владелец.ЭтоГруппа ЭтоГруппа ИЗ Справочник.КартинкиНоменклатуры ГДЕ Владелец = &Владелец УПОРЯДОЧИТЬ ПО ЭтоПредставлениеОбъекта УБЫВ, ВыгружатьНаСайт УБЫВ");
	Запрос.УстановитьПараметр("Владелец", текТовар);
	
	Возврат КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(Запрос.Выполнить().Выгрузить());
	
КонецФункции
&НаСервере
Функция ПолучитьЧастьТелаHTMLССервера()
	
	стр = "";
	ТекстЗаменитьКартинку = "СсылкаНаКартинку)";
	
	КартинкаРазмножить = Картинки.ПолучитьURLКартинкиВОблаке_ПоКартинке(Справочники.Картинки.НайтиПоНаименованию("Размножить"));
	
	текТовар = Элементы.СписокНоменклатуры.ТекущаяСтрока;
	Если текТовар = Неопределено Тогда Возврат "" КонецЕсли;
	
	Товары = ПолучитьМассивКартинокТовара(текТовар);
	Для Каждого Строка Из Товары Цикл
		
		ПолучитьСсылкуВкоде = "HTMLОбработкаСервер.ПолучитьОбъектПоГуидСтроке(""Справочники.КартинкиНоменклатуры"",""" + XMLСтрока(Строка.Ссылка) + """)";
		
		Стр = Стр + "
		|<div class=""block"">
		
		// блок управления кнопками
		
		|<a href='V8:ВЫПОЛНИТЬ КОД:ЭтаФорма.Размножить(" + ПолучитьСсылкуВкоде + ")'><img src='" + КартинкаРазмножить + "' title=""Размножить картинку на товары в корзине"" class=""uprav""/></a>
		
		|	<label><input id=""" + XMLСтрока(Строка.Ссылка) + "ВыгружатьНаСайт" + """ type=""checkbox"" " + ?(Строка.ВыгружатьНаСайт, "checked","") + "/>Выгружать на сайт</label>  
		|	<label><input id=""" + XMLСтрока(Строка.Ссылка) + "ЭтоПредставлениеОбъекта" + """ type=""radio"" " + ?(Строка.ЭтоПредставлениеОбъекта, "checked","") + " name=""osnov""/>Представление</label>
		|	<label><input class=""colortext"" id=""" + XMLСтрока(Строка.Ссылка) + "ПометкаУдаления" + """ type=""checkbox"" " + ?(Строка.ПометкаУдаления, "checked","") + "/>Пометка удаления</label>  
		|" + ?(Строка.ЭтоГруппа, "<br><label><input id=""" + XMLСтрока(Строка.Ссылка) + "ИконкаКатегории" + """ type=""checkbox"" " + ?(Строка.ИконкаКатегории, "checked","") + "/>		Иконка категории</label><br>", "") + "  
		|<br>
		|	<input id=""" + XMLСтрока(Строка.Ссылка) + "Наименование" + """ type=""text"" class=""file_name"" value=""" + Строка.Наименование + """>
		
		// картинки
		
		|<br>
		|<a href='V8:ВЫПОЛНИТЬ КОД:ЭтаФорма.ЗагрузитьКартинку(" + ПолучитьСсылкуВкоде + ", Ложь)'>
		|<img class=img_b src='" + Картинки.ПолучитьURLКартинкиВОблаке_ПоКартинке(Строка.Ссылка, Ложь) + "' alt=""" + текТовар + "
																													|
																													|Нажать, если нужно загрузить новую картинку""></a>
		|</div>
		|"; КонецЦикла;
	
	Возврат Стр;
	
КонецФункции
&НаКлиенте
Процедура ОбновитьКартинки()
	
	ТекстHTML = "
	|<HTML><HEAD>
	|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
	//|<meta http-equiv=""X-UA-Compatible"" content=""IE=9"">
	|	<style>
	|		.uprav{
	|			border: none;}
	
	|		.file_name{
	|			width:100%;}
	
	|		.img_s{
	|			border: none;
	
	|		filter: progid:DXImageTransform.Microsoft.Shadow(color=#aaaaaa,direction=125,strength=3);
	//|			 width:100px; 
	|			 height:120px;}
	
	|		.img_b{
	|			border: none;
	|		filter: progid:DXImageTransform.Microsoft.Shadow(color=#aaaaaa,direction=125,strength=3);
	|			 height:100%; }
	
	|		.block{
	//|			background:	#EDF2F0;
	|			white-space: nowrap;
	|			width:		500px; 
	|			height:		250px; 
	|			padding:	1px;       	
	//|			float:		left; 
	|			margin-left:10px; 
	|			margin-bottom:60px;}
	|	.colortext {
    |	color: #FF0000;
   	|	}
	|	</style>
	|</HEAD>
	|<body>
	|" + ПолучитьЧастьТелаHTMLССервера() + "
	|</body>
	|</HTML>";

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		Элементы.СписокНоменклатуры.ТекущаяСтрока = Параметры.Отбор.Владелец; КонецЕсли;
	
КонецПроцедуры

#Область Интерактивные // действия

&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	//ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокКартинок, "Владелец", Элемент.ТекущаяСтрока, Истина);
	//Элементы.СписокКартинок.ТекущаяСтрока = ПолучитьПервуюКарттинкуТовара(Элемент.ТекущаяСтрока);
	
	ОпределитьИзмененияВHTMLИЗаписатьИзменения();
	
	стТекТовар = Элемент.ТекущаяСтрока;
	
	ОбновитьКартинки();
	
КонецПроцедуры

#КонецОбласти

#Область Обработка // и запись картинок

&НаСервере
Функция ЗаписатьНовыйСправочник(Имя, Владелец, УжеЕстьНовСправочник = Неопределено)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Справочник.КартинкиНоменклатуры ГДЕ Владелец = &Владелец И ЭтоПредставлениеОбъекта");
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	НовСпрКартинка = ?(УжеЕстьНовСправочник = Неопределено, Справочники.КартинкиНоменклатуры.СоздатьЭлемент(), УжеЕстьНовСправочник);
	НовСпрКартинка.Владелец 				= Владелец;
	
	Путь = Константы.ПутьКХранилищуПрикрепленныхФайлов.Получить();
	Если ПустаяСтрока(Путь) Тогда
		ОбщиеФункции.СообщитьТекст("Не зада параметр ""Путь к хранилищу прикрепленных файлов""");
		Возврат Ложь; КонецЕсли;
		
	ИмяФайла 		= Сред(Имя, СтрНайти(Имя, ПолучитьРазделительПутиКлиента(), НаправлениеПоиска.СКонца) + 1);
	Расширение		= Сред(ИмяФайла, стрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) + 1);
	
	//НовСпрКартинка.Картинка=Новый ХранилищеЗначения(Новый Картинка(ПолучитьИзВременногоХранилища(Адрес)));
	//НовСпрКартинка.РасширениеКартинка=Расширение;
		
	НовСпрКартинка.Наименование 			= ИмяФайла;
	НовСпрКартинка.ВыгружатьНаСайт 			= Истина;
	НовСпрКартинка.ЭтоПредставлениеОбъекта 	= Запрос.Выполнить().Пустой();
	
	Если ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(НовСпрКартинка) Тогда
		Возврат НовСпрКартинка.Ссылка КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ЗагрузитьКартинку(СсылкаКартинка = Неопределено, ЭтоАватар) Экспорт
	
	// Проверим
	
	ТекНоменклатура = Элементы.СписокНоменклатуры.ТекущаяСтрока;
	Если ТекНоменклатура = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран товар",,"Предупреждение"); Возврат; КонецЕсли;
	
	// Выберем картинку
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Оповещение  =  Новый ОписаниеОповещения("ВыбраныФайлы", ЭтотОбъект, Новый Структура("ТекНоменклатура, СсылкаКартинка,ЭтоАватар", ТекНоменклатура, СсылкаКартинка,ЭтоАватар));
	//НачатьПомещениеФайла(Оповещение,   ,  ДВ ,   Истина,   УникальныйИдентификатор);
	НачатьПомещениеФайлов(Оповещение,,ДВ,,УникальныйИдентификатор);
		
	//Если ДВ.Выбрать() Тогда
		
		
	//	ИмяФайла = Сред(ДВ.ПолноеИмяФайла, СтрДлина(ДВ.Каталог) + 1);
	//	
	//	// Создадим новую картинку
	//
	//	Если СсылкаКартинка = Неопределено Тогда 
	//		СсылкаКартинка = ЗаписатьНовыйСправочник(Прав(ДВ.ПолноеИмяФайла, СтрДлина(ДВ.ПолноеИмяФайла) - СтрДлина(ДВ.Каталог)), ТекНоменклатура);
	//		
	//		Если СсылкаКартинка = Неопределено Тогда
	//			Возврат КонецЕсли; КонецЕсли;
	//	
	//	// Обновим
	//	
	//	Если Картинки.Обновить(Новый Картинка(ДВ.ПолноеИмяФайла), СсылкаКартинка, ЭтоАватар) Тогда
	//		ОбновитьКартинки(); 
	//		Элементы.СписокНоменклатуры.Обновить();
	//	КонецЕсли; 
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбраныФайлы(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		//Сообщить("Файл выбран!"); 

		Для Каждого Файл Из ВыбранныеФайлы Цикл	
			Адрес = Файл.Хранение;
			
			Если ДополнительныеПараметры.СсылкаКартинка = Неопределено Тогда
				СсылкаКартинка = ЗаписатьНовыйСправочник(Файл.Имя, ДополнительныеПараметры.ТекНоменклатура);
			Иначе
				СсылкаКартинка = ДополнительныеПараметры.СсылкаКартинка;
			КонецЕСли;
			
			Если Картинки.Обновить(Новый Картинка(Файл.Имя), СсылкаКартинка, Ложь) Тогда
				ОбновитьКартинки(); 
				Элементы.СписокНоменклатуры.Обновить();
			КонецЕсли;
		
		КонецЦикла;
	Иначе
		Сообщить("Файл не выбран!");
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте

Процедура КартинкаМаленькаяНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьКартинку(Истина, СтандартнаяОбработка)
	
КонецПроцедуры
&НаКлиенте
Процедура КартинкаБольшаяНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьКартинку(Ложь, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоГуиду(Команда)
	
	Перем СсылкаНоменклатура, СсылкаКартинка;
	
	стрГуид = "";
	Если 	ВвестиСтроку(стрГуид, "Гуид картинки:", 36) И
			стрГуид <> "" И
			НайтиПоГуидуНаСервере(стрГуид, СсылкаНоменклатура, СсылкаКартинка) Тогда
			
		Элементы.СписокНоменклатуры.ТекущаяСтрока = СсылкаНоменклатура;
		//Элементы.СписокКартинок.ТекущаяСтрока = СсылкаКартинка;
		
		ОбновитьКартинки(); КонецЕсли;
		
КонецПроцедуры
&НаСервереБезКонтекста
Функция НайтиПоГуидуНаСервере(стрГуид, СсылкаНоменклатура, СсылкаКартинка)
	
	Попытка
		СсылкаКартинка = Справочники.КартинкиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(стрГуид));
	Исключение
		ОбщиеФункции.СообщитьТекст("Задан не верный формат гуида"); Возврат Ложь; КонецПопытки;
	
	Если СсылкаКартинка.Пустая() Тогда
		ОбщиеФункции.СообщитьТекст("Картинка по указаному гуиду не найдена"); Возврат Ложь; КонецЕсли;
	
	СсылкаНоменклатура = СсылкаКартинка.Владелец;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура НоваяКартинка(Команда)
	
	ЗагрузитьКартинку(,Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Корзина

#Если Не ВебКлиент Тогда
	
&НаСервере
Функция ПоложитьВКорзинуНаСервере(СсылкиТовара, ИмяКомпа, КолВКорзине)
	
	Инексы 	= Новый Массив;
	Таблица = Новый ТаблицаЗначений;
	Инд		= -1;
	
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	
	Для Каждого Ссылка Из СсылкиТовара Цикл Инд = Инд + 1;Инексы.Добавить(Инд); НовСтрока = Таблица.Добавить(); НовСтрока.Номенклатура 	= Ссылка; НовСтрока.Количество 	= 1; КонецЦикла;
	
	Возврат МодульКорзины.ПоложитьТоварВКорзину(Таблица, Инексы, ИмяКомпа, КолВКорзине);
	
КонецФункции
&НаКлиенте
Процедура ПоложитьВКорзину(Команда)
	
	СсылкиТовара	 	= Элементы.СписокНоменклатуры.ВыделенныеСтроки;
	КолВКорзине 		= 0;
	КолТовара			= СсылкиТовара.Количество();
	
	Если КолТовара Тогда
		Если ПоложитьВКорзинуНаСервере(СсылкиТовара, ИмяКомпьютера(), КолВКорзине) Тогда
			МодульКорзины.ОповеститьОПомещенииТовара(КолТовара, КолВКорзине); КонецЕсли;
	Иначе
		МодульКорзины.ОповеститьЧтоНечегоДобавлять(); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура РедактироватьТоварВКорзине(Команда)
	
	ОткрытьФорму("РегистрСведений.Корзина.Форма.Форма");
	
КонецПроцедуры
&НаСервере
Функция ОчиститьНаСервере(ИмяКомпа)
	
	Возврат МодульКорзины.ОчиститьКорзину(ИмяКомпа);
	
КонецФункции
&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Если ОчиститьНаСервере(ИмяКомпьютера()) Тогда МодульКорзины.ОповеститьЧтоКорзинаОчищена() КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти

&НаСервере
Функция УстановитьКопииКартинокКорзины(ТекКартинка, ИмяКомпа, КолСтрок)
	
	Перем КартинкаОбъект;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	МодульКорзины.ПолучитьТоварИзКорзиныКакЕсть(Таблица, ИмяКомпа, КолСтрок);
	КартинкаВладелец = ?(ТекКартинка.КопияКартинки.Пустая(), ТекКартинка, ТекКартинка.КопияКартинки);
	
	Для Каждого Строка Из Таблица Цикл
		
		// Найдем точно такуюже картинку
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Справочник.КартинкиНоменклатуры ГДЕ Владелец = &Владелец И КопияКартинки = &КопияКартинки");
		Запрос.УстановитьПараметр("Владелец", 		Строка.Номенклатура);
		Запрос.УстановитьПараметр("КопияКартинки", 	КартинкаВладелец);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			КартинкаОбъект = Выборка.Ссылка.ПолучитьОбъект() 
		Иначе
			КартинкаОбъект = Справочники.КартинкиНоменклатуры.СоздатьЭлемент(); КонецЕсли;
		
		// Заполним реквизиты
		
		КартинкаОбъект.КопияКартинки 			= КартинкаВладелец;
		КартинкаОбъект.ЭтоПредставлениеОбъекта 	= КартинкаВладелец.ЭтоПредставлениеОбъекта;
		
		// Запишем
		
		Если ЗаписатьНовыйСправочник(КартинкаВладелец.Наименование, Строка.Номенклатура, КартинкаОбъект) = Неопределено Тогда Возврат Ложь; КонецЕсли; КонецЦикла;
		
	Возврат Истина;	
	
КонецФункции

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура РазмножитьКартинки(Результат, СсылкаКартинка) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	
		КолСтрок = 0;
		Если УстановитьКопииКартинокКорзины(СсылкаКартинка, ИмяКомпьютера(), КолСтрок) Тогда
			Если КолСтрок Тогда
				ПоказатьОповещениеПользователя("Картинки установлены",,"На все позиции в корзине (" + КолСтрок + ")", БиблиотекаКартинок.Скрепка);
				Элементы.СписокНоменклатуры.Обновить();
		Иначе
			ПоказатьПредупреждение(,"Нет позиций в корзине для копирования картинок",,"Предупреждение"); КонецЕсли; КонецЕсли;КонецЕсли;
	
КонецПроцедуры
#КонецЕсли
&НаКлиенте
Процедура Размножить(СсылкаКартинка) Экспорт
	
	#Если ВебКлиент Тогда
		
		ПоказатьПредупреждение(,"Эта штука на веб клиенте не работает (",,"Предупреждение"); Возврат;		
		
	#Иначе
		
		ПоказатьВопрос(Новый ОписаниеОповещения("РазмножитьКартинки", ЭтаФорма, СсылкаКартинка), "Скопировать картинку на товары в корзине?", РежимДиалогаВопрос.ДаНет);
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбычныйСписок(Команда)
	
	ОткрытьФорму("Справочник.КартинкиНоменклатуры.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриИзменении(Элемент)
	
	А = 2;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	HTMLОбработкаКлиент.ТекстHTMLПриНажатии(ДанныеСобытия, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОпределитьИзмененияВHTMLИЗаписатьИзменения();
	
КонецПроцедуры

	
