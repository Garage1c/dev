&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ТекущийОбъект.НастройкиОтчета.Получить() = Неопределено Тогда
		ТекущийОбъект.НастройкиОтчета = ТекущийОбъект.Отчет.Настройки;
		Модифицированность = Истина;
	КонецЕсли;
	АдресНастроек = ПоместитьВоВременноеХранилище(ТекущийОбъект.НастройкиОтчета,УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НачальноеЗаполнение();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		ТекущийОбъект.ДатаМодификации = ТекущаяДата();	
	КонецЕсли;	
	ТекущийОбъект.НастройкиОтчета = ПолучитьИзВременногоХранилища(АдресНастроек);
КонецПроцедуры



&НаСервере
Процедура НачальноеЗаполнение()
	РРЗ = ПолучитьРасписаниеРегламентногоЗадания(Объект.Расписание);
	Объект.РасписаниеПредставление = Строка(?(РРЗ = Неопределено,"",РРЗ));
	Объект.ФорматФайла = ?(Объект.ФорматФайла = "","xlsx",Объект.ФорматФайла);
КонецПроцедуры

//Расписание

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеРегламентногоЗадания(СтрокаВнутр)
	Если СтрокаВнутр = "" Тогда
		Возврат Неопределено
	КонецЕсли;
	Возврат ЗначениеИзСтрокиВнутр(СтрокаВнутр)
КонецФункции	

&НаКлиенте
Процедура РасписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РРЗ = ПолучитьРасписаниеРегламентногоЗадания(Объект.Расписание);
	Если РРЗ = Неопределено Тогда
	    РРЗ = Новый РасписаниеРегламентногоЗадания;	
	КонецЕсли;
	ДРРЗ = Новый ДиалогРасписанияРегламентногоЗадания(РРЗ);
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияДРРЗ", ЭтотОбъект);
	ДРРЗ.Показать(Оп); 

КонецПроцедуры

&НаСервере
Процедура ВыполнитьПослеЗакрытияДРРЗ(Расписание, ДополнительныеПараметры)Экспорт
	 Если Расписание =Неопределено Тогда
	 
	 	Возврат	
	 
	 КонецЕсли;
	Объект.Расписание =  ЗначениеВСтрокуВнутр(Расписание);
	Объект.РасписаниеПредставление = Строка(Расписание);
	Модифицированность = Истина;
КонецПроцедуры // ()

&НаКлиенте
Процедура РасписаниеПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	Объект.Расписание = "";
КонецПроцедуры

//Команды
&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	Если АдресНастроек = "" Тогда
		ПоказатьПредупреждение(,"Не выбраны настройки отчета");
	Иначе
		ПараметрыФормы = Новый Структура("Отчет,АдресНастроек",Объект.Отчет, АдресНастроек);
		ОП = Новый ОписаниеОповещения("ФормаНастроекПослеЗакрытия",ЭтаФорма);
		ОткрытьФорму("Справочник.НастройкиPostman.Форма.ФормаНастроек",ПараметрыФормы,,,,,ОП);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормаНастроекПослеЗакрытия(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		Если РезультатЗакрытия = Истина Тогда
			Модифицированность = Истина;
		КонецЕсли;
КонецПроцедуры // ()

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	Если Модифицированность Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("СформироватьОтчетПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, "Для продолжения требуется записать отчет. Продолжить?", Режим, 0);
	Иначе
		СформироватьНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Не  Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда
		
		СформироватьНаКлиенте()	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаКлиенте()
	Если АдресНастроек = "" Тогда
		ПоказатьПредупреждение(,"Не выбраны настройки отчета");
	Иначе
		ПараметрыФормы = Новый Структура("Ссылка, АдресНастроек", Объект.Ссылка, АдресНастроек);
		ОткрытьФорму("Справочник.НастройкиPostman.Форма.ФормаТабличногоДокумента", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры // ()


&НаКлиенте
Процедура ОтправитьОтчет(Команда)
	Если Объект.Получатели.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Отсутствуют получатели письма");
		Возврат
	КонецЕсли;
	Если Модифицированность Тогда
		
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Оповещение = Новый ОписаниеОповещения("ОтправитьОтчетПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, "Для продолжения объект необходимо записать. Продолжить?",Режим); 
	Иначе
		ОтправитьОтчетНаСервере(Объект.Ссылка);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтчетПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если НЕ Результат = КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    Если Записать() Тогда
    	ОтправитьОтчетНаСервере(Объект.Ссылка)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьОтчетНаСервере(Ссылка)
	
	Если Ссылка.Пустая() Тогда
		Возврат
	КонецЕсли;
	//ТЗОшибок
	ТЗОшибок = Новый ТаблицаЗначений;
	ТЗОшибок.Колонки.Добавить("Дата");
	ТЗОшибок.Колонки.Добавить("Источник");
	ТЗОшибок.Колонки.Добавить("Описание");
	ТЗОшибок.Колонки.Добавить("ОповеститьАдминистратора");
	//ТЗКорзинаПисем
	ТЗКорзинаПисем = Новый ТаблицаЗначений;
	ТЗКорзинаПисем.Колонки.Добавить("Email");
	ТЗКорзинаПисем.Колонки.Добавить("ПредставлениеВложения");
	ТЗКорзинаПисем.Колонки.Добавить("Вложение");
	Справочники.НастройкиPostman.СформироватьПакет(Ссылка,ТЗОшибок,ТЗКорзинаПисем);
	Справочники.НастройкиPostman.ОтправитьКорзинуПисем(ТЗОшибок,ТЗКорзинаПисем);
	Если ТЗОшибок.Количество() = 0 Тогда
		Сообщить("Отчет отправлен");
	Иначе
		Для каждого Эл Из ТЗОшибок Цикл
			
			Сообщить(Эл.Описание);
			
		КонецЦикла;
		
		
	КонецЕсли;
КонецПроцедуры


//Прочие Элементы формы

&НаКлиенте
Процедура ФорматФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить("xlsx");
	ДанныеВыбора.Добавить("xls");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПриИзменении(Элемент)
	ОтчетПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтчетПриИзмененииНаСервере()
	Если АдресНастроек = "" Тогда
		АдресНастроек = ПоместитьВоВременноеХранилище(Объект.Отчет.Настройки,УникальныйИдентификатор)
	Иначе
		ПоместитьВоВременноеХранилище(Объект.Отчет.Настройки,АдресНастроек);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПолучательПриИзменении(Элемент)
	ТД = Элементы.Получатели.ТекущиеДанные;
	ТД.Email = ПолучитьEmail(ТД.Получатель);
КонецПроцедуры

&НаСервере
Функция ПолучитьEmail(Получатель)
	Возврат СокрЛП(Получатель.Почта);
КонецФункции








