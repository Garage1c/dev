
&НаСервере
Процедура ВыполнитьСейчасНаСервере()
	
	Выполнить(Объект.ТекстАлгоритма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	
	ВыполнитьСейчасНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	стрРасписание = Строка(ПолучитьРасписание());
	
КонецПроцедуры
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Перем текРегл;
	
	//Обр = Обработки.ОтключениеПользователейОтИБ.Создать();
	//Обр.АдминИБ = "COMConnector";
	//Обр.ПарольАдминаИБ = "qwerty";
	//Обр.КодРазрешения = "123";
	//Обр.ПериодБлокировки = "600";
	//Обр.ПутьБэкапа = "E:\backup\vesna_test";
	//Обр.СоздатьБэкап();
	
	// Проверим активность и запустим регламетное задание если нужно
	
	Активный = ТекущийОбъект.Активно И Не ТекущийОбъект.ПометкаУдаления;
	
	// Найдем задание
	
	реглЗадания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Ключ", XMLСтрока(ТекущийОбъект.Ссылка)));
	Если реглЗадания.Количество() Тогда текРегл = реглЗадания[0]; КонецЕсли;
	
	// Добавим или изменим новое
	
	Если Активный Тогда
		
		// Новый
		
		Если текРегл = Неопределено Тогда 
			
			текПараметры = Новый Массив;
			текПараметры.Добавить(ТекущийОбъект.Ссылка);
			
			текРегл = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ВыполнениеАлгоритма); 
			текРегл.Использование 	= Истина;
			текРегл.Параметры 		= текПараметры;
		 	текРегл.Ключ 			= XMLСтрока(ТекущийОбъект.Ссылка);
			текРегл.Наименование 	= "backUp (" + ТекущийОбъект.Наименование + ")"; КонецЕсли;
			
		текРегл.Расписание = ПолучитьРасписание(ТекущийОбъект.Расписание);
		
		Попытка 	текРегл.Записать(); 
		Исключение 	МодульРезевногоКопирования.СообщитьОшибку("Ошибка записи задания " + ОписаниеОшибки()); Отказ = Истина; КонецПопытки;
		
	// Удалим существующее
		
	ИначеЕсли текРегл <> Неопределено Тогда
		
		Попытка 	текРегл.Удалить();
		Исключение 	МодульРезевногоКопирования.СообщитьОшибку("Ошибка при удалении задания " + ОписаниеОшибки()); Отказ = Истина; КонецПопытки; КонецЕсли;

	
КонецПроцедуры


&НаСервере
Функция ПолучитьРасписание(своеРасписание = "")
	
	своеРасписание = ?(своеРасписание = "", Объект.Расписание, своеРасписание);
	
	Возврат ?(ПустаяСтрока(своеРасписание), 
					Новый РасписаниеРегламентногоЗадания, 
					ЗначениеИзСтрокиВнутр(Объект.Расписание));
КонецФункции
&НаСервере
Процедура УстановитьРасписание(Знач Расписание)
	
	Объект.Расписание = ЗначениеВСтрокуВнутр(Расписание);
	стрРасписание = Строка(Расписание);
	
КонецПроцедуры
&НаКлиенте
Процедура ДекорацияОткрытьРасписаниеНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(ПолучитьРасписание());
	
	Если Диалог.ОткрытьМодально() Тогда
		УстановитьРасписание(Диалог.Расписание); КонецЕсли;
	
КонецПроцедуры

