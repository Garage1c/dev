
&НаСервере
Процедура ПрочитатьТовары()
	
	Товары.Очистить();
	
	Ном = 0;
	
	// Добавим выход на вверх
	
	текРодитель = Справочники.Номенклатура.ПустаяСсылка();
	
	Для Каждого Строка Из Родители Цикл
		
		НовСтрока = Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
		
		НовСтрока.ЭтоВыход 	= Истина;
		текРодитель 		= Строка.Номенклатура;
		
	КонецЦикла;
	
	// Сформируем запрос
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Спр.Номенклатура				КАК Номенклатура,
	|	МАКСИМУМ(ВЫБОР КОГДА ЭтоГруппа ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Картинка,
	|	МАКСИМУМ(Ранг) 					КАК ЛичныйРанг,
	|	МАКСИМУМ(РангПроизводителя) 	КАК РангПроизводителя,
	|	МАКСИМУМ(Ранг) 					КАК Ранг,
	|	МАКСИМУМ(ЕСТЬNULL(Ост.КоличествоОстаток,0) - ЕСТЬNULL(Рез.КоличествоОстаток,0)) КАК Количество
	|ИЗ
	|(
	|	ВЫБРАТЬ
	|		Ссылка				КАК Номенклатура,
	|		ЭтоГруппа			КАК ЭтоГруппа,
	|		Ранг 				КАК ЛичныйРанг,
	|		Производитель.Ранг 	КАК РангПроизводителя,
	|		Ранг + ЕСТЬNULL(Производитель.Ранг, 0) КАК Ранг
	|	ИЗ
	|		Справочник.Номенклатура
	|	ГДЕ
	|		ПометкаУдаления = Ложь И
	|		ВыгружатьНаСайт = Истина И
	|		Родитель = &Родитель
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Ссылка,
	|		Ссылка.ЭтоГруппа,
	|		Ссылка.Ранг,
	|		Ссылка.Производитель.Ранг,
	|		Ссылка.Ранг + ЕСТЬNULL(Ссылка.Производитель.Ранг, 0)
	|	ИЗ
	|		Справочник.Номенклатура.ДополнительныеРодители
	|	ГДЕ
	|		Ссылка.ПометкаУдаления = Ложь И
	|		Ссылка.ВыгружатьНаСайт = Истина И
	|		Родитель = &Родитель
	|
	|) КАК Спр
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки() КАК Ост
	|ПО
	|	Спр.Номенклатура = Ост.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезерве.Остатки() КАК Рез
	|ПО
	|	Спр.Номенклатура = Рез.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Спр.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ранг
	|");
	
	Запрос.УстановитьПараметр("Родитель", текРодитель);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Заполним таблицу товарами
	
	Пока Выборка.Следующий() Цикл Ном = Ном + 1;
		
		НовСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
		НовСтрока.НомерСтроки = Ном;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьТовары();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереход(ВыбТовар, НомерСтроки, ЭтоВыход);
	
	Если ЭтоВыход Тогда
		
		// Удалим до родителя
		
		КолСтрок = Родители.Количество();
		Для Ном = 1 По КолСтрок Цикл
			
			Строка 			= Родители[КолСтрок - Ном];
			ЭтаСтрока 		= Строка.Номенклатура = ВыбТовар;
			Родители.Удалить(Строка);
			
			Если ЭтаСтрока Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ПрочитатьТовары();
		
		// Вернем курсор
		
		Строки = Товары.НайтиСтроки(Новый Структура("Номенклатура", ВыбТовар));
		Если Строки.Количество() Тогда
			
			Элементы.Товары.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			
		КонецЕсли;
		
	ИначеЕсли ВыбТовар.ЭтоГруппа Тогда
		
		НовСтрока = Родители.Добавить();
		НовСтрока.Номенклатура				= ВыбТовар;
		НовСтрока.НомерСтроки 				= НомерСтроки;
		
		ПрочитатьТовары();
		
		// Установим курсор на первом товаре
		КолРодителей = Родители.Количество();
		Если КолРодителей < Товары.Количество() Тогда
			
			Элементы.Товары.ТекущаяСтрока = Товары[КолРодителей].ПолучитьИдентификатор();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	
	ОбработатьПереход(
			ТекДанные.Номенклатура, 
			ТекДанные.НомерСтроки, 
			ТекДанные.ЭтоВыход);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	АдресКартинки = Картинки.ПолучитьНавигационнуюСсылкуОсновногоИзображения(Элементы.Товары.ТекущиеДанные.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
	
		ОткрытьФорму("Справочник.КартинкиНоменклатуры.Форма.СписокКартинокПоВладельцу", 
										Новый Структура("Владелец", ТекДанные.Номенклатура),
										ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры
