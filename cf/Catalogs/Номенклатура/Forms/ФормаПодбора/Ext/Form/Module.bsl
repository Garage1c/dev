&НаКлиенте
Перем МассивКомментариев Экспорт;
&НаКлиенте
Перем ЗакрытьФорму;
&НаКлиенте
Перем мСтСтрокаРедактирования;

&НаКлиенте
Перем мВремяОткрытияФормы;

#Область Отображение

&НаСервере
Процедура ОбновитьИнформационнуюНадпись()
	
	Текст = "";
	
	Если СтруктураКолонокТовары.ЕстьСуммаНДС Тогда
		Текст = Текст + ?(Текст = "","","   ")
		+ НСтр("ru='НДС'; de='Mwst'") + ":" + Товары.Итог("СуммаНДС");
	КонецЕсли;
	
	Если 	СтруктураКолонокТовары.ЕстьСуммаРучнойСкидки Или
			СтруктураКолонокТовары.ЕстьСуммаАвтоматическойСкидки Тогда
			
		Скидка = ?(СтруктураКолонокТовары.ЕстьСуммаРучнойСкидки, Товары.Итог("СуммаРучнойСкидки"),0) +
					?(СтруктураКолонокТовары.ЕстьСуммаАвтоматическойСкидки, Товары.Итог("СуммаАвтоматическойСкидки"),0);
			
		Текст = Текст + ?(Текст = "","","   ")
		+ НСтр("ru='Скидка'; de='Rabatt'") + ": " + Скидка;
		
	КонецЕсли;
	
	Если СтруктураКолонокТовары.ЕстьВсего Тогда
		Текст = Текст + ?(Текст = "","","   ")
		+ НСтр("ru='Всего'; de='Betrag'") + ": " + Товары.Итог("Всего");
	ИначеЕсли СтруктураКолонокТовары.ЕстьСумма Тогда
		Текст = Текст + ?(Текст = "","","   ")
		+ НСтр("ru='Сумма'; de='Summe'") + ": " + Товары.Итог("Сумма");
	КонецЕсли;
	
	Информация = Текст;
	
КонецПроцедуры
&НаСервере
Процедура УстановитьВидимостьКолонокТаблицыТоваров()
	
	Элементы.ТоварыЦена.Видимость 							= СтруктураКолонокТовары.ЕстьЦена;
	Элементы.ТоварыСумма.Видимость 							= СтруктураКолонокТовары.ЕстьСумма;
	Элементы.ТоварыПроцентРучнойСкидки.Видимость			= СтруктураКолонокТовары.ЕстьПроцентРучнойСкидки;
	Элементы.ТоварыСуммаРучнойСкидки.Видимость 				= СтруктураКолонокТовары.ЕстьСуммаРучнойСкидки;
	Элементы.ТоварыПроцентАвтоматическойСкидки.Видимость 	= СтруктураКолонокТовары.ЕстьПроцентАвтоматическойСкидки;
	Элементы.ТоварыСуммаАвтоматическойСкидки.Видимость 		= СтруктураКолонокТовары.ЕстьСуммаАвтоматическойСкидки;
	Элементы.ТоварыСтавкаНДС.Видимость 						= СтруктураКолонокТовары.ЕстьСтавкаНДС;
	Элементы.ТоварыСуммаНДС.Видимость 						= СтруктураКолонокТовары.ЕстьСуммаНДС;
	Элементы.ТоварыВсего.Видимость 							= СтруктураКолонокТовары.ЕстьВсего;
	Элементы.ТоварыСуммаБезСкидки.Видимость 				= СтруктураКолонокТовары.ЕстьСуммаБезСкидки;
	Элементы.ТоварыЦена.Видимость 							= СтруктураКолонокТовары.ЕстьЦена;
	//Элементы.ТоварыАкция.Видимость							= СтруктураКолонокТовары.ЕстьАкция;
	//Элементы.ТоварыЦенаПоАкции.Видимость					= ПоказыватьЦену И ПоказыватьАкции И ЦенаПоАкцииОтдельно;
	
	Элементы.ЗаполнитьСтавкуНДС.Видимость = СтруктураКолонокТовары.ЕстьСтавкаНДС;
	Элементы.ЗаполнитьРучСкидку.Видимость = СтруктураКолонокТовары.ЕстьПроцентРучнойСкидки;
	
	Элементы.ТоварыАртикулПоставщика.Видимость = СтруктураКолонокТовары.ЕстьАртикулПоставщика;
	Если Не Элементы.Найти("АртикулПоставщика")=Неопределено Тогда
		Элементы.АртикулПоставщика.Видимость = СтруктураКолонокТовары.ЕстьАртикулПоставщика;
	КонецЕсли;	
	
КонецПроцедуры
&НаСервере
Процедура УправлениеВидимостьюДоступностью() Экспорт
		
	// Обновим информационную надпись
	
	ОбновитьИнформационнуюНадпись();
	
КонецПроцедуры
&НаСервере
Процедура УстановитьЗаголовок()
	
	Заголовок = "Подбор номенклатуры";
	
КонецПроцедуры

#КонецОбласти

#Область Типовые

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Если валюта установлена документом тогда берем валюту документа
	
	Если Не Валюта.Пустая() Тогда
		Настройки.Удалить("Валюта");
	КонецЕсли;
	
	// начальные настройки
	//Если Настройки["ЦенаВключаетНДС"] = Неопределено Тогда
	//	ЦенаВключаетНДС = Истина;
	//КонецЕсли;
	
	// Установим склад
	Если НЕ Параметры.Склад.Пустая() И Склады.НайтиПоЗначению(Параметры.Склад) = Неопределено Тогда
		Склады.Добавить(Параметры.Склад);
	КонецЕсли;
	
	ОбновитьДинамическийСписок();
	УстановитьФильтрПоАртикулу();
	//
КонецПроцедуры


&НаСервере
Процедура ОбновитьДинамическийСписок()
	
	МассивУдалить = Новый Массив;
	Для Каждого Строка Из Склады Цикл Если ТипЗнч(Строка.Значение) <> Тип("СправочникСсылка.Склады") ИЛИ Строка.Значение.Пустая() Тогда МассивУдалить.Добавить(Строка); КонецЕсли; КонецЦикла;
	Для Каждого Элемент Из МассивУдалить Цикл Склады.Удалить(Элемент); КонецЦикла;
	
	НеУчитыватьСклады = Новый Массив;
	
	Если Склады.Количество() Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.Склады ГДЕ НЕ Ссылка В(&Склады)");
		Запрос.УстановитьПараметр("Склады", Склады.ВыгрузитьЗначения());
		НеУчитыватьСклады = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"); 
		НеУчитыватьСклады.Добавить(Справочники.Склады.ПустаяСсылка());КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("НеУчитыватьСклады",	НеУчитыватьСклады);
	//Список.Параметры.УстановитьЗначениеПараметра("Склады", 			Склады.ВыгрузитьЗначения());
	//Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСкладам", 	Булево(Склады.Количество()));
	Список.Параметры.УстановитьЗначениеПараметра("Валюта", 				Валюта);
	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен", 				ТипЦен);
	Список.Параметры.УстановитьЗначениеПараметра("ЦенаВключаетНДС", 	ЦенаВключаетНДС);
	Список.Параметры.УстановитьЗначениеПараметра("ТипЦенВключаетНДС", 	ТипЦен.ЦенаВключаетНДС);
	Список.Параметры.УстановитьЗначениеПараметра("Контрагент", 	СтруктураКолонокТовары.Контрагент);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	// аналоги
	РаботаСНоменклатурой.ДобавитьИнформациюОбАналогах(ЭтаФорма);
	// Матрицы
	РаботаСНоменклатурой.ДобавитьМатрицы(ЭтаФорма, Список);
	
	ЗаполнитьУпаковкуПоставщика = Параметры.ЗаполнитьУпаковкуПоставщика;
	
	ТипЦен 	= Параметры.ТипЦен;
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда ТипЦен = ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_ТипЦен");	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда ТипЦен = КэшируемыеФункции.ПолучитьТипЦенРозница();	КонецЕсли;
	
	ЦенаВключаетНДС = ?(Параметры.ЦенаВключаетНДС = Ложь, Ложь, ТипЦен.ЦенаВключаетНДС);
	

	Валюта	= Параметры.Валюта;
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ТипЦен.Валюта;
	КонецЕсли;
	
	ЦенаПоАкцииОтдельно = Параметры.ЦенаПоАкцииОтдельно; 

	СтруктураКолонокТовары	= Параметры.СтруктураКолонокТовары;
		// для рассчетов пригодится
	СтруктураКолонокТовары.ТипЦен 	= ТипЦен;
	СтруктураКолонокТовары.Валюта 	= Валюта;
	//СтруктураКолонокТовары.СуммаВключаетНДС = ЦенаВключаетНДС;
	
	Склады.Добавить(Параметры.Склад);
	
	Контрагент					= Параметры.Контрагент;
	
	Товары.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТоваровВХранилище));
	УдалитьИзВременногоХранилища(Параметры.АдресТоваровВХранилище); // сразу очистим память чтобы не засрать
		
	УстановитьВидимостьКолонокТаблицыТоваров();
	УстановитьЗаголовок();
	ОбновитьИнформационнуюНадпись();
	
	// автосохранение
	
	АвтосохранениеДампСтрока 	= ?(ЗначениеЗаполнено(Параметры.АвтосохранениеДамп), ЗначениеВСтрокуВнутр(Параметры.АвтосохранениеДамп), "");
	ДокументСсылка 				= Параметры.ДокументСсылка;
	ИмяФормыДокумента			= Параметры.ИмяФормы;
	
	Если Не ПустаяСтрока(Параметры.МассивТоваровСтрокой) Тогда
		
		Массив = ЗначениеИзСтрокиВнутр(Параметры.МассивТоваровСтрокой);
		
		Товары.Очистить();
		Для Каждого Строка Из Массив Цикл ЗаполнитьЗначенияСвойств(Товары.Добавить(), Строка) КонецЦикла; КонецЕсли;
	
	// установим параметры списка
	
	// если нам поднадобится получить цены без учета НДС : если НДС товара = Ставка18, вычитаем величину НДС из цены
	
	Список.Параметры.УстановитьЗначениеПараметра("Ставка18", 			Перечисления.СтавкиНДС.НДС18);
	Список.Параметры.УстановитьЗначениеПараметра("Ставка19", 			Перечисления.СтавкиНДС.НДС19);
	Список.Параметры.УстановитьЗначениеПараметра("ПустойТипЦен",		Справочники.ТипыЦен.ПустаяСсылка());
	
	//Список.Параметры.УстановитьЗначениеПараметра("ПустойСклад", 		Справочники.Склады.ПустаяСсылка());

	ОбновитьДинамическийСписок();
	
	ГруппироватьОдинаковые=Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность И ЗакрытьФорму <> Истина Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПользовательПодтверждаетЗакрытиеФормы", ЭтаФорма), Нстр("ru='Закрыть форму?'; de='Formular schließen?'") + "
			|" + Нстр("ru='все изменения будут отменены'; de='Änderungen gehen verloren'"), РежимДиалогаВопрос.ДаНет,,,"ru='Подумайте еще раз'; de='Warning'");
		Отказ = Истина; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПользовательПодтверждаетЗакрытиеФормы(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗакрытьФорму = Истина;
		Закрыть(); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура Выбрать(Команда)
	
	Модифицированность 	= Ложь;
	ЗакрытьФорму 		= Истина;
	ОповеститьОВыборе(ПоместитьТоварыВХранилище());
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Спец тормоз
	//ТекДата = ТекущаяДата();
	//Пока ТекущаяДата() < ТекДата + 10 Цикл КонецЦикла;
	
	мВремяОткрытияФормы = ТекущаяДата();
	Слежение.Записать("Открытие. Подбор номенклатуры", "Справочник.Номенклатура", "ФормаПодбора");
	
	// Автосохранение
	
	Если Не ПустаяСтрока(АвтосохранениеДампСтрока) Тогда
		
		Интервал = АвтосохранениеСервер.ПолучитьИнтервал();
		Если Интервал Тогда ПодключитьОбработчикОжидания("Автосохранение", Интервал) КонецЕсли; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПриЗакрытии()
	
	// Автосохранение
	Если Не ПустаяСтрока(АвтосохранениеДампСтрока) Тогда
		АвтосохранениеКлиент.ЗакрытПодбор(ПолучитьФормуВладельца(ВладелецФормы)) КонецЕсли;
	
	//Слежение.Записать("Закрытие. Подбор номенклатуры", "Справочник.Номенклатура", "ФормаПодбора",,"Время работы подбора " + Строка(ТекущаяДата() - мВремяОткрытияФормы) + " сек.");
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПолученШтрихкод" Тогда
		
		СсылкаНаТовар = ШтрихКоды.ПолучитьОбъектПоШтрихКоду(Параметр);
		Если ТипЗнч(СсылкаНаТовар) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			Элементы.Список.ТекущаяСтрока = СсылкаНаТовар;КонецЕсли;КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Автосохранение

&НаСервере
Функция АвтосохранениеСервер(ЕстьДамп)
	
	Дамп = ЗначениеИзСтрокиВнутр(АвтосохранениеДампСтрока);
	Дамп.Вставить("Подбор", КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(Товары.Выгрузить()));
	
	ЕстьДамп = АвтосохранениеСервер.ЕстьДамп(ДокументСсылка, ИмяФормыДокумента);
	
	Возврат АвтосохранениеСервер.СохранитьДамп(ДокументСсылка, ИмяФормыДокумента, Дамп);
	
КонецФункции
&НаКлиенте
Процедура Автосохранение()
	
	Перем ЕстьДамп;
	
	Сохранилось = АвтосохранениеСервер(ЕстьДамп);
	
	АвтосохранениеКлиент.ПроизошлоАвтосохранение(Сохранилось, ЕстьДамп, ДокументСсылка);
	
КонецПроцедуры
&НаКлиенте
Функция ПолучитьФормуВладельца(Родитель)
	
	Возврат ?(ТипЗнч(Родитель) = Тип("УправляемаяФорма"), Родитель, ПолучитьФормуВладельца(Родитель.Родитель));
	
КонецФункции

#КонецОбласти

///// РАБОТА СО СПИСКОМ
//////////////////////////////
&НаКлиенте
Процедура ОбработкаВыбораСтроки(ВыбраннаяСтрока, Знач ЗапрашиватьЦену, Знач ЗапрашиватьКоличество, НоменклатураУчет = Неопределено)
	
	//Перем ТипЦенВключаетНДС;
	
	// Определим начальное значение количества
	
	Цена = 0;
	Количество = 1;
	Упаковка = Неопределено;
	
	// если необходимо заполнить упаковку (для заказов поставщику)
	Если СтруктураКолонокТовары.ЕстьУпаковка И ЗаполнитьУпаковкуПоставщика Тогда
				
		Упаковка	= РаботаСНоменклатурой.ПолучитьУпаковкуПоставщика(ВыбраннаяСтрока);
		Если НЕ Упаковка.Пустая() Тогда
			Цена = РаботаСНоменклатурой.ПолучитьЦену(?(НоменклатураУчет = Неопределено, ВыбраннаяСтрока, НоменклатураУчет), ТипЦен, Валюта, Упаковка,, СтруктураКолонокТовары.ЕстьАкция,,,,,,,,);
			Если СтруктураКолонокТовары.СуммаВключаетНДС <> ЦенаВключаетНДС Тогда
				Цена = РаботаСНоменклатурой.ПолучитьЦенуСУчетомНДС(Цена, РаботаСНоменклатурой.ПолучитьСтавкуНДСНоменклатуры(ВыбраннаяСтрока), , ЦенаВключаетНДС) КонецЕсли; КонецЕсли; КонецЕсли;
	
	Если Цена = 0 Тогда
		
		// берем цену из текущих данных

		//Цена = ?(СтруктураКолонокТовары.ЕстьАкция И НЕ ЦенаПоАкцииОтдельно, Элементы.Список.ТекущиеДанные.Цена, Элементы.Список.ТекущиеДанные.ЦенаБезАкции);
		Акция = Неопределено;
		Цена = РаботаСНоменклатурой.ПолучитьЦену(?(НоменклатураУчет = Неопределено, ВыбраннаяСтрока, НоменклатураУчет), ТипЦен, Валюта, Упаковка,, СтруктураКолонокТовары.ЕстьАкция, Акция,,,,,,,);
		Если СтруктураКолонокТовары.СуммаВключаетНДС <> ЦенаВключаетНДС Тогда
			Цена = РаботаСНоменклатурой.ПолучитьЦенуСУчетомНДС(Цена, РаботаСНоменклатурой.ПолучитьСтавкуНДСНоменклатуры(ВыбраннаяСтрока), , ЦенаВключаетНДС) КонецЕсли;
		
		Если ЗапрашиватьЦену И ЗапрашиватьКоличество Тогда
			
			ВозврЗначение = ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВводаКоличестваЦены", 
				Новый Структура("Количество, Цена, ЗапрашиватьКоличество, ЗапрашиватьЦена", Количество, Цена, Истина, Истина),
				ЭтаФорма,,,,
				Новый ОписаниеОповещения("ОбработкаВводаКоличестваИЦены", ЭтаФорма, Новый Структура("ВыбраннаяСтрока, Упаковка, НоменклатураУчет", ВыбраннаяСтрока, Упаковка, НоменклатураУчет)));
			Возврат;
							
		ИначеЕсли ЗапрашиватьЦену Тогда
			
			ПоказатьВводЧисла(Новый ОписаниеОповещения("ВведенаЦена", ЭтаФорма,  Новый Структура("ВыбраннаяСтрока, Упаковка, Количество, НоменклатураУчет",  ВыбраннаяСтрока, Упаковка, Количество, НоменклатураУчет)), Цена, НСтр("ru='Цена:'; de='Preis:'"),15,2);
			Возврат; КонецЕсли; КонецЕсли;
		
	Если ЗапрашиватьКоличество Тогда
		
		ПоказатьВводЧисла(Новый ОписаниеОповещения("ВведеноКоличество", ЭтаФорма,  Новый Структура("ВыбраннаяСтрока, Упаковка, Цена, НоменклатураУчет",  ВыбраннаяСтрока, Упаковка, Цена, НоменклатураУчет)), Количество, НСтр("ru='Количество:'; de='Quantität:'"),15,3);
		Возврат; КонецЕсли;
	
	ОбработкаСтрокиТовары(Количество, Цена, ВыбраннаяСтрока, Упаковка, НоменклатураУчет, Акция);	

КонецПроцедуры
&НаКлиенте
Процедура ВведенаЦена(Цена, ДополнительныеПараметры) Экспорт
	
	Если Цена <> Неопределено Тогда
		ОбработкаСтрокиТовары(ДополнительныеПараметры.Количество, Цена, ДополнительныеПараметры.ВыбраннаяСтрока, ДополнительныеПараметры.Упаковка, ДополнительныеПараметры.НоменклатураУчет); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ВведеноКоличество(Число, ДополнительныеПараметры) Экспорт
	
	Если Число <> Неопределено Тогда
		ОбработкаСтрокиТовары(Число, ДополнительныеПараметры.Цена, ДополнительныеПараметры.ВыбраннаяСтрока, ДополнительныеПараметры.Упаковка, ДополнительныеПараметры.НоменклатураУчет); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаВводаКоличестваИЦены(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
				
		ОбработкаСтрокиТовары(Результат.Количество, Результат.Цена, Параметры.ВыбраннаяСтрока, Параметры.Упаковка, Параметры.НоменклатураУчет);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСтрокиТовары(Количество, Цена, ВыбраннаяСтрока, Упаковка = Неопределено, НоменклатураУчет = Неопределено, Акция = Неопределено)
	
	// Поищем
	
	Строки = Товары.НайтиСтроки(Новый Структура("Номенклатура", ВыбраннаяСтрока));
	
	// Отработаем новую строку
	
	//ВозможностьДублейСтрок
	//Если Не Строки.Количество() или ГруппироватьОдинаковые=Ложь Тогда
	Если Не Строки.Количество() или ГруппироватьОдинаковые=Ложь Тогда
	//ВозможностьДублейСтрок
		
		НовСтрока = Товары.Добавить();
		НовСтрока.Номенклатура 	= ВыбраннаяСтрока;
		
		Если СтруктураКолонокТовары.ЕстьЦена Тогда

			НовСтрока.Цена = Цена;
			
		КонецЕсли;	
		Если СтруктураКолонокТовары.ЕстьУпаковка Тогда
			НовСтрока.Упаковка		= Упаковка;
		КонецЕсли;
		
		Если СтруктураКолонокТовары.ЕстьАкция Тогда
			новСтрока.Акция = Акция;
		КонецЕсли;
		//Если  СтруктураКолонокТовары.ЕстьАкция Тогда // И Элементы.Список.ТекущиеДанные.Свойство("Акция") 
		//	
		//	НовСтрока.Акция			 = Элементы.Список.ТекущиеДанные.Акция;
		//	НовСтрока.ВариантРасчета = Заказы.ПолучитьВариантРасчетаЦеныПоАкции(НовСтрока.Акция);
		//	
		//	Если СтруктураКолонокТовары.ЕстьЦенаПоАкции И ЦенаПоАкцииОтдельно И НЕ НовСтрока.Акция.Пустая() Тогда
		//		НовСтрока.ЦенаПоАкции = Элементы.Список.ТекущиеДанные.Цена; КонецЕсли;
		//	
		//КонецЕсли;
				
		ФункцииФормДокументов.НоменклатураПриИзменении(НовСтрока, СтруктураКолонокТовары, НовСтрока,, Ложь,,,Ложь);
		
		Строки.Добавить(НовСтрока);
		
	КонецЕсли;
	
	//ВозможностьДублейСтрок
	//// Обработаем все добавленные строки
	//
	//Для Каждого Строка Из Строки Цикл
	//	
	//	Строка.Количество = Строка.Количество + Количество;
	//	//ФункцииФормДокументов.РассчитатьСуммыТабличныхЧастей(Строка, СтруктураКолонокТовары);
	//	ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(Строка, СтруктураКолонокТовары);
	//	
	//КонецЦикла;	
	
	// Обработаем последнюю добавленную строку
	Строка=Строки[Строки.Количество()-1];		
	Строка.Количество = Строка.Количество + Количество;
	Строка.НоменклатураУчет = НоменклатураУчет;
	
	ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(Строка, СтруктураКолонокТовары, Ложь);
	//ВозможностьДублейСтрок
	
	
	ОбновитьИнформационнуюНадпись();
	Элементы.Товары.ТекущаяСтрока = Товары.Индекс(Строка);
	
КонецПроцедуры

&НаСервере
Функция ЭтоГруппа(Ссылка)
	
	Возврат Ссылка.ЭтоГруппа;
	
КонецФункции

&НаКлиенте                                          
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Модифицированность = Истина;
	
	//{belova 04.12.14 -->
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") Тогда
		// множественный выбор доступен только для ТЧ где нет цены, пока так
		Если НЕ СтруктураКолонокТовары.ЕстьЦена И НЕ СтруктураКолонокТовары.ЕстьКоличество Тогда
			Для Каждого Строка ИЗ ВыбраннаяСтрока Цикл
			
				 ОбработкаСтрокиТовары(Число(СтруктураКолонокТовары.ЕстьКоличество), 0, Строка);
			 КонецЦикла;
			 Возврат;
		 Иначе
			 // если множественный выбор и есть цена, возьмем первую выделенную строку
			ВыбраннаяСтрока = ВыбраннаяСтрока[0];	 
		
		КонецЕсли;
	КонецЕсли;
	//--> belova 04.12.14}
	
	Если Не ЭтоГруппа(ВыбраннаяСтрока) Тогда
		
	   	СтандартнаяОбработка = Ложь;
		ОбработкаВыбораСтроки(ВыбраннаяСтрока, ЗапрашиватьЦену, ЗапрашиватьКоличество); КонецЕсли;
	
КонецПроцедуры   	

///////////// ПЕРЕДАЧА
/////////////////////////////////
&НаСервере
Функция ПоместитьТоварыВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(
					Товары.Выгрузить(), 
					УникальныйИдентификатор);
КонецФункции
&НаСервере
Процедура ЗаписатьПодборВХранилище() 
	
	ПоместитьВоВременноеХранилище(Товары.Выгрузить(), Параметры.АдресТоваровВХранилище);
	
КонецПроцедуры

#Область Информация

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ОбработатьОтображениеИнформацииОТоваре();
		ОбработатьОтображениеАналоговТовара();
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = Элемент;
КонецПроцедуры
&НаКлиенте
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	РаботаСНоменклатуройКлиент.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Список");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Список");
КонецПроцедуры

#КонецОбласти

#Область Кнопки

&НаКлиенте
Процедура ОтменитьВвод(Команда)
	
	ЗакрытьФорму = Истина;
	Закрыть();
	
КонецПроцедуры
&НаКлиенте
Процедура РедактироватьСвойства(Команда)
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораПараметровПодбора", 
		Новый Структура("ТипЦен, Валюта, ЗапрашиватьКоличество, ЗапрашиватьЦену, ЦенаВключаетНДС, Склады", ТипЦен, Валюта, ЗапрашиватьКоличество, ЗапрашиватьЦену, ЦенаВключаетНДС, Склады), 
		ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ОкончаниеРедактированияСвойств", ЭтаФорма, Новый Структура("Валюта, ТипЦен, ЦенаВключаетНДС", Валюта, ТипЦен, ЦенаВключаетНДС)),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
		
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеРедактированияСвойств(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда 	
		
		СтруктураКолонокТовары.ТипЦен 	= ТипЦен;
		СтруктураКолонокТовары.Валюта 	= Валюта;
	
	Если (	Параметры.ТипЦен <> ТипЦен Или
		 	Параметры.Валюта <> Валюта 
		) И Вопрос(НСтр("ru='Изменилась валюта или тип цен'; de='Ändern Sie die Währung oder der Preis Typ'") + "
					|" + НСтр("ru='Пересчитать таблицу по новым ценам?'; de='Berechnen Sie die Tabelle zu den neuen Preisen?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					
		Обновить = Истина;
		ПересчитатьЦенаНаСервере();
					
	КонецЕсли;
	
	// Обновим запрос
	
	//Если 	стВидЗапроса <> ВидЗапроса Или
	//		стПоказыватьЦену <> ПоказыватьЦену Или
	//		стЦенаВключаетНДС <> ЦенаВключаетНДС Или
	//		стПоказыватьАкции <> ПоказыватьАкции Или
	//		Обновить = Истина Тогда
	//		
	//	ПолучитьТекстДинамическогоЗапроса(ВидЗапроса);
	//	
	//КонецЕсли;
	ОбновитьДинамическийСписок();
	УстановитьЗаголовок();КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦенаНаСервере(СУчетомНДС = Ложь)
	
	Для Каждого Строка Из Товары Цикл
		Акция = Неопределено;	
		Цена = РаботаСНоменклатурой.ПолучитьЦену(	Строка.Номенклатура, 
															СтруктураКолонокТовары.ТипЦен,
															СтруктураКолонокТовары.Валюта,
															?(СтруктураКолонокТовары.ЕстьУпаковка, Строка.Упаковка, Неопределено), 
															СтруктураКолонокТовары.Контрагент, 
															СтруктураКолонокТовары.ЕстьАкция, 
															Акция,
															СтруктураКолонокТовары.ЕстьЦенаПоАкции);
		Если СтруктураКолонокТовары.ЕстьЦенаПоАкции Тогда
			Строка.Цена 			= Цена.Цена;
			Строка.ЦенаПоАкции		= Цена.ЦенаПоАкции;
		Иначе
			Строка.Цена 			= Цена;
		КонецЕсли;
		
		Если СтруктураКолонокТовары.ЕстьАкция Тогда
			Строка.Акция = Акция; 
			Строка.ВариантРасчета = Заказы.ПолучитьВариантРасчетаЦеныПоАкции(Акция); 
			Если ФункцииФормДокументов.СкидкаТолькоПоАкции(Строка, Строка.ВариантРасчета) Тогда
				Если СтруктураКолонокТовары.ЕстьПроцентАвтоматическойСкидки Тогда Строка.ПроцентАвтоматическойСкидки = 0; КонецЕсли;
				Если СтруктураКолонокТовары.ЕстьПроцентРучнойСкидки Тогда Строка.ПроцентРучнойСкидки = 0; КонецЕсли;
			КонецЕсли;			
			
		КонецЕсли;
		
		ФункцииФормДокументов.ЦенаПриИзменении(Товары, СтруктураКолонокТовары, Строка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРучСкидку(Команда)
	
	ДиалогиСПользователем.ЗаполнитьРучСкидку(Товары, СтруктураКолонокТовары);
	ОбновитьИнформационнуюНадпись();
		
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьСтавкуНДС(Команда)
	
	ДиалогиСПользователем.ЗаполнитьСтавкуНДС(Товары, СтруктураКолонокТовары);
	ОбновитьИнформационнуюНадпись();
	
КонецПроцедуры

#КонецОбласти

#Область Товары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ФункцииФормДокументов.НоменклатураПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ФункцииФормДокументов.КоличествоПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ФункцииФормДокументов.ЦенаПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыУпаковкаПриИзменении(Элемент)
	
	ФункцииФормДокументов.УпаковкаПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПроцентРучнойСкидкиПриИзменении(Элемент)
	
	ФункцииФормДокументов.ПроцентРучнойСкидкиПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыСуммаРучнойСкидкиПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаРучнойСкидкиПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
				
КонецПроцедуры
&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СтавкаНДСПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыСуммаНДСПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаНДСПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
				
КонецПроцедуры
&НаКлиенте
Процедура ТоварыСуммаБезСкидкиПриИзменении(Элемент)
	
	ФункцииФормДокументов.СуммаРучнойСкидкиПриИзменении(
				Элементы.Товары, 
				СтруктураКолонокТовары);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДоступностьРедактированияСтроки(текДанные, Отказ)
	
	Если текДанные.Отгружено Тогда
		
		Отказ = Истина;
		ОбщиеФункции.СообщитьТекст(НСтр("ru='Товар уже отгружен, изменять его запрещено'; de='Dieses Produkt wurde bereits versandt wurde, ist es verboten, Veränderungen'"));
		
	ИначеЕсли текДанные.Собрано Тогда
		
		ИмяЭлемента = Элементы.Товары.ТекущийЭлемент.Имя;
		
		Если 	ИмяЭлемента = "ТоварыКоличество" Или 
				ИмяЭлемента = "ТоварыНоменклатура" Или
				ИмяЭлемента = "ТоварыРазмещение" Или
				ИмяЭлемента = "ТоварыУпаковка" Или
				ИмяЭлемента = "ТоварыВес" Или
				ИмяЭлемента = "ТоварыОбъем" Или
				ИмяЭлемента = "ТоварыЗаказПоставщику" Тогда
		
			Отказ = Истина;
			ОбщиеФункции.СообщитьТекст(НСтр("ru='Товар уже собран, изменять его запрещено'; de='Dieses Produkt eingebaut wird, wird es in Wechsel verboten'"));
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПередНачаломИзменения(Элемент, Отказ)
	
	текДанные = Элемент.ТекущиеДанные;
	
	// запомним текущую строку
	
	мСтСтрокаРедактирования = Новый Структура("Номенклатура, Упаковка, Размещение, Количество",
										текДанные.Номенклатура, текДанные.Упаковка, текДанные.Размещение, текДанные.Количество);
	
	// Проверим
	
	ПроверитьДоступностьРедактированияСтроки(Элемент.ТекущиеДанные, Отказ);
	
	// Установим минимальное количество
	
	Элементы.ТоварыКоличество.МинимальноеЗначение = текДанные.КоличествоМинимум;
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	текДанные = Элемент.ТекущиеДанные;
	
	// Проверим если изменили че низя тогда им кердык
	
	Если Не НоваяСтрока И текДанные.Собрано Тогда
	
		Для Каждого Элемент Из мСтСтрокаРедактирования Цикл
			Если Элемент.Значение <> текДанные[Элемент.Ключ] Тогда
				
				Предупреждение(НСтр("ru='Изменились реквизиты которые изменять запрещено'; de='Details haben sich geändert, die nicht geändert werden dürfen'"));
				
				//Если Вопрос("Изменились реквизиты которые изменять запрещено
				//	|вернуть как было?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					
					ОтменаРедактирования = Истина;
					Для Каждого Элемент Из мСтСтрокаРедактирования Цикл текДанные[Элемент.Ключ] = Элемент.Значение; КонецЦикла;
					//ФункцииФормДокументов.РассчитатьСуммыТабличныхЧастей(ТекДанные, СтруктураКолонокТовары);
					ФункцииФормДокументов.РассчитатьСуммыСтрокиОтЦены(текДанные, СтруктураКолонокТовары);
				//	
				//Иначе Отказ = Истина; КонецЕсли; 
				Прервать;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьИнформационнуюНадпись();
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	ПроверитьДоступностьРедактированияСтроки(Элемент.ТекущиеДанные, Отказ);
	
	Если Элемент.ТекущиеДанные.КоличествоМинимум Тогда 
		ПоказатьОповещениеПользователя("Товар не удалить",,Элемент.ТекущиеДанные.Номенклатура, БиблиотекаКартинок.Отмена);
		Отказ = Истина; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ОбновитьИнформационнуюНадпись()
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	//Если Элементы.Товары.ТекущиеДанные <> Неопределено Тогда
	//	ОбработатьОтображениеИнформацииОТоваре();
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьФильтрПоАртикулу()
	
	//Список.Параметры.УстановитьЗначениеПараметра("ПоискПоАртикулу", Не ПустаяСтрока(АртикулПоиск));
	//Список.Параметры.УстановитьЗначениеПараметра("Артикул", 		АртикулПоиск);
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулПоискПриИзменении(Элемент)
	
	УстановитьФильтрПоАртикулу();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПартнераПоУмолчанию()
	
	Возврат ОбщиеФункции.НастройкаПользователя("ПоУмолчанию_Контрагент");

КонецФункции

&НаКлиенте
Процедура ПодобратьЗамену(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбораЗамены", Новый Структура("Склады, Контрагент, Номенклатура, Цена", Склады, Контрагент, Элементы.Список.ТекущаяСтрока, Элементы.Список.ТекущиеДанные.Цена),,,ВариантОткрытияОкна.ОтдельноеОкно,, Новый ОписаниеОповещения("ВыборЗамены", ЭтаФорма, Новый Структура("Номенклатура", Элементы.Список.ТекущаяСтрока)));
	//ПодобратьЗаменуНаСервере(Элементы.Список.ТекущаяСтрока);
КонецПроцедуры


&НаКлиенте
Процедура ВыборЗамены(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
				
		//{belova 04.12.14 -->
		//Если ТипЗнч(Результат) = Тип("Массив") Тогда
		//	// множественный выбор доступен только для ТЧ где нет цены, пока так
		//	Если НЕ СтруктураКолонокТовары.ЕстьЦена И НЕ СтруктураКолонокТовары.ЕстьКоличество Тогда
		//		Для Каждого Строка ИЗ Результат Цикл
		//		
		//			 ОбработкаСтрокиТовары(Число(СтруктураКолонокТовары.ЕстьКоличество), 0, Строка);
		//		 КонецЦикла;
		//		 Возврат;
		//	 Иначе
		//		 // если множественный выбор и есть цена, возьмем первую выделенную строку
		//		Результат = Результат[0];	 
		//	
		//	КонецЕсли;
		//КонецЕсли;
		//--> belova 04.12.14}
		
		Если Не ЭтоГруппа(Результат.НоменклатураЗамена) Тогда
			
		   	СтандартнаяОбработка = Ложь;
			ОбработкаВыбораСтроки(Результат.НоменклатураЗамена, ЗапрашиватьЦену, ЗапрашиватьКоличество, Параметры.Номенклатура); КонецЕсли;
			
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// АНАЛОГИ
&НаКлиенте
Процедура ОбработатьОтображениеАналоговТовара(Контрагент = Неопределено) Экспорт
	РаботаСНоменклатуройКлиент.ОбработатьОтображениеАналоговТовара(ЭтаФорма, "Список",,,, Контрагент);
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАналогиТовара(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьАналогиТовара(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура ИнфАналогиТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфАналогиТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
КонецПроцедуры

#Область Матрицы

&НаСервере
Процедура ОбработкаДействияФильтраМатрицыНаСервере(ИмяЭлементаКартинкиМатрицы)
	
	РаботаСНоменклатурой.ИзменилсяФильтрМатрицы(ЭтаФорма, ИмяЭлементаКартинкиМатрицы, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаДействияФильтраМатрицы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Переключим значение реквизиты
	
	Если ЭтотОбъект["МатрицаФильтровать"] Тогда
		ЭтотОбъект[Элемент.Имя] = Не ЭтотОбъект[Элемент.Имя];
		ОбработкаДействияФильтраМатрицыНаСервере(Элемент.Имя);
	Иначе	
		ПоказатьОповещениеПользователя("Фильтры по матрицам отключены",,"Включите фильтры если нужно фильтровать"); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МатрицаФильтроватьИзмененииНаСервере()
	
	РаботаСНоменклатурой.МатрицаФильтроватьИзменении(ЭтаФорма, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура МатрицаФильтроватьИзменении(Элемент)
	
	МатрицаФильтроватьИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокКнопокУправления()
	
	Возврат РаботаСНоменклатурой.ПолучитьСписокКомандУправленияМатрицами(ЭтаФорма);
	
КонецФункции

&НаСервере
Процедура УстановитьЗначениеВсехМатрицНаСервере(Значение)
	
	РаботаСНоменклатурой.УстановитьЗначениеВсехМатриц(Значение, ЭтаФорма, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура УстановитьЗначениеВсехМатриц(Значение) Экспорт
	
	УстановитьЗначениеВсехМатрицНаСервере(Значение);
	
КонецПроцедуры
&НаКлиенте
Процедура КнопкаУправленияМатрицами(Команда)
	
	ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ОбработкаУправленияМатрицей", РаботаСНоменклатуройКлиент, Новый Структура("Форма", ЭтаФорма)), ПолучитьСписокКнопокУправления(), Команда);
	
КонецПроцедуры

#КонецОбласти