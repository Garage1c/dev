

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОбработатьОтображениеИнформацииОТоваре();
	ОбработатьОтображениеАналоговТовара();
КонецПроцедуры

 // ПРЕДОПРЕДЕЛЕНННЫЕ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Список.Параметры.УстановитьЗначениеПараметра("Дата1", 	НачалоДня(ТекущаяДата()));
//	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен", 	ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница"));
	
	// Подключим языки
	//Список.Параметры.УстановитьЗначениеПараметра("ТекущийЯзык", ПараметрыСеанса.ТекущийЯзык);
		
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	РаботаСНоменклатурой.ДобавитьИнформациюОбАналогах(ЭтаФорма);
	
	// Матрицы
	
	РаботаСНоменклатурой.ДобавитьМатрицы(ЭтаФорма, Список);
	 
	// Языки
	
	//Translation.ИницилизироватьПараметрыДинамическогоСписка(Список.Параметры);
	
	типыЦен = Новый Массив;
	типыЦен.Добавить(Справочники.ТипыЦен.ПустаяСсылка());
	типыЦен.Добавить(Константы.ТипЦенРозница.Получить());
	типыЦен.Добавить(Справочники.ТипыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("fd3c0f1a-335f-11e4-80d8-0cc47a0493f0")));  // СеверСталь
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипыЦен", типыЦен);
	
	//Список.Параметры.УстановитьЗначениеПараметра("ТипЦенРозница", ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница"));
	//Список.Параметры.УстановитьЗначениеПараметра("ПустойТипЦен", Справочники.ТипыЦен.ПустаяСсылка());
	
КонецПроцедуры


// ИНФОРМАЦИЯ О ТОВАРЕ

&НаКлиенте
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт
	РаботаСНоменклатуройКлиент.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Список");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
КонецПроцедуры
&НаКлиенте
Процедура ИнфТовараЗаголовокHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараЗаголовокHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
	
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Список");
	
КонецПроцедуры
// АНАЛОГИ
&НаКлиенте
Процедура ОбработатьОтображениеАналоговТовара(Контрагент = Неопределено) Экспорт
	РаботаСНоменклатуройКлиент.ОбработатьОтображениеАналоговТовара(ЭтаФорма, "Список",,,, Контрагент);
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСкрытьАналогиТовара(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьАналогиТовара(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура ИнфАналогиТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфАналогиТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Список");
КонецПроцедуры



// МОДУЛЬ КОРЗИНЫ

#Если Не ВебКлиент Тогда
&НаСервере
Функция ПоложитьВКорзинуНаСервере(СсылкиТовара, ИмяКомпа, КолВКорзине)
	
	Инексы 	= Новый Массив;
	Таблица = Новый ТаблицаЗначений;
	Инд		= -1;
	
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	
	Для Каждого Ссылка Из СсылкиТовара Цикл Инд = Инд + 1;Инексы.Добавить(Инд);
		
		НовСтрока = Таблица.Добавить();
		НовСтрока.Номенклатура 	= Ссылка;
		НовСтрока.Количество 	= 1;
		
	КонецЦикла;
	
	Возврат МодульКорзины.ПоложитьТоварВКорзину(Таблица, Инексы, ИмяКомпа, КолВКорзине);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ПоложитьВКорзину(Команда)
	
	СсылкиТовара	 	= Элементы.Список.ВыделенныеСтроки;
	КолВКорзине 		= 0;
	КолТовара			= СсылкиТовара.Количество();
	
	Если КолТовара Тогда
		
		Если ПоложитьВКорзинуНаСервере(СсылкиТовара, ИмяКомпьютера(), КолВКорзине) Тогда
			МодульКорзины.ОповеститьОПомещенииТовара(КолТовара, КолВКорзине);
		КонецЕсли;
		
	Иначе
		
		МодульКорзины.ОповеститьЧтоНечегоДобавлять();
				
	КонецЕсли;
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура РедактироватьТоварВКорзине(Команда)
	
	ОткрытьФорму("РегистрСведений.Корзина.Форма.Форма");
	
КонецПроцедуры
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаСервере
Функция ОчиститьНаСервере(ИмяКомпа)
	
	Возврат МодульКорзины.ОчиститьКорзину(ИмяКомпа);
	
КонецФункции
#КонецЕсли

#Если Не ВебКлиент Тогда
&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Если ОчиститьНаСервере(ИмяКомпьютера()) Тогда
		
		МодульКорзины.ОповеститьЧтоКорзинаОчищена();
		
	КонецЕсли;
	
КонецПроцедуры
#КонецЕсли

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПолученШтрихкод" Тогда
		
		СсылкаНаТовар = ШтрихКоды.ПолучитьОбъектПоШтрихКоду(Параметр);
		Если ТипЗнч(СсылкаНаТовар) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			Элементы.Список.ТекущаяСтрока = СсылкаНаТовар;КонецЕсли;КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенныйСписок(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка_жирная",,,, Окно);
КонецПроцедуры
&НаКлиенте
Процедура СписокпоСайтам(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСпискаПоСайтам",,,, Окно);
КонецПроцедуры


#Область Матрицы

&НаСервере
Процедура ОбработкаДействияФильтраМатрицыНаСервере(ИмяЭлементаКартинкиМатрицы)
	
	РаботаСНоменклатурой.ИзменилсяФильтрМатрицы(ЭтаФорма, ИмяЭлементаКартинкиМатрицы, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаДействияФильтраМатрицы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Переключим значение реквизиты
	
	Если ЭтотОбъект["МатрицаФильтровать"] Тогда
		ЭтотОбъект[Элемент.Имя] = Не ЭтотОбъект[Элемент.Имя];
		ОбработкаДействияФильтраМатрицыНаСервере(Элемент.Имя);
	Иначе	
		ПоказатьОповещениеПользователя("Фильтры по матрицам отключены",,"Включите фильтры если нужно фильтровать"); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МатрицаФильтроватьИзмененииНаСервере()
	
	РаботаСНоменклатурой.МатрицаФильтроватьИзменении(ЭтаФорма, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура МатрицаФильтроватьИзменении(Элемент)
	
	МатрицаФильтроватьИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокКнопокУправления()
	
	Возврат РаботаСНоменклатурой.ПолучитьСписокКомандУправленияМатрицами(ЭтаФорма);
	
КонецФункции

&НаСервере
Процедура УстановитьЗначениеВсехМатрицНаСервере(Значение)
	
	РаботаСНоменклатурой.УстановитьЗначениеВсехМатриц(Значение, ЭтаФорма, Список);
	
КонецПроцедуры
&НаКлиенте
Процедура УстановитьЗначениеВсехМатриц(Значение) Экспорт
	
	УстановитьЗначениеВсехМатрицНаСервере(Значение);
	
КонецПроцедуры
&НаКлиенте
Процедура КнопкаУправленияМатрицами(Команда)
	
	ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ОбработкаУправленияМатрицей", РаботаСНоменклатуройКлиент, Новый Структура("Форма", ЭтаФорма)), ПолучитьСписокКнопокУправления(), Команда);
	
КонецПроцедуры


#КонецОбласти