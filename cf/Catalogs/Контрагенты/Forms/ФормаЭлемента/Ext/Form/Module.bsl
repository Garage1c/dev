&НаКлиенте
Перем ИНН;

&НаСервере
Процедура УправлениеВидимостью()
	
	Элементы.ФизЛицо.Видимость = (Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо) ИЛИ (Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицоНеРезидент);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	УправлениеВидимостью();
	
	УстановитьПараметрыРеквизитовИННКПП();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеВидимостью();
	
	//установим владельца в список договоров (при использовании параметра не заполняется контрагент при вводе нового элемента)
	Отб = Договора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отб.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	Отб.ПравоеЗначение = Объект.Ссылка;
	Отб.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
	
	
	// belova 08.12.2014 { отключаем старый механизм КИ

		// Обработчик механизма "Контактная информация"
		// УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.Ссылка);
	// } belova 08.12.2014
	
	
	МенятьМенеджера =  РольДоступна("ПолныеПрава")  
	Или РольДоступна("РазрешеноМенятьМенеджераКонтрагента")
	Или Объект.ОсновнойМенеджер.Пустая() 
	Или Объект.ОсновнойМенеджер = ПараметрыСеанса.ТекущийПользователь;

	Элементы.ОсновнойМенеджер.ТолькоПросмотр =	НЕ МенятьМенеджера;
	 
	// На количество дней отсрочки

	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Объект.СтранаРегистрации	= Справочники.Страны.НайтиПоКоду("643"); // Значение по умолчанию "Россия"
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// belova 08.12.2014 { отключаем старый механизм КИ
		// Обработчик механизма "Контактная информация"
		//УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка, Отказ);
	// } belova 08.12.2014
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОНТАКТНАЯ ИНФОРМАЦИЯ

&НаКлиенте
Процедура КонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УправлениеКонтактнойИнформациейКлиент.ПриНачалеРедактирования(ЭтаФорма, Объект.Ссылка, НоваяСтрока, Копирование);

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Объект.Ссылка, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьЭтотОбъект()
	
	Попытка
		Записать();
	Исключение
		Сообщить("Ошибка сохранения данных: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;
	
КонецФункции
&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Объект.Ссылка.Пустая() Тогда
	Отказ = Истина;
	Ответ = Вопрос("Данные еще не записаны" + Символы.ПС + 
					"Переход к заполнению Контактной Информации возможен только после записи данных" + Символы.ПС +
					"Данные будут записаны", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
	    Возврат;
	КонецЕсли;
	
	ЗаписатьЭтотОбъект();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередУдалением(Элемент, Отказ)
	УправлениеКонтактнойИнформациейКлиент.ПередУдалением(ЭтаФорма, Объект.Ссылка, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ПриЗакрытииФормыЭлемента", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СобытияСистемы.ОповеститьОЗаписиКонтрагента(Объект.Ссылка);
	
	ИНН = Объект.ИНН;

КонецПроцедуры

Функция ПроверитьУникальностьИНН()
	
	Запрос = Новый Запрос("ВЫБРАТЬ ИСТИНА ИЗ Справочник.Контрагенты ГДЕ ИНН = &ИНН И Ссылка <> &Ссылка");
	Запрос.УстановитьПараметр("ИНН", Объект.ИНН);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Объект.ИНН) Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Строка ""ИНН"" должна содержать только цифры";
		Сообщение.Поле = "ИНН";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить();
		
		Отказ	= Истина;
	КонецЕсли;
	
	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Объект.КПП) Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Строка ""КПП"" должна содержать только цифры";
		Сообщение.Поле	= "КПП";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить();
		
		Отказ	= Истина;
	КонецЕсли;
	
	Если ИНН <> Объект.ИНН И НЕ ПустаяСтрока(Объект.ИНН) И НЕ ПроверитьУникальностьИНН() Тогда

		Отказ = Вопрос("Контрагент с ИНН " + Объект.ИНН + " уже существует
						|Отказаться от записи?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;
	КонецЕсли;

	
	Если Не Объект.Клиент И Не Объект.Поставщик И Не Объект.Дилер и Не Объект.Конкурент и Не Объект.ПрочиеОтношения и Не Объект.Грузоперевозчик Тогда
		Сообщить("Установите хотя бы один из признаков взаимоотношений (клиент, поставщик и т.д.)");
		Отказ=Истина;
	КонецЕсли;	
	
	Если Объект.Клиент Тогда
		Если Не ЗначениеЗаполнено(Объект.Категория) Тогда
			Сообщить("Категория не заполнена!");
			Отказ=Истина;
		ИначеЕсли НЕ Объект.Категория = ПредопределенноеЗначение("Справочник.КатегорииПартнеров.ФизическоеЛицо") Тогда
			Если Не ЗначениеЗаполнено(Объект.ОсновнойРегион) Тогда
				Сообщить("Для категорий отличных от физ лиц обязательно заполнение основного региона!");
				Отказ=Истина;
			КонецЕсли;	
		КонецЕсли	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИНН = Объект.ИНН;
	
	УстановитьПараметрыРеквизитовИННКПП();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыРеквизитовИННКПП()
	Если ПроверитьСтрануРегистрации(Объект.СтранаРегистрации) Тогда 
		
		Если Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда 
			
			Элементы.ИНН.Маска	= "9999999999";
			Элементы.КПП.Маска	= "999999999";
			
			Элементы.ИНН.Доступность= Истина;
			Элементы.КПП.Доступность= Истина;
			
		ИначеЕсли Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда 
			Объект.КПП	= "";
			
			Элементы.ИНН.Маска	= "999999999999";
			
			Элементы.ИНН.Доступность= Истина;
			Элементы.КПП.Доступность= Ложь;
			
		Иначе
			Элементы.ИНН.Маска	= "9999999999";
			Элементы.КПП.Маска	= "999999999";
		КонецЕсли;
		
	Иначе
		Объект.ИНН	= "";
		Объект.КПП	= "";
		
		Элементы.ИНН.Доступность= Ложь;
		Элементы.КПП.Доступность= Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСтрануРегистрации(СтранаРегистрации)
	Возврат СтранаРегистрации =  Справочники.Страны.НайтиПоКоду("643");
КонецФункции

&НаСервере
Функция НовыйНомерДоговора(Организация, ДатаНачала)
	
	Возврат Справочники.Контрагенты.ПолучитьДинамическийНомерДоговора(Объект.Код, Организация, ДатаНачала);
	
КонецФункции
&НаКлиенте
Процедура ОрганизацииОрганизацияПриИзменении(Элемент)
	
	//текДанные = Элементы.Организации.ТекущиеДанные;
	//
	//Если 	Не ПустаяСтрока(Объект.Код) И
	//		Не текДанные.Организация.Пустая() Тогда
	//		
	//	// Присвоим новый номер договора
	//	//текДанные.НомерДоговора = Прав(Объект.Код,6) + "/" + ПолучитьПрефиксОрганизации(текДанные.Организация) + "-" + Формат(ТекущаяДата(),"ДФ=yy"); КонецЕсли;
	//	текДанные.НомерДоговора = НовыйНомерДоговора(текДанные.Организация, текДанные.ДатаНачала); КонецЕсли;
	
КонецПроцедуры

// ВНЕШНИИ ФАЙЛЫ

&НаКлиенте
Процедура ОткрытьДокументы(Команда)
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииДатаДоговораПриИзменении(Элемент)
	
	текДанные = Элементы.Организации.ТекущиеДанные;
	
	Если 	Не ПустаяСтрока(Объект.Код) И
			Не текДанные.Организация.Пустая() Тогда
			
		// Присвоим новый номер договора
		текДанные.НомерДоговора = НовыйНомерДоговора(текДанные.Организация, текДанные.ДатаНачала); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстКонтактнойИнформацииНажатие(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ПоказатьПредупреждение(,"Необходимо сперва сохранить контрагента");
		
	Иначе
	
		//Вставить содержимое обработчика.
		//ОткрытьФорму("Обработка.КонтактнаяИнформация.Форма", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		ОткрытьФорму("Обработка.КонтактнаяИнформация.Форма.ФормаГлавная", Новый Структура("Контакт, ЗакрыватьПриЗакрытииВладельца", Объект.Ссылка, Истина), ЭтаФорма, УникальныйИдентификатор); КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапрещеноВыбиратьТипЦенВДокументах(ВыбранноеЗначение)
	Возврат ФункцииФормДокументов.ЗапрещеноВыбиратьТипЦенВДокументах(ВыбранноеЗначение);
КонецФункции		

&НаКлиенте
Процедура ТипЦенОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ЗапрещеноВыбиратьТипЦенВДокументах(ВыбранноеЗначение) Тогда
		ПоказатьПредупреждение(,"Данный тип цен запрещен к выбору");
		СтандартнаяОбработка=Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СтранаРегистрацииПриИзменении(Элемент)
	УстановитьПараметрыРеквизитовИННКПП();
КонецПроцедуры



