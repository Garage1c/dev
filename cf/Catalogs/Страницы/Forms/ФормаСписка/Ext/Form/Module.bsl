
&НаКлиенте
Перем ИзменилсяЭлемент, ТекЭлемент;

#Область Чтение_запись_данных

&НаСервере
Функция СохранитьРеквизиты(СтраницаСсылка)
	
	Если СтраницаСсылка <> Неопределено Тогда
		
		спрОбъект = СтраницаСсылка.ПолучитьОбъект();
		
		// Реквизиты
		
		спрОбъект.Текст = Текст.ПолучитьТекст();
		
		// Блоки
		
		спрОбъект.Блоки.Очистить();
		Для Каждого Строка Из СтраницыВТексте Цикл ЗаполнитьЗначенияСвойств(спрОбъект.Блоки.Добавить(), Строка) КонецЦикла;
		
		// Замены
		
		спрОбъект.Замены.Очистить();
		Для Каждого Строка Из Замены Цикл ЗаполнитьЗначенияСвойств(спрОбъект.Замены.Добавить(), Строка) КонецЦикла;
		
		Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(спрОбъект); КонецЕсли;
	
КонецФункции
&НаСервере
Процедура ПрочитатьРеквизиты(СтраницаСсылка)
	
	// Реквизиты
	
	Текст.УстановитьТекст(СтраницаСсылка.Текст);
	
	// Блоки
	
	СтраницыВТексте.Очистить();
	Для Каждого Строка Из СтраницаСсылка.Блоки Цикл ЗаполнитьЗначенияСвойств(СтраницыВТексте.Добавить(), Строка) КонецЦикла;
	
	// Замены
	
	Замены.Очистить();
	Для Каждого Строка Из СтраницаСсылка.Замены Цикл ЗаполнитьЗначенияСвойств(Замены.Добавить(), Строка) КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТекстПриИзменении(Элемент)
	
	ИзменилсяЭлемент = Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура СтраницыВТекстеПриИзменении(Элемент)
	
	ИзменилсяЭлемент = Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура ЗаменыПриИзменении(Элемент)
	
	ИзменилсяЭлемент = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменилсяЭлемент = Ложь;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если 	ИмяСобытия = "ЗаписанаСтраница" И
			ТекЭлемент = Параметр Тогда
			
		ИзменилсяЭлемент = Ложь;
		ПрочитатьРеквизиты(ТекЭлемент); КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	текСтраница = Элемент.ТекущаяСтрока;
	
	Если ИзменилсяЭлемент Тогда
		Если СохранитьРеквизиты(ТекЭлемент) Тогда
			ИзменилсяЭлемент = Ложь;
		Иначе
			Элемент.ТекущаяСтрока = ТекЭлемент; КонецЕсли; КонецЕсли;
		
	Если текСтраница <> Неопределено Тогда
		ТекЭлемент = текСтраница;
		СписокПриАктивизацииСтрокиНаСервере(текСтраница) КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере(СтраницаСсылка)
	
	ПрочитатьРеквизиты(СтраницаСсылка)
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьРезультат(Команда)
	
	стрОшибки 	= "";
	текСтраница = Элементы.Список.ТекущаяСтрока;
	
	Если текСтраница <> Неопределено Тогда
		
		текТекст = ПолучитьТекст(текСтраница, стрОшибки); 
		
		Если текТекст = Неопределено Тогда ОбщиеФункции.СообщитьТекст(стрОшибки); 
		Иначе
			ТекстДок = Новый ТекстовыйДокумент;
			ТекстДок.УстановитьТекст(текТекст);
			ТекстДок.Показать("Результат " + текСтраница); КонецЕсли; КонецЕсли;
	
КонецПроцедуры
&НаСервереБезКонтекста
Функция ПолучитьТекст(Ссылка, стрОшибки)
	
	Возврат Справочники.Страницы.ПолучитьТекст(Ссылка, стрОшибки);
	
КонецФункции

&НаКлиенте
Процедура ПоказатьТекстЗапроса(Команда)
	ПоказатьТекстЗапросаНаСервере(Элементы.Список.ТекущаяСтрока);
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПоказатьТекстЗапросаНаСервере(Ссылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Ссылка,
	|	ЭтоФайл, ЭтоКаталог, Публичный,
	|	ИмяФайла, Текст
	//|	,Блоки.(ИмяВТексте,Страница),
	//|	Замены.(Что, НаЧто, УчитыватьРегистр)
	|ИЗ
	|	Справочник.Страницы
	|ГДЕ
	|	НЕ ПометкаУдаления
	//|	Ссылка В ИЕРАРХИИ(&Ссылка)
	|
	//|УПОРЯДОЧИТЬ ПО Ссылка ИЕРАРХИЯ, Код
	|ИТОГИ ПО Родитель ИЕРАРХИЯ
	
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//   // Получим выборку из результата запроса.
	
	РезультатЗапроса = Запрос.Выполнить();
	СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
   	Выборка = РезультатЗапроса.Выбрать(СпособВыборки);
   	ВыдатьРекурсивно(Выборка);
	
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ВыдатьРекурсивно(Выборка)
   // Пока в выборке есть записи ...
   Пока Выборка.Следующий() Цикл
	   // ... выведем в окно сообщений поля из результата
	   Товар = Выборка.Ссылка;
	   Количество = Выборка.Текст;
	   Сообщить("Ссылка: " + Выборка.Ссылка + " Текст: " + Выборка.Текст);
	   // Продолжим выборку подчиненных записей
	   СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
	   ВыдатьРекурсивно(Выборка.Выбрать(СпособВыборки));
   КонецЦикла;
КонецПроцедуры
