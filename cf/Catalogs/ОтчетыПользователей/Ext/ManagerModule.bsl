
Функция ИзменитьНастройкуОтчетаПользователем(ОтчетСсылка, Настройки, Пользователь = Неопределено) Экспорт
	
	текПользователь = ?(Пользователь = Неопределено, ПараметрыСеанса.ТекущийПользователь, Пользователь);
	
	Набор = РегистрыСведений.НастройкаПользователемОтчета.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(текПользователь);
	Набор.Отбор.Отчет.Установить(ОтчетСсылка);
	Набор.Прочитать();
	
	Запись = ?(Набор.Количество(), Набор[0], Набор.Добавить());
	ЗаполнитьЗначенияСвойств(Запись, Настройки);
	
	Запись.Пользователь = текПользователь;
	Запись.Отчет 		= ОтчетСсылка;
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Набор);
	
КонецФункции

Функция ПолучитьDIVОтчета(Ссылка, Наименование, Описание, Автор, ДатаМодификации, Избранный, КолКомментов, КартинкаДобавитьВИзбраное, КартинкаУбратьИзИзбранного, КартинкаНастройки, КартинкаКопирования, КартинкаУдаления)
	
	ЭтоМойОтчет = Автор = ПараметрыСеанса.ТекущийПользователь;
	
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.НастройкиPostman") Тогда
		ПолучитьСсылкуВкоде = "HTMLОбработкаСервер.ПолучитьОбъектПоГуидСтроке(""Справочники.НастройкиPostman"",""" + XMLСтрока(Ссылка) + """)";
		КодДляОткрытия = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		//|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, ""Сформирован отчет"");
		|ПоказатьОповещениеПользователя(""Формируется отчет"",, Строка(Ссылка), БиблиотекаКартинок.ОтчетБольшой);
		|ПараметрыФормы = Новый Структура(""Ссылка"", Ссылка);
		|ОткрытьФорму(""Справочник.НастройкиPostman.Форма.ФормаТабличногоДокумента"", ПараметрыФормы, ЭтаФорма);
		|";
		
		Возврат "<div class=""report"">
		//|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодДобавленияВИзбранное + "'><img title=""" + ?(Избранный, "Убрать из избранных", "Добавить в избранные отчеты") + """; width=20px; height=20px; src='" + ?(Избранный, КартинкаУбратьИзИзбранного, КартинкаДобавитьВИзбраное) + "'></a>
		//|" + ?(ЭтоМойОтчет, "<a href='V8:ВЫПОЛНИТЬ КОД:" + КодОткрытьНастройки + "'><img title=""Настроить""; width=20px; height=20px; src='" + КартинкаНастройки + "'></a>","") + "
		//|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодСкопировать + "'><img title=""Создать новый отчет на основании этого отчета""; width=20px; height=20px; src='" + КартинкаКопирования + "'></a>
		//|" + ?(ЭтоМойОтчет, "<a href='V8:ВЫПОЛНИТЬ КОД:" + КодУдалить + "'><img title=""Удалить отчет""; width=20px; height=20px; src='" + КартинкаУдаления + "'></a>", "") + "
		//|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодКомментарии + "' title=""" + ?(КолКомментов, "Открыть комментарии", "Добавить комментарий") + """>" + ?(КолКомментов, Формат(КолКомментов, "ЧГ="), "+") + "</a>
		|<p><a href='V8:ВЫПОЛНИТЬ КОД:" + КодДляОткрытия + "' title=""" + Описание + """>" + Наименование + "</a></p>
		|<div class=""autor"">" + Автор + "</div>
		|<div class=""data"">" + Формат(ДатаМодификации,"ДЛФ=DD") + "</div>
		|</div>
		|";

	Иначе	
		
		ПолучитьСсылкуВкоде = "HTMLОбработкаСервер.ПолучитьОбъектПоГуидСтроке(""Справочники.ОтчетыПользователей"",""" + XMLСтрока(Ссылка) + """)";
		КодДляОткрытия = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, ""Сформирован отчет"");
		|ПоказатьОповещениеПользователя(""Формируется отчет"",, Строка(Ссылка), БиблиотекаКартинок.ОтчетБольшой);
		|ПараметрыФормы = Новый Структура(""Ключ, СформироватьПриОткрытии"", Ссылка, Истина);
		|ОткрытьФорму(""Справочник.ОтчетыПользователей.ФормаОбъекта"", ПараметрыФормы, ЭтаФорма);
		|";
		
		
		КодОткрытьНастройки = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, ""Открыты настройки"");
		|ПараметрыФормы = Новый Структура(""Ключ"", Ссылка);
		|ОткрытьФорму(""Справочник.ОтчетыПользователей.ФормаОбъекта"", ПараметрыФормы, ЭтаФорма);
		|";
		
		КодСкопировать = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, ""Нажата кнопка скопировать отчет"");
		|Настройки = ЭтаФорма.ПолучитьНастройкиОтчета(Ссылка);
		|ПараметрыФормы = Новый Структура(""ИсточникДанных, АдресНастроек"", Настройки.ИсточникДанных, Настройки.АдресНастроек);
		|ОткрытьФорму(""Справочник.ОтчетыПользователей.ФормаОбъекта"", ПараметрыФормы, ЭтаФорма);
		|";
		
		КодУдалить = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, ""Нажата кнопка удалить отчет"");
		|ЭтаФорма.ПометитьНаУдаление(Ссылка)
		|";
		
		КодДобавленияВИзбранное = "
		|Ссылка = " + ПолучитьСсылкуВкоде + ";
		|Слежение.Записать(""Открытие. Отчеты пользователя."" + Строка(Ссылка),""Справочник.ОтчетыПользователей"", ЭтаФорма.ИмяФормы, Ссылка, """ + ?(Избранный, "Удален из избранных", "Добавлен в избранные") + """);
		|ЭтаФорма.ИзменитьНастройкуОтчетаПользователем(Ссылка,
		|	Новый Структура(""Избранный"", " + ?(Избранный, "ЛОЖЬ", "ИСТИНА") + "));
		|ЭтаФорма.ОбновитьHTML();
		|";
		
		КодКомментарии = "
		|ПараметрыФормы = Новый Структура(""СсылкаНаОбъект"", " + ПолучитьСсылкуВкоде + ");
		|ОткрытьФорму(""РегистрСведений.Комментарии.Форма." + ?(КолКомментов, "КомментарииКОбъекту", "ДобавитьКомментарий") + """, ПараметрыФормы, ЭтаФорма);
		|";
		
		
		Возврат "<div class=""report"">
		|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодДобавленияВИзбранное + "'><img title=""" + ?(Избранный, "Убрать из избранных", "Добавить в избранные отчеты") + """; width=20px; height=20px; src='" + ?(Избранный, КартинкаУбратьИзИзбранного, КартинкаДобавитьВИзбраное) + "'></a>
		|" + ?(ЭтоМойОтчет, "<a href='V8:ВЫПОЛНИТЬ КОД:" + КодОткрытьНастройки + "'><img title=""Настроить""; width=20px; height=20px; src='" + КартинкаНастройки + "'></a>","") + "
		|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодСкопировать + "'><img title=""Создать новый отчет на основании этого отчета""; width=20px; height=20px; src='" + КартинкаКопирования + "'></a>
		|" + ?(ЭтоМойОтчет, "<a href='V8:ВЫПОЛНИТЬ КОД:" + КодУдалить + "'><img title=""Удалить отчет""; width=20px; height=20px; src='" + КартинкаУдаления + "'></a>", "") + "
		|<a href='V8:ВЫПОЛНИТЬ КОД:" + КодКомментарии + "' title=""" + ?(КолКомментов, "Открыть комментарии", "Добавить комментарий") + """>" + ?(КолКомментов, Формат(КолКомментов, "ЧГ="), "+") + "</a>
		|<p><a href='V8:ВЫПОЛНИТЬ КОД:" + КодДляОткрытия + "' title=""" + Описание + """>" + Наименование + "</a></p>
		|<div class=""autor"">" + Автор + "</div>
		|<div class=""data"">" + Формат(ДатаМодификации,"ДЛФ=DD") + "</div>
		|</div>
		|";
	КонецЕсли;	
КонецФункции

Функция ПолучитьHTMLСпискаОтчетов() Экспорт
	
	ТекстОграничительDIV = "<div style="" width:100%; height:1px; clear:both;""></div>";
	ТекстИзбранных = ""; ТекстСвоих = "";  ТекстPostman = ""; ТекстВсех = "";
	
	КартинкаДобавитьВИзбраное 	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.НеИзбранное);
	КартинкаУбратьИзИзбранного 	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Избранное);
	КартинкаНастройки			= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.НастройкиОтчета);
	КартинкаКопирования			= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.СкопироватьОбъект);
	КартинкаНового				= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.СоздатьЭлементСписка);
	КартинкаУдаления			= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПометитьНаУдаление);
	
	Запрос = Новый Запрос("
	
	// Комментарии
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ СсылкаНаОбъект, КОЛИЧЕСТВО(1) КолКомментов ПОМЕСТИТЬ ТаблицаКомментариев
	|ИЗ 		РегистрСведений.Комментарии
	|ГДЕ СсылкаНаОбъект ССЫЛКА Справочник.ОтчетыПользователей
	|СГРУППИРОВАТЬ ПО СсылкаНаОбъект;
	
	// Группы Пользователя
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ПОМЕСТИТЬ ГруппыПользователя ИЗ Справочник.ГруппыПользователей.Состав ГДЕ Пользователь = &Пользователь;
	// Разрешения на отчеты
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ПОМЕСТИТЬ ТаблРазрешенные ИЗ Справочник.ОтчетыПользователей.Разрешено ГДЕ Пользователь = Неопределено ИЛИ Пользователь = &Пользователь ИЛИ Пользователь В(ВЫБРАТЬ Ссылка ИЗ ГруппыПользователя);
	// Запрещение на отчеты
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ПОМЕСТИТЬ ТаблЗапрещенные ИЗ Справочник.ОтчетыПользователей.Запрещено ГДЕ Пользователь = Неопределено ИЛИ Пользователь = &Пользователь ИЛИ Пользователь В(ВЫБРАТЬ Ссылка ИЗ ГруппыПользователя);
	
	// Избранные
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Отчет КАК Ссылка, Отчет.Наименование Наименование, Отчет.Описание Описание, Отчет.Автор Автор, Отчет.ДатаМодификации ДатаМодификации, ИСТИНА Избранный, ЕСТЬNULL(Комм.КолКомментов, 0) КолКомментов
	|ИЗ 		РегистрСведений.НастройкаПользователемОтчета Рег
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКомментариев Комм ПО Комм.СсылкаНаОбъект = Рег.Отчет
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблРазрешенные Разр ПО Разр.Ссылка = Рег.Отчет
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблЗапрещенные Запр ПО Запр.Ссылка = Рег.Отчет
	|
	|ГДЕ 		Пользователь = &Пользователь И Избранный И НЕ Отчет.ПометкаУдаления И (Рег.Отчет.Автор = &Пользователь ИЛИ (Запр.Ссылка ЕСТЬ NULL И НЕ Разр.Ссылка ЕСТЬ NULL))
	|			УПОРЯДОЧИТЬ ПО ДатаМодификации Убыв;
	
	// Свои
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Спр.Ссылка, Спр.Наименование, Спр.Описание, Спр.Автор, Спр.ДатаМодификации, ЕСТЬNULL(Рег.Избранный, ЛОЖЬ) Избранный, ЕСТЬNULL(Комм.КолКомментов, 0) КолКомментов
	|ИЗ 		Справочник.ОтчетыПользователей Спр
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПользователемОтчета Рег ПО Спр.Ссылка = Рег.Отчет И Рег.Пользователь = &Пользователь
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКомментариев Комм ПО Комм.СсылкаНаОбъект = Спр.Ссылка
	|
	|ГДЕ			НЕ Спр.ПометкаУдаления И Спр.Автор = &Пользователь
	|УПОРЯДОЧИТЬ 	ПО Спр.ДатаМодификации Убыв;
	
	// Все
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Спр.Ссылка, Спр.Наименование, Спр.Описание, Спр.Автор, Спр.ДатаМодификации, ЕСТЬNULL(Рег.Избранный, ЛОЖЬ) Избранный, ЕСТЬNULL(Комм.КолКомментов, 0) КолКомментов
	|ИЗ 		Справочник.ОтчетыПользователей Спр
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПользователемОтчета Рег ПО Спр.Ссылка = Рег.Отчет И Рег.Пользователь = &Пользователь
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКомментариев Комм ПО Комм.СсылкаНаОбъект = Спр.Ссылка
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблРазрешенные Разр ПО Разр.Ссылка = Спр.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ ТаблЗапрещенные Запр ПО Запр.Ссылка = Спр.Ссылка
	|
	|ГДЕ			НЕ Спр.ПометкаУдаления И (Спр.Автор = &Пользователь ИЛИ (Запр.Ссылка ЕСТЬ NULL И НЕ Разр.Ссылка ЕСТЬ NULL))
	|УПОРЯДОЧИТЬ 	ПО Спр.ДатаМодификации Убыв;
	
	////////////////////////////////////////////////////////////////////////////////
	//POSTMAN
	|	ВЫБРАТЬ
	|	НастройкиPostmanПолучатели.Ссылка
	|ПОМЕСТИТЬ ВТ_Одиночные
	|ИЗ
	|	Справочник.НастройкиPostman.Получатели КАК НастройкиPostmanПолучатели
	|ГДЕ
	|	НастройкиPostmanПолучатели.Получатель = &Пользователь
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ПометкаУдаления
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ЭтоГруппа
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.Заблокирован
	|	И НастройкиPostmanПолучатели.Ссылка.Использование
	|	И НастройкиPostmanПолучатели.Ссылка.Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиPostman.ПустаяСсылка)
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиPostmanПолучатели.Ссылка
	|ПОМЕСТИТЬ ВТ_Самостоятельные
	|ИЗ
	|	Справочник.НастройкиPostman.Получатели КАК НастройкиPostmanПолучатели
	|ГДЕ
	|	НастройкиPostmanПолучатели.Получатель = &Пользователь
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ПометкаУдаления
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ЭтоГруппа
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.Заблокирован
	|	И НастройкиPostmanПолучатели.Ссылка.Использование
	|	И НастройкиPostmanПолучатели.Ссылка.Родитель.ОтправлятьОчетыСамостоятельно
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.Родитель.ПометкаУдаления
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиPostmanПолучатели.Ссылка
	|ПОМЕСТИТЬ ВТ_Группы
	|ИЗ
	|	Справочник.НастройкиPostman.Получатели КАК НастройкиPostmanПолучатели
	|ГДЕ
	|	НастройкиPostmanПолучатели.Получатель = &Пользователь
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ПометкаУдаления
	|	И НастройкиPostmanПолучатели.Ссылка.ЭтоГруппа
	|	И НЕ НастройкиPostmanПолучатели.Ссылка.ОтправлятьОчетыСамостоятельно
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиPostman.Ссылка,
	|	НастройкиPostman.Наименование КАК Наименование,
	|	"""" КАК Описание,
	|	НастройкиPostman.Автор,
	|	НастройкиPostman.ДатаМодификации КАК ДатаМодификации,
	|	ЛОЖЬ КАК Избранный,
	|	0 КАК КолКомментов
	|ИЗ
	|	Справочник.НастройкиPostman КАК НастройкиPostman
	|ГДЕ
	|	НастройкиPostman.Родитель В
	|			(ВЫБРАТЬ
	|				ВТ_Группы.Ссылка
	|			ИЗ
	|				ВТ_Группы КАК ВТ_Группы)
	|	И НЕ НастройкиPostman.ПометкаУдаления
	|	И НЕ НастройкиPostman.ЭтоГруппа
	|	И НЕ НастройкиPostman.Заблокирован
	|	И НастройкиPostman.Использование
	
	|ОБЪЕДИНИТЬ
	
	|ВЫБРАТЬ
	|	ВТ_Одиночные.Ссылка,
	|	ВТ_Одиночные.Ссылка.Наименование,
	|	"""",
	|	ВТ_Одиночные.Ссылка.Автор,
	|	ВТ_Одиночные.Ссылка.ДатаМодификации,
	|	ЛОЖЬ,
	|	0
	|ИЗ
	|	ВТ_Одиночные КАК ВТ_Одиночные
	
	|ОБЪЕДИНИТЬ
	
	|ВЫБРАТЬ
	|	ВТ_Самостоятельные.Ссылка,
	|	ВТ_Самостоятельные.Ссылка.Наименование,
	|	"""",
	|	ВТ_Самостоятельные.Ссылка.Автор,
	|	ВТ_Самостоятельные.Ссылка.ДатаМодификации,
	|	ЛОЖЬ,
	|	0
	|ИЗ
	|	ВТ_Самостоятельные КАК ВТ_Самостоятельные
	|	УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|");
	
	
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Пакет = Запрос.ВыполнитьПакет();
	
	
	// Выведем Избранные
	
	Выборка = Пакет[4].Выбрать();
	Пока Выборка.Следующий() Цикл ТекстИзбранных = ТекстИзбранных + ПолучитьDIVОтчета(Выборка.Ссылка, Выборка.Наименование, Выборка.Описание, Выборка.Автор, Выборка.ДатаМодификации, Выборка.Избранный, Выборка.КолКомментов, КартинкаДобавитьВИзбраное, КартинкаУбратьИзИзбранного, КартинкаНастройки, КартинкаКопирования, КартинкаУдаления); КонецЦикла;
	
	// Выведем свои
	
	Выборка = Пакет[5].Выбрать();
	Пока Выборка.Следующий() Цикл ТекстСвоих = ТекстСвоих + ПолучитьDIVОтчета(Выборка.Ссылка, Выборка.Наименование, Выборка.Описание, Выборка.Автор, Выборка.ДатаМодификации, Выборка.Избранный, Выборка.КолКомментов, КартинкаДобавитьВИзбраное, КартинкаУбратьИзИзбранного, КартинкаНастройки, КартинкаКопирования, КартинкаУдаления); КонецЦикла;
	
	// Выведем все
	
	Выборка = Пакет[6].Выбрать();
	Пока Выборка.Следующий() Цикл ТекстВсех = ТекстВсех + ПолучитьDIVОтчета(Выборка.Ссылка, Выборка.Наименование, Выборка.Описание, Выборка.Автор, Выборка.ДатаМодификации, Выборка.Избранный, Выборка.КолКомментов, КартинкаДобавитьВИзбраное, КартинкаУбратьИзИзбранного, КартинкаНастройки, КартинкаКопирования, КартинкаУдаления); КонецЦикла;
	
	// Выведем Postman
	Выборка = Пакет[Пакет.Количество() - 1].Выбрать();
	Пока Выборка.Следующий() Цикл ТекстPostman = ТекстPostman + ПолучитьDIVОтчета(Выборка.Ссылка, Выборка.Наименование, Выборка.Описание, Выборка.Автор, Выборка.ДатаМодификации, Выборка.Избранный, Выборка.КолКомментов, КартинкаДобавитьВИзбраное, КартинкаУбратьИзИзбранного, КартинкаНастройки, КартинкаКопирования, КартинкаУдаления); КонецЦикла;
	

	
	Если ТекстИзбранных  = "" Тогда ТекстИзбранных = "у вас нет избранных отчетов <p><em>Если вам понравился какой либо отчет, добавте его в избраное (нажать на звезду возле отчета) и отчет появится в этом месте.</em><p>" КонецЕсли;
	Если ТекстСвоих  = "" Тогда ТекстСвоих = "Вы не создавали свои отчеты<p><a href='V8:ВЫПОЛНИТЬ КОД:ОткрытьФорму(""Справочник.ОтчетыПользователей.ФормаОбъекта"",,ЭтаФорма);'>Создать новый отчет</a></p>" КонецЕсли;
	Если ТекстВсех  = "" Тогда ТекстВсех = "АХТУНГ! В системе нет ни одного отчета !!!" КонецЕсли;
	
	Возврат //"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
			//|<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""ru"">
			"<HTML><HEAD>
			|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
			|<meta http-equiv=""X-UA-Compatible"" content=""IE=9"">
			//|	<meta http-equiv=""Content-Type"" content=""text/html""/>
			|	<style>
			|		h3{
			|       		text-align:center;
			|		}
			|		a {
   			|				color: black; /* Цвет ссылок */
   			|			}
			|		a img {
    		|				border: none; /* Убираем рамку */
   			|		}
			|		.report{
			|				width:180px; 
        	|				height:110px; 
			|				padding:2px;
        	|				background:#EDF2F0; 
        	|				float:left; 
        	|				margin-left:15px; 
			|				margin-top:40px;
        	|				text-align:center;
			|		filter: progid:DXImageTransform.Microsoft.Shadow(color=#aaaaaa,direction=125,strength=3);
			|			}
			|		.autor{
            |       		white-space: nowrap;
           	|               font-size:65%;
          	|               color:grey;
         	|               overflow: hidden; width:170px; 
			|				height:18px;
			|			}
            |	   .data{
            |				white-space: nowrap;
            |               font-size:50%;
			|				color:blue;
            |               overflow: hidden; width:110px; 
			|	height:20px;}
			|	</style>
			|</HEAD>
			|<body>
			|<h3>Postman отчеты</h3>
			|" + ТекстОграничительDIV + "
			|" + ТекстPostman + "
			|" + ТекстОграничительDIV + "
			|<h3>Избранные отчеты</h3>
			|" + ТекстОграничительDIV + "
			|" + ТекстИзбранных + "
			|" + ТекстОграничительDIV + "
			|<h3>Мои отчеты <a href='V8:ВЫПОЛНИТЬ КОД:ОткрытьФорму(""Справочник.ОтчетыПользователей.ФормаОбъекта"",, ЭтаФорма)'><img title=""Создать новый отчет""; width=20px; height=20px; src='" + КартинкаНового + "'></a></h3>
			|" + ТекстОграничительDIV + "
			|" + ТекстСвоих + "
			|" + ТекстОграничительDIV + "
			|<h3>Все отчеты</h3>
			|" + ТекстОграничительDIV + "
			|" + ТекстВсех + "
			|" + ТекстОграничительDIV + "
			|</body>
			|</HTML>";
	 
		КонецФункции
		

Процедура СформироватьНаСервере(Ссылка, Знач Настройки, Результат ) Экспорт
	Если ЭтоАдресВременногоХранилища(Настройки) Тогда
		Настройки = ПолучитьИзВременногоХранилища(Настройки).Получить();
	КонецЕсли;
	
	СхемаКомпоновкиДанных = ПолучитьСхему(Ссылка);
    //Настройки = 
	//Из схемы возьмем настройки по умолчанию
	//Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	//!Если Настройки = Неопределено Тогда Настройки = КомпоновщикОтчета.Настройки КонецЕсли;

	//Помещаем в переменную данные о расшифровке данных
	НовыеДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	
	// Загрузим пользовтельские настройки которые ввыел пользователь совсем недавно
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);	
	
	
	//!КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(КомпоновщикОтчета.ПользовательскиеНастройки);
	
	// 
	//КомпоновщикОтчета.ПользовательскиеНастройки.

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), НовыеДанныеРасшифровки);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,НовыеДанныеРасшифровки);
	
	//!ДанныеРасшифровки = ПоместитьВоВременноеХранилище(НовыеДанныеРасшифровки, УникальныйИдентификатор);
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(НовыеДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	Результат.Очистить();

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция ПолучитьСхему(Ссылка) Экспорт
	
	Если Ссылка.ТипИсточникаДанных = 0 Тогда
	
		МетаМакет = Метаданные.НайтиПоПолномуИмени(Ссылка.ИсточникДанных);
		Возврат Отчеты[МетаМакет.Родитель().Имя].ПолучитьМакет(МетаМакет.Имя);
		
	ИначеЕсли Ссылка.ТипИсточникаДанных = 1 Тогда
		
		СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
		
		источникДанныхМ = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
        источникДанныхМ.Имя 					= "ИсточникДанных";
        источникДанныхМ.ТипИсточникаДанных 	= "Local"; 
		
		Набор = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		
		Набор.Имя 							= "НаборДанных";
		Набор.ИсточникДанных 				= источникДанныхМ.Имя;
		Набор.Запрос 						= Ссылка.ТекстЗапроса;
        Набор.АвтоЗаполнениеДоступныхПолей 	= Истина;  
		
		Возврат СхемаКомпоновкиДанных;
		
	Иначе
		
		ВызватьИсключение "Не известный тип источника данных " + Ссылка.ТипИсточникаДанных;
		
	КонецЕсли;
	     // ВЫБРАТЬ Ссылка Из Справочник.Склады
КонецФункции

		