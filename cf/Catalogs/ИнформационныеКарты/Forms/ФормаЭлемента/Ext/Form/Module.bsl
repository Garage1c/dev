
&НаКлиенте
Процедура СоздатьШтрихКод(Команда)
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ОткрытьФорму("РегистрСведений.ШтрихКоды.Форма.ФормаЗаписи", Новый Структура("ИнформационнаяКарта", Объект.Ссылка), ЭтаФорма);
	КонецЕсли

КонецПроцедуры

&НаСервере
Процедура ЗапросБаланса()
	                                                   
	Запрос = Новый Запрос("ВЫБРАТЬ СуммаОборот ИЗ РегистрНакопления.ПродажиПоДисконтнымКартам.Обороты(,,, ИнформационнаяКарта = &Ссылка)");
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		БалансКарты = Выборка.СуммаОборот;
	КонецЕсли;
	
	БалансКарты = БалансКарты + Объект.Сумма;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью()
	
	ЭтоПарсек = Объект.ТипКарты = Перечисления.ТипыИнформационныхКарт.Parsec;
	
	//Элементы.Сумма.Видимость = НЕ (Объект.ТипКарты.Пустая() ИЛИ Объект.ТипКарты = Перечисления.ТипыИнформационныхКарт.ДисконтнаяКарта);	
	Элементы.Процент.Видимость = НЕ (Объект.ТипКарты.Пустая() ИЛИ Объект.ТипКарты = Перечисления.ТипыИнформационныхКарт.ПодарочныйСертификат);
	
	Элементы.ГруппаСкидки.Видимость 	= Не ЭтоПарсек;
	Элементы.Владелец.Видимость 		= Не ЭтоПарсек;
	Элементы.ГруппаШтрихКод.Видимость 	= Не ЭтоПарсек;
	Элементы.БалансКарты.Видимость 		= Не ЭтоПарсек;
	Элементы.ДатаСоздания.Видимость     = Не ЭтоПарсек;
	Элементы.ГруппаParsec.Видимость 	= ЭтоПарсек;
	
КонецПроцедуры  	

&НаСервере
Функция ПолучитьШтрихКод()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ШтрихКод,
	|	ТипШтрихКода
	|ИЗ
	|	РегистрСведений.Штрихкоды
	|ГДЕ
	|	Объект = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("ШтрихКод, ТипШтрихКода", Выборка.ШтрихКод, Выборка.ТипШтрихКода);			
	КонецЕсли;
	
	Возврат Новый Структура("ШтрихКод, ТипШтрихКода", "", Перечисления.ТипыШтрихКодов.EAN13);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ТипКарты = Перечисления.ТипыИнформационныхКарт.ДисконтнаяКарта;
		ТипШтрихКода = Перечисления.ТипыШтрихКодов.EAN13;
		Объект.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПолучитьШтрихКод());
	
	УправлениеВидимостью();
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ШтрихКоды, "ИнформационнаяКарта", Объект.Ссылка, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ШтрихКоды, "Номенклатура", Справочники.Номенклатура.ПустаяСсылка(), Истина);
	
	врШтрихКод = ШтрихКод;
	
	ЗапросБаланса();
	
КонецПроцедуры   

&НаКлиенте
Процедура БалансКартыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("ИнформационнаяКарта", Объект.Ссылка), , Истина);
	ОткрытьФорму("Отчет.ПродажиПоДисконтнымКартам.Форма.ФормаОтчета", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ТипКартыПриИзменении(Элемент)
	
	УправлениеВидимостью();	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если врШтрихКод <> "" И врШтрихКод <> ШтрихКод Тогда
		
		ЗаписьШтрихкода = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		
		ЗаписьШтрихкода.Объект				= Объект.Ссылка;
		ЗаписьШтрихкода.ТипШтрихКода 		= ТипШтрихКода;
		ЗаписьШтрихкода.ШтрихКод     		= ШтрихКод;
		
		Попытка
			ЗаписьШтрихкода.Записать();
		Исключение
			Отказ = Истина;
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Если ШтрихКод <> "" И врШтрихКод <> ШтрихКод Тогда
		ЗаписьШтрихкода = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		
		ЗаписьШтрихкода.Объект				= Объект.Ссылка;
		ЗаписьШтрихкода.ТипШтрихКода 		= ТипШтрихКода;
		ЗаписьШтрихкода.ШтрихКод     		= ШтрихКод;
		
		Попытка
			ЗаписьШтрихкода.Записать();
		Исключение
			Отказ = Истина;
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры
