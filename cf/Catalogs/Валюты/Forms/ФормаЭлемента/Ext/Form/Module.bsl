////////////////////////////////////////////////////////////////////////////////
// СЕКЦИЯ ОБРАБОТЧИКОВ СОБЫТИЙ
//

&НаСервере
// Обработчик события "при создании на сервере" формы
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	GUID = Объект.Ссылка.УникальныйИдентификатор();	
	Если Параметры.Свойство("КодВалюты") Тогда
		Объект.Код = Параметры.КодВалюты;
	КонецЕсли;
	
	Если Параметры.Свойство("НаименованиеКраткое") Тогда
		Объект.Наименование = Параметры.НаименованиеКраткое;
	КонецЕсли;
	
	Если Параметры.Свойство("НаименованиеПолное") Тогда
		Объект.НаименованиеПолное = Параметры.НаименованиеПолное;
	КонецЕсли;
	
	Если Параметры.Свойство("Загружается") Тогда
		Объект.ВалютаЗагружается = Параметры.Загружается;
	КонецЕсли;
	
	Если Объект.ВалютаЗагружается Тогда
		Объект.ПодчиненныйКурсОт = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПодчиненныйКурсОт) Тогда
		ЗависимыйКурсВалют = Истина;
	КонецЕсли;
	
	ПрочитатьПараметрыПрописи();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии(Отказ)
	
	УстановитьСвойстваЭлементовГруппыЗависимойВалюты();
	УстановитьСклоненияПараметровПрописи();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" элемента формы ВалютаЗагружаетсяССайтаРБК
//
Процедура ВалютаЗагружаетсяССайтаРБКПриИзменении(Элемент)
	
	Если Объект.ВалютаЗагружается Тогда
		ЗависимыйКурсВалют = Ложь;
		Объект.ПодчиненныйКурсОт = NULL;
		Объект.КоэффициентПодчиненногоКурса = 0;
	КонецЕсли;
	
	УстановитьСвойстваЭлементовГруппыЗависимойВалюты();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" элемента формы ВалютаЗагружаетсяССайтаРБК
//
Процедура ЗависимыйКурсВалютПриИзменении(Элемент)
	
	УстановитьСвойстваЭлементовГруппыЗависимойВалюты();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" элемента формы ПодчиненныйКурсОт
//
Процедура ПодчиненныйКурсОтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПодготовитьДанныеВыбораПодчиненнойВалюты(ДанныеВыбора, Объект.Ссылка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗависимыйКурсВалют Тогда
		Если Не ЗначениеЗаполнено(Объект.ПодчиненныйКурсОт) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			    НСтр("ru = 'Необходимо указать основную валюту'"),
			    Объект,
			    "Объект.ПодчиненныйКурсОт",
			    Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.КоэффициентПодчиненногоКурса) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			    НСтр("ru = 'Необходимо установить коэфициент подчинения курса'"),
			    Объект,
			    "Объект.КоэффициентПодчиненногоКурса",
			    Отказ);
		КонецЕсли;
			
	КонецЕсли;
	
	// Устанавливаем реквизиты загрузки и зависимости валюты
	Если НЕ ЗависимыйКурсВалют Тогда
		Объект.ПодчиненныйКурсОт = NULL;
		Объект.КоэффициентПодчиненногоКурса = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Обработчик события ПередЗаписьюНаСервере
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПараметрыПрописиНаРусском = ПолеПрописи1наРусском + ", "
											+ ПолеПрописи2наРусском + ", "
											+ ПолеПрописи3наРусском + ", "
											+ ПолеПрописи4наРусском + ", "
											+ ПолеПрописи5наРусском + ", "
											+ ПолеПрописи6наРусском + ", "
											+ ПолеПрописи7наРусском + ", "
											+ ПолеПрописи8наРусском + ", "
											+ ДлинаДробнойЧасти;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЕКЦИЯ СЛУЖЕБНЫХ ФУНКЦИЙ И ПРОЦЕДУР
//

&НаСервере
// Процедура считывает параметры прописи и заполняет соответствующие поля диалога.
//
Процедура ПрочитатьПараметрыПрописи()
	
	СтрокаПараметров = СтрЗаменить(Объект.ПараметрыПрописиНаРусском, ",", Символы.ПС);
	
	ПолеПрописи1наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 1));
	ПолеПрописи2наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 2));
	ПолеПрописи3наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 3));
	ПолеПрописи4наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 4));
	ПолеПрописи5наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 5));
	ПолеПрописи6наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 6));
	ПолеПрописи7наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 7));
	ПолеПрописи8наРусском = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 8));
	ДлинаДробнойЧасти     = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 9));
	
	Если ПолеПрописи4наРусском = Неопределено Тогда
		ПолеПрописи4наРусском = ПолеПрописи4наРусском.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если ПолеПрописи8наРусском = Неопределено Тогда
		ПолеПрописи8наРусском = ПолеПрописи8наРусском.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если ДлинаДробнойЧасти = Неопределено Тогда
		ДлинаДробнойЧасти = ДлинаДробнойЧасти.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура устанавливает видимость элементов управления формы, ответственных
// за установление параметров завимисомти от базовой валюты (ссылка на базовую
// валюту и коэфициент).
//
Процедура УстановитьСвойстваЭлементовГруппыЗависимойВалюты()
	
	Если Объект.ВалютаЗагружается Тогда
		Элементы.ГруппаЗависимыйКурсВалют.Доступность = Ложь;
		ФлагПараметровЗависимогоКурса = Ложь;
	Иначе
		Элементы.ГруппаЗависимыйКурсВалют.Доступность = Истина;
		ФлагПараметровЗависимогоКурса = ? (ЗависимыйКурсВалют, Истина, Ложь);
	КонецЕсли;
	
	Элементы.ПодчиненныйКурсОт.АвтоОтметкаНезаполненного = ФлагПараметровЗависимогоКурса;
	Элементы.КоэффициентПодчиненногоКурса.АвтоОтметкаНезаполненного = ФлагПараметровЗависимогоКурса;
	Элементы.ПодчиненныйКурсОт.Доступность = ФлагПараметровЗависимогоКурса;
	Элементы.КоэффициентПодчиненногоКурса.Доступность = ФлагПараметровЗависимогоКурса;
	Если Не ФлагПараметровЗависимогоКурса Тогда
		Элементы.ПодчиненныйКурсОт.ОтметкаНезаполненного = ФлагПараметровЗависимогоКурса;
		Элементы.КоэффициентПодчиненногоКурса.ОтметкаНезаполненного = ФлагПараметровЗависимогоКурса;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
// Процедура устанавливает склонение заголовков элементов формы
// хранящих за параметры прописи.
//
Процедура УстановитьСклоненияПараметровПрописи()
	
	Если ПолеПрописи4наРусском = "Женский" Тогда
		Элементы.ПолеПрописи1наРусском.Заголовок = "одна";
		Элементы.ПолеПрописи2наРусском.Заголовок = "две";
	Иначе
		Элементы.ПолеПрописи1наРусском.Заголовок = "один";
		Элементы.ПолеПрописи2наРусском.Заголовок = "два";
	КонецЕсли;
	
	Если ПолеПрописи8наРусском = "Женский" Тогда
		Элементы.ПолеПрописи5наРусском.Заголовок = "одна";
		Элементы.ПолеПрописи6наРусском.Заголовок = "две";
	Иначе
		Элементы.ПолеПрописи5наРусском.Заголовок = "один";
		Элементы.ПолеПрописи6наРусском.Заголовок = "два";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Подготавливает список выбора для подчиненной валюты таким образом,
// что бы в список не попала сама подчиненная валюта
//
Процедура ПодготовитьДанныеВыбораПодчиненнойВалюты(ДанныеВыбора, Ссылка)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ Ссылка, НаименованиеПолное
	               |ИЗ
	               |	Справочник.Валюты
	               |ГДЕ
	               |	Ссылка <> &Ссылка
	               |И
	               |	ПодчиненныйКурсОт  = Значение(Справочник.Валюты.ПустаяСсылка)
	               |УПОРЯДОЧИТЬ ПО НаименованиеПолное";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.НаименованиеПолное);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" элемента формы ПолеПрописи4наРусском
//
Процедура ПолеПрописи4наРусскомПриИзменении(Элемент)
	УстановитьСклоненияПараметровПрописи();
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" элемента формы ПолеПрописи8наРусском
//
Процедура ПолеПрописи8наРусскомПриИзменении(Элемент)
	УстановитьСклоненияПараметровПрописи();
КонецПроцедуры
