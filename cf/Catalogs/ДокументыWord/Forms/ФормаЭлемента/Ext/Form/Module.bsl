
// ТИПОВЫЕ

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Сперва удалим строки которые были удалены
	
	Для Каждого Строка Из ТекущийОбъект.ДвоичныеДанные Цикл
		Если Не Файлы.НайтиСтроки(Новый Структура("НомерСтроки", Строка.НомерСтроки)).Количество() Тогда
			ТекущийОбъект.ДвоичныеДанные.Удалить(Строка); КонецЕсли; КонецЦикла;
	
	// Затем поместим новые строки
	
	Для Каждого Строка Из Файлы Цикл
		Если ЭтоАдресВременногоХранилища(Строка.Адрес) Тогда
			
			// Запишем файл и все реквизиты в базу
			
			НовСтрока = ?(Строка.НомерСтроки, ТекущийОбъект.ДвоичныеДанные[Строка.НомерСтроки - 1], ТекущийОбъект.ДвоичныеДанные.Добавить());
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
			НовСтрока.Макет = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Строка.Адрес));
			
		ИначеЕсли Строка.НомерСтроки Тогда
			
			// Проверим чтобы имя и змена тоже не поменялись
			
			ЗаполнитьЗначенияСвойств(ТекущийОбъект.ДвоичныеДанные[Строка.НомерСтроки - 1], Строка); КонецЕсли; КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Считаем данные в таблицу
	
	Для Каждого Строка Из Объект.ДвоичныеДанные Цикл
		
		НовСтрока = Файлы.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Строка); 
		НовСтрока.Адрес = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ДвоичныеДанные.Макет", Строка.НомерСтроки - 1); КонецЦикла;
	
КонецПроцедуры

// ИНТЕРФЕЙС

&НаКлиенте
Процедура ОбновитьПомещенныйФайл(СтрокаФайл, ПомещенныйФайл)
	
	МассивНаш = СтрРазделить(ПомещенныйФайл.Имя,?(Найти(ПомещенныйФайл.Имя, "/"), "/", "\"),);
	СтрокаФайл.ИмяФайла = МассивНаш[МассивНаш.ВГраница()];
	СтрокаФайл.Адрес 	= ПомещенныйФайл.Хранение;
	
	Модифицированность = Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура ПриемФайлаСтроки(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	// Получим файл
	
	Если ТипЗнч(ПомещенныеФайлы) = Тип("Массив") И ПомещенныеФайлы.Количество() Тогда
		ОбновитьПомещенныйФайл(Файлы[ДополнительныеПараметры.ИндексСтроки], ПомещенныеФайлы[0]); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПриемНовыхФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	// Получим файлы
	
	Если ТипЗнч(ПомещенныеФайлы) = Тип("Массив") И ПомещенныеФайлы.Количество() Тогда
		Для Каждого Строка Из ПомещенныеФайлы Цикл
			ОбновитьПомещенныйФайл(Файлы.Добавить(), Строка); КонецЦикла; КонецЕсли;
	
КонецПроцедуры

// ДОБАВЛЕНИЕ ФАЙЛОВ

&НаКлиенте
Процедура МакетыИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Спросим у пользователя какой файл запихать в базу
	
	СтандартнаяОбработка = Ложь;
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Документ ворд|*.docx;*.doc";
	ДВ.МножественныйВыбор = Ложь;
	
	НачатьПомещениеФайлов(Новый ОписаниеОповещения("ПриемФайлаСтроки", ЭтаФорма, Новый Структура("ИндексСтроки", Файлы.Индекс(Файлы.НайтиПоИдентификатору(Элемент.Родитель.ТекущаяСтрока)))),,ДВ, Истина, УникальныйИдентификатор);
	
КонецПроцедуры
&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина; // Сами разберемся
	
	Если Копирование Тогда
		ПоказатьПредупреждение(,"Копирование файлов запрещено",,"Пожалейте систему");
		Возврат; КонецЕсли;
	
	// Добавлять файлы так кучаю
	
	ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВ.Фильтр =  "Документ ворд(*.docx)|*.docx|Старые документ ворд(*.doc)|*.doc";
	ДВ.МножественныйВыбор = Истина;
	
	НачатьПомещениеФайлов(Новый ОписаниеОповещения("ПриемНовыхФайлов", ЭтаФорма),,ДВ, Истина, УникальныйИдентификатор);
	
КонецПроцедуры

// ОТКРЫТИЕ ДЛЯ РЕДАКТИРОВАНИЯ

&НаКлиенте
Процедура ФайлОтредактированИЗакрыт(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Истина Тогда
		
		ПередаваемыеФайлы = Новый Массив;
		Описание = Новый ОписаниеПередаваемогоФайла(ДополнительныеПараметры.ПолученныйФайл.Имя);
		ПередаваемыеФайлы.Добавить(Описание);
		
		НачатьПомещениеФайлов(Новый ОписаниеОповещения("ПриемФайлаСтроки", ЭтаФорма, ДополнительныеПараметры), ПередаваемыеФайлы,,Ложь, УникальныйИдентификатор); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ЗапущеноПриложение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	ОткрытьФорму("Справочник.ДокументыWord.Форма.ОжиданиеРедактированияФайла", Новый Структура("ИмяФайлаОжидания",  ДополнительныеПараметры.ПолученныйФайл.Имя),
		ЭтаФорма,,,,
		Новый ОписаниеОповещения("ФайлОтредактированИЗакрыт", ЭтаФорма, ДополнительныеПараметры), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
&НаКлиенте
Процедура ОткрытьФайлНаРедактирование(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("ПолученныйФайл", ПолученныеФайлы[0]);
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ЗапущеноПриложение", ЭтаФорма, ДополнительныеПараметры), ПолученныеФайлы[0].Имя,, Истина); КонецЕсли;
				
КонецПроцедуры
&НаКлиенте
Процедура ПолученКаталогВременныхФайлов(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ИмяКаталогаВременныхФайлов) Тогда
		
		текДанные = Файлы[ДополнительныеПараметры.ИндексСтроки];
		 		
		// Достанем сам файл
		
		ПередаваемыеФайлы = Новый Массив;
		Описание = Новый ОписаниеПередаваемогоФайла(ТекДанные.ИмяФайла, ТекДанные.Адрес);
		ПередаваемыеФайлы.Добавить(Описание);
		
		НачатьПолучениеФайлов(Новый ОписаниеОповещения("ОткрытьФайлНаРедактирование", ЭтаФорма, ДополнительныеПараметры), ПередаваемыеФайлы, ИмяКаталогаВременныхФайлов, Ложь);
		ПоказатьОповещениеПользователя("Открываем файл",,ТекДанные.ИмяФайла);
		
	Иначе
		ПоказатьПредупреждение(,"не удалось определить каталог временных файлов"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура МакетыИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПолученКаталогВременныхФайлов", ЭтаФорма, Новый Структура("ИндексСтроки", Файлы.Индекс(Файлы.НайтиПоИдентификатору(Элемент.Родитель.ТекущаяСтрока)))));
		
КонецПроцедуры
