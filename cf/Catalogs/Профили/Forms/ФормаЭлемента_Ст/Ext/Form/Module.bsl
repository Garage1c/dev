
&НаКлиенте
Перем стЗначение, ОбновитьПредставление;

Функция ПолучитьПердставлениеКоллекции(Коллекция)
	
	стр = "";
	Для Каждого Элемент Из Коллекция Цикл стр = Стр + ?(стр = "","",", ") + Строка(Элемент.Значение) КонецЦикла;
	
	Возврат стр;
	
КонецФункции

&НаСервере
Процедура УстановитьФильтрСпискаПользователей()
	
	СписокПользователей.Параметры.УстановитьЗначениеПараметра("Профиль", Объект.Ссылка);
	Элементы.ГруппаСпискаПользователей.Видимость = Не Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьТабличныеЧастиВДереве(Дерево)
	
	// Если встречает таблицу тогда строку переносит в конец и удаляет представление чтобы не видно было
	
	Для Каждого Строка Из Дерево.Строки Цикл
		
		Если Строка.ЭтоТаблица = Истина И ЗначениеЗаполнено(Строка.Значение) Тогда
			
			НовСтрока = Строка.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
			
			Для Каждого ПодчСтрока Из Строка.Строки Цикл ПодчСтрока.Представление = "" КонецЦикла; 
			//Строка.Значение = ПолучитьПердставлениеКоллекции(Строка.Строки)
			Строка.Значение = Неопределено;
			
		Иначе
			ОбработатьТабличныеЧастиВДереве(Строка); КонецЕсли; КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьФильтрСпискаПользователей();
	
	// Прочитаем настройки профиля
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	
	|	План.Ссылка 				Настройка, 
	|	План.Ссылка.Наименование 	Представление, 
	|	План.ТипЗначения, 
	|	План.ЭтоГруппа, 
	|	План.ЭтоТаблица,
	|	Проф.Значение,
	|	ВЫБОР КОГДА Проф.Настройка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ Заполнено
	|ИЗ
	|	ПланВидовХарактеристик.НастройкиПрофилей План
	
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Профили.Настройки Проф
	|ПО					План.Ссылка = Проф.Настройка И
	|					Проф.Ссылка = &Ссылка
	
	|ГДЕ НЕ ПометкаУдаления
	|ИТОГИ МАКСИМУМ(Представление), МАКСИМУМ(ЭтоГруппа) ПО Настройка ИЕРАРХИЯ");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	// Загрузим
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	// Удалим нижнии строки
	
	КонвертацияТипов.НижниеОдинаковыеСтрокиДереваЗаменить(Дерево, "Настройка");
	
	// Теперь значения табличных частей опустим вниз
	
	ОбработатьТабличныеЧастиВДереве(Дерево);
	
	// Вытащим в форму
	
	КонвертацияТипов.ЗагрузитьДеревоВДанныеФормыДерево(Дерево, Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСохранениеНастройки(ТекущийОбъект, текЭлементы)
	
	Для Каждого Элемент Из текЭлементы Цикл
		
		Если ЗначениеЗаполнено(Элемент.Значение) Тогда
			ЗаполнитьЗначенияСвойств(ТекущийОбъект.Настройки.Добавить(), Элемент); КонецЕсли;
		
		ДобавитьСохранениеНастройки(ТекущийОбъект, Элемент.ПолучитьЭлементы()); КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Очистим настройки
	
	ТекущийОбъект.Настройки.Очистить();
	ТекущийОбъект.НастройкиБезТипа.Очистить();
	
	// Сохраним настройки
	
	ДобавитьСохранениеНастройки(ТекущийОбъект, Настройки.ПолучитьЭлементы());
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗначениеПриИзменении(Элемент)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
	
		ТекДанные.Изменилось 	= Истина;
		Модифицированность 		= Истина;
		
		// если это таблица тогда при изменении добавим новую строку или удалим удалим текущюю
		
		Если ТекДанные.ЭтоТаблица И ЗначениеЗаполнено(ТекДанные.Представление) И стЗначение <> ТекДанные Тогда
			
			НовСтрока = ТекДанные.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекДанные);
			НовСтрока.Представление = "";
			
			//ТекДанные.Значение = ПолучитьПердставлениеКоллекции(ТекДанные.ПолучитьЭлементы()); 
			ТекДанные.Значение = Неопределено; 
			Элементы.Настройки.Развернуть(Элементы.Настройки.ТекущаяСтрока); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередНачаломИзменения(Элемент, Отказ)
	
	текДанные = Элементы.Настройки.ТекущиеДанные;
	
	Если текДанные.ЭтоГруппа Тогда
			Отказ 		= Истина
	Иначе	стЗначение 	= текДанные.Значение КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Настройки.ТекущийЭлемент = Элементы.НастройкиПредставление Тогда
		ПоказатьЗначение(,Элементы.Настройки.ТекущиеДанные.Настройка); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	//Если Не ТекДанные.ЭтоТаблица Или Не ПустаяСтрока(ТекДанные.Представление) Тогда
	
	Если ТекДанные.ЭтоТаблица И ПустаяСтрока(ТекДанные.Представление) Тогда
		ОбновитьПредставление = Истина;
	Иначе
		Отказ 					= Истина;
		ТекДанные.Значение 		= Неопределено;
		ТекДанные.Изменилось 	= Истина; КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ТекДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		Если ОбновитьПредставление = Истина И ТекДанные.ЭтоТаблица Тогда
			
			хзЧеПисать = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьПредставление = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьФильтрСпискаПользователей();
	
КонецПроцедуры
