
Функция ПолучитьОсновногоКонтрагентаПартнера(Партнер) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка
	|ИЗ
	|	Справочник.Контрагенты
	|ГДЕ
	|	Партнер = &Ссылка
	|УПОРЯДОЧИТЬ ПО ЗначениеПоУмолчанию Убыв
	|");
	Запрос.УстановитьПараметр("Ссылка", Партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Контрагенты.ПустаяСсылка();

КонецФункции

Функция НайтиКонтрагентаРаботающегоСОрганизацией(Ссылка, Организация) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ  
	|	Ссылка	Контрагент
	|ИЗ
	|	Справочник.Контрагенты.Организации
	|ГДЕ
	|	Ссылка.Партнер = &Ссылка " + ?(ЗначениеЗаполнено(Организация), " И Организация = &Организация", "") + "
	|УПОРЯДОЧИТЬ ПО Ссылка.ЗначениеПоУмолчанию
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьКоличествоКонтрагентовПартнера(Ссылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Спр2.Ссылка) Количество
	|
	|ИЗ
	|	Справочник.Партнеры Спр1
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Контрагенты Спр2
	|		ПО  
	|		Спр1.Ссылка = Спр2.Партнер
	|
	|ГДЕ
	|	Спр1.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО Спр1.Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Количество;
	КонецЕсли;
	
	Возврат 0;

КонецФункции
Функция ПолучитьЭлектроннуюПочтуПартнера(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Представление ИЗ РегистрСведений.ПредставлениеКонтактнойИнформации ГДЕ Объект = &Ссылка и Вид В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочты)) УПОРЯДОЧИТЬ ПО ЗначениеПоУмолчанию Убыв");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда Возврат Выборка.Представление; КонецЕсли;
	
	Возврат "";
	
КонецФункции
&НаСервере
//Осуществляет расширенный поиск партнеров
//Параметры:
//СписокПартнеров - таблица значений, заполняемая результатми поиска,
//Возвращаемое значение:
//Неопределено, если поиск произведен успешно
//Текст сообщения пользователю, если члишком много результаов или ничего не найдено
//
Функция НайтиПартнеров(СтрокаПоиска, СписокПартнеров) Экспорт

	//настроить параметры поиска
	мОбластьПоиска = Новый Массив;
	РазмерПорции = 200;
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска,РазмерПорции);
	мОбластьПоиска.Добавить(Метаданные.Справочники.Партнеры);
	мОбластьПоиска.Добавить(Метаданные.Справочники.Контрагенты);
	мОбластьПоиска.Добавить(Метаданные.Справочники.КонтактныеЛицаПартнеров);
	мОбластьПоиска.Добавить(Метаданные.Справочники.СделкиСКлиентами);
	мОбластьПоиска.Добавить(Метаданные.Документы.ЗаказКлиента);
	мОбластьПоиска.Добавить(Метаданные.Документы.ВозвратТоваровОтКлиента);
	мОбластьПоиска.Добавить(Метаданные.Документы.РеализацияТоваровУслуг);
	мОбластьПоиска.Добавить(Метаданные.Документы.СоглашениеСКлиентом);
	мОбластьПоиска.Добавить(Метаданные.Документы.СоглашениеСПоставщиком);
	мОбластьПоиска.Добавить(Метаданные.Документы.ЗаказПоставщику);
	СписокПоиска.ОбластьПоиска = мОбластьПоиска;

	СписокПоиска.ПерваяЧасть();

	//возврат, если поиск не результативен
	Если СписокПоиска.СлишкомМногоРезультатов() Тогда
		Возврат НСтр("ru = 'Слишком много результатов, уточните запрос.'");
	КонецЕсли;

	КоличествоЭлементов = СписокПоиска.ПолноеКоличество();
	Если КоличествоЭлементов = 0 Тогда
		Возврат НСтр("ru = 'Ничего не найдено'");
	КонецЕсли;//возврат, если поиск не результативен

	//сформировать список найденных партнеров
	СписокПартнеров.Очистить();
	НачальнаяПозиция = 0;
	КонечнаяПозиция = ?(КоличествоЭлементов>РазмерПорции,РазмерПорции,КоличествоЭлементов)-1;
	ЕстьСледующаяПорция = Истина;

	//обработать по порциям результаты ППД
	Пока ЕстьСледующаяПорция Цикл
		Для СчетчикЭлементов = 0 По КонечнаяПозиция Цикл
			
			//сформировать элемент результата
			Элемент = СписокПоиска.Получить(СчетчикЭлементов);
			ЭлементСсылка = Элемент.Значение.Ссылка;
			Основание = Элемент.Метаданные.ПредставлениеОбъекта + " """ +
				Элемент.Представление + """ - " + Элемент.Описание;
			Если Элемент.Метаданные = Метаданные.Справочники.Партнеры Тогда
				Партнер = Элемент.Значение;
			ИначеЕсли Элемент.Метаданные = Метаданные.Справочники.КонтактныеЛицаПартнеров Тогда
				Партнер = Элемент.Значение.Владелец;
			ИначеЕсли Не ЗначениеЗаполнено(Элемент.Значение.Партнер) Тогда
				Продолжить;
			Иначе
				Партнер = Элемент.Значение.Партнер;
			КонецЕсли;

			//добавить элемент, если партнера еще нет в списке найденных
			Если СписокПартнеров.Найти(Партнер,"Партнер") = Неопределено Тогда
				//ограничить количество возвращаемых партнеров
				Если СписокПартнеров.Количество() > 100 Тогда
					Возврат НСтр("ru = 'Слишком много результатов, уточните запрос.'");
				Иначе //ограничить количество возвращаемых партнеров
					Запись = СписокПартнеров.Добавить();
					Запись.Партнер = Партнер;
					Запись.Основание = Основание;
					Запись.Ссылка = ЭлементСсылка;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		НачальнаяПозиция = НачальнаяПозиция + РазмерПорции;
		ЕстьСледующаяПорция = (НачальнаяПозиция < КоличествоЭлементов - 1);
		Если ЕстьСледующаяПорция Тогда
			КонечнаяПозиция = 
			?(КоличествоЭлементов > НачальнаяПозиция + РазмерПорции, РазмерПорции,
			КоличествоЭлементов - НачальнаяПозиция) - 1;
			СписокПоиска.СледующаяЧасть();
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;

КонецФункции

Функция ПолучитьОсновногоМенеджераПартнера(Дата, Партнер) Экспорт
	
	Если Дата = ТекущаяДата() Тогда Возврат Партнер.ОсновнойМенеджер;
	Иначе
		Запрос = Новый Запрос ("ВЫБРАТЬ Менеджер ИЗ РегистрСведений.ОсновнойМенеджерПартнера.СрезПоследних(&Период, Партнер = &Партнер)");
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("Партнер", Партнер);

		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Менеджер;
		Иначе
			Возврат Партнер.ОсновнойМенеджер;
		КонецЕсли;
	КонецЕсли;

КонецФункции

