#Область API_стандарт

// Обязательные функции для API

Функция API_URLОбновленияНаСайте() Экспорт 		Возврат "/api/documents/update" КонецФункции
Функция API_СайтОбъекта(Ссылка) Экспорт Возврат Неопределено КонецФункции
Функция API_ПолучитьОбъект(Ссылка, ДополнительныеПараметры = Неопределено) Экспорт
	
	//  _______________________________
	// |                               |
	// |¸.•*´¨`*•.[̲̲̅̅A̲̅P̅I̲̲̅̅]¸.•*´¨`*•.|	Возвращает (тип структура) объект для апи
	// |_______________________________|
	
	
	Ссылки = Новый Массив;
	Ссылки.Добавить(Ссылка);
	
	Возврат КонвертацияТипов.ПолучитьСтруктуруИзСТрокиТаблицыЗначений(API_ПолучитьТаблицу(Ссылки, ДополнительныеПараметры));
	
КонецФункции
Функция API_ПолучитьТаблицу(Ссылки = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	//  _______________________________
	// |                               |
	// |¸.•*´¨`*•.[̲̲̅̅A̲̅P̅I̲̲̅̅]¸.•*´¨`*•.|	Возвращает таблицу значений с объектами для апи
	// |_______________________________|
	
	Перем Сайт, Расширение, ДатаИзменения;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ДополнительныеПараметры.Свойство("Сайт", 			Сайт);
		ДополнительныеПараметры.Свойство("ДатаИзменения", 	ДатаИзменения);
		ДополнительныеПараметры.Свойство("extension", 		Расширение); КонецЕсли;
	
	Запрос = Новый Запрос(СтрШаблон("
	|ВЫБРАТЬ 	Ссылка guid, Расширение extension, Описание text, ДатаИзменения changesFromDate
	|ИЗ 		Справочник.ИнструкцииНоменклатуры
	|ГДЕ 		Не ПометкаУдаления %1 %2 %3",
	
	?(Ссылки 		= Неопределено, "", " И Ссылка В(&Ссылки)"),
	?(Расширение 	= Неопределено, "", " И Адресация.Адресат = &Адресат"),
	?(ДатаИзменения = Неопределено, "", " И ДатаИзменения >= &changesFromDate")));
	
	Запрос.УстановитьПараметр("Ссылки",			Ссылки);
	Запрос.УстановитьПараметр("Сайт", 			Сайт);
	Запрос.УстановитьПараметр("Расширение", 	Расширение);
	Запрос.УстановитьПараметр("ДатаИзменения", 	ДатаИзменения);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти
