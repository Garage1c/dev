////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// belova 08.12.2014 { отключаем старый механизм КИ
		// Обработчик механизма "Контактная информация"
		// УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.Ссылка);
	// } belova 08.12.2014
	
	Если ЗначениеЗаполнено(Параметры.Владелец) Тогда
		//Объект.Владелец = Параметры.Владелец;	
		ВладелецКонтакта = Параметры.Владелец;	
		
		Если ТипЗнч(ВладелецКонтакта) = ТИп("СправочникСсылка.Партнеры") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Контрагенты.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Партнер = &Партнер";
			Запрос.УстановитьПараметр("Партнер", ВладелецКонтакта);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда 
				ВладелецКонтакта = Выборка.Ссылка; 
			КонецЕсли;
		КонецЕсли;
		   		
		Объект.Владелец = ВладелецКонтакта;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	// belova 08.12.2014 { отключаем старый механизм КИ
		// Обработчик механизма "Контактная информация"
		//	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка, Отказ);
	// } belova 08.12.2014
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УправлениеКонтактнойИнформациейКлиент.ПриНачалеРедактирования(ЭтаФорма, Объект.Ссылка, НоваяСтрока, Копирование);

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Объект.Ссылка, Модифицированность, СтандартнаяОбработка);
КонецПроцедуры
Функция ЗаписатьЭтотОбъект()
	
	Попытка
		Записать();
	Исключение
		Сообщить("Ошибка сохранения данных: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;
	
КонецФункции
 
&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Объект.Ссылка.Пустая() Тогда
	Отказ = Истина;
	Ответ = Вопрос("Данные еще не записаны" + Символы.ПС + 
					"Переход к заполнению Контактной Информации возможен только после записи данных" + Символы.ПС +
					"Данные будут записаны", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
	    Возврат;
	КонецЕсли;
	
	ЗаписатьЭтотОбъект();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередУдалением(Элемент, Отказ)
	УправлениеКонтактнойИнформациейКлиент.ПередУдалением(ЭтаФорма, Объект.Ссылка, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	 Оповестить("ПриЗакрытииФормыЭлемента", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ТекстКонтактнойИнформацииНажатие(Элемент)
			
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,"Необходимо сперва сохранить контактное лицо",,"Сообщение!");
		
	Иначе
	
		//Вставить содержимое обработчика.
		//ОткрытьФорму("Обработка.КонтактнаяИнформация.Форма", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		ОткрытьФорму("Обработка.КонтактнаяИнформация.Форма.ФормаГлавная", Новый Структура("Контакт, ЗакрыватьПриЗакрытииВладельца", Объект.Ссылка, Истина), ЭтаФорма, УникальныйИдентификатор); КонецЕсли;
	

КонецПроцедуры
