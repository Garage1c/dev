&НаКлиенте
Перем мТекстHTML_Body;

// HTML

&НаКлиенте
Процедура ОбновитьHTML()
	
	HTML = "
	|<html>
	|<head>
	|<meta charset=""utf-8"">
	|</head>
	|<body bgcolor=""#FCFAEB"">
	|" + мТекстHTML_Body + "
	|</body>
	|</html>";
	
КонецПроцедуры
&НаСервере
Функция ПолучитьТекстBody()
	
	Текст = "";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Кар.Картинка КАК 			Ссылка, 
	|	Рем.Ссылка 					Ремонт, 
	|	Рем.Партнер					Партнер, 
	//|	Кар.Картинка.Картинка 		Картинка, 
	|	Кар.Картинка.Наименование 	Наименование,
	|	Кар.Картинка.КОд 			КОд,
	|	Кар.Картинка.Расширение		Расширение
	|ИЗ 
	|	БизнесПроцесс.РемонтИнструмента Рем
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	БизнесПроцесс.РемонтИнструмента.Картинки Кар
	|ПО
	|	Рем.Ссылка = Кар.Ссылка
	|
	|ГДЕ 
	|	Рем.Ссылка В(&Ремонты)
	|ИТОГИ ПО
	|	Ремонт
	|");
	
	Запрос.УстановитьПараметр("Ремонты", РемонтыСписок);
	
	АдресУдалить 	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Удалить);
	АдресДобавить 	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Добавить);
	АдресСохранить	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.СохранитьФайл);
	
	ПутьКОблаку = КэшируемыеФункции.ПолучитьПутьКОблакуHTTP();
	
	ВыборкаРемонтов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаРемонтов.Следующий() Цикл
	
		Выборка = ВыборкаРемонтов.Выбрать();
		
		Текст = Текст + "
		|<ul class=""tree"">
		|<h3>" + ВыборкаРемонтов.Ремонт + " <button value='Добавить картинку' id='" + XMLСтрока(ВыборкаРемонтов.Ремонт) +"'><img src='" + АдресДобавить + "' alt=""Добавить"" height=""16"" width=""16""></button></h3>
		|";
		
		Инд = -1;
		Пока Выборка.Следующий() Цикл Если Выборка.Ссылка = null Тогда Прервать; КонецЕсли; Инд = Инд + 1;
			
			id = ЗначениеВСтрокуВнутр(Новый Структура("Ремонт, Инд, ИмяФайла, Картинка", Выборка.Ремонт, Инд, Выборка.Наименование, Выборка.Ссылка));
			ПредставлениеЗаявки = Строка(Выборка.Ремонт) + "    " + Строка(Выборка.Партнер) + "]";
			
			//Адрес = ПоместитьВоВременноеХранилище(Выборка.Картинка.Получить());
			Текст = Текст + "
						|<li>" + Выборка.Наименование + "  
						|<button value='Сохранить картинку' id='" + id +"'><img src='" + АдресСохранить + "' alt=""Сохранить""></button>
						|<button value='Удалить картинку' id='" + id +"'><img src='" + АдресУдалить + "' alt=""Удалить""></button>
						|<br>
						//|<img src='" + Адрес + "' alt='" + ПредставлениеЗаявки + "' width=""100%"">
						|<img src='" + ПутьКОблаку + "/service/" + Выборка.Код + "." + Выборка.Расширение + "' alt='" + ПредставлениеЗаявки + "' width=""100%"">
						|</li>";
		КонецЦикла;
					
		Текст = Текст + "
		|</ul>";
		
	КонецЦикла;
	
	Возврат Текст;
	
КонецФункции

// ТИПОВЫЕ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РемонтыСписок = Параметры.РемонтыСписок;
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мТекстHTML_Body = ПолучитьТекстBody();
	ОбновитьHTML();
	
КонецПроцедуры


// УПРАВЛЕНИЕ HTML

&НаСервере
Функция ЗаписатьСправочникКартинка(СправочникКартинка)
	
	Попытка
		СправочникКартинка.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Ошибка при помещении картинки в базу данных " + СправочникКартинка.Наименование + "
									|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;	
	
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция ОбновитьНовуюКартинку(idРемонта, ИмяФайла, Адрес)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НовСправочник = Справочники.КартинкиРемонта.СоздатьЭлемент();
	НовСправочник.Наименование 	= ИмяФайла;
	НовСправочник.Картинка 		= Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес));
	
	НачатьТранзакцию();
	
	Если Не ЗаписатьСправочникКартинка(НовСправочник) Тогда
		ОтменитьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);
		Возврат Ложь;
	КонецЕсли;
	
	РемонтОбъект = БизнесПроцессы.РемонтИнструмента.ПолучитьСсылку(Новый УникальныйИдентификатор(idРемонта)).ПолучитьОбъект();
	РемонтОбъект.Картинки.Добавить().Картинка = НовСправочник.Ссылка;
	
	Попытка
		РемонтОбъект.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОтменитьТранзакцию();
		ОбщиеФункции.СообщитьТекст("Ошибка при помещении картинки в заявку " + ИмяФайла + "
									|" + стрОшибки);
		УстановитьПривилегированныйРежим(Ложь); 
		Возврат Ложь;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция УдалитьКартинку(ЗашифрованноеЗначениеВКнопке)
	
	Структура = ПолучитьСтруктуруНаСеревере(ЗашифрованноеЗначениеВКнопке);
	
	Если Структура = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РемонтОбъект 	= Структура.Ремонт.ПолучитьОбъект();
	КартинкаСсылка 	= РемонтОбъект.Картинки[Структура.Инд].Картинка;
	РемонтОбъект.Картинки.Удалить(Структура.Инд);
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Попытка
		РемонтОбъект.Записать();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОтменитьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);
		ОбщиеФункции.СообщитьТекст("Ошибка при удалении картинки из заявки 
									|" + стрОшибки);
		Возврат Ложь;
	КонецПопытки;
	
	СпрОбъект = КартинкаСсылка.ПолучитьОбъект();
	
	Попытка
		СпрОбъект.Удалить();
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОтменитьТранзакцию();
		ОбщиеФункции.СообщитьТекст("Ошибка при удалении картинки из базы 
									|" + стрОшибки);
		УстановитьПривилегированныйРежим(Ложь);
		Возврат Ложь;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруНаСеревере(ЗашифрованноеЗначениеВКнопке)
	
	Попытка
		Структура = ЗначениеИзСтрокиВнутр(ЗашифрованноеЗначениеВКнопке);
	Исключение
		стрОшибки = ОписаниеОшибки();
		ОбщиеФункции.СообщитьТекст("Не удалось распознать картинку в тексте
									|" + стрОшибки);
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Структура;
	
КонецФункции
&НаСервере
Функция ПолучитьКартинкусСервера(КартинкаСсылка)
	
	Возврат ПоместитьВоВременноеХранилище(КартинкаСсылка.Картинка.Получить());
	
КонецФункции


&НаКлиенте
Процедура HTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ДанныеСобытия.Button <> Неопределено И ДанныеСобытия.Button.type = "button" Тогда
		
		// Добавить файл
		
		Если ДанныеСобытия.Button.firstChild <> Неопределено И ДанныеСобытия.Button.firstChild.alt = "Добавить" Тогда
		
			ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		
			Если ДВ.Выбрать() Тогда
				
				стрОшибки 	= "";
				ИмяФайла 	= Сред(ДВ.ПолноеИмяФайла, СтрДлина(ДВ.Каталог) + 1);
				Адрес = ПоместитьВоВременноеХранилище(Новый Картинка(ДВ.ПолноеИмяФайла));
				
				Если ОбновитьНовуюКартинку(ДанныеСобытия.Button.id, ИмяФайла, Адрес) Тогда
					
					мТекстHTML_Body = ПолучитьТекстBody();
					ОбновитьHTML();
					
				КонецЕсли;
			КонецЕсли;
			
		// Удалить файл
			
		ИначеЕсли 	ДанныеСобытия.Button.firstChild <> Неопределено И 
					ДанныеСобытия.Button.firstChild.alt = "Удалить" И
					Вопрос("Удалить картинку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да И
					УдалитьКартинку(ДанныеСобытия.Button.id) Тогда
					
			мТекстHTML_Body = ПолучитьТекстBody();
			ОбновитьHTML();
			
		// Записать файл
			
		ИначеЕсли 	ДанныеСобытия.Button.firstChild <> Неопределено И 
					ДанныеСобытия.Button.firstChild.alt = "Сохранить" Тогда
					
			Структура = ПолучитьСтруктуруНаСеревере(ДанныеСобытия.Button.id);
			
			Файл = Новый Файл(Структура.ИмяФайла);
			
			ДВ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
			ДВ.ПолноеИмяФайла 	= Файл.ПолноеИмя;
			ДВ.Расширение 		= Файл.Расширение;
			
			Если Дв.Выбрать() Тогда
				
				текКартинка = ПолучитьИзВременногоХранилища(ПолучитьКартинкусСервера(Структура.Картинка));
				
				Попытка
					текКартинка.Записать(ДВ.ПолноеИмяФайла);
				Исключение
					стрОшибки = ОписаниеОшибки();
					ОбщиеФункции.СообщитьТекст("Ошибка при записи картинки
							|" + стрОшибки);
					Возврат;
				КонецПопытки;
				
				ОбщиеФункции.СообщитьТекст("Картинка записана " + ДВ.ПолноеИмяФайла);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	
	
КонецПроцедуры

