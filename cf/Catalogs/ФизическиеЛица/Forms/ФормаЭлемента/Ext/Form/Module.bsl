////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.Ссылка);
	Лимит = ПолучитьТекущийЛимит();
	ОбновитьАватар();
	
	Если НЕ ЗначениеЗаполнено(Объект.ГрузополучательИПР) Тогда
		Объект.ГрузополучательИПР = ПредопределенноеЗначение("Справочник.Грузополучатели.ПустаяСсылка");
	ИначеЕсли ТипЗнч(Объект.ГрузополучательИПР)<>Тип("СправочникСсылка.Грузополучатели") Тогда
		Элементы.ГрузополучательИПР.ВыбиратьТип = Истина;
	КонецЕсли;
	ФункцииФормДокументовСервер.УстановитьСвязиГрузополучателя(Объект,Элементы,Новый Структура("ГрузополучательИПР","Объект.Контрагент"));
КонецПроцедуры

&НаСервере
Процедура ОбновитьАватар()
	
    ВыборкаАватар = Справочники.АватарыМенеджеров.Выбрать(,Объект.Ссылка);
	Если ВыборкаАватар.Следующий() Тогда
	Аватар = ПолучитьНавигационнуюСсылку(ВыборкаАватар.Ссылка,"ХранилищеБинарныхДанных");
	//Аватар = ПоместитьВоВременноеХранилище(ВыборкаАватар.ХранилищеБинарныхДанных.Получить(), УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)

	//Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка, Отказ);
	
	// Установим штрих код
	Если Не ТекущийОбъект.Ссылка.Пустая() И Не ШтрихКоды.УстановитьШтрихКод(ШтрихКод, ТекущийОбъект.Ссылка) Тогда
		Отказ = Истина; Возврат; КонецЕсли;
		
	ОбъектЗаписан = Истина;
	                
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОНТАКТНАЯ ИНФОРМАЦИЯ

&НаКлиенте
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Объект.Ссылка, Модифицированность, СтандартнаяОбработка);
	           
КонецПроцедуры
&НаКлиенте

Процедура КонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	       
	УправлениеКонтактнойИнформациейКлиент.ПриНачалеРедактирования(ЭтаФорма, Объект.Ссылка, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьЭтотОбъект()
	
	Попытка
		Записать();
	Исключение
		Сообщить("Ошибка сохранения данных: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;
	
КонецФункции
&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Объект.Ссылка.Пустая() Тогда
	Отказ = Истина;
	Ответ = Вопрос("Данные еще не записаны" + Символы.ПС + 
					"Переход к заполнению Контактной Информации возможен только после записи данных" + Символы.ПС +
					"Данные будут записаны", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
	    Возврат;
	КонецЕсли;
	
	ЗаписатьЭтотОбъект();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередУдалением(Элемент, Отказ)
	УправлениеКонтактнойИнформациейКлиент.ПередУдалением(ЭтаФорма, Объект.Ссылка, Отказ);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Прочитаем штрих код
	
	мШтрихКоды = ШтрихКоды.ПолучитьШтрихКодыОбъекта(ТекущийОбъект.Ссылка);
	Если мШтрихКоды.Количество() Тогда ШтрихКод = мШтрихКоды[0]; КонецЕсли;
	
КонецПроцедуры

// ШТРИХ КОД

&НаСервере
Процедура СгенерироватьШтрихКодНаСервере()

	ШтрихКод = ШтрихКоды.СгенерироватьШтрихКод(Объект.Ссылка);
	Модифицированность = Истина;
	
КонецПроцедуры
&НаКлиенте
Процедура СгенерироватьШтрихКод(Команда)
	
	СгенерироватьШтрихКодНаСервере();
		
КонецПроцедуры
&НаСервере
Процедура ПечатьШтрихКодНаСервере(ТабличныйДокумент)

	Макет = Справочники.ФизическиеЛица.ПолучитьМакет("ШтрихКод");
	
	Макет.Параметры.ФИО = Объект.Наименование;
	
	ШтрихКоды.УстановитьШтрихКодВМакете(Макет, ШтрихКод, Ложь);
	
	ТабличныйДокумент.Вывести(Макет);
	
КонецПроцедуры
&НаКлиенте
Процедура ПечататьШтрихКод(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	ПечатьШтрихКодНаСервере(ТабДок);

	ФункцииФормДокументов.УстановитьНастройкиТабличногоДокумента(ТабДок);
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", Новый Структура("Инициатор", Объект.Ссылка),,Истина);
	ОткрытьФорму("Отчет.ОтчетПоЛимитам.Форма.ФормаОтчета", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры


&НаСервере
Функция ПолучитьТекущийЛимит()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ЛимитыОбороты.СуммаПриход,
					|	ЛимитыОбороты.СуммаРасход,
					|	ЛимитыОбороты.СуммаПриход - ЛимитыОбороты.СуммаРасход КАК ТекущийЛимит
					|ИЗ
					|	РегистрНакопления.Лимиты.Обороты(, , , Инициатор = &Ссылка) КАК ЛимитыОбороты";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ТекущийЛимит;		
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Объект.ГрузополучательИПР = ПредопределенноеЗначение("Справочник.Грузополучатели.ПустаяСсылка");
КонецПроцедуры



