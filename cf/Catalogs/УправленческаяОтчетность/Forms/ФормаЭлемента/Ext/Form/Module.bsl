
&НаСервере
Процедура ОбновитьПараметрыДинамическихСписоков()
	
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(Состав, "Владелец", Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	Элементы.Состав.ТолькоПросмотр 		= Объект.Ссылка.Пустая();
	Элементы.ДатаОкончания.Видимость 	= Объект.ЭтоОстатки;
	Элементы.Период.Видимость 			= Обороты;
	Элементы.КнопкаЗаписать.Видимость	= Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьПараметрыДинамическихСписоков();
	УправлениеВидимостьюДоступностью();
	Элементы.Состав.Обновить();
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Объект.ЭтоОстатки Тогда 
		ТекущийОбъект.ДатаНачала 	= Период.ДатаНачала;
		ТекущийОбъект.ДатаОкончания = Период.ДатаОкончания; КонецЕсли;
	
	ТекущийОбъект.ОбъединящиеЯчейки.Очистить();
	//КонвертацияТипов.ЗагрузитьСписокЗначенийВТаблицу(ТекущийОбъект.ОбъединящиеЯчейки, ОбъединящиеЯчейки, "Ячейка");
	
	// Сохраним макет
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Вывести(Макет);
	ТекущийОбъект.Макет = Новый ХранилищеЗначения(ТаблДок);
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Обороты = Не Объект.ЭтоОстатки;
	Период.ДатаНачала 		= Объект.ДатаНачала;
	Период.ДатаОкончания 	= Объект.ДатаОкончания;
	
	ОбновитьСписокПрошлыхпериодов();
	ЗагрузитьМакет();
	
//	ОбъединящиеЯчейки.ЗагрузитьЗначения(Объект.ОбъединящиеЯчейки.Выгрузить().ВыгрузитьКолонку("Ячейка"));
	
	ОбновитьПараметрыДинамическихСписоков();
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

#Область Макет

&НаСервере
Процедура ЗагрузитьМакет()
	
	Запрос = Новый Запрос("ВЫБРАТЬ Макет ИЗ Справочник.УправленческаяОтчетность ГДЕ Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СохрМакет = Выборка.Макет.Получить();
		Если СохрМакет <> Неопределено тогда
			Макет.Вывести(СохрМакет); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Получение_результата

&НаСервере
Функция ПолучитьРезультатыНаСервере(ТекЗапись, ТекРезультат)
	
	ТекРезультат = ТекЗапись.Результат;
	Возврат Справочники.ЗаписиУО.ПолучитьРезультат(ТекЗапись, Период.ДатаНачала, ?(период.ДатаОкончания = '00010101', Неопределено, КонецДня(период.ДатаОкончания)));
	
КонецФункции
&НаСервере
Функция ЗаписатьНовыйПоказатель(текЗапись, Результат, АвтоРезультат)
	
	Возврат текЗапись.ПолучитьОбъект().ЗаписатьНовыйПоказатель(Результат, АвтоРезультат);
	
КонецФункции
&НаКлиенте
Процедура ПолучитьРезультат(Команда)
	
	ТекРезультат	= 0;
	ТекЗапись 		= Элементы.Состав.ТекущаяСтрока;
	
	Если ТекЗапись <> Неопределено Тогда
		
		Результат = ПолучитьРезультатыНаСервере(ТекЗапись, ТекРезультат);
		Если Результат <> Неопределено Тогда
			
			Если ТекРезультат = Результат Тогда
				ПоказатьОповещениеПользователя("нет изменений",,"Результат точно такой же, данные не изменены", БиблиотекаКартинок.Отмена);
			ИначеЕсли ЗаписатьНовыйПоказатель(ТекЗапись, Результат, Результат) Тогда
				Элементы.Состав.Обновить();
				ПоказатьОповещениеПользователя("Сохранение резульата",,"Результат сохранен", БиблиотекаКартинок.Сохранить); КонецЕсли; КонецЕсли; КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЭтоОстаткиПриИзменении(Элемент)
	
	Обороты = Не Объект.ЭтоОстатки;
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПриИзменении(Элемент)
	
	Объект.ЭтоОстатки = Не Обороты;
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОтчетЗаписи(ТекЗапись)
	
	Если 	Не ТекЗапись.ЭтоГруппа И 
			Не ТекЗапись.Источник.Пустая() И
			Не ТекЗапись.Источник.ОтчетРасшифровка.ЭтоГруппа И
			НЕ ТекЗапись.Источник.ОтчетРасшифровка.Пустая() Тогда
			
		Возврат ТекЗапись.Источник.ОтчетРасшифровка; КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ПоказатьОтчет(Команда)
	
	ТекЗапись = Элементы.Состав.ТекущаяСтрока;
	Если ТекЗапись <> Неопределено Тогда
		
		ТекОтчет = ПолучитьОтчетЗаписи(ТекЗапись);
		Если ТекОтчет = Неопределено Тогда
			ПоказатьПредупреждение(,"Для данной записи не установлен отчет расшифровка");
		Иначе
			ОткрытьФорму("Справочник.ОтчетыПользователей.ФормаОбъекта", Новый Структура("Ключ, СформироватьПриОткрытии", ТекОтчет, Истина)); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПрошлыхпериодов()
	
	ПредыдущиеПериоды.Очистить();
	Для Каждого Строка Из Объект.ПредыдущиеПериоды Цикл ПредыдущиеПериоды.Добавить(ПолучитьПредставлениеПериода(Строка.ДатаНачала, Строка.ДатаОкончания)) КонецЦикла;
	
КонецПроцедуры
&НаСервере
Функция ПолучитьПредставлениеПериода(ДатаНачала, ДатаОкончания)
	
	Возврат ?(Объект.ЭтоОстатки, Формат(ДатаОкончания,"ДЛФ=DD"), ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	
КонецФункции
&НаСервере
Функция ПолучитьСписокПрошлыхПериодов()
	
	Список = Новый СписокЗначений;
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	МАКСИМУМ(Ссылка) КАк Ссылка, НАЧАЛОПЕРИОДА(ДатаНачала, ДЕНЬ) ДатаНачала, НАЧАЛОПЕРИОДА(ДатаОкончания, ДЕНЬ) ДатаОкончания
	|ИЗ 		Справочник.УправленческаяОтчетность
	|ГДЕ 		Не ПометкаУдаления И Не Черновик И ЭтоОстатки = &ЭтоОстатки И ДатаОкончания < &ДатаОкончания И ДатаОкончания <> &ПустаяДата
	|СГРУППИРОВАТЬ ПО НАЧАЛОПЕРИОДА(ДатаНачала, ДЕНЬ), НАЧАЛОПЕРИОДА(ДатаОкончания, ДЕНЬ)
	|УПОРЯДОЧИТЬ ПО ДатаОкончания Убыв
	|");
	
	Запрос.УстановитьПараметр("ЭтоОстатки", 	Объект.ЭтоОстатки);
	Запрос.УстановитьПараметр("ДатаОкончания", 	Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("ПустаяДата", 	'00010101');
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Список.Добавить(Новый Структура("Ссылка, ДатаНачала, ДатаОкончания", Выборка.Ссылка, Выборка.ДатаНачала, Выборка.ДатаОкончания),
					ПолучитьПредставлениеПериода(Выборка.ДатаНачала, Выборка.ДатаОкончания),
					Объект.ПредыдущиеПериоды.НайтиСтроки(Новый Структура("ДатаНачала, ДатаОкончания", Выборка.ДатаНачала, Выборка.ДатаОкончания)).Количество()); КонецЦикла;
	Возврат Список;
	
КонецФункции
&НаКлиенте
Процедура ОтметкаПрошлыхПериодов(Список, ДополнительныеПараметры) Экспорт
	
	Объект.ПредыдущиеПериоды.Очистить();
	
	Если Список <> Неопределено Тогда
		Для Каждого Элемент Из Список Цикл Если Элемент.Пометка Тогда ЗаполнитьЗначенияСвойств(Объект.ПредыдущиеПериоды.Добавить(), Элемент.Значение); КонецЕсли; КонецЦикла; 
		
		Модифицированность = Истина;
		ОбновитьСписокПрошлыхпериодов(); КонецЕсли;
	
	
КонецПроцедуры
&НаКлиенте
Процедура ПредыдущиеПериодыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Список 					= ПолучитьСписокПрошлыхПериодов();
	
	Если Список.Количество() Тогда
		Список.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтметкаПрошлыхПериодов", ЭтаФорма), "Какие прошлые периоды выбрать");
	Иначе
		ПоказатьПредупреждение(,"Отчетов за прошлые периоды не обнаружено",,"Нет данных"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПредыдущиеПериодыОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ПредыдущиеПериоды.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Если Не ПустаяСтрока(Объект[Элемент.Имя]) Тогда
		Элементы.Макет.ТекущаяОбласть = Макет.Область(Объект[Элемент.Имя]); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбластьВыбор(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Модифицированность 		= Истина;
	Объект[Элемент.Имя] 	= Элементы.Макет.ТекущаяОбласть.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединящиеЯчейкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	текИмя = Элементы.Макет.ТекущаяОбласть.Имя;
	Если ОбъединящиеЯчейки.НайтиПоЗначению(текИмя) = Неопределено Тогда
		ОбъединящиеЯчейки.Добавить(текИмя);
		Модифицированность = Истина; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбъединящиеЯчейкиПриАктивизацииСтроки(Элемент)
	
	текДанные = Элемент.ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		Элементы.Макет.ТекущаяОбласть = Макет.Область(текДанные.Значение) КонецЕсли;
	
КонецПроцедуры

