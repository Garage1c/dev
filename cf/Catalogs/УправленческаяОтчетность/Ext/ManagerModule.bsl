
Функция ПолучитьРезультатАлгоритма(Текст, Структура)
	
	Если Структура = Неопределено Тогда Возврат "" КонецЕсли;
	
	Попытка
		Результат = Вычислить(Текст);
	Исключение
		стрОшибки = ОписаниеОшибки();
		Общиефункции.СообщитьТекст(стрОшибки + " - ошибка алгоритма");
		Возврат "<<Ошибка алгоритма: " + стрОшибки + ">>"; КонецПопытки;
	
	Возврат ?(ЗначениеЗаполнено(Результат), Результат, "");
	
КонецФункции
Процедура ОбработатьТекстВЯчейке(Ячейка, Структура = Неопределено)
	
	ЕстьИзменения 	= Ложь;
	новТекст 		= "";
	текТекст 		= Ячейка.Текст;
	
	// Найдем начало скобку
	
~ИскатьНачало:

	текПоз = СтрНайти(текТекст, "[");
	Если текПоз И Сред(текТекст, текПоз + 1, 1) <> "]" Тогда // Двойная [[ означет что это [ в тексте
		закрСкобка = текПоз;
		
		// Найдем конец скобку
		
		закрСкобка = СтрНайти(текТекст, "]",,закрСкобка);
~ИскатьКонец:
		Если Сред(текТекст, закрСкобка + 1, 1) = "[" Тогда
			закрСкобка = закрСкобка + 2;
			Перейти ~ИскатьКонец; КонецЕсли; // Ищем окончание
			
		Если Не закрСкобка Тогда
			ОбщиеФункции.СообщитьТекст("Должна быть закрывающая скобка ""]"" " + текТекст);
			Возврат; КонецЕсли;
		
		// Вычислим алгоритм внутри скобки
		
		Результат = ПолучитьРезультатАлгоритма(Сред(текТекст, текПоз + 1, закрСкобка - текПоз - 1), Структура);
		Если Результат = Неопределено Тогда
			Возврат; КонецЕсли;
		
		// Изменеим текст на результат алгоритма
		
		ЕстьИзменения = Истина;
		новТекст 	= новТекст + Лев(текТекст, текПоз - 1) + Результат;
		ТекТекст 	= Сред(текТекст, закрСкобка + 1);
		
		Перейти ~ИскатьНачало; КонецЕсли;
	
	Если ЕстьИзменения Тогда Ячейка.Текст = новТекст + текТекст КонецЕсли;
	
КонецПроцедуры
Функция ОбработатьОбласть(Область, Структура= Неопределено)
	
	НовОбласть = Новый ТабличныйДокумент;
	НовОбласть.Вывести(Область);
	
	Для Строка = 1 По НовОбласть.ВысотаТаблицы Цикл 
		Для Колонка = 1 По НовОбласть.ШиринаТаблицы Цикл
			
			Ячейка = НовОбласть.Область("R" + Формат(Строка, "ЧГ=") + "C" + Формат(Колонка, "ЧГ="));
			//ЗаполнитьЗначенияСвойств(Ячейка, Область.Область("R" + Формат(Строка, "ЧГ=") + "C" + Формат(Колонка, "ЧГ=")));
			
			Если Не ПустаяСтрока(Ячейка.Текст) Тогда
				ОбработатьТекстВЯчейке(Ячейка, Структура); КонецЕсли; КонецЦикла; КонецЦикла;
		
	Возврат НовОбласть;
	
КонецФункции
Функция ПолучитьТабличныйДокумент(Ссылка) Экспорт
	
	Пробел = "  ";
	стрПробелы = "
	|		ВЫБОР КОГДА Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ +
	|		ВЫБОР КОГДА Родитель.Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ +
	|		ВЫБОР КОГДА Родитель.Родитель.Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ +
	|		ВЫБОР КОГДА Родитель.Родитель.Родитель.Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ +
	|		ВЫБОР КОГДА Родитель.Родитель.Родитель.Родитель.Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ +
	|		ВЫБОР КОГДА Родитель.Родитель.Родитель.Родитель.Родитель.Родитель.Код ЕСТЬ NULL ТОГДА """" ИНАЧЕ """ + Пробел + """ КОНЕЦ КАК Пробелы";
	
	Запрос = Новый Запрос("
	
	// 0 макета
	
	|ВЫБРАТЬ Макет, ОбластьШапки, ОбластьШапкиТаблицы, ОбластьШапкиТаблицыПоказателя, ОбластьСтроки, ОбластьСтрокиПоказателя, ОбластьПодвала, ОбъединящиеЯчейки.(НомерСтроки, ИмяОбласти) ИЗ Справочник.УправленческаяОтчетность ГДЕ Ссылка = &Ссылка;
	
	// 1 Периоды во временную таблицу
	
	|ВЫБРАТЬ 	ДатаНачала, ДатаОкончания
	|ПОМЕСТИТЬ 	ПериодыЗапроса 
	|ИЗ 		Справочник.УправленческаяОтчетность ГДЕ Ссылка = &Ссылка
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ 	ДатаНачала, ДатаОкончания ИЗ Справочник.УправленческаяОтчетность.ПредыдущиеПериоды ГДЕ Ссылка = &Ссылка;
	
	// 2 Выберем периоды для определения количества колонок
	
	|ВЫБРАТЬ ДатаНачала, ДатаОкончания ИЗ ПериодыЗапроса УПОРЯДОЧИТЬ ПО ДатаОкончания Убыв;
	
	// 3 Строки
	
	|ВЫБРАТЬ Представление, Пояснение, Результат, Код, " + стрПробелы + "
	|ИЗ Справочник.ЗаписиУО ГДЕ Владелец = &Ссылка
	|УПОРЯДОЧИТЬ ПО Код ИЕРАРХИЯ;
	
	// 4 Строки строк
		
	|ВЫБРАТЬ
	|	Код, Представление, Пояснение, Результат, Владелец.ДатаНачала ДатаНачала, Владелец.ДатаОкончания ДатаОкончания, " + стрПробелы + "
	|ИЗ
	|	Справочник.ЗаписиУО 
	|ГДЕ 
	|	Владелец В(
	|			ВЫБРАТЬ Ссылка
	|			ИЗ		Справочник.УправленческаяОтчетность Спр
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыЗапроса Пер
	|			ПО 	Спр.ДатаНачала 		= Пер.ДатаНачала И
	|				Спр.ДатаОкончания 	= Пер.ДатаОкончания
	|			ГДЕ Не ПометкаУдаления)
	|;
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Пакет = Запрос.ВыполнитьПакет();
	ВыборкаШапки = Пакет[0].Выбрать();
	
	ВыборкаШапки.Следующий();
	Макет = ВыборкаШапки.Макет.Получить();
	Если Макет = Неопределено Тогда
	ОбщиеФункции.СообщитьТекст("Не обнаружен макет вывода");
		Возврат Неопределено; КонецЕсли;
	
	// Сперва проверим
	
	стрОшибки = "";
	
	Если ПустаяСтрока(ВыборкаШапки.ОбластьШапки) Тогда 					стрОшибки = стрОшибки + Символы.ПС + "Не указана область шапки" КонецЕсли;
	Если ПустаяСтрока(ВыборкаШапки.ОбластьШапкиТаблицы) Тогда 			стрОшибки = стрОшибки + Символы.ПС + "Не указана область шапки таблицы" КонецЕсли;
	Если ПустаяСтрока(ВыборкаШапки.ОбластьШапкиТаблицыПоказателя) Тогда стрОшибки = стрОшибки + Символы.ПС + "Не указана область шапки таблицы показателя" КонецЕсли;
	Если ПустаяСтрока(ВыборкаШапки.ОбластьСтроки) Тогда 				стрОшибки = стрОшибки + Символы.ПС + "Не указана область строки" КонецЕсли;
	Если ПустаяСтрока(ВыборкаШапки.ОбластьСтрокиПоказателя) Тогда 		стрОшибки = стрОшибки + Символы.ПС + "Не указана область строки показателя" КонецЕсли;
	Если ПустаяСтрока(ВыборкаШапки.ОбластьПодвала) Тогда 				стрОшибки = стрОшибки + Символы.ПС + "Не указана область подвала" КонецЕсли;
	
	Если стрОшибки <> "" Тогда ОбщиеФункции.СообщитьТекст(стрОшибки); Возврат Неопределено; КонецЕсли;
	
	Попытка ОбластьШапка = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьШапки) Исключение 									стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область шапки - " + ВыборкаШапки.ОбластьШапки; КонецПопытки;
	Попытка ОбластьШапкаТаблицы = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьШапкиТаблицы) Исключение 					стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область шапки таблицы - " + ВыборкаШапки.ОбластьШапкиТаблицы; КонецПопытки;
	Попытка ОбластьШапкаТаблицыПоказателя = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьШапкиТаблицыПоказателя) Исключение стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область шапки таблицы показателя - " + ВыборкаШапки.ОбластьШапкиТаблицыПоказателя; КонецПопытки;
	Попытка ОбластьСтрока = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьСтроки) Исключение 								стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область строки - " + ВыборкаШапки.ОбластьСтроки; КонецПопытки;
	Попытка ОбластьСтрокаПоказатель = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьСтрокиПоказателя) Исключение 			стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область строки показателя - " + ВыборкаШапки.ОбластьСтрокиПоказателя; КонецПопытки;
	Попытка ОбластьПодвал = Макет.ПолучитьОбласть(ВыборкаШапки.ОбластьПодвала) Исключение 								стрОшибки = стрОшибки + Символы.ПС + "не удалось определить область подвала - " + ВыборкаШапки.ОбластьПодвала; КонецПопытки;
	
	Если стрОшибки <> "" Тогда ОбщиеФункции.СообщитьТекст(стрОшибки); Возврат Неопределено; КонецЕсли;
	
	// Начнем вывод
	
	//ШиринаКолонок	= Новый Массив;
	ТаблДок 		= Новый ТабличныйДокумент;
	
	// шапка
	
	ТаблДок.Вывести(ОбработатьОбласть(ОбластьШапка, Ссылка));
	
	// шапка таблицы
	
	ТаблПериодов = Пакет[2].Выгрузить();
	СтрокаШапки = Новый ТабличныйДокумент;
	СтрокаШапки.Присоединить(ОбработатьОбласть(ОбластьШапкаТаблицы, Ссылка));
	Для Каждого Строка Из ТаблПериодов Цикл СтрокаШапки.Присоединить(ОбработатьОбласть(ОбластьШапкаТаблицыПоказателя, Строка)); КонецЦикла;
	ТаблДок.Вывести(СтрокаШапки);
	
	// строки
	
	Выборка 		= Пакет[3].Выбрать();
	ТаблРезультатов = Пакет[4].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		                      
		СтрокаТаблицы = Новый ТабличныйДокумент;
		СтрокаТаблицы.Присоединить(ОбработатьОбласть(ОбластьСтрока, Выборка));
		
		// Теперь добавим результаты
		Для Каждого Строка Из ТаблПериодов Цикл
			
			СтрокиРезультаты = ТаблРезультатов.НайтиСтроки(Новый Структура("Код, Представление, ДатаНачала, ДатаОкончания", Выборка.Код, Выборка.Представление, Строка.ДатаНачала, Строка.ДатаОкончания));
			СтрокаТаблицы.Присоединить(ОбработатьОбласть(ОбластьСтрокаПоказатель, ?(СтрокиРезультаты.Количество(), СтрокиРезультаты[0], Неопределено))); КонецЦикла;
		
		ТаблДок.Вывести(СтрокаТаблицы); КонецЦикла;
		
	// подвал
	
	ТаблДок.Вывести(ОбработатьОбласть(ОбластьПодвал, Ссылка));
	
	// Раставим ширину колонок по шапке таблицы
	
	Для НомКолНачало = 1 По ОбластьШапкаТаблицы.ШиринаТаблицы Цикл
		Ячейка = "R1C" + Формат(НомКолНачало,"ЧГ=");
		ТаблДок.Область(Ячейка).ШиринаКолонки = ОбластьШапкаТаблицы.Область(Ячейка).ШиринаКолонки; КонецЦикла;

	КолКолПериода = ОбластьШапкаТаблицыПоказателя.ШиринаТаблицы;
	Для Ном = 1 По ТаблПериодов.Количество() Цикл
		Для НомКол = 1 По ОбластьШапкаТаблицыПоказателя.ШиринаТаблицы Цикл
			ТаблДок.Область("R1C" + Формат(ОбластьШапкаТаблицы.ШиринаТаблицы + Ном * КолКолПериода - КолКолПериода + НомКол,"ЧГ=")).ШиринаКолонки = ОбластьШапкаТаблицыПоказателя.Область("R1C" + Формат(НомКол,"ЧГ=")).ШиринаКолонки; КонецЦикла; 
	
	// Расставим высоту строк
	//ВысотаСтроки
	
	// Теперь объединялки
	
		//ВыборкаОбъединений = ВыборкаШапки.ОбъединящиеЯчейки.Выбрать(); // объедим пока тупо шапку иначе долго все это изобретать
		//Пока ВыборкаОбъединений.Следующий() Цикл
		//	
		//	НомСтроки = Формат(ВыборкаОбъединений.НомСтроки, "ЧГ=");
		//	
		//	ТаблДок.Область("R" + НомСтроки + "C1:R" + НомСтроки + "C" + Формат(ТаблДок.ШиринаСтраницы, "ЧГ=")).Объединить();
		//	
		//КонецЦикла;
		
	//	
	//	// Определим чтобы был известен и конец и начало
	//	
	//	
	//	КоордR = КонвертацияТипов.ПолучитьМассивИзСтроки(ВыборкаОбъединений.Ячейка, "R");
	//	КоордC = КонвертацияТипов.ПолучитьМассивИзСтроки(ВыборкаОбъединений.Ячейка, "C");
	//	
	//	КолНач = Формат(Число(Лев(КоордR[1], СтрДлина(КоордR[1]) - 1)), "ЧГ=");
	//	СтрНач = Формат(Число(Лев(КоордC[1], СтрДлина(КоордC[0]) - 1)), "ЧГ=");
	//	
	//	ТаблДок.Область("R1C1:R1C1").Объединить();
	//	
	//	стр = ВыборкаОбъединений.Ячейка;
	//	
	//	ВтПоз = СтрНайти(стр,"C",,,2);
	//	ПозКолНач = ?(ВтПоз, ВтПоз, СтрНайти(стр,"C")) - 1);
	//	
	//	
	//	// Найдем колонку начала
	//	
	//	стр = ВыборкаОбъединений.Ячейка;
	//	ВтПоз = СтрНайти(стр,"C",,,2);
	//	НомКол = Сред(стр, 2, ?(ВтПоз, ВтПоз, СтрНайти(стр,"C")) - 1);
	//	
	//	// Найдем ячейку начала
	//	
	//	стр = ВыборкаОбъединений.Ячейка;
	//	
	//	
	//	// Найдем строку начала
	//	
	//	стр = ВыборкаОбъединений.Ячейка;;
	//	
	//	ТаблДок.Область().Объединить();
	//	
	//КонецЦикла;
	//
	КонецЦикла;
	//
	//
	Возврат ТаблДок;
	
КонецФункции
