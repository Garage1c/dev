
#Область API_стандарт

// Обязательные функции для API

Функция API_URLОбновленияНаСайте() Экспорт 		Возврат "/api/messages/update" КонецФункции
Функция API_СайтОбъекта(Ссылка) Экспорт Возврат Неопределено КонецФункции
Функция API_ПолучитьОбъект(Ссылка, ДополнительныеПараметры = Неопределено) Экспорт
	
	//  _______________________________
	// |                               |
	// |¸.•*´¨`*•.[̲̲̅̅A̲̅P̅I̲̲̅̅]¸.•*´¨`*•.|
	// |_______________________________|
	
	
	Ссылки = Новый Массив;
	Ссылки.Добавить(Ссылка);
	
	Возврат API_ПолучитьТаблицу(Ссылки, ДополнительныеПараметры);
	
КонецФункции
Функция API_ПолучитьТаблицу(Ссылки = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	//  _______________________________
	// |                               |
	// |¸.•*´¨`*•.[̲̲̅̅A̲̅P̅I̲̲̅̅]¸.•*´¨`*•.|
	// |_______________________________|
	
	Перем Сайт, Адресат;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ДополнительныеПараметры.Свойство("Сайт", 	Сайт);
		ДополнительныеПараметры.Свойство("Адресат", Адресат); КонецЕсли;
	
	Запрос = Новый Запрос(СтрШаблон("
	|ВЫБРАТЬ 	Ссылка guid, Ответственный manager_guid, Сообщение text, ДатаСоздания date,
	|			Адресация.(Адресат user_guid) users_guid,
	|			ВЫБОР КОГДА ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщений.ИзменениеЛимита) 	ТОГДА 1
	|																								ИНАЧЕ 0 КОНЕЦ type
	|ИЗ 		Справочник.СообщенияПользователям
	|ГДЕ 		Не ПометкаУдаления И Не ЭтоЧерновик %1 %2 %3",
	
	?(Ссылки 	= Неопределено, "", " И Ссылка В(&Ссылки)"),
	?(Сайт 		= Неопределено, "", " И Адресация.Адресат.СайтИсточник = &Сайт"),
	?(Адресат 	= Неопределено, "", " И Адресация.Адресат = &Адресат")));
	
	Запрос.УстановитьПараметр("Ссылки",		Ссылки);
	Запрос.УстановитьПараметр("Сайт", 		Сайт);
	Запрос.УстановитьПараметр("Адресат", 	Адресат);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

Процедура СформироватьСообщенияОбИзмененияхЛимитов() Экспорт
	
	// Запросим текущим состояния лимитов сравним с текущим составим список для россылки и нафигачем сообщений на сайт
	
	Запрос = Новый Запрос("
	
	// Расчетный запрос
	
	|ВЫБРАТЬ Запрос.ФизЛицо, Спр.Ссылка ПользовательИнтернет, Сейчас, Было
	|ПОМЕСТИТЬ Таблица
	|ИЗ (
	|	ВЫБРАТЬ ФизЛицо, СУММА(Сейчас) Сейчас, СУММА(Было) Было
	|	ИЗ (
	|		ВЫБРАТЬ Инициатор ФизЛицо, СуммаОстаток Сейчас, 0 Было
	|		ИЗ	 	РегистрНакопления.Лимиты.Остатки(,Инициатор ССЫЛКА Справочник.ФизическиеЛица И Инициатор <> &пустоеФизЛицо) Ост
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ	ВладелецАктива, 0,  Остаток
	|		ИЗ		РегистрСведений.СрезАктивовДляСообщений ) Запрос
	|
	|	СГРУППИРОВАТЬ ПО ФизЛицо  
	|
	|	) Запрос
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ	Справочник.ПользователиИнтернет Спр
	|ПО						Запрос.ФизЛицо = Спр.ФизЛицо
	|
	|ГДЕ НЕ Спр.ПометкаУдаления;
	
	
	// Таблица регистра сведений
	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ФизЛицо ВладелецАктива, Сейчас Остаток, &текДата ДатаЗамера
	|ИЗ		Таблица
	|ГДЕ	Сейчас <> 0;
	
	// Таблица для сообщений
	
	|ВЫБРАТЬ ПользовательИнтернет, Сейчас, Было, Было - Сейчас Разница ИЗ Таблица ГДЕ Сейчас <> Было ИТОГИ МАКСИМУМ(Разница) ПО Сейчас, Было");
	
	Запрос.УстановитьПараметр("пустоеФизЛицо", 	Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТекДата", 		ТекущаяДата());
	Пакет = Запрос.ВыполнитьПакет();
	
	// Загрузим врегистр
	
	Набор = РегистрыСведений.СрезАктивовДляСообщений.СоздатьНаборЗаписей();
	Набор.Загрузить(Пакет[1].Выгрузить());
	
НачатьТранзакцию();

	Набор.Записать();
	
	// Теперь создадим сообщения для пользователей
	
	ВыборкаСейчас = Пакет[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаСейчас.Следующий() Цикл
		ВыборкаБыло = ВыборкаСейчас.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока ВыборкаБыло.Следующий() Цикл
			
			Если ВыборкаБыло.Разница > 0 Тогда
				
				//Текст 		= "С вашего лимита была списана сумма:&nbsp;<FONT color=#ff0000>" + ВыборкаБыло.Разница + "</FONT> руб, текущий лимит: <U><FONT color=#191970><STRONG>" + ВыборкаБыло.Сейчас + "</STRONG></FONT> руб</U>.";
				Текст 		= "С вашего лимита была списана сумма: " + ВыборкаБыло.Разница + " руб, текущий лимит: " + ВыборкаБыло.Сейчас + " руб.";
				Заголовок 	= "Лимит уменьшился на " + ВыборкаБыло.Разница + " ост: " + ВыборкаБыло.Сейчас;
				
			Иначе
				
				//Текст 		= "Ваш лимит был пополнен на сумму:&nbsp;<FONT color=#008000>" + Строка(ВыборкаБыло.Разница * -1) + "</FONT> руб, текущий лимит: <U><FONT color=#191970><STRONG>" + ВыборкаБыло.Сейчас + "</STRONG></FONT> руб</U>.";
				Текст 		= "Ваш лимит был пополнен на сумму: " + Строка(ВыборкаБыло.Разница * -1) + " руб, текущий лимит: " + ВыборкаБыло.Сейчас + " руб.";
				Заголовок 	= "Лимит увеличился на " + Строка(ВыборкаБыло.Разница * -1) + " ост: " + ВыборкаБыло.Сейчас; КонецЕсли;
			
			Если Не Справочники.СообщенияПользователям.СоздатьСообщения(
					КонвертацияТипов.ПолучитьМассивИзПоляВыборки(ВыборкаБыло.Выбрать(), "ПользовательИнтернет"),
					Перечисления.ТипыСообщений.ИзменениеЛимита, Текст, Заголовок) Тогда
						
				ОтменитьТранзакцию();
				ВызватьИсключение "Сообщения об изменении лимитов не были выполнены"; 
				
			КонецЕсли; КонецЦикла; КонецЦикла;
			
ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция СоздатьСообщения(Адресаты, ТипСообщения, Текст, Заголовок = "", Ответственный = Неопределено) Экспорт
	
	Если Не Адресаты.Количество() Тогда
		ВызватьИсключение "Некому отправлять сообщения. Не указаны адресаты";  КонецЕсли;

	Если ПустаяСтрока(Текст) Тогда
		ВызватьИсключение "Текст сообщения пустой";  КонецЕсли;
	
	СпрОбъект = Справочники.СообщенияПользователям.СоздатьЭлемент();
	СпрОбъект.ТипСообщения = ТипСообщения;
	СпрОбъект.ДатаСоздания = ТекущаяДата();
	КонвертацияТипов.ЗагрузитьМассивТаблицу(СпрОбъект.Адресация, Адресаты, "Адресат");
	
	СпрОбъект.Наименование 	= ?(Заголовок = "", Текст, Заголовок);
	СпрОбъект.Сообщение 	= Текст;
	
	СпрОбъект.Ответственный = ?(Ответственный = Неопределено, ПараметрыСеанса.ТекущийПользователь, Ответственный);
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(СпрОбъект);
	
КонецФункции