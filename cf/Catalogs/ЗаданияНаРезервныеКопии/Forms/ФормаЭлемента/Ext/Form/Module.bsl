
&НаСервере
Функция ПолучитьСписокФайлов()
	
	Возврат МодульРезевногоКопирования.ПолучитьСписокФайловДляКопирования(Объект.Ссылка);
	
КонецФункции
&НаСервере
Функция СкопироватьФайл(ПутьКФайлу, ЭтоКаталог)
	
	Возврат МодульРезевногоКопирования.СкопироватьФайлЕслиИзменен(ПутьКФайлу, ЭтоКаталог, Объект.Ссылка);
	
КонецФункции

Процедура КопированиеФайловРезерв()
	
	МодульРезевногоКопирования.КопированиеФайловВРезерв(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Скопировать_Ст(Команда)
	
	// Проверим чтобы был записан
	
	Если Модифицированность Или Объект.Ссылка.Пустая()Тогда
		
		Если Не (Вопрос("Для копирования нужно записать задание, Записать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да И Записать()) Тогда
			Возврат; КонецЕсли;КонецЕсли;
	
	// получим файлы от видимости сервера
	
	ФайлыДляКопирования = ПолучитьСписокФайлов();
	
	// Скопируем файлы
	
	Ном = 0; КолФайлов = ФайлыДляКопирования.Количество();
	Для Каждого ПутьКФайлу Из ФайлыДляКопирования Цикл Ном = Ном + 1; ОбработкаПрерыванияПользователя();
		
		Состояние("Копируем файл", ном / КолФайлов * 100, ПутьКФайлу.ПолноеИмя); 
		
		Если Не СкопироватьФайл(ПутьКФайлу.ПолноеИмя, ПутьКФайлу.ЭтоКаталог) Тогда 
			ПоказатьПредупреждение(,"Произошла ошибка",,"Ошибка");
			Возврат; КонецЕсли; КонецЦикла;
	
	// Сообщим
	
	Если Не КолФайлов Тогда
		ПоказатьПредупреждение(,"Нет файлов для копирования",,"Предупреждение");
	Иначе
		ПоказатьПредупреждение(,"Измененные файлы скопированы",,"Предупреждение"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура Скопировать(Команда)
	
	// Проверим чтобы был записан
	
	Если Модифицированность Или Объект.Ссылка.Пустая()Тогда
		
		Если Не (Вопрос("Для копирования нужно записать задание, Записать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да И Записать()) Тогда
			Возврат; КонецЕсли;КонецЕсли;
	
	// Оповестим
	
	ПоказатьОповещениеПользователя("Запущено резервное копирование", ПолучитьНавигационнуюСсылку(Объект.Ссылка), Объект.ПутьИсточник);
	
	// Скопируем
	
	КопированиеФайловРезерв();
	
	// Раз до сюда дошел, значит все ок
	
	ПоказатьПредупреждение(,"Копирование завершено",,"Предупреждение");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасписание(своеРасписание = "")
	
	своеРасписание = ?(своеРасписание = "", Объект.Расписание, своеРасписание);
	
	Возврат ?(ПустаяСтрока(своеРасписание), 
					Новый РасписаниеРегламентногоЗадания, 
					ЗначениеИзСтрокиВнутр(Объект.Расписание));
КонецФункции
&НаСервере
Процедура УстановитьРасписание(Знач Расписание)
	
	Объект.Расписание = ЗначениеВСтрокуВнутр(Расписание);
	стрРасписание = Строка(Расписание);
	
КонецПроцедуры
&НаКлиенте
Процедура ДекорацияОткрытьРасписаниеНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(ПолучитьРасписание());
	
	Если Диалог.ОткрытьМодально() Тогда
		УстановитьРасписание(Диалог.Расписание); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	стрРасписание = Строка(ПолучитьРасписание());
	
КонецПроцедуры
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Перем текРегл;
	
	// Проверим активность и запустим регламетное задание если нужно
	
	Активный = ТекущийОбъект.Активно И Не ТекущийОбъект.ПометкаУдаления;
	
	// Найдем задание
	
	реглЗадания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Ключ", XMLСтрока(ТекущийОбъект.Ссылка)));
	Если реглЗадания.Количество() Тогда текРегл = реглЗадания[0]; КонецЕсли;
	
	// Добавим или изменим новое
	
	Если Активный Тогда
		
		// Новый
		
		Если текРегл = Неопределено Тогда 
			
			текПараметры = Новый Массив;
			текПараметры.Добавить(ТекущийОбъект.Ссылка);
			
			текРегл = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.КопированиеФайловВРезерв); 
			текРегл.Использование 	= Истина;
			текРегл.Параметры 		= текПараметры;
		 	текРегл.Ключ 			= XMLСтрока(ТекущийОбъект.Ссылка);
			текРегл.Наименование 	= "backUp (" + ТекущийОбъект.Наименование + ")"; КонецЕсли;
			
		текРегл.Расписание = ПолучитьРасписание(ТекущийОбъект.Расписание);
		
		Попытка 	текРегл.Записать(); 
		Исключение 	МодульРезевногоКопирования.СообщитьОшибку("Ошибка записи задания " + ОписаниеОшибки()); Отказ = Истина; КонецПопытки;
		
	// Удалим существующее
		
	ИначеЕсли текРегл <> Неопределено Тогда
		
		Попытка 	текРегл.Удалить();
		Исключение 	МодульРезевногоКопирования.СообщитьОшибку("Ошибка при удалении задания " + ОписаниеОшибки()); Отказ = Истина; КонецПопытки; КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПутьИсточникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ЗаданияНаРезервныеКопии.Форма.ВыборКаталогаНаСервере",,ЭтаФорма,,,,Новый ОписаниеОповещения("ВыборКаталогаИсточника", ЭтаФорма));
	
КонецПроцедуры
&НаКлиенте
Процедура ВыборКаталогаИсточника(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда Объект.ПутьИсточник = Результат КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьПриемникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ЗаданияНаРезервныеКопии.Форма.ВыборКаталогаНаСервере",,ЭтаФорма,,,,Новый ОписаниеОповещения("ВыборКаталогаПриемника", ЭтаФорма));
	
КонецПроцедуры
&НаКлиенте
Процедура ВыборКаталогаПриемника(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда Объект.ПутьПриемник = Результат КонецЕсли;
	
КонецПроцедуры


