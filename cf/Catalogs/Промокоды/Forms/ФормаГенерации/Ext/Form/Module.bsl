
&НаСервере
Процедура ГенерацияПромоКодовНаСервере()
	
	Если Многоразовый Тогда
		СправочникПромокоды 				= Справочники.Промокоды.СоздатьЭлемент();
		СправочникПромокоды.Наименование 	= Наименование;
		СправочникПромокоды.Многоразовый 	= Многоразовый;
		СправочникПромокоды.СрокПромоКодаОт = СрокПромоКодаОт;
		СправочникПромокоды.СрокПромоКодаДо = СрокПромоКодаДо;
		СправочникПромокоды.ПроцентСкидки 	= ПроцентСкидки;
		СправочникПромокоды.Активен 		= Истина;
		
		Для Каждого СтрокаКаналПродаж Из КаналыПродаж Цикл
			СтрокаТЧКаналыПродаж = СправочникПромокоды.КаналыПродаж.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧКаналыПродаж, СтрокаКаналПродаж);
		КонецЦикла;	
		СправочникПромокоды.Записать();
	Иначе
		СправочникПромокодыГруппа 				= Справочники.Промокоды.СоздатьГруппу();
		СправочникПромокодыГруппа.Наименование 	= Наименование;
		СправочникПромокодыГруппа.СрокПромоКодаОт = СрокПромоКодаОт;
		СправочникПромокодыГруппа.СрокПромоКодаДо = СрокПромоКодаДо;
		//СправочникПромокодыГруппа.ПроцентСкидки 	= ПроцентСкидки;
		//СправочникПромокодыГруппа.Статус 			= Перечисления.СтатусПромоКода.Активен;
		СправочникПромокодыГруппа.Записать();
		
		Для Счетчик = 1 по КоличествоПромокодов Цикл
			СправочникПромокоды 				= Справочники.Промокоды.СоздатьЭлемент();
			СправочникПромокоды.Наименование 	= Наименование + " " +Формат(Счетчик, "ЧЦ=5; ЧВН=; ЧГ=0");
			СправочникПромокоды.Многоразовый 	= Многоразовый;
			СправочникПромокоды.СрокПромоКодаОт = СрокПромоКодаОт;
			СправочникПромокоды.СрокПромоКодаДо = СрокПромоКодаДо;
			СправочникПромокоды.ПроцентСкидки 	= ПроцентСкидки;
			СправочникПромокоды.Активен 		= Истина;
			СправочникПромокоды.Родитель 		= СправочникПромокодыГруппа.Ссылка;
			
			Для Каждого СтрокаКаналПродаж Из КаналыПродаж Цикл
				СтрокаТЧКаналыПродаж = СправочникПромокоды.КаналыПродаж.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧКаналыПродаж, СтрокаКаналПродаж);
			КонецЦикла;				
			СправочникПромокоды.Записать();
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ГенерацияПромоКодов(Команда)
	
	ФормаЗаполненаПравильно = ПроверитьПравильностьЗаполненияФормы();
	Если Не ФормаЗаполненаПравильно Тогда
		Возврат;
	КонецЕсли;	
		
	ГенерацияПромоКодовНаСервере();
	
	Если Многоразовый Тогда
		Сообщить("Создан многоразовый промо код: " + Наименование);	
	Иначе
		Сообщить("Создано " + КоличествоПромокодов + " одноразовых промо кодов (" + Наименование + ")");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПравильностьЗаполненияФормы()
	
	Проверка = Истина;
	
	Если НачалоДня(СрокПромоКодаДо) < ТекущаяДата() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Срок действия промо кодов не может быть меньше текущей даты";
		Сообщение.Поле = "СрокПромоКодаДо";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		Проверка = Ложь;
		Возврат Проверка;
	КонецЕсли;
	
	Если СрокПромоКодаОт > СрокПромоКодаДо Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Срок окончания действия промо кодов не может быть меньше срока начала действия промо кодов";
		Сообщение.Поле = "СрокПромоКодаДо";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		Проверка = Ложь;
		Возврат Проверка;
	КонецЕсли;
	
	Если НЕ Многоразовый и КоличествоПромокодов = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо указать количество промо кодов для создания";
		Сообщение.Поле = "КоличествоПромокодов";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		Проверка = Ложь;
		Возврат Проверка;
	КонецЕсли;
	
	Проверка = ПроверитьПравильностьЗаполненияФормыНаСервере();
	
	Возврат Проверка;
	
КонецФункции	

&НаСервере
Функция ПроверитьПравильностьЗаполненияФормыНаСервере()

	Если ЗначениеЗаполнено(Наименование) Тогда
		СправочникПромокоды = Справочники.Промокоды;
		НайденныйПромоКод = СправочникПромокоды.НайтиПоНаименованию(Наименование, Истина);
		Если НайденныйПромоКод = СправочникПромокоды.ПустаяСсылка() Тогда
			Возврат Истина;
		Иначе	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не уникальное наименование для промо кода";
			Сообщение.Поле = "Наименование";
			Сообщение.УстановитьДанные(ЭтаФорма);
			Сообщение.Сообщить();
			Возврат Ложь;
		КонецЕсли;	
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо указать название для промо кода";
		Сообщение.Поле = "Наименование";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	
	
&НаКлиенте
Процедура МногоразовыйПриИзменении(Элемент)
	УстановитьВидимостьЭлементовФормы();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементовФормы();
	СрокПромоКодаОт = НачалоМесяца(ТекущаяДата());
	СрокПромоКодаДо = КонецМесяца(ТекущаяДата());
	ПроцентСкидки = 5;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	Если Многоразовый Тогда
		Элементы.КоличествоПромокодов.Видимость = Ложь;	
	Иначе
		Элементы.КоличествоПромокодов.Видимость = Истина;
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Функция ПроверитьТаблицуКаналыПродаж(ВыбранноеЗначение)
	
	Отбор = Новый Структура;
	Отбор.Вставить("КаналПродаж" ,ВыбранноеЗначение);
	СтрокиКаналыПродаж = КаналыПродаж.НайтиСтроки(Отбор);
	Если СтрокиКаналыПродаж.Количество() <> 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Такой канал продаж уже есть в таблице";
		Сообщение.Поле = "КаналыПродаж";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина
КонецФункции

&НаКлиенте
Процедура КаналыПродажКаналПродажОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = ПроверитьТаблицуКаналыПродаж(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ОчиститьПустыеСтроки()
	
	Отбор = Новый Структура;
	Отбор.Вставить("КаналПродаж" , Справочники.КаналыПродаж.ПустаяСсылка());
	ПустыеСтроки = КаналыПродаж.НайтиСтроки(Отбор);
	Если ПустыеСтроки.Количество() <> 0 Тогда
		Для Каждого ПустаяСтрока из ПустыеСтроки Цикл
			КаналыПродаж.Удалить(ПустаяСтрока);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура КаналыПродажПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	 ОчиститьПустыеСтроки();
 КонецПроцедуры