
&НаСервереБезКонтекста
Функция ПодвинутьВпередНаСервере(Задача)
	
	Возврат Справочники.Задачи.ПодвинутьВперед(Задача);
	
КонецФункции
&НаКлиенте
Процедура ПодвинутьВперед(Команда)
	
	Если ПодвинутьВпередНаСервере(Элементы.Список.ТекущаяСтрока) Тогда
		Элементы.Список.Обновить(); КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодвинутьНазадНаСервере(Задача)
	
	Возврат Справочники.Задачи.ПодвинутьНазад(Задача);
	
КонецФункции
&НаКлиенте
Процедура ПодвинутьНазад(Команда)
	
	Если ПодвинутьНазадНаСервере(Элементы.Список.ТекущаяСтрока) Тогда
		Элементы.Список.Обновить(); КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнфСтроку()
	
	Запрос = Новый Запрос("
	
	// Это запрос Ани
	
	|ВЫБРАТЬ
	|	Задачи.ДатаСоздания,
	|	КОЛИЧЕСТВО(Задачи.Ссылка) КАК КоличествоЗадач
	|ПОМЕСТИТЬ КоличествоЗадачВДень
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|
	|СГРУППИРОВАТЬ ПО
	|	Задачи.ДатаСоздания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СРЕДНЕЕ(КоличествоЗадачВДень.КоличествоЗадач) КАК ЧИСЛО(10,1)) КАК КоличествоЗадач
	|ИЗ
	|	КоличествоЗадачВДень КАК КоличествоЗадачВДень;
	
	// А это мой супер запрос
	
	|ВЫБРАТЬ 	Статус, КОЛИЧЕСТВО(Ссылка) Кол, СУММА(Вес) Вес
	|ИЗ			Справочник.Задачи КАК Задачи
	|СГРУППИРОВАТЬ ПО Статус");
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ФормСтроки = Новый Массив;
	
	ВыборкаСредних = Пакет[1].Выбрать();
	Если ВыборкаСредних.Следующий() Тогда
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока("В среднем в день: "));
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(ВыборкаСредних.КоличествоЗадач),,WebЦвета.Синий)); КонецЕсли;
	
	ВыгрСтатусов = Пакет[2].Выгрузить();
	
	стрСделано = ВыгрСтатусов.Найти(Перечисления.СтатусыЗадач.Решена, "Статус");
	Если стрСделано <> Неопределено Тогда 
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока("   Решено: "));
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(стрСделано.Кол),,WebЦвета.Зеленый)); КонецЕсли;
	
	стрСделано = ВыгрСтатусов.Найти(Перечисления.СтатусыЗадач.ВОчереди, "Статус");
	Если стрСделано <> Неопределено Тогда 
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока("   В очереди: "));
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(стрСделано.Кол),,WebЦвета.Синий)); 
		
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(" их вес (чел/дн): "));
		ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(стрСделано.Вес),,WebЦвета.СинеФиолетовый)); КонецЕсли;
	
	ФормСтроки.Добавить(Новый ФорматированнаяСтрока("   Всего задач: "));
	ФормСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(ВыгрСтатусов.Итог("Кол")),,WebЦвета.Синий));
	
	СреднееКоличествоОбращений = Новый ФорматированнаяСтрока(ФормСтроки);
		
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата",	НачалоДня(ТекущаяДата()));
	Список.Параметры.УстановитьЗначениеПараметра("ПустаяДата", 	'00010101');
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("ВРаботе", 			Перечисления.СтатусыЗадач.ВРаботе);
	Список.Параметры.УстановитьЗначениеПараметра("Уточнение", 			Перечисления.СтатусыЗадач.ТребуетУточнение);
	Список.Параметры.УстановитьЗначениеПараметра("ВОчереди", 			Перечисления.СтатусыЗадач.ВОчереди);
	Список.Параметры.УстановитьЗначениеПараметра("ОПЭ", 				Перечисления.СтатусыЗадач.ОПЭ); 			

	
	СреднееКоличествоОбращений = Новый ФорматированнаяСтрока(Новый ФорматированнаяСтрока("Среднее количество обращений в день составляет ",,ЦветаСтиля.ЦветИнформационнойНадписи), Новый ФорматированнаяСтрока(Строка(Справочники.Задачи.ПолучитьСреднееЧислоОбращений()),,ЦветаСтиля.ЦветОсобогоТекста));
	ОбновитьИнфСтроку();
	
КонецПроцедуры

#Область Перетаскивание

&НаСервере
Функция РазрешеноПеренести(Задача1, Задача2)
	
	Статус = Перечисления.СтатусыЗадач.ВОчереди;
	Возврат 	Задача1.Статус = Статус И Задача2.Статус = Статус И
				Задача1.Закреплённая = Задача2.Закреплённая И
				Справочники.Задачи.ПользовательМожетИзменятьОчередьЗадачи(Задача1, Задача2);
КонецФункции
&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если	(ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение ИЛИ ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование) И
			РазрешеноПеренести(ПараметрыПеретаскивания.Значение, Строка) Тогда
			
	Иначе
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена; КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПоменятьНомераЗадач(Задача1, Задача2)
	
	Запрос = Новый Запрос("ВЫБРАТЬ Задача, Номер ИЗ РегистрСведений.ОчередностьЗадач ГДЕ Задача = &Задача1 ИЛИ Задача = &Задача2");
	Запрос.УстановитьПараметр("Задача1", Задача1);
	Запрос.УстановитьПараметр("Задача2", Задача2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий(); Зад1 = Выборка.Задача; Номер1 = Выборка.Номер;
	
	Выборка.Следующий(); Зад2 = Выборка.Задача; Номер2 = Выборка.Номер;
	
	Возврат Справочники.Задачи.ПоменятьНомераЗадач(Зад1, Номер2, Зад2, Номер1);
	
КонецФункции
&НаСервере
Функция ВставитьЗадачуВыше(ЗадачаВыше, ЗадачаНиже)
	
	Возврат Справочники.Задачи.ПоставитьВОчередь(ЗадачаВыше, ЗадачаНиже);
	
КонецФункции
&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение Тогда // Вставим задачу выше
	
		Если ВставитьЗадачуВыше(ПараметрыПеретаскивания.Значение, Строка) Тогда
			Элементы.Список.Обновить(); КонецЕсли;
	Иначе	                                                                        // Поменяем местами
		
		Если ПоменятьНомераЗадач(ПараметрыПеретаскивания.Значение, Строка) Тогда
			Элементы.Список.Обновить(); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ОтсортироватьСписок()
	
	Возврат Справочники.Задачи.ОтсортироватьПоОтделам();
	
КонецФункции
&НаКлиенте
Процедура ПользовательСозрелОтсортироватьВсеЗадачиДляВСех(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ОтсортироватьСписок() Тогда
			Элементы.Список.Обновить(); КонецЕсли; КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОтсортироватьПоОтделам(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПользовательСозрелОтсортироватьВсеЗадачиДляВСех", ЭтаФорма), "Отсортировать всех по очереди (операция безвозвратная)
																			|Вы уверены?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, 30);
КонецПроцедуры

&НаСервере
Функция ЗадачаОтслеживается(СсылкаНаЗадачу)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА ИЗ РегистрСведений.ОтслеживаниеЗадач ГДЕ Пользователь = &текПользователь И Задача = &Задача");
	Запрос.УстановитьПараметр("текПользователь", 	ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Задача", 			СсылкаНаЗадачу);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции
&НаСервере
Функция ОтслеживатьЗадачуНаСервере(Ссылка)
	
	Рег = РегистрыСведений.ОтслеживаниеЗадач.СоздатьМенеджерЗаписи();
	Рег.Пользователь 	= ПараметрыСеанса.ТекущийПользователь;
	Рег.Задача 			= Ссылка;
	
	Возврат ?(ЗадачаОтслеживается(Ссылка), 
		ОбщиеФункции.УдалитьОбъектИСообщитьЕслиОшибка(Рег),
		ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(Рег));
	
КонецФункции
Функция ПочтаЗаполнена()
	
	Возврат Не ПустаяСтрока(ПараметрыСеанса.ТекущийПользователь.Почта);
	
КонецФункции
&НаКлиенте
Процедура ОтслеживатьЗадачу(Команда)
	
	Если Не ПочтаЗаполнена() Тогда
		ПоказатьПредупреждение(,"У вас в профиле не заполнена почта для отслеживания",,"Пустой пользователь")
	Иначе
	
		Ссылка = Элементы.Список.ТекущаяСтрока;
		Если 	Ссылка <> Неопределено И
				ОтслеживатьЗадачуНаСервере(Ссылка) Тогда
				
			Элементы.Список.Обновить();	КонецЕсли; КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	ОбновитьИнфСтроку();
	
КонецПроцедуры

// УПР ТАБЛИЦЕЙ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	//Управление видимостью доступностью кнопок
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		Элементы.КнопкаЗакрепить.Пометка = Элементы.Список.ТекущиеДанные.Закреплённая КонецЕсли;
	
КонецПроцедуры
Функция УстановитьЗакрепленние(Ссылка)
	
	СпрОб = Ссылка.ПолучитьОбъект();
	СпрОб.Закреплённая = Не СпрОб.Закреплённая;
	
	Возврат ОбщиеФункции.ЗаписатьОбъектИСообщитьЕслиОшибка(СпрОб);
	
КонецФункции
&НаКлиенте
Процедура Закрепить(Команда)
	
	Если УстановитьЗакрепленние(Элементы.Список.ТекущаяСтрока) Тогда
		текСтрока = Элементы.Список.ТекущаяСтрока;
		Элементы.Список.Обновить();
		Элементы.Список.ТекущаяСтрока = текСтрока;
		СписокПриАктивизацииСтроки(Элементы.Список); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	
	ОткрытьФорму("Отчет.ВыполненияЗадачИТ.ФормаОбъекта", Новый Структура("СформироватьПриОткрытии", Истина), ЭтаФорма);
	
КонецПроцедуры
