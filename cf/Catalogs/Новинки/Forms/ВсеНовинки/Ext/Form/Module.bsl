
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	
	|	Номенклатура			КАК Ссылка,
	|	Ссылка 						Новинка,
	//|	Ссылка.ДатаНовинок 			ДатаНовинок, 
	|	Номенклатура, 
	|	Номенклатура.Артикул 		Артикул, 
	|	ПериодДействия КАК 			Дата, 
	|	Номенклатура.Наименование 	Представление
	|ИЗ
	|	Справочник.Новинки.Товары 
	|ГДЕ
	|	Готовность И НЕ Ссылка.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ПериодДействия Убыв
	|
	|ИТОГИ 
	|	Новинка 			КАК Ссылка,
	|	МАКСИМУМ(Дата) 		КАК Дата,
	|	МАКСИМУМ(Новинка) 	КАК	Представление
	|ПО 
	|	Новинка
	|");
	
	КонвертацияТипов.ЗагрузитьДеревоВДанныеФормыДерево(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), Новинки);
	
	// информация о товаре
	РаботаСНоменклатурой.ДобавитьОперативнуюИнформациюОТоваре(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныейДокументПрезентации()
	
	Таблица 		= Новый ТабличныйДокумент;
	Макет 			= Справочники.Новинки.ПолучитьМакет("Макет");
	ОбластьШапка 	= Макет.ПолучитьОбласть("Шапка");
	Ном 			= 0;
	ТипЦeнРозница	= ОбщиеФункции.ПолучитьЗначениеКонстантыВОбласти("ТипЦенРозница");
	Валюта			= ТипЦeнРозница.Валюта;
	
	Таблица.Вывести(ОбластьШапка);
	
	СтрокиНовинок = Новинки.ПолучитьЭлементы();
	Для Каждого СтрокаНовинки Из СтрокиНовинок Цикл
		
		СтрокиТоваров = СтрокаНовинки.ПолучитьЭлементы();
		Для Каждого СтрокаТовара Из СтрокиТоваров Цикл Ном = Ном + 1;
			
			Если СтрокаТовара.Пометка Тогда
				
				ОбластьСтрока = Макет.ПолучитьОбласть(?(Ном % 2, "Строка1", "Строка2"));
			
				Номенклатура = СтрокаТовара.Номенклатура;
				
				ОбластьСтрока.Параметры.Заполнить(СтрокаТовара);
				ОбластьСтрока.Параметры.Артикул 	= СокрЛП(Номенклатура.Артикул) + Символы.ПС + Номенклатура.Производитель;;
				ОбластьСтрока.Параметры.Описание 	= КонвертацияТипов.ПолучитьПредставлениеТекстаHTML(Номенклатура.Описание, Истина);
				ОбластьСтрока.Параметры.Цена		= Строка(РаботаСНоменклатурой.ПолучитьЦену(Номенклатура, ТипЦeнРозница)) + Символы.ПС + Строка(Валюта);
				
				ЯчейкаРисунка 	= ОбластьСтрока.Область("R1");
				
				ТаблицаПроверки = Новый ТабличныйДокумент;
				ТаблицаПроверки.ВысотаСтраницы = 60;
				
				Если ТаблицаПроверки.ПроверитьВывод(ОбластьСтрока) Тогда 
					ЯчейкаРисунка.ВысотаСтроки 		= 80;
					ЯчейкаРисунка.АвтоВысотаСтроки 	= Ложь;
				Иначе
					ЯчейкаРисунка.ВысотаСтроки 		= 0; 
					ЯчейкаРисунка.АвтоВысотаСтроки 	= Истина;КонецЕсли;
				
				СсылкаКартинка = Картинки.ПолучитьСсылкуОсновногоИзображения(Номенклатура);
				
				Рисунок = ОбластьСтрока.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
				Рисунок.Картинка 		= ?(СсылкаКартинка = Неопределено, БиблиотекаКартинок.НетФото, ?(СсылкаКартинка.КопияКартинки.Пустая(), СсылкаКартинка.Аватар.Получить(), СсылкаКартинка.КопияКартинки.Аватар.Получить()));
				Рисунок.ГраницаСверху 	= Ложь; 
				Рисунок.ГраницаСнизу 	= Ложь; 
				Рисунок.ГраницаСлева 	= Ложь; 
				Рисунок.ГраницаСправа 	= Ложь; 
				Рисунок.РазмерКартинки 	= РазмерКартинки.АвтоРазмер; 
				
				ОбластьСтрока.Рисунки[0].Расположить(ОбластьСтрока.Область("R1C1"));
				
				Если Не Таблица.ПроверитьВывод(ОбластьСтрока) Тогда
					Таблица.ВывестиГоризонтальныйРазделительСтраниц();
					Таблица.Вывести(ОбластьШапка); КонецЕсли;
				
				Таблица.Вывести(ОбластьСтрока); КонецЕсли; КонецЦикла; КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции
&НаКлиенте
Процедура СформироватьПрезентацию(Команда)
	
	Контрагент = Неопределено; Номер = Неопределено;
	ДопПараметры = Новый Массив;
	ДопПараметры.Добавить(Новый Структура("Контрагент", Контрагент));
		
	ОткрытьФорму("ОбщаяФорма.ТабличныйДокумент", 
					Новый Структура("ТабличныйДокумент, ИмяФайла, ДополнительныеПараметры", 
							ПолучитьТабличныейДокументПрезентации(),
							"новинки", 
							ДопПараметры), ЭтаФорма);
КонецПроцедуры

#Область Информация_о_товаре

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре()	
	 	
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьИнформациюПоТовару() Экспорт
	
	// информация о товаре
	ОбработатьОтображениеИнформацииОТоваре();
	ОбновитьОтображениеДанных();
	 	
КонецПроцедуры
&НаСервере
Процедура ОбработатьОтображениеИнформацииОТоваре() Экспорт 
//Процедура ОбработатьОтображениеИнформацииОТоваре(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
	РаботаСНоменклатурой.ОбработатьОтображениеИнформацииОТоваре(ЭтаФорма, "Новинки", "Новинки");
КонецПроцедуры

&НаКлиенте
Процедура ИнфТовараТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСНоменклатуройКлиент.ИнфТовараТекстHTMLПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка, "Новинки",, "Новинки");
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьСкрытьИнфОТоваре(Команда)
	РаботаСНоменклатуройКлиент.ПоказатьСкрытьИнфОТоваре(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура НастройкаИнфОТоваре(Команда) 
	РаботаСНоменклатуройКлиент.НастройкаИнфОТоваре(ЭтаФорма, "Новинки", "Новинки");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура НовинкиПометкаПриИзменении(Элемент)
	
	текДанные = Элемент.Родитель.ТекущиеДанные;
	
	Если текДанные.Номенклатура.Пустая() Тогда
		
		Строки = текДанные.ПолучитьЭлементы();
		Для Каждого Строка Из Строки Цикл Строка.Пометка = текДанные.Пометка КонецЦикла; КонецЕсли;
	
КонецПроцедуры


